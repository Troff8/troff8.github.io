/*! For license information please see reactapp.js.LICENSE.txt */
(()=>{var e={2656:(e,n,t)=>{var r=t(1873).default;function o(){"use strict";e.exports=o=function(){return n},e.exports.__esModule=!0,e.exports.default=e.exports;var n={},t=Object.prototype,a=t.hasOwnProperty,i="function"==typeof Symbol?Symbol:{},l=i.iterator||"@@iterator",s=i.asyncIterator||"@@asyncIterator",c=i.toStringTag||"@@toStringTag";function u(e,n,t){return Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}),e[n]}try{u({},"")}catch(e){u=function(e,n,t){return e[n]=t}}function f(e,n,t,r){var o=n&&n.prototype instanceof m?n:m,a=Object.create(o.prototype),i=new B(r||[]);return a._invoke=function(e,n,t){var r="suspendedStart";return function(o,a){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===o)throw a;return{value:void 0,done:!0}}for(t.method=o,t.arg=a;;){var i=t.delegate;if(i){var l=w(i,t);if(l){if(l===p)continue;return l}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if("suspendedStart"===r)throw r="completed",t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);r="executing";var s=d(e,n,t);if("normal"===s.type){if(r=t.done?"completed":"suspendedYield",s.arg===p)continue;return{value:s.arg,done:t.done}}"throw"===s.type&&(r="completed",t.method="throw",t.arg=s.arg)}}}(e,t,i),a}function d(e,n,t){try{return{type:"normal",arg:e.call(n,t)}}catch(e){return{type:"throw",arg:e}}}n.wrap=f;var p={};function m(){}function A(){}function h(){}var g={};u(g,l,(function(){return this}));var v=Object.getPrototypeOf,b=v&&v(v(E([])));b&&b!==t&&a.call(b,l)&&(g=b);var y=h.prototype=m.prototype=Object.create(g);function x(e){["next","throw","return"].forEach((function(n){u(e,n,(function(e){return this._invoke(n,e)}))}))}function C(e,n){function t(o,i,l,s){var c=d(e[o],e,i);if("throw"!==c.type){var u=c.arg,f=u.value;return f&&"object"==r(f)&&a.call(f,"__await")?n.resolve(f.__await).then((function(e){t("next",e,l,s)}),(function(e){t("throw",e,l,s)})):n.resolve(f).then((function(e){u.value=e,l(u)}),(function(e){return t("throw",e,l,s)}))}s(c.arg)}var o;this._invoke=function(e,r){function a(){return new n((function(n,o){t(e,r,n,o)}))}return o=o?o.then(a,a):a()}}function w(e,n){var t=e.iterator[n.method];if(void 0===t){if(n.delegate=null,"throw"===n.method){if(e.iterator.return&&(n.method="return",n.arg=void 0,w(e,n),"throw"===n.method))return p;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return p}var r=d(t,e.iterator,n.arg);if("throw"===r.type)return n.method="throw",n.arg=r.arg,n.delegate=null,p;var o=r.arg;return o?o.done?(n[e.resultName]=o.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=void 0),n.delegate=null,p):o:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,p)}function I(e){var n={tryLoc:e[0]};1 in e&&(n.catchLoc=e[1]),2 in e&&(n.finallyLoc=e[2],n.afterLoc=e[3]),this.tryEntries.push(n)}function k(e){var n=e.completion||{};n.type="normal",delete n.arg,e.completion=n}function B(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(I,this),this.reset(!0)}function E(e){if(e){var n=e[l];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var t=-1,r=function n(){for(;++t<e.length;)if(a.call(e,t))return n.value=e[t],n.done=!1,n;return n.value=void 0,n.done=!0,n};return r.next=r}}return{next:S}}function S(){return{value:void 0,done:!0}}return A.prototype=h,u(y,"constructor",h),u(h,"constructor",A),A.displayName=u(h,c,"GeneratorFunction"),n.isGeneratorFunction=function(e){var n="function"==typeof e&&e.constructor;return!!n&&(n===A||"GeneratorFunction"===(n.displayName||n.name))},n.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,h):(e.__proto__=h,u(e,c,"GeneratorFunction")),e.prototype=Object.create(y),e},n.awrap=function(e){return{__await:e}},x(C.prototype),u(C.prototype,s,(function(){return this})),n.AsyncIterator=C,n.async=function(e,t,r,o,a){void 0===a&&(a=Promise);var i=new C(f(e,t,r,o),a);return n.isGeneratorFunction(t)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},x(y),u(y,c,"Generator"),u(y,l,(function(){return this})),u(y,"toString",(function(){return"[object Generator]"})),n.keys=function(e){var n=[];for(var t in e)n.push(t);return n.reverse(),function t(){for(;n.length;){var r=n.pop();if(r in e)return t.value=r,t.done=!1,t}return t.done=!0,t}},n.values=E,B.prototype={constructor:B,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(k),!e)for(var n in this)"t"===n.charAt(0)&&a.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function t(t,r){return i.type="throw",i.arg=e,n.next=t,r&&(n.method="next",n.arg=void 0),!!r}for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r],i=o.completion;if("root"===o.tryLoc)return t("end");if(o.tryLoc<=this.prev){var l=a.call(o,"catchLoc"),s=a.call(o,"finallyLoc");if(l&&s){if(this.prev<o.catchLoc)return t(o.catchLoc,!0);if(this.prev<o.finallyLoc)return t(o.finallyLoc)}else if(l){if(this.prev<o.catchLoc)return t(o.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return t(o.finallyLoc)}}}},abrupt:function(e,n){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc<=this.prev&&a.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var o=r;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=n&&n<=o.finallyLoc&&(o=null);var i=o?o.completion:{};return i.type=e,i.arg=n,o?(this.method="next",this.next=o.finallyLoc,p):this.complete(i)},complete:function(e,n){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&n&&(this.next=n),p},finish:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var t=this.tryEntries[n];if(t.finallyLoc===e)return this.complete(t.completion,t.afterLoc),k(t),p}},catch:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var t=this.tryEntries[n];if(t.tryLoc===e){var r=t.completion;if("throw"===r.type){var o=r.arg;k(t)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,t){return this.delegate={iterator:E(e),resultName:n,nextLoc:t},"next"===this.method&&(this.arg=void 0),p}},n}e.exports=o,e.exports.__esModule=!0,e.exports.default=e.exports},1873:e=>{function n(t){return e.exports=n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e.exports.__esModule=!0,e.exports.default=e.exports,n(t)}e.exports=n,e.exports.__esModule=!0,e.exports.default=e.exports},7135:(e,n,t)=>{var r=t(2656)();e.exports=r;try{regeneratorRuntime=r}catch(e){"object"==typeof globalThis?globalThis.regeneratorRuntime=r:Function("r","regeneratorRuntime = r")(r)}},4206:(e,n,t)=>{e.exports=t(8057)},4387:(e,n,t)=>{"use strict";var r=t(7485),o=t(4570),a=t(2940),i=t(581),l=t(574),s=t(3845),c=t(8338),u=t(8524),f=t(4832),d=t(7132);e.exports=function(e){return new Promise((function(n,t){var p,m=e.data,A=e.headers,h=e.responseType;function g(){e.cancelToken&&e.cancelToken.unsubscribe(p),e.signal&&e.signal.removeEventListener("abort",p)}r.isFormData(m)&&delete A["Content-Type"];var v=new XMLHttpRequest;if(e.auth){var b=e.auth.username||"",y=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";A.Authorization="Basic "+btoa(b+":"+y)}var x=l(e.baseURL,e.url);function C(){if(v){var r="getAllResponseHeaders"in v?s(v.getAllResponseHeaders()):null,a={data:h&&"text"!==h&&"json"!==h?v.response:v.responseText,status:v.status,statusText:v.statusText,headers:r,config:e,request:v};o((function(e){n(e),g()}),(function(e){t(e),g()}),a),v=null}}if(v.open(e.method.toUpperCase(),i(x,e.params,e.paramsSerializer),!0),v.timeout=e.timeout,"onloadend"in v?v.onloadend=C:v.onreadystatechange=function(){v&&4===v.readyState&&(0!==v.status||v.responseURL&&0===v.responseURL.indexOf("file:"))&&setTimeout(C)},v.onabort=function(){v&&(t(u("Request aborted",e,"ECONNABORTED",v)),v=null)},v.onerror=function(){t(u("Network Error",e,null,v)),v=null},v.ontimeout=function(){var n=e.timeout?"timeout of "+e.timeout+"ms exceeded":"timeout exceeded",r=e.transitional||f;e.timeoutErrorMessage&&(n=e.timeoutErrorMessage),t(u(n,e,r.clarifyTimeoutError?"ETIMEDOUT":"ECONNABORTED",v)),v=null},r.isStandardBrowserEnv()){var w=(e.withCredentials||c(x))&&e.xsrfCookieName?a.read(e.xsrfCookieName):void 0;w&&(A[e.xsrfHeaderName]=w)}"setRequestHeader"in v&&r.forEach(A,(function(e,n){void 0===m&&"content-type"===n.toLowerCase()?delete A[n]:v.setRequestHeader(n,e)})),r.isUndefined(e.withCredentials)||(v.withCredentials=!!e.withCredentials),h&&"json"!==h&&(v.responseType=e.responseType),"function"==typeof e.onDownloadProgress&&v.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&v.upload&&v.upload.addEventListener("progress",e.onUploadProgress),(e.cancelToken||e.signal)&&(p=function(e){v&&(t(!e||e&&e.type?new d("canceled"):e),v.abort(),v=null)},e.cancelToken&&e.cancelToken.subscribe(p),e.signal&&(e.signal.aborted?p():e.signal.addEventListener("abort",p))),m||(m=null),v.send(m)}))}},8057:(e,n,t)=>{"use strict";var r=t(7485),o=t(875),a=t(5029),i=t(4941),l=function e(n){var t=new a(n),l=o(a.prototype.request,t);return r.extend(l,a.prototype,t),r.extend(l,t),l.create=function(t){return e(i(n,t))},l}(t(8396));l.Axios=a,l.Cancel=t(7132),l.CancelToken=t(4603),l.isCancel=t(1475),l.VERSION=t(3345).version,l.all=function(e){return Promise.all(e)},l.spread=t(5739),l.isAxiosError=t(5835),e.exports=l,e.exports.default=l},7132:e=>{"use strict";function n(e){this.message=e}n.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},n.prototype.__CANCEL__=!0,e.exports=n},4603:(e,n,t)=>{"use strict";var r=t(7132);function o(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var n;this.promise=new Promise((function(e){n=e}));var t=this;this.promise.then((function(e){if(t._listeners){var n,r=t._listeners.length;for(n=0;n<r;n++)t._listeners[n](e);t._listeners=null}})),this.promise.then=function(e){var n,r=new Promise((function(e){t.subscribe(e),n=e})).then(e);return r.cancel=function(){t.unsubscribe(n)},r},e((function(e){t.reason||(t.reason=new r(e),n(t.reason))}))}o.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},o.prototype.subscribe=function(e){this.reason?e(this.reason):this._listeners?this._listeners.push(e):this._listeners=[e]},o.prototype.unsubscribe=function(e){if(this._listeners){var n=this._listeners.indexOf(e);-1!==n&&this._listeners.splice(n,1)}},o.source=function(){var e;return{token:new o((function(n){e=n})),cancel:e}},e.exports=o},1475:e=>{"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},5029:(e,n,t)=>{"use strict";var r=t(7485),o=t(581),a=t(8096),i=t(5009),l=t(4941),s=t(6144),c=s.validators;function u(e){this.defaults=e,this.interceptors={request:new a,response:new a}}u.prototype.request=function(e,n){"string"==typeof e?(n=n||{}).url=e:n=e||{},(n=l(this.defaults,n)).method?n.method=n.method.toLowerCase():this.defaults.method?n.method=this.defaults.method.toLowerCase():n.method="get";var t=n.transitional;void 0!==t&&s.assertOptions(t,{silentJSONParsing:c.transitional(c.boolean),forcedJSONParsing:c.transitional(c.boolean),clarifyTimeoutError:c.transitional(c.boolean)},!1);var r=[],o=!0;this.interceptors.request.forEach((function(e){"function"==typeof e.runWhen&&!1===e.runWhen(n)||(o=o&&e.synchronous,r.unshift(e.fulfilled,e.rejected))}));var a,u=[];if(this.interceptors.response.forEach((function(e){u.push(e.fulfilled,e.rejected)})),!o){var f=[i,void 0];for(Array.prototype.unshift.apply(f,r),f=f.concat(u),a=Promise.resolve(n);f.length;)a=a.then(f.shift(),f.shift());return a}for(var d=n;r.length;){var p=r.shift(),m=r.shift();try{d=p(d)}catch(e){m(e);break}}try{a=i(d)}catch(e){return Promise.reject(e)}for(;u.length;)a=a.then(u.shift(),u.shift());return a},u.prototype.getUri=function(e){return e=l(this.defaults,e),o(e.url,e.params,e.paramsSerializer).replace(/^\?/,"")},r.forEach(["delete","get","head","options"],(function(e){u.prototype[e]=function(n,t){return this.request(l(t||{},{method:e,url:n,data:(t||{}).data}))}})),r.forEach(["post","put","patch"],(function(e){u.prototype[e]=function(n,t,r){return this.request(l(r||{},{method:e,url:n,data:t}))}})),e.exports=u},8096:(e,n,t)=>{"use strict";var r=t(7485);function o(){this.handlers=[]}o.prototype.use=function(e,n,t){return this.handlers.push({fulfilled:e,rejected:n,synchronous:!!t&&t.synchronous,runWhen:t?t.runWhen:null}),this.handlers.length-1},o.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},o.prototype.forEach=function(e){r.forEach(this.handlers,(function(n){null!==n&&e(n)}))},e.exports=o},574:(e,n,t)=>{"use strict";var r=t(2642),o=t(2288);e.exports=function(e,n){return e&&!r(n)?o(e,n):n}},8524:(e,n,t)=>{"use strict";var r=t(9953);e.exports=function(e,n,t,o,a){var i=new Error(e);return r(i,n,t,o,a)}},5009:(e,n,t)=>{"use strict";var r=t(7485),o=t(9212),a=t(1475),i=t(8396),l=t(7132);function s(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new l("canceled")}e.exports=function(e){return s(e),e.headers=e.headers||{},e.data=o.call(e,e.data,e.headers,e.transformRequest),e.headers=r.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),r.forEach(["delete","get","head","post","put","patch","common"],(function(n){delete e.headers[n]})),(e.adapter||i.adapter)(e).then((function(n){return s(e),n.data=o.call(e,n.data,n.headers,e.transformResponse),n}),(function(n){return a(n)||(s(e),n&&n.response&&(n.response.data=o.call(e,n.response.data,n.response.headers,e.transformResponse))),Promise.reject(n)}))}},9953:e=>{"use strict";e.exports=function(e,n,t,r,o){return e.config=n,t&&(e.code=t),e.request=r,e.response=o,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}},e}},4941:(e,n,t)=>{"use strict";var r=t(7485);e.exports=function(e,n){n=n||{};var t={};function o(e,n){return r.isPlainObject(e)&&r.isPlainObject(n)?r.merge(e,n):r.isPlainObject(n)?r.merge({},n):r.isArray(n)?n.slice():n}function a(t){return r.isUndefined(n[t])?r.isUndefined(e[t])?void 0:o(void 0,e[t]):o(e[t],n[t])}function i(e){if(!r.isUndefined(n[e]))return o(void 0,n[e])}function l(t){return r.isUndefined(n[t])?r.isUndefined(e[t])?void 0:o(void 0,e[t]):o(void 0,n[t])}function s(t){return t in n?o(e[t],n[t]):t in e?o(void 0,e[t]):void 0}var c={url:i,method:i,data:i,baseURL:l,transformRequest:l,transformResponse:l,paramsSerializer:l,timeout:l,timeoutMessage:l,withCredentials:l,adapter:l,responseType:l,xsrfCookieName:l,xsrfHeaderName:l,onUploadProgress:l,onDownloadProgress:l,decompress:l,maxContentLength:l,maxBodyLength:l,transport:l,httpAgent:l,httpsAgent:l,cancelToken:l,socketPath:l,responseEncoding:l,validateStatus:s};return r.forEach(Object.keys(e).concat(Object.keys(n)),(function(e){var n=c[e]||a,o=n(e);r.isUndefined(o)&&n!==s||(t[e]=o)})),t}},4570:(e,n,t)=>{"use strict";var r=t(8524);e.exports=function(e,n,t){var o=t.config.validateStatus;t.status&&o&&!o(t.status)?n(r("Request failed with status code "+t.status,t.config,null,t.request,t)):e(t)}},9212:(e,n,t)=>{"use strict";var r=t(7485),o=t(8396);e.exports=function(e,n,t){var a=this||o;return r.forEach(t,(function(t){e=t.call(a,e,n)})),e}},8396:(e,n,t)=>{"use strict";var r=t(7485),o=t(1446),a=t(9953),i=t(4832),l={"Content-Type":"application/x-www-form-urlencoded"};function s(e,n){!r.isUndefined(e)&&r.isUndefined(e["Content-Type"])&&(e["Content-Type"]=n)}var c,u={transitional:i,adapter:(("undefined"!=typeof XMLHttpRequest||"undefined"!=typeof process&&"[object process]"===Object.prototype.toString.call(process))&&(c=t(4387)),c),transformRequest:[function(e,n){return o(n,"Accept"),o(n,"Content-Type"),r.isFormData(e)||r.isArrayBuffer(e)||r.isBuffer(e)||r.isStream(e)||r.isFile(e)||r.isBlob(e)?e:r.isArrayBufferView(e)?e.buffer:r.isURLSearchParams(e)?(s(n,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):r.isObject(e)||n&&"application/json"===n["Content-Type"]?(s(n,"application/json"),function(e,n,t){if(r.isString(e))try{return(0,JSON.parse)(e),r.trim(e)}catch(e){if("SyntaxError"!==e.name)throw e}return(0,JSON.stringify)(e)}(e)):e}],transformResponse:[function(e){var n=this.transitional||u.transitional,t=n&&n.silentJSONParsing,o=n&&n.forcedJSONParsing,i=!t&&"json"===this.responseType;if(i||o&&r.isString(e)&&e.length)try{return JSON.parse(e)}catch(e){if(i){if("SyntaxError"===e.name)throw a(e,this,"E_JSON_PARSE");throw e}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};r.forEach(["delete","get","head"],(function(e){u.headers[e]={}})),r.forEach(["post","put","patch"],(function(e){u.headers[e]=r.merge(l)})),e.exports=u},4832:e=>{"use strict";e.exports={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1}},3345:e=>{e.exports={version:"0.26.1"}},875:e=>{"use strict";e.exports=function(e,n){return function(){for(var t=new Array(arguments.length),r=0;r<t.length;r++)t[r]=arguments[r];return e.apply(n,t)}}},581:(e,n,t)=>{"use strict";var r=t(7485);function o(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,n,t){if(!n)return e;var a;if(t)a=t(n);else if(r.isURLSearchParams(n))a=n.toString();else{var i=[];r.forEach(n,(function(e,n){null!=e&&(r.isArray(e)?n+="[]":e=[e],r.forEach(e,(function(e){r.isDate(e)?e=e.toISOString():r.isObject(e)&&(e=JSON.stringify(e)),i.push(o(n)+"="+o(e))})))})),a=i.join("&")}if(a){var l=e.indexOf("#");-1!==l&&(e=e.slice(0,l)),e+=(-1===e.indexOf("?")?"?":"&")+a}return e}},2288:e=>{"use strict";e.exports=function(e,n){return n?e.replace(/\/+$/,"")+"/"+n.replace(/^\/+/,""):e}},2940:(e,n,t)=>{"use strict";var r=t(7485);e.exports=r.isStandardBrowserEnv()?{write:function(e,n,t,o,a,i){var l=[];l.push(e+"="+encodeURIComponent(n)),r.isNumber(t)&&l.push("expires="+new Date(t).toGMTString()),r.isString(o)&&l.push("path="+o),r.isString(a)&&l.push("domain="+a),!0===i&&l.push("secure"),document.cookie=l.join("; ")},read:function(e){var n=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return n?decodeURIComponent(n[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},2642:e=>{"use strict";e.exports=function(e){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(e)}},5835:(e,n,t)=>{"use strict";var r=t(7485);e.exports=function(e){return r.isObject(e)&&!0===e.isAxiosError}},8338:(e,n,t)=>{"use strict";var r=t(7485);e.exports=r.isStandardBrowserEnv()?function(){var e,n=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a");function o(e){var r=e;return n&&(t.setAttribute("href",r),r=t.href),t.setAttribute("href",r),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:"/"===t.pathname.charAt(0)?t.pathname:"/"+t.pathname}}return e=o(window.location.href),function(n){var t=r.isString(n)?o(n):n;return t.protocol===e.protocol&&t.host===e.host}}():function(){return!0}},1446:(e,n,t)=>{"use strict";var r=t(7485);e.exports=function(e,n){r.forEach(e,(function(t,r){r!==n&&r.toUpperCase()===n.toUpperCase()&&(e[n]=t,delete e[r])}))}},3845:(e,n,t)=>{"use strict";var r=t(7485),o=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var n,t,a,i={};return e?(r.forEach(e.split("\n"),(function(e){if(a=e.indexOf(":"),n=r.trim(e.substr(0,a)).toLowerCase(),t=r.trim(e.substr(a+1)),n){if(i[n]&&o.indexOf(n)>=0)return;i[n]="set-cookie"===n?(i[n]?i[n]:[]).concat([t]):i[n]?i[n]+", "+t:t}})),i):i}},5739:e=>{"use strict";e.exports=function(e){return function(n){return e.apply(null,n)}}},6144:(e,n,t)=>{"use strict";var r=t(3345).version,o={};["object","boolean","number","function","string","symbol"].forEach((function(e,n){o[e]=function(t){return typeof t===e||"a"+(n<1?"n ":" ")+e}}));var a={};o.transitional=function(e,n,t){function o(e,n){return"[Axios v"+r+"] Transitional option '"+e+"'"+n+(t?". "+t:"")}return function(t,r,i){if(!1===e)throw new Error(o(r," has been removed"+(n?" in "+n:"")));return n&&!a[r]&&(a[r]=!0,console.warn(o(r," has been deprecated since v"+n+" and will be removed in the near future"))),!e||e(t,r,i)}},e.exports={assertOptions:function(e,n,t){if("object"!=typeof e)throw new TypeError("options must be an object");for(var r=Object.keys(e),o=r.length;o-- >0;){var a=r[o],i=n[a];if(i){var l=e[a],s=void 0===l||i(l,a,e);if(!0!==s)throw new TypeError("option "+a+" must be "+s)}else if(!0!==t)throw Error("Unknown option "+a)}},validators:o}},7485:(e,n,t)=>{"use strict";var r=t(875),o=Object.prototype.toString;function a(e){return Array.isArray(e)}function i(e){return void 0===e}function l(e){return"[object ArrayBuffer]"===o.call(e)}function s(e){return null!==e&&"object"==typeof e}function c(e){if("[object Object]"!==o.call(e))return!1;var n=Object.getPrototypeOf(e);return null===n||n===Object.prototype}function u(e){return"[object Function]"===o.call(e)}function f(e,n){if(null!=e)if("object"!=typeof e&&(e=[e]),a(e))for(var t=0,r=e.length;t<r;t++)n.call(null,e[t],t,e);else for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&n.call(null,e[o],o,e)}e.exports={isArray:a,isArrayBuffer:l,isBuffer:function(e){return null!==e&&!i(e)&&null!==e.constructor&&!i(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){return"[object FormData]"===o.call(e)},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&l(e.buffer)},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:s,isPlainObject:c,isUndefined:i,isDate:function(e){return"[object Date]"===o.call(e)},isFile:function(e){return"[object File]"===o.call(e)},isBlob:function(e){return"[object Blob]"===o.call(e)},isFunction:u,isStream:function(e){return s(e)&&u(e.pipe)},isURLSearchParams:function(e){return"[object URLSearchParams]"===o.call(e)},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&"undefined"!=typeof window&&"undefined"!=typeof document},forEach:f,merge:function e(){var n={};function t(t,r){c(n[r])&&c(t)?n[r]=e(n[r],t):c(t)?n[r]=e({},t):a(t)?n[r]=t.slice():n[r]=t}for(var r=0,o=arguments.length;r<o;r++)f(arguments[r],t);return n},extend:function(e,n,t){return f(n,(function(n,o){e[o]=t&&"function"==typeof n?r(n,t):n})),e},trim:function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")},stripBOM:function(e){return 65279===e.charCodeAt(0)&&(e=e.slice(1)),e}}},9019:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(559),o=t.n(r),a=t(3476),i=t.n(a)()(o());i.push([e.id,".footer-NVUuH {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    width: 80%;\r\n    margin: 0 auto;\r\n    border-top: 2px solid rgb(40, 129, 206);\r\n    padding: 10px 30px;\r\n}\r\n.menu-footer-M0UXm {\r\n    width: 200px;\r\n    display: flex;\r\n}\r\n\r\n.block-menu-IibKs {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n}\r\n.menu-item-neTbO {\r\n    margin: 5px;\r\n    color: #12538b;\r\n    cursor: pointer;\r\n    transition-duration: 0.3s;\r\n}\r\n.menu-item-neTbO:hover {\r\n    color: #072a48;\r\n}\r\n.block-info-hHOQS {\r\n    text-align: left;\r\n}\r\n.imageInfoContacts-s4VgI {\r\n    width: 23px;\r\n    height: 23px;\r\n    margin-right: 5px;\r\n}\r\n.info-field-Pavcw {\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 5px;\r\n}\r\n.down-text-vn2cC {\r\n    text-align: center;\r\n    color: #12538b;\r\n    cursor: pointer;\r\n    transition-duration: 0.3s;\r\n}\r\n.down-text-vn2cC:hover {\r\n    color: #072a48;\r\n}\r\n.down-block-footer-X8whp {\r\n    display: flex;\r\n    justify-content: space-around;\r\n}\r\n@media (max-width: 500px) {\r\n    .footer-NVUuH {\r\n        width: 100%;\r\n    }\r\n    .menu-footer-M0UXm {\r\n        flex-direction: column;\r\n    }\r\n    .info-field-Pavcw {\r\n        margin-top: 5px;\r\n        margin-bottom: 10px;\r\n    }\r\n}\r\n","",{version:3,sources:["webpack://./App/Footer/styles.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,6BAA6B;IAC7B,UAAU;IACV,cAAc;IACd,uCAAuC;IACvC,kBAAkB;AACtB;AACA;IACI,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;AAC3B;AACA;IACI,WAAW;IACX,cAAc;IACd,eAAe;IACf,yBAAyB;AAC7B;AACA;IACI,cAAc;AAClB;AACA;IACI,gBAAgB;AACpB;AACA;IACI,WAAW;IACX,YAAY;IACZ,iBAAiB;AACrB;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,WAAW;AACf;AACA;IACI,kBAAkB;IAClB,cAAc;IACd,eAAe;IACf,yBAAyB;AAC7B;AACA;IACI,cAAc;AAClB;AACA;IACI,aAAa;IACb,6BAA6B;AACjC;AACA;IACI;QACI,WAAW;IACf;IACA;QACI,sBAAsB;IAC1B;IACA;QACI,eAAe;QACf,mBAAmB;IACvB;AACJ",sourcesContent:[".footer {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    width: 80%;\r\n    margin: 0 auto;\r\n    border-top: 2px solid rgb(40, 129, 206);\r\n    padding: 10px 30px;\r\n}\r\n.menu-footer {\r\n    width: 200px;\r\n    display: flex;\r\n}\r\n\r\n.block-menu {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n}\r\n.menu-item {\r\n    margin: 5px;\r\n    color: #12538b;\r\n    cursor: pointer;\r\n    transition-duration: 0.3s;\r\n}\r\n.menu-item:hover {\r\n    color: #072a48;\r\n}\r\n.block-info {\r\n    text-align: left;\r\n}\r\n.imageInfoContacts {\r\n    width: 23px;\r\n    height: 23px;\r\n    margin-right: 5px;\r\n}\r\n.info-field {\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 5px;\r\n}\r\n.down-text {\r\n    text-align: center;\r\n    color: #12538b;\r\n    cursor: pointer;\r\n    transition-duration: 0.3s;\r\n}\r\n.down-text:hover {\r\n    color: #072a48;\r\n}\r\n.down-block-footer {\r\n    display: flex;\r\n    justify-content: space-around;\r\n}\r\n@media (max-width: 500px) {\r\n    .footer {\r\n        width: 100%;\r\n    }\r\n    .menu-footer {\r\n        flex-direction: column;\r\n    }\r\n    .info-field {\r\n        margin-top: 5px;\r\n        margin-bottom: 10px;\r\n    }\r\n}\r\n"],sourceRoot:""}]),i.locals={footer:"footer-NVUuH","menu-footer":"menu-footer-M0UXm",menuFooter:"menu-footer-M0UXm","block-menu":"block-menu-IibKs",blockMenu:"block-menu-IibKs","menu-item":"menu-item-neTbO",menuItem:"menu-item-neTbO","block-info":"block-info-hHOQS",blockInfo:"block-info-hHOQS",imageInfoContacts:"imageInfoContacts-s4VgI","info-field":"info-field-Pavcw",infoField:"info-field-Pavcw","down-text":"down-text-vn2cC",downText:"down-text-vn2cC","down-block-footer":"down-block-footer-X8whp",downBlockFooter:"down-block-footer-X8whp"};const l=i},8464:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(559),o=t.n(r),a=t(3476),i=t.n(a)()(o());i.push([e.id,".header-crlZN {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 80%;\r\n    margin: 0 auto;\r\n}\r\n.block-logo-z9dmY {\r\n    display: flex;\r\n}\r\n.image-logo-jdzY1 {\r\n    width: 100px;\r\n    height: 105px;\r\n}\r\n.text-block-RaE8T {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding-inline: 10px;\r\n}\r\n.text-logo-up-AX5z2 {\r\n    font-size: 28px;\r\n}\r\n.text-logo-down-JCa3J {\r\n    font-size: 30px;\r\n}\r\n.image-info-contacts-npO2f {\r\n    width: 30px;\r\n    height: 30px;\r\n}\r\n.block-info-contacts-anXKp {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n.info-number-AbXSd {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: 10px;\r\n}\r\n.text-telephone-n9rDn {\r\n    padding: 10px;\r\n    font-size: 16px;\r\n}\r\n.number-phone-oWvCk {\r\n    color: rgb(40, 129, 206);\r\n}\r\n.buttons-block-y5tgv {\r\n    display: flex;\r\n    margin-top: 5px;\r\n    width: 550px;\r\n}\r\n.block-number-hpKMZ {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n.request-container-x391g{\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    width: 325px;\r\n    background-color: rgb(211 228 245);\r\n    box-shadow: 0px 0px 8px rgb(40, 129, 206);\r\n    padding: 10px;\r\n    color: #1b1b1b;\r\n}\r\n.request-buttons-container-YgKj2{\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-content: center;\r\n    margin-top: auto;\r\n}\r\n\r\n.order-container-f0K40 {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 0px 10%;\r\n}\r\n.order-item-BJoFm {\r\n    border-radius: 15px;\r\n    margin-bottom: 7px;\r\n}\r\n.field-flex-RiFWn {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    margin-top: 15px;\r\n}\r\n@media (max-width: 500px) {\r\n    .header-crlZN {\r\n        display: flex;\r\n        flex-direction: column;\r\n        width: 100%;\r\n    }\r\n    .image-logo-jdzY1 {\r\n        height: 110px;\r\n    }\r\n    .text-logo-up-AX5z2 {\r\n        font-size: 30px;\r\n    }\r\n    .text-logo-down-JCa3J {\r\n        font-size: 30px;\r\n    }\r\n    .info-number-AbXSd {\r\n        flex-direction: column;\r\n        margin-top: 5px;\r\n    }\r\n    .image-info-contacts-npO2f {\r\n        width: 25px;\r\n        height: 25px;\r\n    }\r\n    .block-info-contacts-anXKp {\r\n        flex-direction: column-reverse;\r\n    }\r\n    .text-telephone-n9rDn {\r\n        font-size: 17px;\r\n    }\r\n    .buttons-block-y5tgv {\r\n        width: 100%;\r\n    }\r\n    .text-block-RaE8T {\r\n        text-align: center;\r\n    }\r\n}\r\n","",{version:3,sources:["webpack://./App/Header/styles.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,8BAA8B;IAC9B,UAAU;IACV,cAAc;AAClB;AACA;IACI,aAAa;AACjB;AACA;IACI,YAAY;IACZ,aAAa;AACjB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,oBAAoB;AACxB;AACA;IACI,eAAe;AACnB;AACA;IACI,eAAe;AACnB;AACA;IACI,WAAW;IACX,YAAY;AAChB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,gBAAgB;AACpB;AACA;IACI,aAAa;IACb,eAAe;AACnB;AACA;IACI,wBAAwB;AAC5B;AACA;IACI,aAAa;IACb,eAAe;IACf,YAAY;AAChB;AACA;IACI,aAAa;IACb,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,sBAAsB;IACtB,YAAY;IACZ,kCAAkC;IAClC,yCAAyC;IACzC,aAAa;IACb,cAAc;AAClB;AACA;IACI,WAAW;IACX,aAAa;IACb,6BAA6B;IAC7B,qBAAqB;IACrB,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,gBAAgB;AACpB;AACA;IACI,mBAAmB;IACnB,kBAAkB;AACtB;AACA;IACI,aAAa;IACb,6BAA6B;IAC7B,mBAAmB;IACnB,sBAAsB;IACtB,gBAAgB;AACpB;AACA;IACI;QACI,aAAa;QACb,sBAAsB;QACtB,WAAW;IACf;IACA;QACI,aAAa;IACjB;IACA;QACI,eAAe;IACnB;IACA;QACI,eAAe;IACnB;IACA;QACI,sBAAsB;QACtB,eAAe;IACnB;IACA;QACI,WAAW;QACX,YAAY;IAChB;IACA;QACI,8BAA8B;IAClC;IACA;QACI,eAAe;IACnB;IACA;QACI,WAAW;IACf;IACA;QACI,kBAAkB;IACtB;AACJ",sourcesContent:[".header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 80%;\r\n    margin: 0 auto;\r\n}\r\n.block-logo {\r\n    display: flex;\r\n}\r\n.image-logo {\r\n    width: 100px;\r\n    height: 105px;\r\n}\r\n.text-block {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding-inline: 10px;\r\n}\r\n.text-logo-up {\r\n    font-size: 28px;\r\n}\r\n.text-logo-down {\r\n    font-size: 30px;\r\n}\r\n.image-info-contacts {\r\n    width: 30px;\r\n    height: 30px;\r\n}\r\n.block-info-contacts {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n.info-number {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: 10px;\r\n}\r\n.text-telephone {\r\n    padding: 10px;\r\n    font-size: 16px;\r\n}\r\n.number-phone {\r\n    color: rgb(40, 129, 206);\r\n}\r\n.buttons-block {\r\n    display: flex;\r\n    margin-top: 5px;\r\n    width: 550px;\r\n}\r\n.block-number {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n.request-container{\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    width: 325px;\r\n    background-color: rgb(211 228 245);\r\n    box-shadow: 0px 0px 8px rgb(40, 129, 206);\r\n    padding: 10px;\r\n    color: #1b1b1b;\r\n}\r\n.request-buttons-container{\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-content: center;\r\n    margin-top: auto;\r\n}\r\n\r\n.order-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 0px 10%;\r\n}\r\n.order-item {\r\n    border-radius: 15px;\r\n    margin-bottom: 7px;\r\n}\r\n.field-flex {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    margin-top: 15px;\r\n}\r\n@media (max-width: 500px) {\r\n    .header {\r\n        display: flex;\r\n        flex-direction: column;\r\n        width: 100%;\r\n    }\r\n    .image-logo {\r\n        height: 110px;\r\n    }\r\n    .text-logo-up {\r\n        font-size: 30px;\r\n    }\r\n    .text-logo-down {\r\n        font-size: 30px;\r\n    }\r\n    .info-number {\r\n        flex-direction: column;\r\n        margin-top: 5px;\r\n    }\r\n    .image-info-contacts {\r\n        width: 25px;\r\n        height: 25px;\r\n    }\r\n    .block-info-contacts {\r\n        flex-direction: column-reverse;\r\n    }\r\n    .text-telephone {\r\n        font-size: 17px;\r\n    }\r\n    .buttons-block {\r\n        width: 100%;\r\n    }\r\n    .text-block {\r\n        text-align: center;\r\n    }\r\n}\r\n"],sourceRoot:""}]),i.locals={header:"header-crlZN","block-logo":"block-logo-z9dmY",blockLogo:"block-logo-z9dmY","image-logo":"image-logo-jdzY1",imageLogo:"image-logo-jdzY1","text-block":"text-block-RaE8T",textBlock:"text-block-RaE8T","text-logo-up":"text-logo-up-AX5z2",textLogoUp:"text-logo-up-AX5z2","text-logo-down":"text-logo-down-JCa3J",textLogoDown:"text-logo-down-JCa3J","image-info-contacts":"image-info-contacts-npO2f",imageInfoContacts:"image-info-contacts-npO2f","block-info-contacts":"block-info-contacts-anXKp",blockInfoContacts:"block-info-contacts-anXKp","info-number":"info-number-AbXSd",infoNumber:"info-number-AbXSd","text-telephone":"text-telephone-n9rDn",textTelephone:"text-telephone-n9rDn","number-phone":"number-phone-oWvCk",numberPhone:"number-phone-oWvCk","buttons-block":"buttons-block-y5tgv",buttonsBlock:"buttons-block-y5tgv","block-number":"block-number-hpKMZ",blockNumber:"block-number-hpKMZ","request-container":"request-container-x391g",requestContainer:"request-container-x391g","request-buttons-container":"request-buttons-container-YgKj2",requestButtonsContainer:"request-buttons-container-YgKj2","order-container":"order-container-f0K40",orderContainer:"order-container-f0K40","order-item":"order-item-BJoFm",orderItem:"order-item-BJoFm","field-flex":"field-flex-RiFWn",fieldFlex:"field-flex-RiFWn"};const l=i},6439:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(559),o=t.n(r),a=t(3476),i=t.n(a)()(o());i.push([e.id,".main-NtngC{\r\n    width: 80%;\r\n    margin: 0 auto;\r\n    padding: 0px 50px;\r\n}\r\n@media (max-width: 500px) {\r\n    .main-NtngC{\r\n        width: 100%;\r\n        padding: 0px 10px;\r\n    }\r\n}\r\n","",{version:3,sources:["webpack://./App/Main/styles.css"],names:[],mappings:"AAAA;IACI,UAAU;IACV,cAAc;IACd,iBAAiB;AACrB;AACA;IACI;QACI,WAAW;QACX,iBAAiB;IACrB;AACJ",sourcesContent:[".main{\r\n    width: 80%;\r\n    margin: 0 auto;\r\n    padding: 0px 50px;\r\n}\r\n@media (max-width: 500px) {\r\n    .main{\r\n        width: 100%;\r\n        padding: 0px 10px;\r\n    }\r\n}\r\n"],sourceRoot:""}]),i.locals={main:"main-NtngC"};const l=i},6542:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(559),o=t.n(r),a=t(3476),i=t.n(a)()(o());i.push([e.id,"/*Обнуление*/\r\n*{\r\n\tpadding: 0;\r\n\tmargin: 0;\r\n\tborder: 0;\r\n}\r\n*,*:before,*:after{\r\n\t-moz-box-sizing: border-box;\r\n\t-webkit-box-sizing: border-box;\r\n\tbox-sizing: border-box;\r\n}\r\n\r\na:focus,a:active{outline: none;}\r\na, a:visited{text-decoration: none;}\r\na:hover{text-decoration: none;}\r\nul li{list-style: none;}\r\nimg{vertical-align: top;}\r\nbody{\r\n    font-family: 'Radio Canada', sans-serif;\r\n    margin: 0;\r\n    background-color: rgb(211 228 245);\r\n}\r\n.app-wNdOh{\r\n    height: 100vh;\r\n    box-sizing: border-box;\r\n    overflow: auto;\r\n}\r\n.app-wNdOh::-webkit-scrollbar {\r\n    width: 5px\r\n}\r\n\r\n.app-wNdOh::-webkit-scrollbar-thumb {\r\n    border-radius: 1px;\r\n    background-color: rgb(40, 129, 206)\r\n}\r\n\r\n.app-wNdOh::-webkit-scrollbar-track {\r\n    background-color: rgb(211 228 245);\r\n}","",{version:3,sources:["webpack://./App/styles.css"],names:[],mappings:"AAAA,YAAY;AACZ;CACC,UAAU;CACV,SAAS;CACT,SAAS;AACV;AACA;CACC,2BAA2B;CAC3B,8BAA8B;CAC9B,sBAAsB;AACvB;;AAEA,iBAAiB,aAAa,CAAC;AAC/B,aAAa,qBAAqB,CAAC;AACnC,QAAQ,qBAAqB,CAAC;AAC9B,MAAM,gBAAgB,CAAC;AACvB,IAAI,mBAAmB,CAAC;AACxB;IACI,uCAAuC;IACvC,SAAS;IACT,kCAAkC;AACtC;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,cAAc;AAClB;AACA;IACI;AACJ;;AAEA;IACI,kBAAkB;IAClB;AACJ;;AAEA;IACI,kCAAkC;AACtC",sourcesContent:["/*Обнуление*/\r\n*{\r\n\tpadding: 0;\r\n\tmargin: 0;\r\n\tborder: 0;\r\n}\r\n*,*:before,*:after{\r\n\t-moz-box-sizing: border-box;\r\n\t-webkit-box-sizing: border-box;\r\n\tbox-sizing: border-box;\r\n}\r\n\r\na:focus,a:active{outline: none;}\r\na, a:visited{text-decoration: none;}\r\na:hover{text-decoration: none;}\r\nul li{list-style: none;}\r\nimg{vertical-align: top;}\r\nbody{\r\n    font-family: 'Radio Canada', sans-serif;\r\n    margin: 0;\r\n    background-color: rgb(211 228 245);\r\n}\r\n.app{\r\n    height: 100vh;\r\n    box-sizing: border-box;\r\n    overflow: auto;\r\n}\r\n.app::-webkit-scrollbar {\r\n    width: 5px\r\n}\r\n\r\n.app::-webkit-scrollbar-thumb {\r\n    border-radius: 1px;\r\n    background-color: rgb(40, 129, 206)\r\n}\r\n\r\n.app::-webkit-scrollbar-track {\r\n    background-color: rgb(211 228 245);\r\n}"],sourceRoot:""}]),i.locals={app:"app-wNdOh"};const l=i},586:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(559),o=t.n(r),a=t(3476),i=t.n(a)()(o());i.push([e.id,".button-container-qFUvs {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 40px;\r\n    width: 100%;\r\n    box-shadow: 0px 0px 5px rgb(40, 129, 206);\r\n    cursor: pointer;\r\n    color:#1b1b1b;\r\n    margin: 10px;\r\n    transition-duration: 0.3s;\r\n    -webkit-touch-callout: none; /* iOS Safari */\r\n    -webkit-user-select: none;   /* Chrome/Safari/Opera */\r\n    -khtml-user-select: none;    /* Konqueror */\r\n    -moz-user-select: none;      /* Firefox */\r\n    -ms-user-select: none;       /* Internet Explorer/Edge */\r\n    user-select: none;\r\n}\r\n.button-container-qFUvs:hover {\r\n    box-shadow: 0px 0px 40px #00000040;\r\n    background-color: rgb(40, 129, 206);\r\n}\r\n.button-text-fcn5t{\r\n    font-weight: 500;\r\n    text-align: center;\r\n}","",{version:3,sources:["webpack://./Components/Button/styles.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;IACvB,YAAY;IACZ,WAAW;IACX,yCAAyC;IACzC,eAAe;IACf,aAAa;IACb,YAAY;IACZ,yBAAyB;IACzB,2BAA2B,EAAE,eAAe;IAC5C,yBAAyB,IAAI,wBAAwB;IACrD,wBAAwB,KAAK,cAAc;IAC3C,sBAAsB,OAAO,YAAY;IACzC,qBAAqB,QAAQ,2BAA2B;IACxD,iBAAiB;AACrB;AACA;IACI,kCAAkC;IAClC,mCAAmC;AACvC;AACA;IACI,gBAAgB;IAChB,kBAAkB;AACtB",sourcesContent:[".button-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 40px;\r\n    width: 100%;\r\n    box-shadow: 0px 0px 5px rgb(40, 129, 206);\r\n    cursor: pointer;\r\n    color:#1b1b1b;\r\n    margin: 10px;\r\n    transition-duration: 0.3s;\r\n    -webkit-touch-callout: none; /* iOS Safari */\r\n    -webkit-user-select: none;   /* Chrome/Safari/Opera */\r\n    -khtml-user-select: none;    /* Konqueror */\r\n    -moz-user-select: none;      /* Firefox */\r\n    -ms-user-select: none;       /* Internet Explorer/Edge */\r\n    user-select: none;\r\n}\r\n.button-container:hover {\r\n    box-shadow: 0px 0px 40px #00000040;\r\n    background-color: rgb(40, 129, 206);\r\n}\r\n.button-text{\r\n    font-weight: 500;\r\n    text-align: center;\r\n}"],sourceRoot:""}]),i.locals={"button-container":"button-container-qFUvs",buttonContainer:"button-container-qFUvs","button-text":"button-text-fcn5t",buttonText:"button-text-fcn5t"};const l=i},8446:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(559),o=t.n(r),a=t(3476),i=t.n(a)()(o());i.push([e.id,".card-hospital-OrO4L{\r\n    width: 100%;\r\n    margin: 30px;\r\n    box-shadow: 0px 0px 5px rgb(40, 129, 206);\r\n}\r\n.header-text-lTBwh{\r\n    font-size: 30px;\r\n    margin-top: 5px;\r\n    color: #12538b;\r\n    text-align: center;\r\n}\r\n.block-info-vi_8M{\r\n    display: flex;\r\n    align-content: center;\r\n    font-size: 17px;\r\n    margin: 15px;\r\n}\r\n.image-info-contacts-HrWnC{\r\n    width: 25px;\r\n    height: 25px;\r\n    margin-right: 5px;\r\n}\r\n.info-text-chWdd{\r\n    padding-inline: 5px;\r\n}\r\n@media (max-width: 500px) {\r\n    .card-hospital-OrO4L{\r\n        width: 100%;\r\n        margin: 10px;\r\n    }\r\n    .block-info-vi_8M{\r\n        font-size: 14px;\r\n        margin: 13px;\r\n    }\r\n    .image-info-contacts-HrWnC{\r\n        width: 19px;\r\n        height: 19px;\r\n    }\r\n}\r\n","",{version:3,sources:["webpack://./Components/CardHospital/styles.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,YAAY;IACZ,yCAAyC;AAC7C;AACA;IACI,eAAe;IACf,eAAe;IACf,cAAc;IACd,kBAAkB;AACtB;AACA;IACI,aAAa;IACb,qBAAqB;IACrB,eAAe;IACf,YAAY;AAChB;AACA;IACI,WAAW;IACX,YAAY;IACZ,iBAAiB;AACrB;AACA;IACI,mBAAmB;AACvB;AACA;IACI;QACI,WAAW;QACX,YAAY;IAChB;IACA;QACI,eAAe;QACf,YAAY;IAChB;IACA;QACI,WAAW;QACX,YAAY;IAChB;AACJ",sourcesContent:[".card-hospital{\r\n    width: 100%;\r\n    margin: 30px;\r\n    box-shadow: 0px 0px 5px rgb(40, 129, 206);\r\n}\r\n.header-text{\r\n    font-size: 30px;\r\n    margin-top: 5px;\r\n    color: #12538b;\r\n    text-align: center;\r\n}\r\n.block-info{\r\n    display: flex;\r\n    align-content: center;\r\n    font-size: 17px;\r\n    margin: 15px;\r\n}\r\n.image-info-contacts{\r\n    width: 25px;\r\n    height: 25px;\r\n    margin-right: 5px;\r\n}\r\n.info-text{\r\n    padding-inline: 5px;\r\n}\r\n@media (max-width: 500px) {\r\n    .card-hospital{\r\n        width: 100%;\r\n        margin: 10px;\r\n    }\r\n    .block-info{\r\n        font-size: 14px;\r\n        margin: 13px;\r\n    }\r\n    .image-info-contacts{\r\n        width: 19px;\r\n        height: 19px;\r\n    }\r\n}\r\n"],sourceRoot:""}]),i.locals={"card-hospital":"card-hospital-OrO4L",cardHospital:"card-hospital-OrO4L","header-text":"header-text-lTBwh",headerText:"header-text-lTBwh","block-info":"block-info-vi_8M",blockInfo:"block-info-vi_8M","image-info-contacts":"image-info-contacts-HrWnC",imageInfoContacts:"image-info-contacts-HrWnC","info-text":"info-text-chWdd",infoText:"info-text-chWdd"};const l=i},704:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(559),o=t.n(r),a=t(3476),i=t.n(a)()(o());i.push([e.id,".modal-_VZPO { \r\n    height: 100vh;\r\n    width: 100vw;\r\n    background-color: rgba(0, 0, 0, 0.4);\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    opacity: 0;\r\n    transition: 0.5s;\r\n    pointer-events: none; \r\n    z-index: 1;\r\n}\r\n\r\n.modal-_VZPO.active-TAJeN {\r\n    opacity: 1;\r\n    pointer-events: all;\r\n}\r\n\r\n.modal-content-S5rhM {\r\n    transform: scale(0.5);\r\n    transition: 0.5s;\r\n}\r\n\r\n.modal-content-S5rhM.active-TAJeN {\r\n    transform: scale(1);\r\n}","",{version:3,sources:["webpack://./Components/Modal/styles.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,YAAY;IACZ,oCAAoC;IACpC,eAAe;IACf,MAAM;IACN,OAAO;IACP,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,UAAU;IACV,gBAAgB;IAChB,oBAAoB;IACpB,UAAU;AACd;;AAEA;IACI,UAAU;IACV,mBAAmB;AACvB;;AAEA;IACI,qBAAqB;IACrB,gBAAgB;AACpB;;AAEA;IACI,mBAAmB;AACvB",sourcesContent:[".modal { \r\n    height: 100vh;\r\n    width: 100vw;\r\n    background-color: rgba(0, 0, 0, 0.4);\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    opacity: 0;\r\n    transition: 0.5s;\r\n    pointer-events: none; \r\n    z-index: 1;\r\n}\r\n\r\n.modal.active {\r\n    opacity: 1;\r\n    pointer-events: all;\r\n}\r\n\r\n.modal-content {\r\n    transform: scale(0.5);\r\n    transition: 0.5s;\r\n}\r\n\r\n.modal-content.active {\r\n    transform: scale(1);\r\n}"],sourceRoot:""}]),i.locals={modal:"modal-_VZPO",active:"active-TAJeN","modal-content":"modal-content-S5rhM",modalContent:"modal-content-S5rhM"};const l=i},2064:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(559),o=t.n(r),a=t(3476),i=t.n(a)()(o());i.push([e.id,".navigation-menu-container-aToNq {\r\n    width: 80%;\r\n    margin: 5px auto 20px auto;\r\n}\r\n\r\n.navigation-menu-list-wafol {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 0px;\r\n    list-style: none;\r\n}\r\n\r\n.navigation-menu-item-NFpcK {\r\n    display: flex;\r\n    height: 40px;\r\n    cursor: pointer;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    float: left;\r\n    background-color: rgb(40, 129, 206);\r\n    color: #1b1b1b;\r\n    transition-property: color, background-color;\r\n    transition-duration: 0.3s;\r\n}\r\n\r\n.navigation-menu-item-NFpcK:hover {\r\n    background-color: rgb(26, 85, 137);\r\n}\r\n\r\n.navigation-menu-item-text-GHhK0 {\r\n    text-align: center;\r\n    font-weight: 600;\r\n    font-size: 15px;\r\n    margin: 5px;\r\n}\r\n\r\n@media (max-width: 500px) {\r\n    .navigation-menu-container-aToNq {\r\n        margin: 10px auto;\r\n        width: 90%;\r\n    }\r\n    .navigation-menu-list-wafol {\r\n        flex-direction: column;\r\n        position: relative;\r\n        top: 10px;\r\n    }\r\n    .navigation-menu-item-NFpcK {\r\n        margin: 5px;\r\n        box-shadow: 0px 0px 5px rgb(40 129 206);\r\n    }\r\n    .open-menu-PZ5V0 {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        font-size: 26px;\r\n        color: #12538b;\r\n        text-align: center;\r\n    }\r\n    .open-menu-PZ5V0:hover {\r\n        color: #072a48;\r\n    }\r\n    .btn-menu-uoSvn {\r\n        width: 25px;\r\n        height: 25px;\r\n        padding-inline: 30px;\r\n        position: relative;\r\n    }\r\n    .btn-menu-uoSvn:before {\r\n        content: '';\r\n        top: 0;\r\n        position: absolute;\r\n        width: 25px;\r\n        height: 2px;\r\n        background-color: rgb(40, 129, 206);\r\n    }\r\n    .btn-menu-uoSvn::after {\r\n        content: '';\r\n        bottom: 0;\r\n        position: absolute;\r\n        width: 25px;\r\n        height: 2px;\r\n        background-color: rgb(40, 129, 206);\r\n    }\r\n    .btn-menu-uoSvn span {\r\n        content: '';\r\n        top: 11px;\r\n        position: absolute;\r\n        width: 25px;\r\n        height: 2px;\r\n        background-color: rgb(40, 129, 206);\r\n    }\r\n    .navigation-menu-list-wafol {\r\n        animation-name: menu-nMkBt;\r\n        animation-duration: 1.5s;\r\n    }\r\n\r\n    @keyframes menu-nMkBt {\r\n        0%{\r\n            opacity: 0;\r\n        }\r\n        100%{\r\n            opacity: 1;\r\n        }\r\n    }\r\n}\r\n","",{version:3,sources:["webpack://./Components/NavigationMenu/styles.css"],names:[],mappings:"AAAA;IACI,UAAU;IACV,0BAA0B;AAC9B;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,eAAe;IACf,mBAAmB;IACnB,uBAAuB;IACvB,WAAW;IACX,WAAW;IACX,mCAAmC;IACnC,cAAc;IACd,4CAA4C;IAC5C,yBAAyB;AAC7B;;AAEA;IACI,kCAAkC;AACtC;;AAEA;IACI,kBAAkB;IAClB,gBAAgB;IAChB,eAAe;IACf,WAAW;AACf;;AAEA;IACI;QACI,iBAAiB;QACjB,UAAU;IACd;IACA;QACI,sBAAsB;QACtB,kBAAkB;QAClB,SAAS;IACb;IACA;QACI,WAAW;QACX,uCAAuC;IAC3C;IACA;QACI,aAAa;QACb,uBAAuB;QACvB,mBAAmB;QACnB,eAAe;QACf,cAAc;QACd,kBAAkB;IACtB;IACA;QACI,cAAc;IAClB;IACA;QACI,WAAW;QACX,YAAY;QACZ,oBAAoB;QACpB,kBAAkB;IACtB;IACA;QACI,WAAW;QACX,MAAM;QACN,kBAAkB;QAClB,WAAW;QACX,WAAW;QACX,mCAAmC;IACvC;IACA;QACI,WAAW;QACX,SAAS;QACT,kBAAkB;QAClB,WAAW;QACX,WAAW;QACX,mCAAmC;IACvC;IACA;QACI,WAAW;QACX,SAAS;QACT,kBAAkB;QAClB,WAAW;QACX,WAAW;QACX,mCAAmC;IACvC;IACA;QACI,0BAAoB;QACpB,wBAAwB;IAC5B;;IAEA;QACI;YACI,UAAU;QACd;QACA;YACI,UAAU;QACd;IACJ;AACJ",sourcesContent:[".navigation-menu-container {\r\n    width: 80%;\r\n    margin: 5px auto 20px auto;\r\n}\r\n\r\n.navigation-menu-list {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 0px;\r\n    list-style: none;\r\n}\r\n\r\n.navigation-menu-item {\r\n    display: flex;\r\n    height: 40px;\r\n    cursor: pointer;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    float: left;\r\n    background-color: rgb(40, 129, 206);\r\n    color: #1b1b1b;\r\n    transition-property: color, background-color;\r\n    transition-duration: 0.3s;\r\n}\r\n\r\n.navigation-menu-item:hover {\r\n    background-color: rgb(26, 85, 137);\r\n}\r\n\r\n.navigation-menu-item-text {\r\n    text-align: center;\r\n    font-weight: 600;\r\n    font-size: 15px;\r\n    margin: 5px;\r\n}\r\n\r\n@media (max-width: 500px) {\r\n    .navigation-menu-container {\r\n        margin: 10px auto;\r\n        width: 90%;\r\n    }\r\n    .navigation-menu-list {\r\n        flex-direction: column;\r\n        position: relative;\r\n        top: 10px;\r\n    }\r\n    .navigation-menu-item {\r\n        margin: 5px;\r\n        box-shadow: 0px 0px 5px rgb(40 129 206);\r\n    }\r\n    .open-menu {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        font-size: 26px;\r\n        color: #12538b;\r\n        text-align: center;\r\n    }\r\n    .open-menu:hover {\r\n        color: #072a48;\r\n    }\r\n    .btn-menu {\r\n        width: 25px;\r\n        height: 25px;\r\n        padding-inline: 30px;\r\n        position: relative;\r\n    }\r\n    .btn-menu:before {\r\n        content: '';\r\n        top: 0;\r\n        position: absolute;\r\n        width: 25px;\r\n        height: 2px;\r\n        background-color: rgb(40, 129, 206);\r\n    }\r\n    .btn-menu::after {\r\n        content: '';\r\n        bottom: 0;\r\n        position: absolute;\r\n        width: 25px;\r\n        height: 2px;\r\n        background-color: rgb(40, 129, 206);\r\n    }\r\n    .btn-menu span {\r\n        content: '';\r\n        top: 11px;\r\n        position: absolute;\r\n        width: 25px;\r\n        height: 2px;\r\n        background-color: rgb(40, 129, 206);\r\n    }\r\n    .navigation-menu-list {\r\n        animation-name: menu;\r\n        animation-duration: 1.5s;\r\n    }\r\n\r\n    @keyframes menu {\r\n        0%{\r\n            opacity: 0;\r\n        }\r\n        100%{\r\n            opacity: 1;\r\n        }\r\n    }\r\n}\r\n"],sourceRoot:""}]),i.locals={"navigation-menu-container":"navigation-menu-container-aToNq",navigationMenuContainer:"navigation-menu-container-aToNq","navigation-menu-list":"navigation-menu-list-wafol",navigationMenuList:"navigation-menu-list-wafol","navigation-menu-item":"navigation-menu-item-NFpcK",navigationMenuItem:"navigation-menu-item-NFpcK","navigation-menu-item-text":"navigation-menu-item-text-GHhK0",navigationMenuItemText:"navigation-menu-item-text-GHhK0","open-menu":"open-menu-PZ5V0",openMenu:"open-menu-PZ5V0","btn-menu":"btn-menu-uoSvn",btnMenu:"btn-menu-uoSvn",menu:"menu-nMkBt"};const l=i},2203:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(559),o=t.n(r),a=t(3476),i=t.n(a)()(o());i.push([e.id,".request-container-CdZLI{\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    width: 325px;\r\n    height: 250px;\r\n    background-color: rgb(211 228 245);\r\n    box-shadow: 0px 0px 8px rgb(40, 129, 206);\r\n    padding: 10px;\r\n    color: #1b1b1b;\r\n}\r\n.request-buttons-container-ndUzJ{\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-content: center;\r\n    margin-top: auto;\r\n    margin-bottom: 25px;\r\n}\r\n\r\n.order-container-s3KIh {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 0px 10%;\r\n}\r\n.order-item-czGO1 {\r\n    border-radius: 15px;\r\n    margin-bottom: 7px;\r\n}\r\n.field-flex-NPqkk {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    margin-top: 15px;\r\n}\r\n.input-container-xC7zL {\r\n    padding: 5px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n}\r\n.text-input-kv2GN {\r\n    width: 100%;\r\n    padding: 10px 15px;\r\n    text-align: left;\r\n    color: #4b4b4b;\r\n    background-color: #ffffff;\r\n}\r\n.block-text-fQSNY{\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n}\r\n.block-header-text-_loUp{\r\n    text-align: center;\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n}","",{version:3,sources:["webpack://./Components/RequestCall/styles.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mBAAmB;IACnB,sBAAsB;IACtB,YAAY;IACZ,aAAa;IACb,kCAAkC;IAClC,yCAAyC;IACzC,aAAa;IACb,cAAc;AAClB;AACA;IACI,WAAW;IACX,aAAa;IACb,6BAA6B;IAC7B,qBAAqB;IACrB,gBAAgB;IAChB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,gBAAgB;AACpB;AACA;IACI,mBAAmB;IACnB,kBAAkB;AACtB;AACA;IACI,aAAa;IACb,6BAA6B;IAC7B,mBAAmB;IACnB,sBAAsB;IACtB,gBAAgB;AACpB;AACA;IACI,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,8BAA8B;AAClC;AACA;IACI,WAAW;IACX,kBAAkB;IAClB,gBAAgB;IAChB,cAAc;IACd,yBAAyB;AAC7B;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,kBAAkB;AACtB;AACA;IACI,kBAAkB;IAClB,eAAe;IACf,gBAAgB;AACpB",sourcesContent:[".request-container{\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    width: 325px;\r\n    height: 250px;\r\n    background-color: rgb(211 228 245);\r\n    box-shadow: 0px 0px 8px rgb(40, 129, 206);\r\n    padding: 10px;\r\n    color: #1b1b1b;\r\n}\r\n.request-buttons-container{\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-content: center;\r\n    margin-top: auto;\r\n    margin-bottom: 25px;\r\n}\r\n\r\n.order-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 0px 10%;\r\n}\r\n.order-item {\r\n    border-radius: 15px;\r\n    margin-bottom: 7px;\r\n}\r\n.field-flex {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    margin-top: 15px;\r\n}\r\n.input-container {\r\n    padding: 5px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n}\r\n.text-input {\r\n    width: 100%;\r\n    padding: 10px 15px;\r\n    text-align: left;\r\n    color: #4b4b4b;\r\n    background-color: #ffffff;\r\n}\r\n.block-text{\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n}\r\n.block-header-text{\r\n    text-align: center;\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n}"],sourceRoot:""}]),i.locals={"request-container":"request-container-CdZLI",requestContainer:"request-container-CdZLI","request-buttons-container":"request-buttons-container-ndUzJ",requestButtonsContainer:"request-buttons-container-ndUzJ","order-container":"order-container-s3KIh",orderContainer:"order-container-s3KIh","order-item":"order-item-czGO1",orderItem:"order-item-czGO1","field-flex":"field-flex-NPqkk",fieldFlex:"field-flex-NPqkk","input-container":"input-container-xC7zL",inputContainer:"input-container-xC7zL","text-input":"text-input-kv2GN",textInput:"text-input-kv2GN","block-text":"block-text-fQSNY",blockText:"block-text-fQSNY","block-header-text":"block-header-text-_loUp",blockHeaderText:"block-header-text-_loUp"};const l=i},3318:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(559),o=t.n(r),a=t(3476),i=t.n(a)()(o());i.push([e.id,".request-container-_OnD8 {\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    width: 320px;\r\n    background-color: rgb(211 228 245);\r\n    padding: 10px;\r\n    color: #1b1b1b;\r\n}\r\n.request-buttons-container-zimer {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-content: center;\r\n    margin-top: auto;\r\n}\r\n\r\n.order-container-G5qlF {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 0px 10%;\r\n}\r\n.order-item-I57ep {\r\n    border-radius: 15px;\r\n    margin-bottom: 7px;\r\n}\r\n.field-flex-rKFho {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    margin-top: 15px;\r\n}\r\n.input-container-u6wbN {\r\n    padding: 5px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n}\r\n.text-input-h4qkY {\r\n    width: 100%;\r\n    padding: 10px 15px;\r\n    text-align: left;\r\n    color: #4b4b4b;\r\n    background-color: #ffffff;\r\n}\r\n.block-text-oyfw4 {\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n}\r\n.block-header-text-JcL4S {\r\n    text-align: center;\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n}\r\n.input-text-CKaUj {\r\n    text-align: left;\r\n    min-height: 30px;\r\n    max-height: 180px;\r\n    overflow-y: auto;\r\n    width: 100%;\r\n    padding: 10px 15px;\r\n    text-align: left;\r\n    color: #4b4b4b;\r\n    background-color: #ffffff;\r\n}\r\n.text-area-input-RseQJ{\r\n    resize: vertical;\r\n    max-height: 80px;\r\n    min-height: 50px;\r\n    width: 200px;\r\n    padding: 10px 15px;\r\n    text-align: left;\r\n    color: #4b4b4b;\r\n    background-color: #ffffff;\r\n}","",{version:3,sources:["webpack://./Components/RequestSms/styles.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mBAAmB;IACnB,sBAAsB;IACtB,YAAY;IACZ,kCAAkC;IAClC,aAAa;IACb,cAAc;AAClB;AACA;IACI,WAAW;IACX,aAAa;IACb,6BAA6B;IAC7B,qBAAqB;IACrB,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,gBAAgB;AACpB;AACA;IACI,mBAAmB;IACnB,kBAAkB;AACtB;AACA;IACI,aAAa;IACb,6BAA6B;IAC7B,mBAAmB;IACnB,sBAAsB;IACtB,gBAAgB;AACpB;AACA;IACI,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,8BAA8B;AAClC;AACA;IACI,WAAW;IACX,kBAAkB;IAClB,gBAAgB;IAChB,cAAc;IACd,yBAAyB;AAC7B;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,kBAAkB;AACtB;AACA;IACI,kBAAkB;IAClB,eAAe;IACf,gBAAgB;AACpB;AACA;IACI,gBAAgB;IAChB,gBAAgB;IAChB,iBAAiB;IACjB,gBAAgB;IAChB,WAAW;IACX,kBAAkB;IAClB,gBAAgB;IAChB,cAAc;IACd,yBAAyB;AAC7B;AACA;IACI,gBAAgB;IAChB,gBAAgB;IAChB,gBAAgB;IAChB,YAAY;IACZ,kBAAkB;IAClB,gBAAgB;IAChB,cAAc;IACd,yBAAyB;AAC7B",sourcesContent:[".request-container {\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    width: 320px;\r\n    background-color: rgb(211 228 245);\r\n    padding: 10px;\r\n    color: #1b1b1b;\r\n}\r\n.request-buttons-container {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-content: center;\r\n    margin-top: auto;\r\n}\r\n\r\n.order-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 0px 10%;\r\n}\r\n.order-item {\r\n    border-radius: 15px;\r\n    margin-bottom: 7px;\r\n}\r\n.field-flex {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    margin-top: 15px;\r\n}\r\n.input-container {\r\n    padding: 5px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n}\r\n.text-input {\r\n    width: 100%;\r\n    padding: 10px 15px;\r\n    text-align: left;\r\n    color: #4b4b4b;\r\n    background-color: #ffffff;\r\n}\r\n.block-text {\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n}\r\n.block-header-text {\r\n    text-align: center;\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n}\r\n.input-text {\r\n    text-align: left;\r\n    min-height: 30px;\r\n    max-height: 180px;\r\n    overflow-y: auto;\r\n    width: 100%;\r\n    padding: 10px 15px;\r\n    text-align: left;\r\n    color: #4b4b4b;\r\n    background-color: #ffffff;\r\n}\r\n.text-area-input{\r\n    resize: vertical;\r\n    max-height: 80px;\r\n    min-height: 50px;\r\n    width: 200px;\r\n    padding: 10px 15px;\r\n    text-align: left;\r\n    color: #4b4b4b;\r\n    background-color: #ffffff;\r\n}"],sourceRoot:""}]),i.locals={"request-container":"request-container-_OnD8",requestContainer:"request-container-_OnD8","request-buttons-container":"request-buttons-container-zimer",requestButtonsContainer:"request-buttons-container-zimer","order-container":"order-container-G5qlF",orderContainer:"order-container-G5qlF","order-item":"order-item-I57ep",orderItem:"order-item-I57ep","field-flex":"field-flex-rKFho",fieldFlex:"field-flex-rKFho","input-container":"input-container-u6wbN",inputContainer:"input-container-u6wbN","text-input":"text-input-h4qkY",textInput:"text-input-h4qkY","block-text":"block-text-oyfw4",blockText:"block-text-oyfw4","block-header-text":"block-header-text-JcL4S",blockHeaderText:"block-header-text-JcL4S","input-text":"input-text-CKaUj",inputText:"input-text-CKaUj","text-area-input":"text-area-input-RseQJ",textAreaInput:"text-area-input-RseQJ"};const l=i},8257:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(559),o=t.n(r),a=t(3476),i=t.n(a)()(o());i.push([e.id,".card-service-GTIpW{\r\n    width: 550px;\r\n    margin: 20px 0px;\r\n    padding: 15px;\r\n    box-shadow: 0px 0px 5px rgb(40, 129, 206);\r\n}\r\n.title-service-Br9aS{\r\n    font-size: 30px;\r\n}\r\n.discription-service-bUhy_{\r\n    margin: 10px 0px;\r\n}\r\n.block-image-ogcPG{\r\n    display: flex;\r\n    justify-content:space-around;\r\n    margin: 10px 0px;\r\n}\r\n.image-service-w5rXv{\r\n    width: 400px;\r\n    height: 200px;\r\n    box-shadow: 0px 0px 2px rgb(40, 129, 206);\r\n}\r\n@media (max-width: 500px) {\r\n    .card-service-GTIpW{\r\n        width: 100%;\r\n    }\r\n    .image-service-w5rXv{\r\n        width: 300px;\r\n    }\r\n}\r\n","",{version:3,sources:["webpack://./Components/Service/styles.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,gBAAgB;IAChB,aAAa;IACb,yCAAyC;AAC7C;AACA;IACI,eAAe;AACnB;AACA;IACI,gBAAgB;AACpB;AACA;IACI,aAAa;IACb,4BAA4B;IAC5B,gBAAgB;AACpB;AACA;IACI,YAAY;IACZ,aAAa;IACb,yCAAyC;AAC7C;AACA;IACI;QACI,WAAW;IACf;IACA;QACI,YAAY;IAChB;AACJ",sourcesContent:[".card-service{\r\n    width: 550px;\r\n    margin: 20px 0px;\r\n    padding: 15px;\r\n    box-shadow: 0px 0px 5px rgb(40, 129, 206);\r\n}\r\n.title-service{\r\n    font-size: 30px;\r\n}\r\n.discription-service{\r\n    margin: 10px 0px;\r\n}\r\n.block-image{\r\n    display: flex;\r\n    justify-content:space-around;\r\n    margin: 10px 0px;\r\n}\r\n.image-service{\r\n    width: 400px;\r\n    height: 200px;\r\n    box-shadow: 0px 0px 2px rgb(40, 129, 206);\r\n}\r\n@media (max-width: 500px) {\r\n    .card-service{\r\n        width: 100%;\r\n    }\r\n    .image-service{\r\n        width: 300px;\r\n    }\r\n}\r\n"],sourceRoot:""}]),i.locals={"card-service":"card-service-GTIpW",cardService:"card-service-GTIpW","title-service":"title-service-Br9aS",titleService:"title-service-Br9aS","discription-service":"discription-service-bUhy_",discriptionService:"discription-service-bUhy_","block-image":"block-image-ogcPG",blockImage:"block-image-ogcPG","image-service":"image-service-w5rXv",imageService:"image-service-w5rXv"};const l=i},7834:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(559),o=t.n(r),a=t(3476),i=t.n(a)()(o());i.push([e.id,".container-slider-Qkx3X {\r\n    display: flex;\r\n    justify-content: center;\r\n}\r\n.slider-VwQAZ {\r\n    display: flex;\r\n    width: 70%;\r\n    height: 280px;\r\n}\r\n.button-navigation-fb8nC {\r\n    width: fit-content;\r\n    height: 100px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n}\r\n.button-navigation-fb8nC > img {\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 15%;\r\n    font-size: 15px;\r\n    height: fit-content;\r\n    width: fit-content;\r\n    transition-duration: 0.3s;\r\n}\r\n.button-navigation-fb8nC > img:hover {\r\n    background-color: rgb(26, 85, 137);\r\n}\r\n.slider-item-EjhpE {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    float: left;\r\n    width: 100%;\r\n    height: 100%;\r\n    transition-property: color, background-color;\r\n    transition-duration: 0.3s;\r\n}\r\n.slider-image-CjWbD {\r\n    width: 670px;\r\n    height: 280px;\r\n}\r\n@media (max-width: 500px) {\r\n    .button-navigation-fb8nC {\r\n        height: 0;\r\n    }\r\n    .slider-image-CjWbD {\r\n        width: 280px;\r\n        height: 250px;\r\n    }\r\n    .slider-VwQAZ {\r\n        width: 100%;\r\n    }\r\n    .button-navigation-fb8nC > img {\r\n        width: 28px;\r\n        height: 75px;\r\n    }\r\n}\r\n","",{version:3,sources:["webpack://./Components/Slider/styles.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,uBAAuB;AAC3B;AACA;IACI,aAAa;IACb,UAAU;IACV,aAAa;AACjB;AACA;IACI,kBAAkB;IAClB,aAAa;IACb,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,eAAe;AACnB;AACA;IACI,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,eAAe;IACf,mBAAmB;IACnB,kBAAkB;IAClB,yBAAyB;AAC7B;AACA;IACI,kCAAkC;AACtC;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,WAAW;IACX,WAAW;IACX,YAAY;IACZ,4CAA4C;IAC5C,yBAAyB;AAC7B;AACA;IACI,YAAY;IACZ,aAAa;AACjB;AACA;IACI;QACI,SAAS;IACb;IACA;QACI,YAAY;QACZ,aAAa;IACjB;IACA;QACI,WAAW;IACf;IACA;QACI,WAAW;QACX,YAAY;IAChB;AACJ",sourcesContent:[".container-slider {\r\n    display: flex;\r\n    justify-content: center;\r\n}\r\n.slider {\r\n    display: flex;\r\n    width: 70%;\r\n    height: 280px;\r\n}\r\n.button-navigation {\r\n    width: fit-content;\r\n    height: 100px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n}\r\n.button-navigation > img {\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 15%;\r\n    font-size: 15px;\r\n    height: fit-content;\r\n    width: fit-content;\r\n    transition-duration: 0.3s;\r\n}\r\n.button-navigation > img:hover {\r\n    background-color: rgb(26, 85, 137);\r\n}\r\n.slider-item {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    float: left;\r\n    width: 100%;\r\n    height: 100%;\r\n    transition-property: color, background-color;\r\n    transition-duration: 0.3s;\r\n}\r\n.slider-image {\r\n    width: 670px;\r\n    height: 280px;\r\n}\r\n@media (max-width: 500px) {\r\n    .button-navigation {\r\n        height: 0;\r\n    }\r\n    .slider-image {\r\n        width: 280px;\r\n        height: 250px;\r\n    }\r\n    .slider {\r\n        width: 100%;\r\n    }\r\n    .button-navigation > img {\r\n        width: 28px;\r\n        height: 75px;\r\n    }\r\n}\r\n"],sourceRoot:""}]),i.locals={"container-slider":"container-slider-Qkx3X",containerSlider:"container-slider-Qkx3X",slider:"slider-VwQAZ","button-navigation":"button-navigation-fb8nC",buttonNavigation:"button-navigation-fb8nC","slider-item":"slider-item-EjhpE",sliderItem:"slider-item-EjhpE","slider-image":"slider-image-CjWbD",sliderImage:"slider-image-CjWbD"};const l=i},7119:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(559),o=t.n(r),a=t(3476),i=t.n(a)()(o());i.push([e.id,".block-specialist-lLuAT{\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 50%;\r\n    padding: 10px;\r\n    box-shadow: 0px 0px 5px rgb(44, 145, 233);\r\n    margin: 15px 0;\r\n}\r\n.info-specialist-agrUd{\r\n    font-size: 18px;\r\n    padding: 9px;\r\n    color: #12538b;\r\n}\r\n.fio-Hg9xV{\r\n    font-size: 25px;\r\n    color: #12538b;\r\n}\r\n.image-info-contacts-WGdqY {\r\n    width: 30px;\r\n    height: 30px;\r\n}\r\n.all-info-FbHq7{\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 18px;\r\n    padding: 9px;\r\n    color: #12538b;\r\n}\r\n@media (max-width: 500px) {\r\n    .block-specialist-lLuAT{\r\n        width: 100%;\r\n    }\r\n}\r\n","",{version:3,sources:["webpack://./Components/Specialist/styles.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,UAAU;IACV,aAAa;IACb,yCAAyC;IACzC,cAAc;AAClB;AACA;IACI,eAAe;IACf,YAAY;IACZ,cAAc;AAClB;AACA;IACI,eAAe;IACf,cAAc;AAClB;AACA;IACI,WAAW;IACX,YAAY;AAChB;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,eAAe;IACf,YAAY;IACZ,cAAc;AAClB;AACA;IACI;QACI,WAAW;IACf;AACJ",sourcesContent:[".block-specialist{\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 50%;\r\n    padding: 10px;\r\n    box-shadow: 0px 0px 5px rgb(44, 145, 233);\r\n    margin: 15px 0;\r\n}\r\n.info-specialist{\r\n    font-size: 18px;\r\n    padding: 9px;\r\n    color: #12538b;\r\n}\r\n.fio{\r\n    font-size: 25px;\r\n    color: #12538b;\r\n}\r\n.image-info-contacts {\r\n    width: 30px;\r\n    height: 30px;\r\n}\r\n.all-info{\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 18px;\r\n    padding: 9px;\r\n    color: #12538b;\r\n}\r\n@media (max-width: 500px) {\r\n    .block-specialist{\r\n        width: 100%;\r\n    }\r\n}\r\n"],sourceRoot:""}]),i.locals={"block-specialist":"block-specialist-lLuAT",blockSpecialist:"block-specialist-lLuAT","info-specialist":"info-specialist-agrUd",infoSpecialist:"info-specialist-agrUd",fio:"fio-Hg9xV","image-info-contacts":"image-info-contacts-WGdqY",imageInfoContacts:"image-info-contacts-WGdqY","all-info":"all-info-FbHq7",allInfo:"all-info-FbHq7"};const l=i},3561:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(559),o=t.n(r),a=t(3476),i=t.n(a)()(o());i.push([e.id,".block-type-doctor-CWtju {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 70px;\r\n    cursor: pointer;\r\n    padding: 5px;\r\n    box-shadow: 0px 0px 5px rgb(40, 129, 206);\r\n    transition-duration: 0.3s;\r\n    -webkit-touch-callout: none; /* iOS Safari */\r\n    -webkit-user-select: none;   /* Chrome/Safari/Opera */\r\n    -khtml-user-select: none;    /* Konqueror */\r\n    -moz-user-select: none;      /* Firefox */\r\n    -ms-user-select: none;       /* Internet Explorer/Edge */\r\n    user-select: none;\r\n}\r\n.block-type-doctor-CWtju:hover {\r\n    background-color: #b0c7da;\r\n    box-shadow: 0px 0px 10px rgb(31, 101, 162);\r\n}\r\n.block-title-vyWWI {\r\n    text-align: center;\r\n    font-size: 20px;\r\n    color: #12538b;\r\n}\r\n\r\n@media (max-width: 500px) {\r\n    .block-title-vyWWI {\r\n        font-weight: 600;\r\n        font-size: 14px;\r\n    }\r\n}\r\n","",{version:3,sources:["webpack://./Components/TypeDoctor/styles.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,YAAY;IACZ,eAAe;IACf,YAAY;IACZ,yCAAyC;IACzC,yBAAyB;IACzB,2BAA2B,EAAE,eAAe;IAC5C,yBAAyB,IAAI,wBAAwB;IACrD,wBAAwB,KAAK,cAAc;IAC3C,sBAAsB,OAAO,YAAY;IACzC,qBAAqB,QAAQ,2BAA2B;IACxD,iBAAiB;AACrB;AACA;IACI,yBAAyB;IACzB,0CAA0C;AAC9C;AACA;IACI,kBAAkB;IAClB,eAAe;IACf,cAAc;AAClB;;AAEA;IACI;QACI,gBAAgB;QAChB,eAAe;IACnB;AACJ",sourcesContent:[".block-type-doctor {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 70px;\r\n    cursor: pointer;\r\n    padding: 5px;\r\n    box-shadow: 0px 0px 5px rgb(40, 129, 206);\r\n    transition-duration: 0.3s;\r\n    -webkit-touch-callout: none; /* iOS Safari */\r\n    -webkit-user-select: none;   /* Chrome/Safari/Opera */\r\n    -khtml-user-select: none;    /* Konqueror */\r\n    -moz-user-select: none;      /* Firefox */\r\n    -ms-user-select: none;       /* Internet Explorer/Edge */\r\n    user-select: none;\r\n}\r\n.block-type-doctor:hover {\r\n    background-color: #b0c7da;\r\n    box-shadow: 0px 0px 10px rgb(31, 101, 162);\r\n}\r\n.block-title {\r\n    text-align: center;\r\n    font-size: 20px;\r\n    color: #12538b;\r\n}\r\n\r\n@media (max-width: 500px) {\r\n    .block-title {\r\n        font-weight: 600;\r\n        font-size: 14px;\r\n    }\r\n}\r\n"],sourceRoot:""}]),i.locals={"block-type-doctor":"block-type-doctor-CWtju",blockTypeDoctor:"block-type-doctor-CWtju","block-title":"block-title-vyWWI",blockTitle:"block-title-vyWWI"};const l=i},8649:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(559),o=t.n(r),a=t(3476),i=t.n(a)()(o());i.push([e.id,".main-page-OcUDs{\r\n    margin-bottom: 30px;\r\n}\r\n.header-text-bzzlT{\r\n    font-size: 30px;\r\n    margin-top: 10px;\r\n    color: #12538b;\r\n    text-align: center;\r\n}\r\n.discription-text-pqdIl{\r\n    font-size: 15px;\r\n    margin-top: 15px;\r\n}\r\n.contacts-fields-vXEfI{\r\n    display: flex;\r\n    justify-content: space-around;\r\n    margin-bottom: 15px;\r\n    padding: 5px;\r\n}\r\n.text-field-LPKPJ{\r\n    width: 350px;\r\n}\r\n.block-button-nKkhG{\r\n    width: 300px;\r\n}\r\n.map-field-xVidA{\r\n    display: flex;\r\n    justify-content: center;\r\n}\r\n.contacts-map-XSVR2{\r\n    width: 500px;\r\n}\r\n.request-container-X45qC{\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    width: 325px;\r\n    background-color: rgb(211 228 245);\r\n    box-shadow: 0px 0px 8px rgb(40, 129, 206);\r\n    padding: 10px;\r\n    color: #1b1b1b;\r\n}\r\n.request-buttons-container-YoFkA{\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-content: center;\r\n    margin-top: auto;\r\n}\r\n\r\n.order-container-tLvsR {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 0px 10%;\r\n}\r\n.order-item-iWPbl {\r\n    border-radius: 15px;\r\n    margin-bottom: 7px;\r\n}\r\n.field-flex-WdTqY {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    margin-top: 15px;\r\n}\r\n@media (max-width: 500px) {\r\n    .contacts-fields-vXEfI{\r\n        flex-direction: column;\r\n    }\r\n    .block-button-nKkhG{\r\n        width: 90%;\r\n    }\r\n}","",{version:3,sources:["webpack://./Pages/ContactsPage/styles.css"],names:[],mappings:"AAAA;IACI,mBAAmB;AACvB;AACA;IACI,eAAe;IACf,gBAAgB;IAChB,cAAc;IACd,kBAAkB;AACtB;AACA;IACI,eAAe;IACf,gBAAgB;AACpB;AACA;IACI,aAAa;IACb,6BAA6B;IAC7B,mBAAmB;IACnB,YAAY;AAChB;AACA;IACI,YAAY;AAChB;AACA;IACI,YAAY;AAChB;AACA;IACI,aAAa;IACb,uBAAuB;AAC3B;AACA;IACI,YAAY;AAChB;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,sBAAsB;IACtB,YAAY;IACZ,kCAAkC;IAClC,yCAAyC;IACzC,aAAa;IACb,cAAc;AAClB;AACA;IACI,WAAW;IACX,aAAa;IACb,6BAA6B;IAC7B,qBAAqB;IACrB,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,gBAAgB;AACpB;AACA;IACI,mBAAmB;IACnB,kBAAkB;AACtB;AACA;IACI,aAAa;IACb,6BAA6B;IAC7B,mBAAmB;IACnB,sBAAsB;IACtB,gBAAgB;AACpB;AACA;IACI;QACI,sBAAsB;IAC1B;IACA;QACI,UAAU;IACd;AACJ",sourcesContent:[".main-page{\r\n    margin-bottom: 30px;\r\n}\r\n.header-text{\r\n    font-size: 30px;\r\n    margin-top: 10px;\r\n    color: #12538b;\r\n    text-align: center;\r\n}\r\n.discription-text{\r\n    font-size: 15px;\r\n    margin-top: 15px;\r\n}\r\n.contacts-fields{\r\n    display: flex;\r\n    justify-content: space-around;\r\n    margin-bottom: 15px;\r\n    padding: 5px;\r\n}\r\n.text-field{\r\n    width: 350px;\r\n}\r\n.block-button{\r\n    width: 300px;\r\n}\r\n.map-field{\r\n    display: flex;\r\n    justify-content: center;\r\n}\r\n.contacts-map{\r\n    width: 500px;\r\n}\r\n.request-container{\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    width: 325px;\r\n    background-color: rgb(211 228 245);\r\n    box-shadow: 0px 0px 8px rgb(40, 129, 206);\r\n    padding: 10px;\r\n    color: #1b1b1b;\r\n}\r\n.request-buttons-container{\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-content: center;\r\n    margin-top: auto;\r\n}\r\n\r\n.order-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 0px 10%;\r\n}\r\n.order-item {\r\n    border-radius: 15px;\r\n    margin-bottom: 7px;\r\n}\r\n.field-flex {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    margin-top: 15px;\r\n}\r\n@media (max-width: 500px) {\r\n    .contacts-fields{\r\n        flex-direction: column;\r\n    }\r\n    .block-button{\r\n        width: 90%;\r\n    }\r\n}"],sourceRoot:""}]),i.locals={"main-page":"main-page-OcUDs",mainPage:"main-page-OcUDs","header-text":"header-text-bzzlT",headerText:"header-text-bzzlT","discription-text":"discription-text-pqdIl",discriptionText:"discription-text-pqdIl","contacts-fields":"contacts-fields-vXEfI",contactsFields:"contacts-fields-vXEfI","text-field":"text-field-LPKPJ",textField:"text-field-LPKPJ","block-button":"block-button-nKkhG",blockButton:"block-button-nKkhG","map-field":"map-field-xVidA",mapField:"map-field-xVidA","contacts-map":"contacts-map-XSVR2",contactsMap:"contacts-map-XSVR2","request-container":"request-container-X45qC",requestContainer:"request-container-X45qC","request-buttons-container":"request-buttons-container-YoFkA",requestButtonsContainer:"request-buttons-container-YoFkA","order-container":"order-container-tLvsR",orderContainer:"order-container-tLvsR","order-item":"order-item-iWPbl",orderItem:"order-item-iWPbl","field-flex":"field-flex-WdTqY",fieldFlex:"field-flex-WdTqY"};const l=i},9142:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(559),o=t.n(r),a=t(3476),i=t.n(a)()(o());i.push([e.id,"\r\n.header-text-ADbto{\r\n    font-size: 30px;\r\n    margin-top: 10px;\r\n    color: #12538b;\r\n    text-align: center;\r\n}\r\n.small-header-text-U4T0X{\r\n    font-size: 16px;\r\n    text-align: center;\r\n    color: #318ce7;\r\n}\r\n.discription-text-If43O{\r\n    font-size: 20px;\r\n    margin-top: 15px;\r\n}\r\n.cards-hospital-TvuWi{\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n@media (max-width: 500px) {\r\n    .header-text-ADbto{\r\n        font-size: 24px;\r\n        margin-top: 5px;\r\n    }\r\n    .small-header-text-U4T0X{\r\n        font-size: 19px;\r\n        margin-top: 5px;\r\n    }\r\n    .cards-hospital-TvuWi{\r\n        flex-direction: column;\r\n    }\r\n    .discription-text-If43O{\r\n        text-align: center;\r\n    }\r\n}\r\n","",{version:3,sources:["webpack://./Pages/MainPage/styles.css"],names:[],mappings:";AACA;IACI,eAAe;IACf,gBAAgB;IAChB,cAAc;IACd,kBAAkB;AACtB;AACA;IACI,eAAe;IACf,kBAAkB;IAClB,cAAc;AAClB;AACA;IACI,eAAe;IACf,gBAAgB;AACpB;AACA;IACI,aAAa;IACb,mBAAmB;AACvB;AACA;IACI;QACI,eAAe;QACf,eAAe;IACnB;IACA;QACI,eAAe;QACf,eAAe;IACnB;IACA;QACI,sBAAsB;IAC1B;IACA;QACI,kBAAkB;IACtB;AACJ",sourcesContent:["\r\n.header-text{\r\n    font-size: 30px;\r\n    margin-top: 10px;\r\n    color: #12538b;\r\n    text-align: center;\r\n}\r\n.small-header-text{\r\n    font-size: 16px;\r\n    text-align: center;\r\n    color: #318ce7;\r\n}\r\n.discription-text{\r\n    font-size: 20px;\r\n    margin-top: 15px;\r\n}\r\n.cards-hospital{\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n@media (max-width: 500px) {\r\n    .header-text{\r\n        font-size: 24px;\r\n        margin-top: 5px;\r\n    }\r\n    .small-header-text{\r\n        font-size: 19px;\r\n        margin-top: 5px;\r\n    }\r\n    .cards-hospital{\r\n        flex-direction: column;\r\n    }\r\n    .discription-text{\r\n        text-align: center;\r\n    }\r\n}\r\n"],sourceRoot:""}]),i.locals={"header-text":"header-text-ADbto",headerText:"header-text-ADbto","small-header-text":"small-header-text-U4T0X",smallHeaderText:"small-header-text-U4T0X","discription-text":"discription-text-If43O",discriptionText:"discription-text-If43O","cards-hospital":"cards-hospital-TvuWi",cardsHospital:"cards-hospital-TvuWi"};const l=i},3098:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(559),o=t.n(r),a=t(3476),i=t.n(a)()(o());i.push([e.id,".header-text-Pl0oA{\r\n    font-size: 30px;\r\n    margin-top: 10px;\r\n    color: #12538b;\r\n    text-align: center;\r\n}\r\n.discription-text-neGWS{\r\n    font-size: 20px;\r\n    margin-top: 15px;\r\n}\r\n.client-text-bZiQc{\r\n    font-size: 17px;\r\n    margin: 5px;\r\n}","",{version:3,sources:["webpack://./Pages/PreviewsPage/styles.css"],names:[],mappings:"AAAA;IACI,eAAe;IACf,gBAAgB;IAChB,cAAc;IACd,kBAAkB;AACtB;AACA;IACI,eAAe;IACf,gBAAgB;AACpB;AACA;IACI,eAAe;IACf,WAAW;AACf",sourcesContent:[".header-text{\r\n    font-size: 30px;\r\n    margin-top: 10px;\r\n    color: #12538b;\r\n    text-align: center;\r\n}\r\n.discription-text{\r\n    font-size: 20px;\r\n    margin-top: 15px;\r\n}\r\n.client-text{\r\n    font-size: 17px;\r\n    margin: 5px;\r\n}"],sourceRoot:""}]),i.locals={"header-text":"header-text-Pl0oA",headerText:"header-text-Pl0oA","discription-text":"discription-text-neGWS",discriptionText:"discription-text-neGWS","client-text":"client-text-bZiQc",clientText:"client-text-bZiQc"};const l=i},8048:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(559),o=t.n(r),a=t(3476),i=t.n(a)()(o());i.push([e.id,".header-text-zfcSw{\r\n    font-size: 30px;\r\n    margin-top: 10px;\r\n    color: #12538b;\r\n    text-align: center;\r\n}\r\n.list-services-rt6tn{\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n.title-service-NLbxh{\r\n    padding-inline: 200px;\r\n    font-size: 25px;\r\n    margin-bottom: 30px;\r\n}\r\n@media (max-width: 500px) {\r\n    .title-service-NLbxh{\r\n        padding-inline: 0px;\r\n    }\r\n}\r\n\r\n","",{version:3,sources:["webpack://./Pages/ServicesPage/styles.css"],names:[],mappings:"AAAA;IACI,eAAe;IACf,gBAAgB;IAChB,cAAc;IACd,kBAAkB;AACtB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;AACA;IACI,qBAAqB;IACrB,eAAe;IACf,mBAAmB;AACvB;AACA;IACI;QACI,mBAAmB;IACvB;AACJ",sourcesContent:[".header-text{\r\n    font-size: 30px;\r\n    margin-top: 10px;\r\n    color: #12538b;\r\n    text-align: center;\r\n}\r\n.list-services{\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n.title-service{\r\n    padding-inline: 200px;\r\n    font-size: 25px;\r\n    margin-bottom: 30px;\r\n}\r\n@media (max-width: 500px) {\r\n    .title-service{\r\n        padding-inline: 0px;\r\n    }\r\n}\r\n\r\n"],sourceRoot:""}]),i.locals={"header-text":"header-text-zfcSw",headerText:"header-text-zfcSw","list-services":"list-services-rt6tn",listServices:"list-services-rt6tn","title-service":"title-service-NLbxh",titleService:"title-service-NLbxh"};const l=i},451:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(559),o=t.n(r),a=t(3476),i=t.n(a)()(o());i.push([e.id,".header-text-l45LG {\r\n    font-size: 30px;\r\n    margin-top: 10px;\r\n    color: #12538b;\r\n    text-align: center;\r\n}\r\n.discription-text-YK6uV {\r\n    font-size: 20px;\r\n    margin-top: 15px;\r\n}\r\n.block-Menu-specialists-Q48Is {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding-bottom: 5px;\r\n}\r\n.menu-specialists-U7Y4C {\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    grid-gap: 25px;\r\n    row-gap: 25px;\r\n    margin: 30px auto;\r\n}\r\n.text-link-request-VLoy6 {\r\n    cursor: pointer;\r\n    font-size: 22px;\r\n    color: #12538b;\r\n}\r\n.list-specialists-KXfW5{\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 30px;\r\n}\r\n.request-container-E_XPp{\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    width: 325px;\r\n    background-color: rgb(211 228 245);\r\n    box-shadow: 0px 0px 8px rgb(40, 129, 206);\r\n    padding: 10px;\r\n    color: #1b1b1b;\r\n}\r\n.request-buttons-container-PiuEM{\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-content: center;\r\n    margin-top: auto;\r\n}\r\n\r\n.order-container-AHjkW {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 0px 10%;\r\n}\r\n.order-item-JswMD {\r\n    border-radius: 15px;\r\n    margin-bottom: 7px;\r\n}\r\n.field-flex-BK3BI {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    margin-top: 15px;\r\n}\r\n@media (max-width: 500px) {\r\n    .menu-specialists-U7Y4C {\r\n        grid-template-columns: repeat(2, 1fr);\r\n        grid-gap: 10px;\r\n        row-gap: 15px;\r\n    }\r\n    .discription-text-YK6uV {\r\n        text-align: center;\r\n    }\r\n}\r\n","",{version:3,sources:["webpack://./Pages/SpecialistsPage/styles.css"],names:[],mappings:"AAAA;IACI,eAAe;IACf,gBAAgB;IAChB,cAAc;IACd,kBAAkB;AACtB;AACA;IACI,eAAe;IACf,gBAAgB;AACpB;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,qCAAqC;IACrC,cAAc;IACd,aAAa;IACb,iBAAiB;AACrB;AACA;IACI,eAAe;IACf,eAAe;IACf,cAAc;AAClB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,sBAAsB;IACtB,YAAY;IACZ,kCAAkC;IAClC,yCAAyC;IACzC,aAAa;IACb,cAAc;AAClB;AACA;IACI,WAAW;IACX,aAAa;IACb,6BAA6B;IAC7B,qBAAqB;IACrB,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,gBAAgB;AACpB;AACA;IACI,mBAAmB;IACnB,kBAAkB;AACtB;AACA;IACI,aAAa;IACb,6BAA6B;IAC7B,mBAAmB;IACnB,sBAAsB;IACtB,gBAAgB;AACpB;AACA;IACI;QACI,qCAAqC;QACrC,cAAc;QACd,aAAa;IACjB;IACA;QACI,kBAAkB;IACtB;AACJ",sourcesContent:[".header-text {\r\n    font-size: 30px;\r\n    margin-top: 10px;\r\n    color: #12538b;\r\n    text-align: center;\r\n}\r\n.discription-text {\r\n    font-size: 20px;\r\n    margin-top: 15px;\r\n}\r\n.block-Menu-specialists {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding-bottom: 5px;\r\n}\r\n.menu-specialists {\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    grid-gap: 25px;\r\n    row-gap: 25px;\r\n    margin: 30px auto;\r\n}\r\n.text-link-request {\r\n    cursor: pointer;\r\n    font-size: 22px;\r\n    color: #12538b;\r\n}\r\n.list-specialists{\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 30px;\r\n}\r\n.request-container{\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    width: 325px;\r\n    background-color: rgb(211 228 245);\r\n    box-shadow: 0px 0px 8px rgb(40, 129, 206);\r\n    padding: 10px;\r\n    color: #1b1b1b;\r\n}\r\n.request-buttons-container{\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-content: center;\r\n    margin-top: auto;\r\n}\r\n\r\n.order-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 0px 10%;\r\n}\r\n.order-item {\r\n    border-radius: 15px;\r\n    margin-bottom: 7px;\r\n}\r\n.field-flex {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    margin-top: 15px;\r\n}\r\n@media (max-width: 500px) {\r\n    .menu-specialists {\r\n        grid-template-columns: repeat(2, 1fr);\r\n        grid-gap: 10px;\r\n        row-gap: 15px;\r\n    }\r\n    .discription-text {\r\n        text-align: center;\r\n    }\r\n}\r\n"],sourceRoot:""}]),i.locals={"header-text":"header-text-l45LG",headerText:"header-text-l45LG","discription-text":"discription-text-YK6uV",discriptionText:"discription-text-YK6uV","block-Menu-specialists":"block-Menu-specialists-Q48Is",blockMenuSpecialists:"block-Menu-specialists-Q48Is","menu-specialists":"menu-specialists-U7Y4C",menuSpecialists:"menu-specialists-U7Y4C","text-link-request":"text-link-request-VLoy6",textLinkRequest:"text-link-request-VLoy6","list-specialists":"list-specialists-KXfW5",listSpecialists:"list-specialists-KXfW5","request-container":"request-container-E_XPp",requestContainer:"request-container-E_XPp","request-buttons-container":"request-buttons-container-PiuEM",requestButtonsContainer:"request-buttons-container-PiuEM","order-container":"order-container-AHjkW",orderContainer:"order-container-AHjkW","order-item":"order-item-JswMD",orderItem:"order-item-JswMD","field-flex":"field-flex-BK3BI",fieldFlex:"field-flex-BK3BI"};const l=i},3476:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var l=0;l<this.length;l++){var s=this[l][0];null!=s&&(i[s]=!0)}for(var c=0;c<e.length;c++){var u=[].concat(e[c]);r&&i[u[0]]||(void 0!==a&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=a),t&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=t):u[2]=t),o&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=o):u[4]="".concat(o)),n.push(u))}},n}},559:e=>{"use strict";e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([a]).join("\n")}return[n].join("\n")}},2525:e=>{"use strict";var n=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function o(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var n={},t=0;t<10;t++)n["_"+String.fromCharCode(t)]=t;if("0123456789"!==Object.getOwnPropertyNames(n).map((function(e){return n[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,a){for(var i,l,s=o(e),c=1;c<arguments.length;c++){for(var u in i=Object(arguments[c]))t.call(i,u)&&(s[u]=i[u]);if(n){l=n(i);for(var f=0;f<l.length;f++)r.call(i,l[f])&&(s[l[f]]=i[l[f]])}}return s}},8772:(e,n,t)=>{"use strict";var r=t(331);function o(){}function a(){}a.resetWarningCache=o,e.exports=function(){function e(e,n,t,o,a,i){if(i!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function n(){return e}e.isRequired=e;var t={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:n,element:e,elementType:e,instanceOf:n,node:e,objectOf:n,oneOf:n,oneOfType:n,shape:n,exact:n,checkPropTypes:a,resetWarningCache:o};return t.PropTypes=t,t}},3615:(e,n,t)=>{e.exports=t(8772)()},331:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},3577:(e,n,t)=>{"use strict";var r=t(7378),o=t(2525),a=t(1102);function i(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(i(227));var l=new Set,s={};function c(e,n){u(e,n),u(e+"Capture",n)}function u(e,n){for(s[e]=n,e=0;e<n.length;e++)l.add(n[e])}var f=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p=Object.prototype.hasOwnProperty,m={},A={};function h(e,n,t,r,o,a,i){this.acceptsBooleans=2===n||3===n||4===n,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=t,this.propertyName=e,this.type=n,this.sanitizeURL=a,this.removeEmptyString=i}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new h(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var n=e[0];g[n]=new h(n,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new h(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new h(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new h(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new h(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new h(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new h(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new h(e,5,!1,e.toLowerCase(),null,!1,!1)}));var v=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function y(e,n,t,r){var o=g.hasOwnProperty(n)?g[n]:null;(null!==o?0===o.type:!r&&2<n.length&&("o"===n[0]||"O"===n[0])&&("n"===n[1]||"N"===n[1]))||(function(e,n,t,r){if(null==n||function(e,n,t,r){if(null!==t&&0===t.type)return!1;switch(typeof n){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==t?!t.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,n,t,r))return!0;if(r)return!1;if(null!==t)switch(t.type){case 3:return!n;case 4:return!1===n;case 5:return isNaN(n);case 6:return isNaN(n)||1>n}return!1}(n,t,o,r)&&(t=null),r||null===o?function(e){return!!p.call(A,e)||!p.call(m,e)&&(d.test(e)?A[e]=!0:(m[e]=!0,!1))}(n)&&(null===t?e.removeAttribute(n):e.setAttribute(n,""+t)):o.mustUseProperty?e[o.propertyName]=null===t?3!==o.type&&"":t:(n=o.attributeName,r=o.attributeNamespace,null===t?e.removeAttribute(n):(t=3===(o=o.type)||4===o&&!0===t?"":""+t,r?e.setAttributeNS(r,n,t):e.setAttribute(n,t))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var n=e.replace(v,b);g[n]=new h(n,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var n=e.replace(v,b);g[n]=new h(n,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var n=e.replace(v,b);g[n]=new h(n,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new h(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new h("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new h(e,1,!1,e.toLowerCase(),null,!0,!0)}));var x=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,C=60103,w=60106,I=60107,k=60108,B=60114,E=60109,S=60110,_=60112,N=60113,T=60120,O=60115,P=60116,j=60121,z=60128,L=60129,R=60130,M=60131;if("function"==typeof Symbol&&Symbol.for){var U=Symbol.for;C=U("react.element"),w=U("react.portal"),I=U("react.fragment"),k=U("react.strict_mode"),B=U("react.profiler"),E=U("react.provider"),S=U("react.context"),_=U("react.forward_ref"),N=U("react.suspense"),T=U("react.suspense_list"),O=U("react.memo"),P=U("react.lazy"),j=U("react.block"),U("react.scope"),z=U("react.opaque.id"),L=U("react.debug_trace_mode"),R=U("react.offscreen"),M=U("react.legacy_hidden")}var W,F="function"==typeof Symbol&&Symbol.iterator;function q(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=F&&e[F]||e["@@iterator"])?e:null}function D(e){if(void 0===W)try{throw Error()}catch(e){var n=e.stack.trim().match(/\n( *(at )?)/);W=n&&n[1]||""}return"\n"+W+e}var Q=!1;function Z(e,n){if(!e||Q)return"";Q=!0;var t=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(n)if(n=function(){throw Error()},Object.defineProperty(n.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(n,[])}catch(e){var r=e}Reflect.construct(e,[],n)}else{try{n.call()}catch(e){r=e}e.call(n.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var o=e.stack.split("\n"),a=r.stack.split("\n"),i=o.length-1,l=a.length-1;1<=i&&0<=l&&o[i]!==a[l];)l--;for(;1<=i&&0<=l;i--,l--)if(o[i]!==a[l]){if(1!==i||1!==l)do{if(i--,0>--l||o[i]!==a[l])return"\n"+o[i].replace(" at new "," at ")}while(1<=i&&0<=l);break}}}finally{Q=!1,Error.prepareStackTrace=t}return(e=e?e.displayName||e.name:"")?D(e):""}function Y(e){switch(e.tag){case 5:return D(e.type);case 16:return D("Lazy");case 13:return D("Suspense");case 19:return D("SuspenseList");case 0:case 2:case 15:return Z(e.type,!1);case 11:return Z(e.type.render,!1);case 22:return Z(e.type._render,!1);case 1:return Z(e.type,!0);default:return""}}function V(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case I:return"Fragment";case w:return"Portal";case B:return"Profiler";case k:return"StrictMode";case N:return"Suspense";case T:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case S:return(e.displayName||"Context")+".Consumer";case E:return(e._context.displayName||"Context")+".Provider";case _:var n=e.render;return n=n.displayName||n.name||"",e.displayName||(""!==n?"ForwardRef("+n+")":"ForwardRef");case O:return V(e.type);case j:return V(e._render);case P:n=e._payload,e=e._init;try{return V(e(n))}catch(e){}}return null}function $(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function H(e){var n=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===n||"radio"===n)}function X(e){e._valueTracker||(e._valueTracker=function(e){var n=H(e)?"checked":"value",t=Object.getOwnPropertyDescriptor(e.constructor.prototype,n),r=""+e[n];if(!e.hasOwnProperty(n)&&void 0!==t&&"function"==typeof t.get&&"function"==typeof t.set){var o=t.get,a=t.set;return Object.defineProperty(e,n,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,n,{enumerable:t.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[n]}}}}(e))}function K(e){if(!e)return!1;var n=e._valueTracker;if(!n)return!0;var t=n.getValue(),r="";return e&&(r=H(e)?e.checked?"true":"false":e.value),(e=r)!==t&&(n.setValue(e),!0)}function J(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(n){return e.body}}function G(e,n){var t=n.checked;return o({},n,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=t?t:e._wrapperState.initialChecked})}function ee(e,n){var t=null==n.defaultValue?"":n.defaultValue,r=null!=n.checked?n.checked:n.defaultChecked;t=$(null!=n.value?n.value:t),e._wrapperState={initialChecked:r,initialValue:t,controlled:"checkbox"===n.type||"radio"===n.type?null!=n.checked:null!=n.value}}function ne(e,n){null!=(n=n.checked)&&y(e,"checked",n,!1)}function te(e,n){ne(e,n);var t=$(n.value),r=n.type;if(null!=t)"number"===r?(0===t&&""===e.value||e.value!=t)&&(e.value=""+t):e.value!==""+t&&(e.value=""+t);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");n.hasOwnProperty("value")?oe(e,n.type,t):n.hasOwnProperty("defaultValue")&&oe(e,n.type,$(n.defaultValue)),null==n.checked&&null!=n.defaultChecked&&(e.defaultChecked=!!n.defaultChecked)}function re(e,n,t){if(n.hasOwnProperty("value")||n.hasOwnProperty("defaultValue")){var r=n.type;if(!("submit"!==r&&"reset"!==r||void 0!==n.value&&null!==n.value))return;n=""+e._wrapperState.initialValue,t||n===e.value||(e.value=n),e.defaultValue=n}""!==(t=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==t&&(e.name=t)}function oe(e,n,t){"number"===n&&J(e.ownerDocument)===e||(null==t?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+t&&(e.defaultValue=""+t))}function ae(e,n){return e=o({children:void 0},n),(n=function(e){var n="";return r.Children.forEach(e,(function(e){null!=e&&(n+=e)})),n}(n.children))&&(e.children=n),e}function ie(e,n,t,r){if(e=e.options,n){n={};for(var o=0;o<t.length;o++)n["$"+t[o]]=!0;for(t=0;t<e.length;t++)o=n.hasOwnProperty("$"+e[t].value),e[t].selected!==o&&(e[t].selected=o),o&&r&&(e[t].defaultSelected=!0)}else{for(t=""+$(t),n=null,o=0;o<e.length;o++){if(e[o].value===t)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==n||e[o].disabled||(n=e[o])}null!==n&&(n.selected=!0)}}function le(e,n){if(null!=n.dangerouslySetInnerHTML)throw Error(i(91));return o({},n,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function se(e,n){var t=n.value;if(null==t){if(t=n.children,n=n.defaultValue,null!=t){if(null!=n)throw Error(i(92));if(Array.isArray(t)){if(!(1>=t.length))throw Error(i(93));t=t[0]}n=t}null==n&&(n=""),t=n}e._wrapperState={initialValue:$(t)}}function ce(e,n){var t=$(n.value),r=$(n.defaultValue);null!=t&&((t=""+t)!==e.value&&(e.value=t),null==n.defaultValue&&e.defaultValue!==t&&(e.defaultValue=t)),null!=r&&(e.defaultValue=""+r)}function ue(e){var n=e.textContent;n===e._wrapperState.initialValue&&""!==n&&null!==n&&(e.value=n)}var fe="http://www.w3.org/1999/xhtml";function de(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function pe(e,n){return null==e||"http://www.w3.org/1999/xhtml"===e?de(n):"http://www.w3.org/2000/svg"===e&&"foreignObject"===n?"http://www.w3.org/1999/xhtml":e}var me,Ae,he=(Ae=function(e,n){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=n;else{for((me=me||document.createElement("div")).innerHTML="<svg>"+n.valueOf().toString()+"</svg>",n=me.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;n.firstChild;)e.appendChild(n.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,n,t,r){MSApp.execUnsafeLocalFunction((function(){return Ae(e,n)}))}:Ae);function ge(e,n){if(n){var t=e.firstChild;if(t&&t===e.lastChild&&3===t.nodeType)return void(t.nodeValue=n)}e.textContent=n}var ve={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},be=["Webkit","ms","Moz","O"];function ye(e,n,t){return null==n||"boolean"==typeof n||""===n?"":t||"number"!=typeof n||0===n||ve.hasOwnProperty(e)&&ve[e]?(""+n).trim():n+"px"}function xe(e,n){for(var t in e=e.style,n)if(n.hasOwnProperty(t)){var r=0===t.indexOf("--"),o=ye(t,n[t],r);"float"===t&&(t="cssFloat"),r?e.setProperty(t,o):e[t]=o}}Object.keys(ve).forEach((function(e){be.forEach((function(n){n=n+e.charAt(0).toUpperCase()+e.substring(1),ve[n]=ve[e]}))}));var Ce=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function we(e,n){if(n){if(Ce[e]&&(null!=n.children||null!=n.dangerouslySetInnerHTML))throw Error(i(137,e));if(null!=n.dangerouslySetInnerHTML){if(null!=n.children)throw Error(i(60));if("object"!=typeof n.dangerouslySetInnerHTML||!("__html"in n.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=n.style&&"object"!=typeof n.style)throw Error(i(62))}}function Ie(e,n){if(-1===e.indexOf("-"))return"string"==typeof n.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function ke(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Be=null,Ee=null,Se=null;function _e(e){if(e=to(e)){if("function"!=typeof Be)throw Error(i(280));var n=e.stateNode;n&&(n=oo(n),Be(e.stateNode,e.type,n))}}function Ne(e){Ee?Se?Se.push(e):Se=[e]:Ee=e}function Te(){if(Ee){var e=Ee,n=Se;if(Se=Ee=null,_e(e),n)for(e=0;e<n.length;e++)_e(n[e])}}function Oe(e,n){return e(n)}function Pe(e,n,t,r,o){return e(n,t,r,o)}function je(){}var ze=Oe,Le=!1,Re=!1;function Me(){null===Ee&&null===Se||(je(),Te())}function Ue(e,n){var t=e.stateNode;if(null===t)return null;var r=oo(t);if(null===r)return null;t=r[n];e:switch(n){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(t&&"function"!=typeof t)throw Error(i(231,n,typeof t));return t}var We=!1;if(f)try{var Fe={};Object.defineProperty(Fe,"passive",{get:function(){We=!0}}),window.addEventListener("test",Fe,Fe),window.removeEventListener("test",Fe,Fe)}catch(Ae){We=!1}function qe(e,n,t,r,o,a,i,l,s){var c=Array.prototype.slice.call(arguments,3);try{n.apply(t,c)}catch(e){this.onError(e)}}var De=!1,Qe=null,Ze=!1,Ye=null,Ve={onError:function(e){De=!0,Qe=e}};function $e(e,n,t,r,o,a,i,l,s){De=!1,Qe=null,qe.apply(Ve,arguments)}function He(e){var n=e,t=e;if(e.alternate)for(;n.return;)n=n.return;else{e=n;do{0!=(1026&(n=e).flags)&&(t=n.return),e=n.return}while(e)}return 3===n.tag?t:null}function Xe(e){if(13===e.tag){var n=e.memoizedState;if(null===n&&null!==(e=e.alternate)&&(n=e.memoizedState),null!==n)return n.dehydrated}return null}function Ke(e){if(He(e)!==e)throw Error(i(188))}function Je(e){if(e=function(e){var n=e.alternate;if(!n){if(null===(n=He(e)))throw Error(i(188));return n!==e?null:e}for(var t=e,r=n;;){var o=t.return;if(null===o)break;var a=o.alternate;if(null===a){if(null!==(r=o.return)){t=r;continue}break}if(o.child===a.child){for(a=o.child;a;){if(a===t)return Ke(o),e;if(a===r)return Ke(o),n;a=a.sibling}throw Error(i(188))}if(t.return!==r.return)t=o,r=a;else{for(var l=!1,s=o.child;s;){if(s===t){l=!0,t=o,r=a;break}if(s===r){l=!0,r=o,t=a;break}s=s.sibling}if(!l){for(s=a.child;s;){if(s===t){l=!0,t=a,r=o;break}if(s===r){l=!0,r=a,t=o;break}s=s.sibling}if(!l)throw Error(i(189))}}if(t.alternate!==r)throw Error(i(190))}if(3!==t.tag)throw Error(i(188));return t.stateNode.current===t?e:n}(e),!e)return null;for(var n=e;;){if(5===n.tag||6===n.tag)return n;if(n.child)n.child.return=n,n=n.child;else{if(n===e)break;for(;!n.sibling;){if(!n.return||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}}return null}function Ge(e,n){for(var t=e.alternate;null!==n;){if(n===e||n===t)return!0;n=n.return}return!1}var en,nn,tn,rn,on=!1,an=[],ln=null,sn=null,cn=null,un=new Map,fn=new Map,dn=[],pn="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function mn(e,n,t,r,o){return{blockedOn:e,domEventName:n,eventSystemFlags:16|t,nativeEvent:o,targetContainers:[r]}}function An(e,n){switch(e){case"focusin":case"focusout":ln=null;break;case"dragenter":case"dragleave":sn=null;break;case"mouseover":case"mouseout":cn=null;break;case"pointerover":case"pointerout":un.delete(n.pointerId);break;case"gotpointercapture":case"lostpointercapture":fn.delete(n.pointerId)}}function hn(e,n,t,r,o,a){return null===e||e.nativeEvent!==a?(e=mn(n,t,r,o,a),null!==n&&null!==(n=to(n))&&nn(n),e):(e.eventSystemFlags|=r,n=e.targetContainers,null!==o&&-1===n.indexOf(o)&&n.push(o),e)}function gn(e){var n=no(e.target);if(null!==n){var t=He(n);if(null!==t)if(13===(n=t.tag)){if(null!==(n=Xe(t)))return e.blockedOn=n,void rn(e.lanePriority,(function(){a.unstable_runWithPriority(e.priority,(function(){tn(t)}))}))}else if(3===n&&t.stateNode.hydrate)return void(e.blockedOn=3===t.tag?t.stateNode.containerInfo:null)}e.blockedOn=null}function vn(e){if(null!==e.blockedOn)return!1;for(var n=e.targetContainers;0<n.length;){var t=Gn(e.domEventName,e.eventSystemFlags,n[0],e.nativeEvent);if(null!==t)return null!==(n=to(t))&&nn(n),e.blockedOn=t,!1;n.shift()}return!0}function bn(e,n,t){vn(e)&&t.delete(n)}function yn(){for(on=!1;0<an.length;){var e=an[0];if(null!==e.blockedOn){null!==(e=to(e.blockedOn))&&en(e);break}for(var n=e.targetContainers;0<n.length;){var t=Gn(e.domEventName,e.eventSystemFlags,n[0],e.nativeEvent);if(null!==t){e.blockedOn=t;break}n.shift()}null===e.blockedOn&&an.shift()}null!==ln&&vn(ln)&&(ln=null),null!==sn&&vn(sn)&&(sn=null),null!==cn&&vn(cn)&&(cn=null),un.forEach(bn),fn.forEach(bn)}function xn(e,n){e.blockedOn===n&&(e.blockedOn=null,on||(on=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,yn)))}function Cn(e){function n(n){return xn(n,e)}if(0<an.length){xn(an[0],e);for(var t=1;t<an.length;t++){var r=an[t];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==ln&&xn(ln,e),null!==sn&&xn(sn,e),null!==cn&&xn(cn,e),un.forEach(n),fn.forEach(n),t=0;t<dn.length;t++)(r=dn[t]).blockedOn===e&&(r.blockedOn=null);for(;0<dn.length&&null===(t=dn[0]).blockedOn;)gn(t),null===t.blockedOn&&dn.shift()}function wn(e,n){var t={};return t[e.toLowerCase()]=n.toLowerCase(),t["Webkit"+e]="webkit"+n,t["Moz"+e]="moz"+n,t}var In={animationend:wn("Animation","AnimationEnd"),animationiteration:wn("Animation","AnimationIteration"),animationstart:wn("Animation","AnimationStart"),transitionend:wn("Transition","TransitionEnd")},kn={},Bn={};function En(e){if(kn[e])return kn[e];if(!In[e])return e;var n,t=In[e];for(n in t)if(t.hasOwnProperty(n)&&n in Bn)return kn[e]=t[n];return e}f&&(Bn=document.createElement("div").style,"AnimationEvent"in window||(delete In.animationend.animation,delete In.animationiteration.animation,delete In.animationstart.animation),"TransitionEvent"in window||delete In.transitionend.transition);var Sn=En("animationend"),_n=En("animationiteration"),Nn=En("animationstart"),Tn=En("transitionend"),On=new Map,Pn=new Map,jn=["abort","abort",Sn,"animationEnd",_n,"animationIteration",Nn,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Tn,"transitionEnd","waiting","waiting"];function zn(e,n){for(var t=0;t<e.length;t+=2){var r=e[t],o=e[t+1];o="on"+(o[0].toUpperCase()+o.slice(1)),Pn.set(r,n),On.set(r,o),c(o,[r])}}(0,a.unstable_now)();var Ln=8;function Rn(e){if(0!=(1&e))return Ln=15,1;if(0!=(2&e))return Ln=14,2;if(0!=(4&e))return Ln=13,4;var n=24&e;return 0!==n?(Ln=12,n):0!=(32&e)?(Ln=11,32):0!=(n=192&e)?(Ln=10,n):0!=(256&e)?(Ln=9,256):0!=(n=3584&e)?(Ln=8,n):0!=(4096&e)?(Ln=7,4096):0!=(n=4186112&e)?(Ln=6,n):0!=(n=62914560&e)?(Ln=5,n):67108864&e?(Ln=4,67108864):0!=(134217728&e)?(Ln=3,134217728):0!=(n=805306368&e)?(Ln=2,n):0!=(1073741824&e)?(Ln=1,1073741824):(Ln=8,e)}function Mn(e,n){var t=e.pendingLanes;if(0===t)return Ln=0;var r=0,o=0,a=e.expiredLanes,i=e.suspendedLanes,l=e.pingedLanes;if(0!==a)r=a,o=Ln=15;else if(0!=(a=134217727&t)){var s=a&~i;0!==s?(r=Rn(s),o=Ln):0!=(l&=a)&&(r=Rn(l),o=Ln)}else 0!=(a=t&~i)?(r=Rn(a),o=Ln):0!==l&&(r=Rn(l),o=Ln);if(0===r)return 0;if(r=t&((0>(r=31-Qn(r))?0:1<<r)<<1)-1,0!==n&&n!==r&&0==(n&i)){if(Rn(n),o<=Ln)return n;Ln=o}if(0!==(n=e.entangledLanes))for(e=e.entanglements,n&=r;0<n;)o=1<<(t=31-Qn(n)),r|=e[t],n&=~o;return r}function Un(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Wn(e,n){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Fn(24&~n))?Wn(10,n):e;case 10:return 0===(e=Fn(192&~n))?Wn(8,n):e;case 8:return 0===(e=Fn(3584&~n))&&0===(e=Fn(4186112&~n))&&(e=512),e;case 2:return 0===(n=Fn(805306368&~n))&&(n=268435456),n}throw Error(i(358,e))}function Fn(e){return e&-e}function qn(e){for(var n=[],t=0;31>t;t++)n.push(e);return n}function Dn(e,n,t){e.pendingLanes|=n;var r=n-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[n=31-Qn(n)]=t}var Qn=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Zn(e)/Yn|0)|0},Zn=Math.log,Yn=Math.LN2,Vn=a.unstable_UserBlockingPriority,$n=a.unstable_runWithPriority,Hn=!0;function Xn(e,n,t,r){Le||je();var o=Jn,a=Le;Le=!0;try{Pe(o,e,n,t,r)}finally{(Le=a)||Me()}}function Kn(e,n,t,r){$n(Vn,Jn.bind(null,e,n,t,r))}function Jn(e,n,t,r){var o;if(Hn)if((o=0==(4&n))&&0<an.length&&-1<pn.indexOf(e))e=mn(null,e,n,t,r),an.push(e);else{var a=Gn(e,n,t,r);if(null===a)o&&An(e,r);else{if(o){if(-1<pn.indexOf(e))return e=mn(a,e,n,t,r),void an.push(e);if(function(e,n,t,r,o){switch(n){case"focusin":return ln=hn(ln,e,n,t,r,o),!0;case"dragenter":return sn=hn(sn,e,n,t,r,o),!0;case"mouseover":return cn=hn(cn,e,n,t,r,o),!0;case"pointerover":var a=o.pointerId;return un.set(a,hn(un.get(a)||null,e,n,t,r,o)),!0;case"gotpointercapture":return a=o.pointerId,fn.set(a,hn(fn.get(a)||null,e,n,t,r,o)),!0}return!1}(a,e,n,t,r))return;An(e,r)}jr(e,n,r,null,t)}}}function Gn(e,n,t,r){var o=ke(r);if(null!==(o=no(o))){var a=He(o);if(null===a)o=null;else{var i=a.tag;if(13===i){if(null!==(o=Xe(a)))return o;o=null}else if(3===i){if(a.stateNode.hydrate)return 3===a.tag?a.stateNode.containerInfo:null;o=null}else a!==o&&(o=null)}}return jr(e,n,r,o,t),null}var et=null,nt=null,tt=null;function rt(){if(tt)return tt;var e,n,t=nt,r=t.length,o="value"in et?et.value:et.textContent,a=o.length;for(e=0;e<r&&t[e]===o[e];e++);var i=r-e;for(n=1;n<=i&&t[r-n]===o[a-n];n++);return tt=o.slice(e,1<n?1-n:void 0)}function ot(e){var n=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===n&&(e=13):e=n,10===e&&(e=13),32<=e||13===e?e:0}function at(){return!0}function it(){return!1}function lt(e){function n(n,t,r,o,a){for(var i in this._reactName=n,this._targetInst=r,this.type=t,this.nativeEvent=o,this.target=a,this.currentTarget=null,e)e.hasOwnProperty(i)&&(n=e[i],this[i]=n?n(o):o[i]);return this.isDefaultPrevented=(null!=o.defaultPrevented?o.defaultPrevented:!1===o.returnValue)?at:it,this.isPropagationStopped=it,this}return o(n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=at)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=at)},persist:function(){},isPersistent:at}),n}var st,ct,ut,ft={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},dt=lt(ft),pt=o({},ft,{view:0,detail:0}),mt=lt(pt),At=o({},pt,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Et,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==ut&&(ut&&"mousemove"===e.type?(st=e.screenX-ut.screenX,ct=e.screenY-ut.screenY):ct=st=0,ut=e),st)},movementY:function(e){return"movementY"in e?e.movementY:ct}}),ht=lt(At),gt=lt(o({},At,{dataTransfer:0})),vt=lt(o({},pt,{relatedTarget:0})),bt=lt(o({},ft,{animationName:0,elapsedTime:0,pseudoElement:0})),yt=o({},ft,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),xt=lt(yt),Ct=lt(o({},ft,{data:0})),wt={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},It={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},kt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Bt(e){var n=this.nativeEvent;return n.getModifierState?n.getModifierState(e):!!(e=kt[e])&&!!n[e]}function Et(){return Bt}var St=o({},pt,{key:function(e){if(e.key){var n=wt[e.key]||e.key;if("Unidentified"!==n)return n}return"keypress"===e.type?13===(e=ot(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?It[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Et,charCode:function(e){return"keypress"===e.type?ot(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?ot(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),_t=lt(St),Nt=lt(o({},At,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Tt=lt(o({},pt,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Et})),Ot=lt(o({},ft,{propertyName:0,elapsedTime:0,pseudoElement:0})),Pt=o({},At,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),jt=lt(Pt),zt=[9,13,27,32],Lt=f&&"CompositionEvent"in window,Rt=null;f&&"documentMode"in document&&(Rt=document.documentMode);var Mt=f&&"TextEvent"in window&&!Rt,Ut=f&&(!Lt||Rt&&8<Rt&&11>=Rt),Wt=String.fromCharCode(32),Ft=!1;function qt(e,n){switch(e){case"keyup":return-1!==zt.indexOf(n.keyCode);case"keydown":return 229!==n.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Dt(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Qt=!1,Zt={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Yt(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===n?!!Zt[e.type]:"textarea"===n}function Vt(e,n,t,r){Ne(r),0<(n=Lr(n,"onChange")).length&&(t=new dt("onChange","change",null,t,r),e.push({event:t,listeners:n}))}var $t=null,Ht=null;function Xt(e){Sr(e,0)}function Kt(e){if(K(ro(e)))return e}function Jt(e,n){if("change"===e)return n}var Gt=!1;if(f){var er;if(f){var nr="oninput"in document;if(!nr){var tr=document.createElement("div");tr.setAttribute("oninput","return;"),nr="function"==typeof tr.oninput}er=nr}else er=!1;Gt=er&&(!document.documentMode||9<document.documentMode)}function rr(){$t&&($t.detachEvent("onpropertychange",or),Ht=$t=null)}function or(e){if("value"===e.propertyName&&Kt(Ht)){var n=[];if(Vt(n,Ht,e,ke(e)),e=Xt,Le)e(n);else{Le=!0;try{Oe(e,n)}finally{Le=!1,Me()}}}}function ar(e,n,t){"focusin"===e?(rr(),Ht=t,($t=n).attachEvent("onpropertychange",or)):"focusout"===e&&rr()}function ir(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Kt(Ht)}function lr(e,n){if("click"===e)return Kt(n)}function sr(e,n){if("input"===e||"change"===e)return Kt(n)}var cr="function"==typeof Object.is?Object.is:function(e,n){return e===n&&(0!==e||1/e==1/n)||e!=e&&n!=n},ur=Object.prototype.hasOwnProperty;function fr(e,n){if(cr(e,n))return!0;if("object"!=typeof e||null===e||"object"!=typeof n||null===n)return!1;var t=Object.keys(e),r=Object.keys(n);if(t.length!==r.length)return!1;for(r=0;r<t.length;r++)if(!ur.call(n,t[r])||!cr(e[t[r]],n[t[r]]))return!1;return!0}function dr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function pr(e,n){var t,r=dr(e);for(e=0;r;){if(3===r.nodeType){if(t=e+r.textContent.length,e<=n&&t>=n)return{node:r,offset:n-e};e=t}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=dr(r)}}function mr(e,n){return!(!e||!n)&&(e===n||(!e||3!==e.nodeType)&&(n&&3===n.nodeType?mr(e,n.parentNode):"contains"in e?e.contains(n):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(n))))}function Ar(){for(var e=window,n=J();n instanceof e.HTMLIFrameElement;){try{var t="string"==typeof n.contentWindow.location.href}catch(e){t=!1}if(!t)break;n=J((e=n.contentWindow).document)}return n}function hr(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n&&("input"===n&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===n||"true"===e.contentEditable)}var gr=f&&"documentMode"in document&&11>=document.documentMode,vr=null,br=null,yr=null,xr=!1;function Cr(e,n,t){var r=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;xr||null==vr||vr!==J(r)||(r="selectionStart"in(r=vr)&&hr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},yr&&fr(yr,r)||(yr=r,0<(r=Lr(br,"onSelect")).length&&(n=new dt("onSelect","select",null,n,t),e.push({event:n,listeners:r}),n.target=vr)))}zn("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),zn("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),zn(jn,2);for(var wr="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Ir=0;Ir<wr.length;Ir++)Pn.set(wr[Ir],0);u("onMouseEnter",["mouseout","mouseover"]),u("onMouseLeave",["mouseout","mouseover"]),u("onPointerEnter",["pointerout","pointerover"]),u("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var kr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Br=new Set("cancel close invalid load scroll toggle".split(" ").concat(kr));function Er(e,n,t){var r=e.type||"unknown-event";e.currentTarget=t,function(e,n,t,r,o,a,l,s,c){if($e.apply(this,arguments),De){if(!De)throw Error(i(198));var u=Qe;De=!1,Qe=null,Ze||(Ze=!0,Ye=u)}}(r,n,void 0,e),e.currentTarget=null}function Sr(e,n){n=0!=(4&n);for(var t=0;t<e.length;t++){var r=e[t],o=r.event;r=r.listeners;e:{var a=void 0;if(n)for(var i=r.length-1;0<=i;i--){var l=r[i],s=l.instance,c=l.currentTarget;if(l=l.listener,s!==a&&o.isPropagationStopped())break e;Er(o,l,c),a=s}else for(i=0;i<r.length;i++){if(s=(l=r[i]).instance,c=l.currentTarget,l=l.listener,s!==a&&o.isPropagationStopped())break e;Er(o,l,c),a=s}}}if(Ze)throw e=Ye,Ze=!1,Ye=null,e}function _r(e,n){var t=ao(n),r=e+"__bubble";t.has(r)||(Pr(n,e,2,!1),t.add(r))}var Nr="_reactListening"+Math.random().toString(36).slice(2);function Tr(e){e[Nr]||(e[Nr]=!0,l.forEach((function(n){Br.has(n)||Or(n,!1,e,null),Or(n,!0,e,null)})))}function Or(e,n,t,r){var o=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,a=t;if("selectionchange"===e&&9!==t.nodeType&&(a=t.ownerDocument),null!==r&&!n&&Br.has(e)){if("scroll"!==e)return;o|=2,a=r}var i=ao(a),l=e+"__"+(n?"capture":"bubble");i.has(l)||(n&&(o|=4),Pr(a,e,o,n),i.add(l))}function Pr(e,n,t,r){var o=Pn.get(n);switch(void 0===o?2:o){case 0:o=Xn;break;case 1:o=Kn;break;default:o=Jn}t=o.bind(null,n,t,e),o=void 0,!We||"touchstart"!==n&&"touchmove"!==n&&"wheel"!==n||(o=!0),r?void 0!==o?e.addEventListener(n,t,{capture:!0,passive:o}):e.addEventListener(n,t,!0):void 0!==o?e.addEventListener(n,t,{passive:o}):e.addEventListener(n,t,!1)}function jr(e,n,t,r,o){var a=r;if(0==(1&n)&&0==(2&n)&&null!==r)e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var l=r.stateNode.containerInfo;if(l===o||8===l.nodeType&&l.parentNode===o)break;if(4===i)for(i=r.return;null!==i;){var s=i.tag;if((3===s||4===s)&&((s=i.stateNode.containerInfo)===o||8===s.nodeType&&s.parentNode===o))return;i=i.return}for(;null!==l;){if(null===(i=no(l)))return;if(5===(s=i.tag)||6===s){r=a=i;continue e}l=l.parentNode}}r=r.return}!function(e,n,t){if(Re)return e();Re=!0;try{ze(e,n,t)}finally{Re=!1,Me()}}((function(){var r=a,o=ke(t),i=[];e:{var l=On.get(e);if(void 0!==l){var s=dt,c=e;switch(e){case"keypress":if(0===ot(t))break e;case"keydown":case"keyup":s=_t;break;case"focusin":c="focus",s=vt;break;case"focusout":c="blur",s=vt;break;case"beforeblur":case"afterblur":s=vt;break;case"click":if(2===t.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":s=ht;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":s=gt;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":s=Tt;break;case Sn:case _n:case Nn:s=bt;break;case Tn:s=Ot;break;case"scroll":s=mt;break;case"wheel":s=jt;break;case"copy":case"cut":case"paste":s=xt;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":s=Nt}var u=0!=(4&n),f=!u&&"scroll"===e,d=u?null!==l?l+"Capture":null:l;u=[];for(var p,m=r;null!==m;){var A=(p=m).stateNode;if(5===p.tag&&null!==A&&(p=A,null!==d&&null!=(A=Ue(m,d))&&u.push(zr(m,A,p))),f)break;m=m.return}0<u.length&&(l=new s(l,c,null,t,o),i.push({event:l,listeners:u}))}}if(0==(7&n)){if(s="mouseout"===e||"pointerout"===e,(!(l="mouseover"===e||"pointerover"===e)||0!=(16&n)||!(c=t.relatedTarget||t.fromElement)||!no(c)&&!c[Gr])&&(s||l)&&(l=o.window===o?o:(l=o.ownerDocument)?l.defaultView||l.parentWindow:window,s?(s=r,null!==(c=(c=t.relatedTarget||t.toElement)?no(c):null)&&(c!==(f=He(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(s=null,c=r),s!==c)){if(u=ht,A="onMouseLeave",d="onMouseEnter",m="mouse","pointerout"!==e&&"pointerover"!==e||(u=Nt,A="onPointerLeave",d="onPointerEnter",m="pointer"),f=null==s?l:ro(s),p=null==c?l:ro(c),(l=new u(A,m+"leave",s,t,o)).target=f,l.relatedTarget=p,A=null,no(o)===r&&((u=new u(d,m+"enter",c,t,o)).target=p,u.relatedTarget=f,A=u),f=A,s&&c)e:{for(d=c,m=0,p=u=s;p;p=Rr(p))m++;for(p=0,A=d;A;A=Rr(A))p++;for(;0<m-p;)u=Rr(u),m--;for(;0<p-m;)d=Rr(d),p--;for(;m--;){if(u===d||null!==d&&u===d.alternate)break e;u=Rr(u),d=Rr(d)}u=null}else u=null;null!==s&&Mr(i,l,s,u,!1),null!==c&&null!==f&&Mr(i,f,c,u,!0)}if("select"===(s=(l=r?ro(r):window).nodeName&&l.nodeName.toLowerCase())||"input"===s&&"file"===l.type)var h=Jt;else if(Yt(l))if(Gt)h=sr;else{h=ir;var g=ar}else(s=l.nodeName)&&"input"===s.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(h=lr);switch(h&&(h=h(e,r))?Vt(i,h,t,o):(g&&g(e,l,r),"focusout"===e&&(g=l._wrapperState)&&g.controlled&&"number"===l.type&&oe(l,"number",l.value)),g=r?ro(r):window,e){case"focusin":(Yt(g)||"true"===g.contentEditable)&&(vr=g,br=r,yr=null);break;case"focusout":yr=br=vr=null;break;case"mousedown":xr=!0;break;case"contextmenu":case"mouseup":case"dragend":xr=!1,Cr(i,t,o);break;case"selectionchange":if(gr)break;case"keydown":case"keyup":Cr(i,t,o)}var v;if(Lt)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Qt?qt(e,t)&&(b="onCompositionEnd"):"keydown"===e&&229===t.keyCode&&(b="onCompositionStart");b&&(Ut&&"ko"!==t.locale&&(Qt||"onCompositionStart"!==b?"onCompositionEnd"===b&&Qt&&(v=rt()):(nt="value"in(et=o)?et.value:et.textContent,Qt=!0)),0<(g=Lr(r,b)).length&&(b=new Ct(b,e,null,t,o),i.push({event:b,listeners:g}),(v||null!==(v=Dt(t)))&&(b.data=v))),(v=Mt?function(e,n){switch(e){case"compositionend":return Dt(n);case"keypress":return 32!==n.which?null:(Ft=!0,Wt);case"textInput":return(e=n.data)===Wt&&Ft?null:e;default:return null}}(e,t):function(e,n){if(Qt)return"compositionend"===e||!Lt&&qt(e,n)?(e=rt(),tt=nt=et=null,Qt=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(n.ctrlKey||n.altKey||n.metaKey)||n.ctrlKey&&n.altKey){if(n.char&&1<n.char.length)return n.char;if(n.which)return String.fromCharCode(n.which)}return null;case"compositionend":return Ut&&"ko"!==n.locale?null:n.data}}(e,t))&&0<(r=Lr(r,"onBeforeInput")).length&&(o=new Ct("onBeforeInput","beforeinput",null,t,o),i.push({event:o,listeners:r}),o.data=v)}Sr(i,n)}))}function zr(e,n,t){return{instance:e,listener:n,currentTarget:t}}function Lr(e,n){for(var t=n+"Capture",r=[];null!==e;){var o=e,a=o.stateNode;5===o.tag&&null!==a&&(o=a,null!=(a=Ue(e,t))&&r.unshift(zr(e,a,o)),null!=(a=Ue(e,n))&&r.push(zr(e,a,o))),e=e.return}return r}function Rr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Mr(e,n,t,r,o){for(var a=n._reactName,i=[];null!==t&&t!==r;){var l=t,s=l.alternate,c=l.stateNode;if(null!==s&&s===r)break;5===l.tag&&null!==c&&(l=c,o?null!=(s=Ue(t,a))&&i.unshift(zr(t,s,l)):o||null!=(s=Ue(t,a))&&i.push(zr(t,s,l))),t=t.return}0!==i.length&&e.push({event:n,listeners:i})}function Ur(){}var Wr=null,Fr=null;function qr(e,n){switch(e){case"button":case"input":case"select":case"textarea":return!!n.autoFocus}return!1}function Dr(e,n){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof n.children||"number"==typeof n.children||"object"==typeof n.dangerouslySetInnerHTML&&null!==n.dangerouslySetInnerHTML&&null!=n.dangerouslySetInnerHTML.__html}var Qr="function"==typeof setTimeout?setTimeout:void 0,Zr="function"==typeof clearTimeout?clearTimeout:void 0;function Yr(e){(1===e.nodeType||9===e.nodeType&&null!=(e=e.body))&&(e.textContent="")}function Vr(e){for(;null!=e;e=e.nextSibling){var n=e.nodeType;if(1===n||3===n)break}return e}function $r(e){e=e.previousSibling;for(var n=0;e;){if(8===e.nodeType){var t=e.data;if("$"===t||"$!"===t||"$?"===t){if(0===n)return e;n--}else"/$"===t&&n++}e=e.previousSibling}return null}var Hr=0,Xr=Math.random().toString(36).slice(2),Kr="__reactFiber$"+Xr,Jr="__reactProps$"+Xr,Gr="__reactContainer$"+Xr,eo="__reactEvents$"+Xr;function no(e){var n=e[Kr];if(n)return n;for(var t=e.parentNode;t;){if(n=t[Gr]||t[Kr]){if(t=n.alternate,null!==n.child||null!==t&&null!==t.child)for(e=$r(e);null!==e;){if(t=e[Kr])return t;e=$r(e)}return n}t=(e=t).parentNode}return null}function to(e){return!(e=e[Kr]||e[Gr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function ro(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function oo(e){return e[Jr]||null}function ao(e){var n=e[eo];return void 0===n&&(n=e[eo]=new Set),n}var io=[],lo=-1;function so(e){return{current:e}}function co(e){0>lo||(e.current=io[lo],io[lo]=null,lo--)}function uo(e,n){lo++,io[lo]=e.current,e.current=n}var fo={},po=so(fo),mo=so(!1),Ao=fo;function ho(e,n){var t=e.type.contextTypes;if(!t)return fo;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===n)return r.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in t)a[o]=n[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=n,e.__reactInternalMemoizedMaskedChildContext=a),a}function go(e){return null!=e.childContextTypes}function vo(){co(mo),co(po)}function bo(e,n,t){if(po.current!==fo)throw Error(i(168));uo(po,n),uo(mo,t)}function yo(e,n,t){var r=e.stateNode;if(e=n.childContextTypes,"function"!=typeof r.getChildContext)return t;for(var a in r=r.getChildContext())if(!(a in e))throw Error(i(108,V(n)||"Unknown",a));return o({},t,r)}function xo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||fo,Ao=po.current,uo(po,e),uo(mo,mo.current),!0}function Co(e,n,t){var r=e.stateNode;if(!r)throw Error(i(169));t?(e=yo(e,n,Ao),r.__reactInternalMemoizedMergedChildContext=e,co(mo),co(po),uo(po,e)):co(mo),uo(mo,t)}var wo=null,Io=null,ko=a.unstable_runWithPriority,Bo=a.unstable_scheduleCallback,Eo=a.unstable_cancelCallback,So=a.unstable_shouldYield,_o=a.unstable_requestPaint,No=a.unstable_now,To=a.unstable_getCurrentPriorityLevel,Oo=a.unstable_ImmediatePriority,Po=a.unstable_UserBlockingPriority,jo=a.unstable_NormalPriority,zo=a.unstable_LowPriority,Lo=a.unstable_IdlePriority,Ro={},Mo=void 0!==_o?_o:function(){},Uo=null,Wo=null,Fo=!1,qo=No(),Do=1e4>qo?No:function(){return No()-qo};function Qo(){switch(To()){case Oo:return 99;case Po:return 98;case jo:return 97;case zo:return 96;case Lo:return 95;default:throw Error(i(332))}}function Zo(e){switch(e){case 99:return Oo;case 98:return Po;case 97:return jo;case 96:return zo;case 95:return Lo;default:throw Error(i(332))}}function Yo(e,n){return e=Zo(e),ko(e,n)}function Vo(e,n,t){return e=Zo(e),Bo(e,n,t)}function $o(){if(null!==Wo){var e=Wo;Wo=null,Eo(e)}Ho()}function Ho(){if(!Fo&&null!==Uo){Fo=!0;var e=0;try{var n=Uo;Yo(99,(function(){for(;e<n.length;e++){var t=n[e];do{t=t(!0)}while(null!==t)}})),Uo=null}catch(n){throw null!==Uo&&(Uo=Uo.slice(e+1)),Bo(Oo,$o),n}finally{Fo=!1}}}var Xo=x.ReactCurrentBatchConfig;function Ko(e,n){if(e&&e.defaultProps){for(var t in n=o({},n),e=e.defaultProps)void 0===n[t]&&(n[t]=e[t]);return n}return n}var Jo=so(null),Go=null,ea=null,na=null;function ta(){na=ea=Go=null}function ra(e){var n=Jo.current;co(Jo),e.type._context._currentValue=n}function oa(e,n){for(;null!==e;){var t=e.alternate;if((e.childLanes&n)===n){if(null===t||(t.childLanes&n)===n)break;t.childLanes|=n}else e.childLanes|=n,null!==t&&(t.childLanes|=n);e=e.return}}function aa(e,n){Go=e,na=ea=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&n)&&(Li=!0),e.firstContext=null)}function ia(e,n){if(na!==e&&!1!==n&&0!==n)if("number"==typeof n&&1073741823!==n||(na=e,n=1073741823),n={context:e,observedBits:n,next:null},null===ea){if(null===Go)throw Error(i(308));ea=n,Go.dependencies={lanes:0,firstContext:n,responders:null}}else ea=ea.next=n;return e._currentValue}var la=!1;function sa(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function ca(e,n){e=e.updateQueue,n.updateQueue===e&&(n.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function ua(e,n){return{eventTime:e,lane:n,tag:0,payload:null,callback:null,next:null}}function fa(e,n){if(null!==(e=e.updateQueue)){var t=(e=e.shared).pending;null===t?n.next=n:(n.next=t.next,t.next=n),e.pending=n}}function da(e,n){var t=e.updateQueue,r=e.alternate;if(null!==r&&t===(r=r.updateQueue)){var o=null,a=null;if(null!==(t=t.firstBaseUpdate)){do{var i={eventTime:t.eventTime,lane:t.lane,tag:t.tag,payload:t.payload,callback:t.callback,next:null};null===a?o=a=i:a=a.next=i,t=t.next}while(null!==t);null===a?o=a=n:a=a.next=n}else o=a=n;return t={baseState:r.baseState,firstBaseUpdate:o,lastBaseUpdate:a,shared:r.shared,effects:r.effects},void(e.updateQueue=t)}null===(e=t.lastBaseUpdate)?t.firstBaseUpdate=n:e.next=n,t.lastBaseUpdate=n}function pa(e,n,t,r){var a=e.updateQueue;la=!1;var i=a.firstBaseUpdate,l=a.lastBaseUpdate,s=a.shared.pending;if(null!==s){a.shared.pending=null;var c=s,u=c.next;c.next=null,null===l?i=u:l.next=u,l=c;var f=e.alternate;if(null!==f){var d=(f=f.updateQueue).lastBaseUpdate;d!==l&&(null===d?f.firstBaseUpdate=u:d.next=u,f.lastBaseUpdate=c)}}if(null!==i){for(d=a.baseState,l=0,f=u=c=null;;){s=i.lane;var p=i.eventTime;if((r&s)===s){null!==f&&(f=f.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var m=e,A=i;switch(s=n,p=t,A.tag){case 1:if("function"==typeof(m=A.payload)){d=m.call(p,d,s);break e}d=m;break e;case 3:m.flags=-4097&m.flags|64;case 0:if(null==(s="function"==typeof(m=A.payload)?m.call(p,d,s):m))break e;d=o({},d,s);break e;case 2:la=!0}}null!==i.callback&&(e.flags|=32,null===(s=a.effects)?a.effects=[i]:s.push(i))}else p={eventTime:p,lane:s,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===f?(u=f=p,c=d):f=f.next=p,l|=s;if(null===(i=i.next)){if(null===(s=a.shared.pending))break;i=s.next,s.next=null,a.lastBaseUpdate=s,a.shared.pending=null}}null===f&&(c=d),a.baseState=c,a.firstBaseUpdate=u,a.lastBaseUpdate=f,Ml|=l,e.lanes=l,e.memoizedState=d}}function ma(e,n,t){if(e=n.effects,n.effects=null,null!==e)for(n=0;n<e.length;n++){var r=e[n],o=r.callback;if(null!==o){if(r.callback=null,r=t,"function"!=typeof o)throw Error(i(191,o));o.call(r)}}}var Aa=(new r.Component).refs;function ha(e,n,t,r){t=null==(t=t(r,n=e.memoizedState))?n:o({},n,t),e.memoizedState=t,0===e.lanes&&(e.updateQueue.baseState=t)}var ga={isMounted:function(e){return!!(e=e._reactInternals)&&He(e)===e},enqueueSetState:function(e,n,t){e=e._reactInternals;var r=cs(),o=us(e),a=ua(r,o);a.payload=n,null!=t&&(a.callback=t),fa(e,a),fs(e,o,r)},enqueueReplaceState:function(e,n,t){e=e._reactInternals;var r=cs(),o=us(e),a=ua(r,o);a.tag=1,a.payload=n,null!=t&&(a.callback=t),fa(e,a),fs(e,o,r)},enqueueForceUpdate:function(e,n){e=e._reactInternals;var t=cs(),r=us(e),o=ua(t,r);o.tag=2,null!=n&&(o.callback=n),fa(e,o),fs(e,r,t)}};function va(e,n,t,r,o,a,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,i):!(n.prototype&&n.prototype.isPureReactComponent&&fr(t,r)&&fr(o,a))}function ba(e,n,t){var r=!1,o=fo,a=n.contextType;return"object"==typeof a&&null!==a?a=ia(a):(o=go(n)?Ao:po.current,a=(r=null!=(r=n.contextTypes))?ho(e,o):fo),n=new n(t,a),e.memoizedState=null!==n.state&&void 0!==n.state?n.state:null,n.updater=ga,e.stateNode=n,n._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=a),n}function ya(e,n,t,r){e=n.state,"function"==typeof n.componentWillReceiveProps&&n.componentWillReceiveProps(t,r),"function"==typeof n.UNSAFE_componentWillReceiveProps&&n.UNSAFE_componentWillReceiveProps(t,r),n.state!==e&&ga.enqueueReplaceState(n,n.state,null)}function xa(e,n,t,r){var o=e.stateNode;o.props=t,o.state=e.memoizedState,o.refs=Aa,sa(e);var a=n.contextType;"object"==typeof a&&null!==a?o.context=ia(a):(a=go(n)?Ao:po.current,o.context=ho(e,a)),pa(e,t,o,r),o.state=e.memoizedState,"function"==typeof(a=n.getDerivedStateFromProps)&&(ha(e,n,a,t),o.state=e.memoizedState),"function"==typeof n.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(n=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),n!==o.state&&ga.enqueueReplaceState(o,o.state,null),pa(e,t,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.flags|=4)}var Ca=Array.isArray;function wa(e,n,t){if(null!==(e=t.ref)&&"function"!=typeof e&&"object"!=typeof e){if(t._owner){if(t=t._owner){if(1!==t.tag)throw Error(i(309));var r=t.stateNode}if(!r)throw Error(i(147,e));var o=""+e;return null!==n&&null!==n.ref&&"function"==typeof n.ref&&n.ref._stringRef===o?n.ref:(n=function(e){var n=r.refs;n===Aa&&(n=r.refs={}),null===e?delete n[o]:n[o]=e},n._stringRef=o,n)}if("string"!=typeof e)throw Error(i(284));if(!t._owner)throw Error(i(290,e))}return e}function Ia(e,n){if("textarea"!==e.type)throw Error(i(31,"[object Object]"===Object.prototype.toString.call(n)?"object with keys {"+Object.keys(n).join(", ")+"}":n))}function ka(e){function n(n,t){if(e){var r=n.lastEffect;null!==r?(r.nextEffect=t,n.lastEffect=t):n.firstEffect=n.lastEffect=t,t.nextEffect=null,t.flags=8}}function t(t,r){if(!e)return null;for(;null!==r;)n(t,r),r=r.sibling;return null}function r(e,n){for(e=new Map;null!==n;)null!==n.key?e.set(n.key,n):e.set(n.index,n),n=n.sibling;return e}function o(e,n){return(e=Ds(e,n)).index=0,e.sibling=null,e}function a(n,t,r){return n.index=r,e?null!==(r=n.alternate)?(r=r.index)<t?(n.flags=2,t):r:(n.flags=2,t):t}function l(n){return e&&null===n.alternate&&(n.flags=2),n}function s(e,n,t,r){return null===n||6!==n.tag?((n=Vs(t,e.mode,r)).return=e,n):((n=o(n,t)).return=e,n)}function c(e,n,t,r){return null!==n&&n.elementType===t.type?((r=o(n,t.props)).ref=wa(e,n,t),r.return=e,r):((r=Qs(t.type,t.key,t.props,null,e.mode,r)).ref=wa(e,n,t),r.return=e,r)}function u(e,n,t,r){return null===n||4!==n.tag||n.stateNode.containerInfo!==t.containerInfo||n.stateNode.implementation!==t.implementation?((n=$s(t,e.mode,r)).return=e,n):((n=o(n,t.children||[])).return=e,n)}function f(e,n,t,r,a){return null===n||7!==n.tag?((n=Zs(t,e.mode,r,a)).return=e,n):((n=o(n,t)).return=e,n)}function d(e,n,t){if("string"==typeof n||"number"==typeof n)return(n=Vs(""+n,e.mode,t)).return=e,n;if("object"==typeof n&&null!==n){switch(n.$$typeof){case C:return(t=Qs(n.type,n.key,n.props,null,e.mode,t)).ref=wa(e,null,n),t.return=e,t;case w:return(n=$s(n,e.mode,t)).return=e,n}if(Ca(n)||q(n))return(n=Zs(n,e.mode,t,null)).return=e,n;Ia(e,n)}return null}function p(e,n,t,r){var o=null!==n?n.key:null;if("string"==typeof t||"number"==typeof t)return null!==o?null:s(e,n,""+t,r);if("object"==typeof t&&null!==t){switch(t.$$typeof){case C:return t.key===o?t.type===I?f(e,n,t.props.children,r,o):c(e,n,t,r):null;case w:return t.key===o?u(e,n,t,r):null}if(Ca(t)||q(t))return null!==o?null:f(e,n,t,r,null);Ia(e,t)}return null}function m(e,n,t,r,o){if("string"==typeof r||"number"==typeof r)return s(n,e=e.get(t)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case C:return e=e.get(null===r.key?t:r.key)||null,r.type===I?f(n,e,r.props.children,o,r.key):c(n,e,r,o);case w:return u(n,e=e.get(null===r.key?t:r.key)||null,r,o)}if(Ca(r)||q(r))return f(n,e=e.get(t)||null,r,o,null);Ia(n,r)}return null}function A(o,i,l,s){for(var c=null,u=null,f=i,A=i=0,h=null;null!==f&&A<l.length;A++){f.index>A?(h=f,f=null):h=f.sibling;var g=p(o,f,l[A],s);if(null===g){null===f&&(f=h);break}e&&f&&null===g.alternate&&n(o,f),i=a(g,i,A),null===u?c=g:u.sibling=g,u=g,f=h}if(A===l.length)return t(o,f),c;if(null===f){for(;A<l.length;A++)null!==(f=d(o,l[A],s))&&(i=a(f,i,A),null===u?c=f:u.sibling=f,u=f);return c}for(f=r(o,f);A<l.length;A++)null!==(h=m(f,o,A,l[A],s))&&(e&&null!==h.alternate&&f.delete(null===h.key?A:h.key),i=a(h,i,A),null===u?c=h:u.sibling=h,u=h);return e&&f.forEach((function(e){return n(o,e)})),c}function h(o,l,s,c){var u=q(s);if("function"!=typeof u)throw Error(i(150));if(null==(s=u.call(s)))throw Error(i(151));for(var f=u=null,A=l,h=l=0,g=null,v=s.next();null!==A&&!v.done;h++,v=s.next()){A.index>h?(g=A,A=null):g=A.sibling;var b=p(o,A,v.value,c);if(null===b){null===A&&(A=g);break}e&&A&&null===b.alternate&&n(o,A),l=a(b,l,h),null===f?u=b:f.sibling=b,f=b,A=g}if(v.done)return t(o,A),u;if(null===A){for(;!v.done;h++,v=s.next())null!==(v=d(o,v.value,c))&&(l=a(v,l,h),null===f?u=v:f.sibling=v,f=v);return u}for(A=r(o,A);!v.done;h++,v=s.next())null!==(v=m(A,o,h,v.value,c))&&(e&&null!==v.alternate&&A.delete(null===v.key?h:v.key),l=a(v,l,h),null===f?u=v:f.sibling=v,f=v);return e&&A.forEach((function(e){return n(o,e)})),u}return function(e,r,a,s){var c="object"==typeof a&&null!==a&&a.type===I&&null===a.key;c&&(a=a.props.children);var u="object"==typeof a&&null!==a;if(u)switch(a.$$typeof){case C:e:{for(u=a.key,c=r;null!==c;){if(c.key===u){if(7===c.tag){if(a.type===I){t(e,c.sibling),(r=o(c,a.props.children)).return=e,e=r;break e}}else if(c.elementType===a.type){t(e,c.sibling),(r=o(c,a.props)).ref=wa(e,c,a),r.return=e,e=r;break e}t(e,c);break}n(e,c),c=c.sibling}a.type===I?((r=Zs(a.props.children,e.mode,s,a.key)).return=e,e=r):((s=Qs(a.type,a.key,a.props,null,e.mode,s)).ref=wa(e,r,a),s.return=e,e=s)}return l(e);case w:e:{for(c=a.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===a.containerInfo&&r.stateNode.implementation===a.implementation){t(e,r.sibling),(r=o(r,a.children||[])).return=e,e=r;break e}t(e,r);break}n(e,r),r=r.sibling}(r=$s(a,e.mode,s)).return=e,e=r}return l(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==r&&6===r.tag?(t(e,r.sibling),(r=o(r,a)).return=e,e=r):(t(e,r),(r=Vs(a,e.mode,s)).return=e,e=r),l(e);if(Ca(a))return A(e,r,a,s);if(q(a))return h(e,r,a,s);if(u&&Ia(e,a),void 0===a&&!c)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(i(152,V(e.type)||"Component"))}return t(e,r)}}var Ba=ka(!0),Ea=ka(!1),Sa={},_a=so(Sa),Na=so(Sa),Ta=so(Sa);function Oa(e){if(e===Sa)throw Error(i(174));return e}function Pa(e,n){switch(uo(Ta,n),uo(Na,e),uo(_a,Sa),e=n.nodeType){case 9:case 11:n=(n=n.documentElement)?n.namespaceURI:pe(null,"");break;default:n=pe(n=(e=8===e?n.parentNode:n).namespaceURI||null,e=e.tagName)}co(_a),uo(_a,n)}function ja(){co(_a),co(Na),co(Ta)}function za(e){Oa(Ta.current);var n=Oa(_a.current),t=pe(n,e.type);n!==t&&(uo(Na,e),uo(_a,t))}function La(e){Na.current===e&&(co(_a),co(Na))}var Ra=so(0);function Ma(e){for(var n=e;null!==n;){if(13===n.tag){var t=n.memoizedState;if(null!==t&&(null===(t=t.dehydrated)||"$?"===t.data||"$!"===t.data))return n}else if(19===n.tag&&void 0!==n.memoizedProps.revealOrder){if(0!=(64&n.flags))return n}else if(null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}return null}var Ua=null,Wa=null,Fa=!1;function qa(e,n){var t=Fs(5,null,null,0);t.elementType="DELETED",t.type="DELETED",t.stateNode=n,t.return=e,t.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=t,e.lastEffect=t):e.firstEffect=e.lastEffect=t}function Da(e,n){switch(e.tag){case 5:var t=e.type;return null!==(n=1!==n.nodeType||t.toLowerCase()!==n.nodeName.toLowerCase()?null:n)&&(e.stateNode=n,!0);case 6:return null!==(n=""===e.pendingProps||3!==n.nodeType?null:n)&&(e.stateNode=n,!0);default:return!1}}function Qa(e){if(Fa){var n=Wa;if(n){var t=n;if(!Da(e,n)){if(!(n=Vr(t.nextSibling))||!Da(e,n))return e.flags=-1025&e.flags|2,Fa=!1,void(Ua=e);qa(Ua,t)}Ua=e,Wa=Vr(n.firstChild)}else e.flags=-1025&e.flags|2,Fa=!1,Ua=e}}function Za(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Ua=e}function Ya(e){if(e!==Ua)return!1;if(!Fa)return Za(e),Fa=!0,!1;var n=e.type;if(5!==e.tag||"head"!==n&&"body"!==n&&!Dr(n,e.memoizedProps))for(n=Wa;n;)qa(e,n),n=Vr(n.nextSibling);if(Za(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,n=0;e;){if(8===e.nodeType){var t=e.data;if("/$"===t){if(0===n){Wa=Vr(e.nextSibling);break e}n--}else"$"!==t&&"$!"!==t&&"$?"!==t||n++}e=e.nextSibling}Wa=null}}else Wa=Ua?Vr(e.stateNode.nextSibling):null;return!0}function Va(){Wa=Ua=null,Fa=!1}var $a=[];function Ha(){for(var e=0;e<$a.length;e++)$a[e]._workInProgressVersionPrimary=null;$a.length=0}var Xa=x.ReactCurrentDispatcher,Ka=x.ReactCurrentBatchConfig,Ja=0,Ga=null,ei=null,ni=null,ti=!1,ri=!1;function oi(){throw Error(i(321))}function ai(e,n){if(null===n)return!1;for(var t=0;t<n.length&&t<e.length;t++)if(!cr(e[t],n[t]))return!1;return!0}function ii(e,n,t,r,o,a){if(Ja=a,Ga=n,n.memoizedState=null,n.updateQueue=null,n.lanes=0,Xa.current=null===e||null===e.memoizedState?Oi:Pi,e=t(r,o),ri){a=0;do{if(ri=!1,!(25>a))throw Error(i(301));a+=1,ni=ei=null,n.updateQueue=null,Xa.current=ji,e=t(r,o)}while(ri)}if(Xa.current=Ti,n=null!==ei&&null!==ei.next,Ja=0,ni=ei=Ga=null,ti=!1,n)throw Error(i(300));return e}function li(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===ni?Ga.memoizedState=ni=e:ni=ni.next=e,ni}function si(){if(null===ei){var e=Ga.alternate;e=null!==e?e.memoizedState:null}else e=ei.next;var n=null===ni?Ga.memoizedState:ni.next;if(null!==n)ni=n,ei=e;else{if(null===e)throw Error(i(310));e={memoizedState:(ei=e).memoizedState,baseState:ei.baseState,baseQueue:ei.baseQueue,queue:ei.queue,next:null},null===ni?Ga.memoizedState=ni=e:ni=ni.next=e}return ni}function ci(e,n){return"function"==typeof n?n(e):n}function ui(e){var n=si(),t=n.queue;if(null===t)throw Error(i(311));t.lastRenderedReducer=e;var r=ei,o=r.baseQueue,a=t.pending;if(null!==a){if(null!==o){var l=o.next;o.next=a.next,a.next=l}r.baseQueue=o=a,t.pending=null}if(null!==o){o=o.next,r=r.baseState;var s=l=a=null,c=o;do{var u=c.lane;if((Ja&u)===u)null!==s&&(s=s.next={lane:0,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),r=c.eagerReducer===e?c.eagerState:e(r,c.action);else{var f={lane:u,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===s?(l=s=f,a=r):s=s.next=f,Ga.lanes|=u,Ml|=u}c=c.next}while(null!==c&&c!==o);null===s?a=r:s.next=l,cr(r,n.memoizedState)||(Li=!0),n.memoizedState=r,n.baseState=a,n.baseQueue=s,t.lastRenderedState=r}return[n.memoizedState,t.dispatch]}function fi(e){var n=si(),t=n.queue;if(null===t)throw Error(i(311));t.lastRenderedReducer=e;var r=t.dispatch,o=t.pending,a=n.memoizedState;if(null!==o){t.pending=null;var l=o=o.next;do{a=e(a,l.action),l=l.next}while(l!==o);cr(a,n.memoizedState)||(Li=!0),n.memoizedState=a,null===n.baseQueue&&(n.baseState=a),t.lastRenderedState=a}return[a,r]}function di(e,n,t){var r=n._getVersion;r=r(n._source);var o=n._workInProgressVersionPrimary;if(null!==o?e=o===r:(e=e.mutableReadLanes,(e=(Ja&e)===e)&&(n._workInProgressVersionPrimary=r,$a.push(n))),e)return t(n._source);throw $a.push(n),Error(i(350))}function pi(e,n,t,r){var o=Nl;if(null===o)throw Error(i(349));var a=n._getVersion,l=a(n._source),s=Xa.current,c=s.useState((function(){return di(o,n,t)})),u=c[1],f=c[0];c=ni;var d=e.memoizedState,p=d.refs,m=p.getSnapshot,A=d.source;d=d.subscribe;var h=Ga;return e.memoizedState={refs:p,source:n,subscribe:r},s.useEffect((function(){p.getSnapshot=t,p.setSnapshot=u;var e=a(n._source);if(!cr(l,e)){e=t(n._source),cr(f,e)||(u(e),e=us(h),o.mutableReadLanes|=e&o.pendingLanes),e=o.mutableReadLanes,o.entangledLanes|=e;for(var r=o.entanglements,i=e;0<i;){var s=31-Qn(i),c=1<<s;r[s]|=e,i&=~c}}}),[t,n,r]),s.useEffect((function(){return r(n._source,(function(){var e=p.getSnapshot,t=p.setSnapshot;try{t(e(n._source));var r=us(h);o.mutableReadLanes|=r&o.pendingLanes}catch(e){t((function(){throw e}))}}))}),[n,r]),cr(m,t)&&cr(A,n)&&cr(d,r)||((e={pending:null,dispatch:null,lastRenderedReducer:ci,lastRenderedState:f}).dispatch=u=Ni.bind(null,Ga,e),c.queue=e,c.baseQueue=null,f=di(o,n,t),c.memoizedState=c.baseState=f),f}function mi(e,n,t){return pi(si(),e,n,t)}function Ai(e){var n=li();return"function"==typeof e&&(e=e()),n.memoizedState=n.baseState=e,e=(e=n.queue={pending:null,dispatch:null,lastRenderedReducer:ci,lastRenderedState:e}).dispatch=Ni.bind(null,Ga,e),[n.memoizedState,e]}function hi(e,n,t,r){return e={tag:e,create:n,destroy:t,deps:r,next:null},null===(n=Ga.updateQueue)?(n={lastEffect:null},Ga.updateQueue=n,n.lastEffect=e.next=e):null===(t=n.lastEffect)?n.lastEffect=e.next=e:(r=t.next,t.next=e,e.next=r,n.lastEffect=e),e}function gi(e){return e={current:e},li().memoizedState=e}function vi(){return si().memoizedState}function bi(e,n,t,r){var o=li();Ga.flags|=e,o.memoizedState=hi(1|n,t,void 0,void 0===r?null:r)}function yi(e,n,t,r){var o=si();r=void 0===r?null:r;var a=void 0;if(null!==ei){var i=ei.memoizedState;if(a=i.destroy,null!==r&&ai(r,i.deps))return void hi(n,t,a,r)}Ga.flags|=e,o.memoizedState=hi(1|n,t,a,r)}function xi(e,n){return bi(516,4,e,n)}function Ci(e,n){return yi(516,4,e,n)}function wi(e,n){return yi(4,2,e,n)}function Ii(e,n){return"function"==typeof n?(e=e(),n(e),function(){n(null)}):null!=n?(e=e(),n.current=e,function(){n.current=null}):void 0}function ki(e,n,t){return t=null!=t?t.concat([e]):null,yi(4,2,Ii.bind(null,n,e),t)}function Bi(){}function Ei(e,n){var t=si();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&ai(n,r[1])?r[0]:(t.memoizedState=[e,n],e)}function Si(e,n){var t=si();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&ai(n,r[1])?r[0]:(e=e(),t.memoizedState=[e,n],e)}function _i(e,n){var t=Qo();Yo(98>t?98:t,(function(){e(!0)})),Yo(97<t?97:t,(function(){var t=Ka.transition;Ka.transition=1;try{e(!1),n()}finally{Ka.transition=t}}))}function Ni(e,n,t){var r=cs(),o=us(e),a={lane:o,action:t,eagerReducer:null,eagerState:null,next:null},i=n.pending;if(null===i?a.next=a:(a.next=i.next,i.next=a),n.pending=a,i=e.alternate,e===Ga||null!==i&&i===Ga)ri=ti=!0;else{if(0===e.lanes&&(null===i||0===i.lanes)&&null!==(i=n.lastRenderedReducer))try{var l=n.lastRenderedState,s=i(l,t);if(a.eagerReducer=i,a.eagerState=s,cr(s,l))return}catch(e){}fs(e,o,r)}}var Ti={readContext:ia,useCallback:oi,useContext:oi,useEffect:oi,useImperativeHandle:oi,useLayoutEffect:oi,useMemo:oi,useReducer:oi,useRef:oi,useState:oi,useDebugValue:oi,useDeferredValue:oi,useTransition:oi,useMutableSource:oi,useOpaqueIdentifier:oi,unstable_isNewReconciler:!1},Oi={readContext:ia,useCallback:function(e,n){return li().memoizedState=[e,void 0===n?null:n],e},useContext:ia,useEffect:xi,useImperativeHandle:function(e,n,t){return t=null!=t?t.concat([e]):null,bi(4,2,Ii.bind(null,n,e),t)},useLayoutEffect:function(e,n){return bi(4,2,e,n)},useMemo:function(e,n){var t=li();return n=void 0===n?null:n,e=e(),t.memoizedState=[e,n],e},useReducer:function(e,n,t){var r=li();return n=void 0!==t?t(n):n,r.memoizedState=r.baseState=n,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:n}).dispatch=Ni.bind(null,Ga,e),[r.memoizedState,e]},useRef:gi,useState:Ai,useDebugValue:Bi,useDeferredValue:function(e){var n=Ai(e),t=n[0],r=n[1];return xi((function(){var n=Ka.transition;Ka.transition=1;try{r(e)}finally{Ka.transition=n}}),[e]),t},useTransition:function(){var e=Ai(!1),n=e[0];return gi(e=_i.bind(null,e[1])),[e,n]},useMutableSource:function(e,n,t){var r=li();return r.memoizedState={refs:{getSnapshot:n,setSnapshot:null},source:e,subscribe:t},pi(r,e,n,t)},useOpaqueIdentifier:function(){if(Fa){var e=!1,n=function(e){return{$$typeof:z,toString:e,valueOf:e}}((function(){throw e||(e=!0,t("r:"+(Hr++).toString(36))),Error(i(355))})),t=Ai(n)[1];return 0==(2&Ga.mode)&&(Ga.flags|=516,hi(5,(function(){t("r:"+(Hr++).toString(36))}),void 0,null)),n}return Ai(n="r:"+(Hr++).toString(36)),n},unstable_isNewReconciler:!1},Pi={readContext:ia,useCallback:Ei,useContext:ia,useEffect:Ci,useImperativeHandle:ki,useLayoutEffect:wi,useMemo:Si,useReducer:ui,useRef:vi,useState:function(){return ui(ci)},useDebugValue:Bi,useDeferredValue:function(e){var n=ui(ci),t=n[0],r=n[1];return Ci((function(){var n=Ka.transition;Ka.transition=1;try{r(e)}finally{Ka.transition=n}}),[e]),t},useTransition:function(){var e=ui(ci)[0];return[vi().current,e]},useMutableSource:mi,useOpaqueIdentifier:function(){return ui(ci)[0]},unstable_isNewReconciler:!1},ji={readContext:ia,useCallback:Ei,useContext:ia,useEffect:Ci,useImperativeHandle:ki,useLayoutEffect:wi,useMemo:Si,useReducer:fi,useRef:vi,useState:function(){return fi(ci)},useDebugValue:Bi,useDeferredValue:function(e){var n=fi(ci),t=n[0],r=n[1];return Ci((function(){var n=Ka.transition;Ka.transition=1;try{r(e)}finally{Ka.transition=n}}),[e]),t},useTransition:function(){var e=fi(ci)[0];return[vi().current,e]},useMutableSource:mi,useOpaqueIdentifier:function(){return fi(ci)[0]},unstable_isNewReconciler:!1},zi=x.ReactCurrentOwner,Li=!1;function Ri(e,n,t,r){n.child=null===e?Ea(n,null,t,r):Ba(n,e.child,t,r)}function Mi(e,n,t,r,o){t=t.render;var a=n.ref;return aa(n,o),r=ii(e,n,t,r,a,o),null===e||Li?(n.flags|=1,Ri(e,n,r,o),n.child):(n.updateQueue=e.updateQueue,n.flags&=-517,e.lanes&=~o,tl(e,n,o))}function Ui(e,n,t,r,o,a){if(null===e){var i=t.type;return"function"!=typeof i||qs(i)||void 0!==i.defaultProps||null!==t.compare||void 0!==t.defaultProps?((e=Qs(t.type,null,r,n,n.mode,a)).ref=n.ref,e.return=n,n.child=e):(n.tag=15,n.type=i,Wi(e,n,i,r,o,a))}return i=e.child,0==(o&a)&&(o=i.memoizedProps,(t=null!==(t=t.compare)?t:fr)(o,r)&&e.ref===n.ref)?tl(e,n,a):(n.flags|=1,(e=Ds(i,r)).ref=n.ref,e.return=n,n.child=e)}function Wi(e,n,t,r,o,a){if(null!==e&&fr(e.memoizedProps,r)&&e.ref===n.ref){if(Li=!1,0==(a&o))return n.lanes=e.lanes,tl(e,n,a);0!=(16384&e.flags)&&(Li=!0)}return Di(e,n,t,r,a)}function Fi(e,n,t){var r=n.pendingProps,o=r.children,a=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&n.mode))n.memoizedState={baseLanes:0},bs(0,t);else{if(0==(1073741824&t))return e=null!==a?a.baseLanes|t:t,n.lanes=n.childLanes=1073741824,n.memoizedState={baseLanes:e},bs(0,e),null;n.memoizedState={baseLanes:0},bs(0,null!==a?a.baseLanes:t)}else null!==a?(r=a.baseLanes|t,n.memoizedState=null):r=t,bs(0,r);return Ri(e,n,o,t),n.child}function qi(e,n){var t=n.ref;(null===e&&null!==t||null!==e&&e.ref!==t)&&(n.flags|=128)}function Di(e,n,t,r,o){var a=go(t)?Ao:po.current;return a=ho(n,a),aa(n,o),t=ii(e,n,t,r,a,o),null===e||Li?(n.flags|=1,Ri(e,n,t,o),n.child):(n.updateQueue=e.updateQueue,n.flags&=-517,e.lanes&=~o,tl(e,n,o))}function Qi(e,n,t,r,o){if(go(t)){var a=!0;xo(n)}else a=!1;if(aa(n,o),null===n.stateNode)null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2),ba(n,t,r),xa(n,t,r,o),r=!0;else if(null===e){var i=n.stateNode,l=n.memoizedProps;i.props=l;var s=i.context,c=t.contextType;c="object"==typeof c&&null!==c?ia(c):ho(n,c=go(t)?Ao:po.current);var u=t.getDerivedStateFromProps,f="function"==typeof u||"function"==typeof i.getSnapshotBeforeUpdate;f||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||s!==c)&&ya(n,i,r,c),la=!1;var d=n.memoizedState;i.state=d,pa(n,r,i,o),s=n.memoizedState,l!==r||d!==s||mo.current||la?("function"==typeof u&&(ha(n,t,u,r),s=n.memoizedState),(l=la||va(n,t,l,r,d,s,c))?(f||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(n.flags|=4)):("function"==typeof i.componentDidMount&&(n.flags|=4),n.memoizedProps=r,n.memoizedState=s),i.props=r,i.state=s,i.context=c,r=l):("function"==typeof i.componentDidMount&&(n.flags|=4),r=!1)}else{i=n.stateNode,ca(e,n),l=n.memoizedProps,c=n.type===n.elementType?l:Ko(n.type,l),i.props=c,f=n.pendingProps,d=i.context,s="object"==typeof(s=t.contextType)&&null!==s?ia(s):ho(n,s=go(t)?Ao:po.current);var p=t.getDerivedStateFromProps;(u="function"==typeof p||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==f||d!==s)&&ya(n,i,r,s),la=!1,d=n.memoizedState,i.state=d,pa(n,r,i,o);var m=n.memoizedState;l!==f||d!==m||mo.current||la?("function"==typeof p&&(ha(n,t,p,r),m=n.memoizedState),(c=la||va(n,t,c,r,d,m,s))?(u||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,m,s),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,m,s)),"function"==typeof i.componentDidUpdate&&(n.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(n.flags|=256)):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(n.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(n.flags|=256),n.memoizedProps=r,n.memoizedState=m),i.props=r,i.state=m,i.context=s,r=c):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(n.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(n.flags|=256),r=!1)}return Zi(e,n,t,r,a,o)}function Zi(e,n,t,r,o,a){qi(e,n);var i=0!=(64&n.flags);if(!r&&!i)return o&&Co(n,t,!1),tl(e,n,a);r=n.stateNode,zi.current=n;var l=i&&"function"!=typeof t.getDerivedStateFromError?null:r.render();return n.flags|=1,null!==e&&i?(n.child=Ba(n,e.child,null,a),n.child=Ba(n,null,l,a)):Ri(e,n,l,a),n.memoizedState=r.state,o&&Co(n,t,!0),n.child}function Yi(e){var n=e.stateNode;n.pendingContext?bo(0,n.pendingContext,n.pendingContext!==n.context):n.context&&bo(0,n.context,!1),Pa(e,n.containerInfo)}var Vi,$i,Hi,Xi={dehydrated:null,retryLane:0};function Ki(e,n,t){var r,o=n.pendingProps,a=Ra.current,i=!1;return(r=0!=(64&n.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&a)),r?(i=!0,n.flags&=-65):null!==e&&null===e.memoizedState||void 0===o.fallback||!0===o.unstable_avoidThisFallback||(a|=1),uo(Ra,1&a),null===e?(void 0!==o.fallback&&Qa(n),e=o.children,a=o.fallback,i?(e=Ji(n,e,a,t),n.child.memoizedState={baseLanes:t},n.memoizedState=Xi,e):"number"==typeof o.unstable_expectedLoadTime?(e=Ji(n,e,a,t),n.child.memoizedState={baseLanes:t},n.memoizedState=Xi,n.lanes=33554432,e):((t=Ys({mode:"visible",children:e},n.mode,t,null)).return=n,n.child=t)):(e.memoizedState,i?(o=function(e,n,t,r,o){var a=n.mode,i=e.child;e=i.sibling;var l={mode:"hidden",children:t};return 0==(2&a)&&n.child!==i?((t=n.child).childLanes=0,t.pendingProps=l,null!==(i=t.lastEffect)?(n.firstEffect=t.firstEffect,n.lastEffect=i,i.nextEffect=null):n.firstEffect=n.lastEffect=null):t=Ds(i,l),null!==e?r=Ds(e,r):(r=Zs(r,a,o,null)).flags|=2,r.return=n,t.return=n,t.sibling=r,n.child=t,r}(e,n,o.children,o.fallback,t),i=n.child,a=e.child.memoizedState,i.memoizedState=null===a?{baseLanes:t}:{baseLanes:a.baseLanes|t},i.childLanes=e.childLanes&~t,n.memoizedState=Xi,o):(t=function(e,n,t,r){var o=e.child;return e=o.sibling,t=Ds(o,{mode:"visible",children:t}),0==(2&n.mode)&&(t.lanes=r),t.return=n,t.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,n.firstEffect=n.lastEffect=e),n.child=t}(e,n,o.children,t),n.memoizedState=null,t))}function Ji(e,n,t,r){var o=e.mode,a=e.child;return n={mode:"hidden",children:n},0==(2&o)&&null!==a?(a.childLanes=0,a.pendingProps=n):a=Ys(n,o,0,null),t=Zs(t,o,r,null),a.return=e,t.return=e,a.sibling=t,e.child=a,t}function Gi(e,n){e.lanes|=n;var t=e.alternate;null!==t&&(t.lanes|=n),oa(e.return,n)}function el(e,n,t,r,o,a){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:n,rendering:null,renderingStartTime:0,last:r,tail:t,tailMode:o,lastEffect:a}:(i.isBackwards=n,i.rendering=null,i.renderingStartTime=0,i.last=r,i.tail=t,i.tailMode=o,i.lastEffect=a)}function nl(e,n,t){var r=n.pendingProps,o=r.revealOrder,a=r.tail;if(Ri(e,n,r.children,t),0!=(2&(r=Ra.current)))r=1&r|2,n.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=n.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Gi(e,t);else if(19===e.tag)Gi(e,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===n)break e;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(uo(Ra,r),0==(2&n.mode))n.memoizedState=null;else switch(o){case"forwards":for(t=n.child,o=null;null!==t;)null!==(e=t.alternate)&&null===Ma(e)&&(o=t),t=t.sibling;null===(t=o)?(o=n.child,n.child=null):(o=t.sibling,t.sibling=null),el(n,!1,o,t,a,n.lastEffect);break;case"backwards":for(t=null,o=n.child,n.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Ma(e)){n.child=o;break}e=o.sibling,o.sibling=t,t=o,o=e}el(n,!0,t,null,a,n.lastEffect);break;case"together":el(n,!1,null,null,void 0,n.lastEffect);break;default:n.memoizedState=null}return n.child}function tl(e,n,t){if(null!==e&&(n.dependencies=e.dependencies),Ml|=n.lanes,0!=(t&n.childLanes)){if(null!==e&&n.child!==e.child)throw Error(i(153));if(null!==n.child){for(t=Ds(e=n.child,e.pendingProps),n.child=t,t.return=n;null!==e.sibling;)e=e.sibling,(t=t.sibling=Ds(e,e.pendingProps)).return=n;t.sibling=null}return n.child}return null}function rl(e,n){if(!Fa)switch(e.tailMode){case"hidden":n=e.tail;for(var t=null;null!==n;)null!==n.alternate&&(t=n),n=n.sibling;null===t?e.tail=null:t.sibling=null;break;case"collapsed":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?n||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function ol(e,n,t){var r=n.pendingProps;switch(n.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:case 17:return go(n.type)&&vo(),null;case 3:return ja(),co(mo),co(po),Ha(),(r=n.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Ya(n)?n.flags|=4:r.hydrate||(n.flags|=256)),null;case 5:La(n);var a=Oa(Ta.current);if(t=n.type,null!==e&&null!=n.stateNode)$i(e,n,t,r),e.ref!==n.ref&&(n.flags|=128);else{if(!r){if(null===n.stateNode)throw Error(i(166));return null}if(e=Oa(_a.current),Ya(n)){r=n.stateNode,t=n.type;var l=n.memoizedProps;switch(r[Kr]=n,r[Jr]=l,t){case"dialog":_r("cancel",r),_r("close",r);break;case"iframe":case"object":case"embed":_r("load",r);break;case"video":case"audio":for(e=0;e<kr.length;e++)_r(kr[e],r);break;case"source":_r("error",r);break;case"img":case"image":case"link":_r("error",r),_r("load",r);break;case"details":_r("toggle",r);break;case"input":ee(r,l),_r("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!l.multiple},_r("invalid",r);break;case"textarea":se(r,l),_r("invalid",r)}for(var c in we(t,l),e=null,l)l.hasOwnProperty(c)&&(a=l[c],"children"===c?"string"==typeof a?r.textContent!==a&&(e=["children",a]):"number"==typeof a&&r.textContent!==""+a&&(e=["children",""+a]):s.hasOwnProperty(c)&&null!=a&&"onScroll"===c&&_r("scroll",r));switch(t){case"input":X(r),re(r,l,!0);break;case"textarea":X(r),ue(r);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(r.onclick=Ur)}r=e,n.updateQueue=r,null!==r&&(n.flags|=4)}else{switch(c=9===a.nodeType?a:a.ownerDocument,e===fe&&(e=de(t)),e===fe?"script"===t?((e=c.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=c.createElement(t,{is:r.is}):(e=c.createElement(t),"select"===t&&(c=e,r.multiple?c.multiple=!0:r.size&&(c.size=r.size))):e=c.createElementNS(e,t),e[Kr]=n,e[Jr]=r,Vi(e,n),n.stateNode=e,c=Ie(t,r),t){case"dialog":_r("cancel",e),_r("close",e),a=r;break;case"iframe":case"object":case"embed":_r("load",e),a=r;break;case"video":case"audio":for(a=0;a<kr.length;a++)_r(kr[a],e);a=r;break;case"source":_r("error",e),a=r;break;case"img":case"image":case"link":_r("error",e),_r("load",e),a=r;break;case"details":_r("toggle",e),a=r;break;case"input":ee(e,r),a=G(e,r),_r("invalid",e);break;case"option":a=ae(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},a=o({},r,{value:void 0}),_r("invalid",e);break;case"textarea":se(e,r),a=le(e,r),_r("invalid",e);break;default:a=r}we(t,a);var u=a;for(l in u)if(u.hasOwnProperty(l)){var f=u[l];"style"===l?xe(e,f):"dangerouslySetInnerHTML"===l?null!=(f=f?f.__html:void 0)&&he(e,f):"children"===l?"string"==typeof f?("textarea"!==t||""!==f)&&ge(e,f):"number"==typeof f&&ge(e,""+f):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(s.hasOwnProperty(l)?null!=f&&"onScroll"===l&&_r("scroll",e):null!=f&&y(e,l,f,c))}switch(t){case"input":X(e),re(e,r,!1);break;case"textarea":X(e),ue(e);break;case"option":null!=r.value&&e.setAttribute("value",""+$(r.value));break;case"select":e.multiple=!!r.multiple,null!=(l=r.value)?ie(e,!!r.multiple,l,!1):null!=r.defaultValue&&ie(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=Ur)}qr(t,r)&&(n.flags|=4)}null!==n.ref&&(n.flags|=128)}return null;case 6:if(e&&null!=n.stateNode)Hi(0,n,e.memoizedProps,r);else{if("string"!=typeof r&&null===n.stateNode)throw Error(i(166));t=Oa(Ta.current),Oa(_a.current),Ya(n)?(r=n.stateNode,t=n.memoizedProps,r[Kr]=n,r.nodeValue!==t&&(n.flags|=4)):((r=(9===t.nodeType?t:t.ownerDocument).createTextNode(r))[Kr]=n,n.stateNode=r)}return null;case 13:return co(Ra),r=n.memoizedState,0!=(64&n.flags)?(n.lanes=t,n):(r=null!==r,t=!1,null===e?void 0!==n.memoizedProps.fallback&&Ya(n):t=null!==e.memoizedState,r&&!t&&0!=(2&n.mode)&&(null===e&&!0!==n.memoizedProps.unstable_avoidThisFallback||0!=(1&Ra.current)?0===zl&&(zl=3):(0!==zl&&3!==zl||(zl=4),null===Nl||0==(134217727&Ml)&&0==(134217727&Ul)||As(Nl,Ol))),(r||t)&&(n.flags|=4),null);case 4:return ja(),null===e&&Tr(n.stateNode.containerInfo),null;case 10:return ra(n),null;case 19:if(co(Ra),null===(r=n.memoizedState))return null;if(l=0!=(64&n.flags),null===(c=r.rendering))if(l)rl(r,!1);else{if(0!==zl||null!==e&&0!=(64&e.flags))for(e=n.child;null!==e;){if(null!==(c=Ma(e))){for(n.flags|=64,rl(r,!1),null!==(l=c.updateQueue)&&(n.updateQueue=l,n.flags|=4),null===r.lastEffect&&(n.firstEffect=null),n.lastEffect=r.lastEffect,r=t,t=n.child;null!==t;)e=r,(l=t).flags&=2,l.nextEffect=null,l.firstEffect=null,l.lastEffect=null,null===(c=l.alternate)?(l.childLanes=0,l.lanes=e,l.child=null,l.memoizedProps=null,l.memoizedState=null,l.updateQueue=null,l.dependencies=null,l.stateNode=null):(l.childLanes=c.childLanes,l.lanes=c.lanes,l.child=c.child,l.memoizedProps=c.memoizedProps,l.memoizedState=c.memoizedState,l.updateQueue=c.updateQueue,l.type=c.type,e=c.dependencies,l.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),t=t.sibling;return uo(Ra,1&Ra.current|2),n.child}e=e.sibling}null!==r.tail&&Do()>Dl&&(n.flags|=64,l=!0,rl(r,!1),n.lanes=33554432)}else{if(!l)if(null!==(e=Ma(c))){if(n.flags|=64,l=!0,null!==(t=e.updateQueue)&&(n.updateQueue=t,n.flags|=4),rl(r,!0),null===r.tail&&"hidden"===r.tailMode&&!c.alternate&&!Fa)return null!==(n=n.lastEffect=r.lastEffect)&&(n.nextEffect=null),null}else 2*Do()-r.renderingStartTime>Dl&&1073741824!==t&&(n.flags|=64,l=!0,rl(r,!1),n.lanes=33554432);r.isBackwards?(c.sibling=n.child,n.child=c):(null!==(t=r.last)?t.sibling=c:n.child=c,r.last=c)}return null!==r.tail?(t=r.tail,r.rendering=t,r.tail=t.sibling,r.lastEffect=n.lastEffect,r.renderingStartTime=Do(),t.sibling=null,n=Ra.current,uo(Ra,l?1&n|2:1&n),t):null;case 23:case 24:return ys(),null!==e&&null!==e.memoizedState!=(null!==n.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(n.flags|=4),null}throw Error(i(156,n.tag))}function al(e){switch(e.tag){case 1:go(e.type)&&vo();var n=e.flags;return 4096&n?(e.flags=-4097&n|64,e):null;case 3:if(ja(),co(mo),co(po),Ha(),0!=(64&(n=e.flags)))throw Error(i(285));return e.flags=-4097&n|64,e;case 5:return La(e),null;case 13:return co(Ra),4096&(n=e.flags)?(e.flags=-4097&n|64,e):null;case 19:return co(Ra),null;case 4:return ja(),null;case 10:return ra(e),null;case 23:case 24:return ys(),null;default:return null}}function il(e,n){try{var t="",r=n;do{t+=Y(r),r=r.return}while(r);var o=t}catch(e){o="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:n,stack:o}}function ll(e,n){try{console.error(n.value)}catch(e){setTimeout((function(){throw e}))}}Vi=function(e,n){for(var t=n.child;null!==t;){if(5===t.tag||6===t.tag)e.appendChild(t.stateNode);else if(4!==t.tag&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===n)break;for(;null===t.sibling;){if(null===t.return||t.return===n)return;t=t.return}t.sibling.return=t.return,t=t.sibling}},$i=function(e,n,t,r){var a=e.memoizedProps;if(a!==r){e=n.stateNode,Oa(_a.current);var i,l=null;switch(t){case"input":a=G(e,a),r=G(e,r),l=[];break;case"option":a=ae(e,a),r=ae(e,r),l=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),l=[];break;case"textarea":a=le(e,a),r=le(e,r),l=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(e.onclick=Ur)}for(f in we(t,r),t=null,a)if(!r.hasOwnProperty(f)&&a.hasOwnProperty(f)&&null!=a[f])if("style"===f){var c=a[f];for(i in c)c.hasOwnProperty(i)&&(t||(t={}),t[i]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(s.hasOwnProperty(f)?l||(l=[]):(l=l||[]).push(f,null));for(f in r){var u=r[f];if(c=null!=a?a[f]:void 0,r.hasOwnProperty(f)&&u!==c&&(null!=u||null!=c))if("style"===f)if(c){for(i in c)!c.hasOwnProperty(i)||u&&u.hasOwnProperty(i)||(t||(t={}),t[i]="");for(i in u)u.hasOwnProperty(i)&&c[i]!==u[i]&&(t||(t={}),t[i]=u[i])}else t||(l||(l=[]),l.push(f,t)),t=u;else"dangerouslySetInnerHTML"===f?(u=u?u.__html:void 0,c=c?c.__html:void 0,null!=u&&c!==u&&(l=l||[]).push(f,u)):"children"===f?"string"!=typeof u&&"number"!=typeof u||(l=l||[]).push(f,""+u):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(s.hasOwnProperty(f)?(null!=u&&"onScroll"===f&&_r("scroll",e),l||c===u||(l=[])):"object"==typeof u&&null!==u&&u.$$typeof===z?u.toString():(l=l||[]).push(f,u))}t&&(l=l||[]).push("style",t);var f=l;(n.updateQueue=f)&&(n.flags|=4)}},Hi=function(e,n,t,r){t!==r&&(n.flags|=4)};var sl="function"==typeof WeakMap?WeakMap:Map;function cl(e,n,t){(t=ua(-1,t)).tag=3,t.payload={element:null};var r=n.value;return t.callback=function(){Vl||(Vl=!0,$l=r),ll(0,n)},t}function ul(e,n,t){(t=ua(-1,t)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=n.value;t.payload=function(){return ll(0,n),r(o)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(t.callback=function(){"function"!=typeof r&&(null===Hl?Hl=new Set([this]):Hl.add(this),ll(0,n));var e=n.stack;this.componentDidCatch(n.value,{componentStack:null!==e?e:""})}),t}var fl="function"==typeof WeakSet?WeakSet:Set;function dl(e){var n=e.ref;if(null!==n)if("function"==typeof n)try{n(null)}catch(n){Rs(e,n)}else n.current=null}function pl(e,n){switch(n.tag){case 0:case 11:case 15:case 22:case 5:case 6:case 4:case 17:return;case 1:if(256&n.flags&&null!==e){var t=e.memoizedProps,r=e.memoizedState;n=(e=n.stateNode).getSnapshotBeforeUpdate(n.elementType===n.type?t:Ko(n.type,t),r),e.__reactInternalSnapshotBeforeUpdate=n}return;case 3:return void(256&n.flags&&Yr(n.stateNode.containerInfo))}throw Error(i(163))}function ml(e,n,t){switch(t.tag){case 0:case 11:case 15:case 22:if(null!==(n=null!==(n=t.updateQueue)?n.lastEffect:null)){e=n=n.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==n)}if(null!==(n=null!==(n=t.updateQueue)?n.lastEffect:null)){e=n=n.next;do{var o=e;r=o.next,0!=(4&(o=o.tag))&&0!=(1&o)&&(js(t,e),Ps(t,e)),e=r}while(e!==n)}return;case 1:return e=t.stateNode,4&t.flags&&(null===n?e.componentDidMount():(r=t.elementType===t.type?n.memoizedProps:Ko(t.type,n.memoizedProps),e.componentDidUpdate(r,n.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(n=t.updateQueue)&&ma(t,n,e));case 3:if(null!==(n=t.updateQueue)){if(e=null,null!==t.child)switch(t.child.tag){case 5:case 1:e=t.child.stateNode}ma(t,n,e)}return;case 5:return e=t.stateNode,void(null===n&&4&t.flags&&qr(t.type,t.memoizedProps)&&e.focus());case 6:case 4:case 12:case 19:case 17:case 20:case 21:case 23:case 24:return;case 13:return void(null===t.memoizedState&&(t=t.alternate,null!==t&&(t=t.memoizedState,null!==t&&(t=t.dehydrated,null!==t&&Cn(t)))))}throw Error(i(163))}function Al(e,n){for(var t=e;;){if(5===t.tag){var r=t.stateNode;if(n)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=t.stateNode;var o=t.memoizedProps.style;o=null!=o&&o.hasOwnProperty("display")?o.display:null,r.style.display=ye("display",o)}}else if(6===t.tag)t.stateNode.nodeValue=n?"":t.memoizedProps;else if((23!==t.tag&&24!==t.tag||null===t.memoizedState||t===e)&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;t=t.return}t.sibling.return=t.return,t=t.sibling}}function hl(e,n){if(Io&&"function"==typeof Io.onCommitFiberUnmount)try{Io.onCommitFiberUnmount(wo,n)}catch(e){}switch(n.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=n.updateQueue)&&null!==(e=e.lastEffect)){var t=e=e.next;do{var r=t,o=r.destroy;if(r=r.tag,void 0!==o)if(0!=(4&r))js(n,t);else{r=n;try{o()}catch(e){Rs(r,e)}}t=t.next}while(t!==e)}break;case 1:if(dl(n),"function"==typeof(e=n.stateNode).componentWillUnmount)try{e.props=n.memoizedProps,e.state=n.memoizedState,e.componentWillUnmount()}catch(e){Rs(n,e)}break;case 5:dl(n);break;case 4:Cl(e,n)}}function gl(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function vl(e){return 5===e.tag||3===e.tag||4===e.tag}function bl(e){e:{for(var n=e.return;null!==n;){if(vl(n))break e;n=n.return}throw Error(i(160))}var t=n;switch(n=t.stateNode,t.tag){case 5:var r=!1;break;case 3:case 4:n=n.containerInfo,r=!0;break;default:throw Error(i(161))}16&t.flags&&(ge(n,""),t.flags&=-17);e:n:for(t=e;;){for(;null===t.sibling;){if(null===t.return||vl(t.return)){t=null;break e}t=t.return}for(t.sibling.return=t.return,t=t.sibling;5!==t.tag&&6!==t.tag&&18!==t.tag;){if(2&t.flags)continue n;if(null===t.child||4===t.tag)continue n;t.child.return=t,t=t.child}if(!(2&t.flags)){t=t.stateNode;break e}}r?yl(e,t,n):xl(e,t,n)}function yl(e,n,t){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,n?8===t.nodeType?t.parentNode.insertBefore(e,n):t.insertBefore(e,n):(8===t.nodeType?(n=t.parentNode).insertBefore(e,t):(n=t).appendChild(e),null!=(t=t._reactRootContainer)||null!==n.onclick||(n.onclick=Ur));else if(4!==r&&null!==(e=e.child))for(yl(e,n,t),e=e.sibling;null!==e;)yl(e,n,t),e=e.sibling}function xl(e,n,t){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,n?t.insertBefore(e,n):t.appendChild(e);else if(4!==r&&null!==(e=e.child))for(xl(e,n,t),e=e.sibling;null!==e;)xl(e,n,t),e=e.sibling}function Cl(e,n){for(var t,r,o=n,a=!1;;){if(!a){a=o.return;e:for(;;){if(null===a)throw Error(i(160));switch(t=a.stateNode,a.tag){case 5:r=!1;break e;case 3:case 4:t=t.containerInfo,r=!0;break e}a=a.return}a=!0}if(5===o.tag||6===o.tag){e:for(var l=e,s=o,c=s;;)if(hl(l,c),null!==c.child&&4!==c.tag)c.child.return=c,c=c.child;else{if(c===s)break e;for(;null===c.sibling;){if(null===c.return||c.return===s)break e;c=c.return}c.sibling.return=c.return,c=c.sibling}r?(l=t,s=o.stateNode,8===l.nodeType?l.parentNode.removeChild(s):l.removeChild(s)):t.removeChild(o.stateNode)}else if(4===o.tag){if(null!==o.child){t=o.stateNode.containerInfo,r=!0,o.child.return=o,o=o.child;continue}}else if(hl(e,o),null!==o.child){o.child.return=o,o=o.child;continue}if(o===n)break;for(;null===o.sibling;){if(null===o.return||o.return===n)return;4===(o=o.return).tag&&(a=!1)}o.sibling.return=o.return,o=o.sibling}}function wl(e,n){switch(n.tag){case 0:case 11:case 14:case 15:case 22:var t=n.updateQueue;if(null!==(t=null!==t?t.lastEffect:null)){var r=t=t.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==t)}return;case 1:case 12:case 17:return;case 5:if(null!=(t=n.stateNode)){r=n.memoizedProps;var o=null!==e?e.memoizedProps:r;e=n.type;var a=n.updateQueue;if(n.updateQueue=null,null!==a){for(t[Jr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&ne(t,r),Ie(e,o),n=Ie(e,r),o=0;o<a.length;o+=2){var l=a[o],s=a[o+1];"style"===l?xe(t,s):"dangerouslySetInnerHTML"===l?he(t,s):"children"===l?ge(t,s):y(t,l,s,n)}switch(e){case"input":te(t,r);break;case"textarea":ce(t,r);break;case"select":e=t._wrapperState.wasMultiple,t._wrapperState.wasMultiple=!!r.multiple,null!=(a=r.value)?ie(t,!!r.multiple,a,!1):e!==!!r.multiple&&(null!=r.defaultValue?ie(t,!!r.multiple,r.defaultValue,!0):ie(t,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===n.stateNode)throw Error(i(162));return void(n.stateNode.nodeValue=n.memoizedProps);case 3:return void((t=n.stateNode).hydrate&&(t.hydrate=!1,Cn(t.containerInfo)));case 13:return null!==n.memoizedState&&(ql=Do(),Al(n.child,!0)),void Il(n);case 19:return void Il(n);case 23:case 24:return void Al(n,null!==n.memoizedState)}throw Error(i(163))}function Il(e){var n=e.updateQueue;if(null!==n){e.updateQueue=null;var t=e.stateNode;null===t&&(t=e.stateNode=new fl),n.forEach((function(n){var r=Us.bind(null,e,n);t.has(n)||(t.add(n),n.then(r,r))}))}}function kl(e,n){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&null!==(n=n.memoizedState)&&null===n.dehydrated}var Bl=Math.ceil,El=x.ReactCurrentDispatcher,Sl=x.ReactCurrentOwner,_l=0,Nl=null,Tl=null,Ol=0,Pl=0,jl=so(0),zl=0,Ll=null,Rl=0,Ml=0,Ul=0,Wl=0,Fl=null,ql=0,Dl=1/0;function Ql(){Dl=Do()+500}var Zl,Yl=null,Vl=!1,$l=null,Hl=null,Xl=!1,Kl=null,Jl=90,Gl=[],es=[],ns=null,ts=0,rs=null,os=-1,as=0,is=0,ls=null,ss=!1;function cs(){return 0!=(48&_l)?Do():-1!==os?os:os=Do()}function us(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===Qo()?1:2;if(0===as&&(as=Rl),0!==Xo.transition){0!==is&&(is=null!==Fl?Fl.pendingLanes:0),e=as;var n=4186112&~is;return 0==(n&=-n)&&0==(n=(e=4186112&~e)&-e)&&(n=8192),n}return e=Qo(),e=Wn(0!=(4&_l)&&98===e?12:e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),as)}function fs(e,n,t){if(50<ts)throw ts=0,rs=null,Error(i(185));if(null===(e=ds(e,n)))return null;Dn(e,n,t),e===Nl&&(Ul|=n,4===zl&&As(e,Ol));var r=Qo();1===n?0!=(8&_l)&&0==(48&_l)?hs(e):(ps(e,t),0===_l&&(Ql(),$o())):(0==(4&_l)||98!==r&&99!==r||(null===ns?ns=new Set([e]):ns.add(e)),ps(e,t)),Fl=e}function ds(e,n){e.lanes|=n;var t=e.alternate;for(null!==t&&(t.lanes|=n),t=e,e=e.return;null!==e;)e.childLanes|=n,null!==(t=e.alternate)&&(t.childLanes|=n),t=e,e=e.return;return 3===t.tag?t.stateNode:null}function ps(e,n){for(var t=e.callbackNode,r=e.suspendedLanes,o=e.pingedLanes,a=e.expirationTimes,l=e.pendingLanes;0<l;){var s=31-Qn(l),c=1<<s,u=a[s];if(-1===u){if(0==(c&r)||0!=(c&o)){u=n,Rn(c);var f=Ln;a[s]=10<=f?u+250:6<=f?u+5e3:-1}}else u<=n&&(e.expiredLanes|=c);l&=~c}if(r=Mn(e,e===Nl?Ol:0),n=Ln,0===r)null!==t&&(t!==Ro&&Eo(t),e.callbackNode=null,e.callbackPriority=0);else{if(null!==t){if(e.callbackPriority===n)return;t!==Ro&&Eo(t)}15===n?(t=hs.bind(null,e),null===Uo?(Uo=[t],Wo=Bo(Oo,Ho)):Uo.push(t),t=Ro):14===n?t=Vo(99,hs.bind(null,e)):(t=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(i(358,e))}}(n),t=Vo(t,ms.bind(null,e))),e.callbackPriority=n,e.callbackNode=t}}function ms(e){if(os=-1,is=as=0,0!=(48&_l))throw Error(i(327));var n=e.callbackNode;if(Os()&&e.callbackNode!==n)return null;var t=Mn(e,e===Nl?Ol:0);if(0===t)return null;var r=t,o=_l;_l|=16;var a=ws();for(Nl===e&&Ol===r||(Ql(),xs(e,r));;)try{Bs();break}catch(n){Cs(e,n)}if(ta(),El.current=a,_l=o,null!==Tl?r=0:(Nl=null,Ol=0,r=zl),0!=(Rl&Ul))xs(e,0);else if(0!==r){if(2===r&&(_l|=64,e.hydrate&&(e.hydrate=!1,Yr(e.containerInfo)),0!==(t=Un(e))&&(r=Is(e,t))),1===r)throw n=Ll,xs(e,0),As(e,t),ps(e,Do()),n;switch(e.finishedWork=e.current.alternate,e.finishedLanes=t,r){case 0:case 1:throw Error(i(345));case 2:case 5:_s(e);break;case 3:if(As(e,t),(62914560&t)===t&&10<(r=ql+500-Do())){if(0!==Mn(e,0))break;if(((o=e.suspendedLanes)&t)!==t){cs(),e.pingedLanes|=e.suspendedLanes&o;break}e.timeoutHandle=Qr(_s.bind(null,e),r);break}_s(e);break;case 4:if(As(e,t),(4186112&t)===t)break;for(r=e.eventTimes,o=-1;0<t;){var l=31-Qn(t);a=1<<l,(l=r[l])>o&&(o=l),t&=~a}if(t=o,10<(t=(120>(t=Do()-t)?120:480>t?480:1080>t?1080:1920>t?1920:3e3>t?3e3:4320>t?4320:1960*Bl(t/1960))-t)){e.timeoutHandle=Qr(_s.bind(null,e),t);break}_s(e);break;default:throw Error(i(329))}}return ps(e,Do()),e.callbackNode===n?ms.bind(null,e):null}function As(e,n){for(n&=~Wl,n&=~Ul,e.suspendedLanes|=n,e.pingedLanes&=~n,e=e.expirationTimes;0<n;){var t=31-Qn(n),r=1<<t;e[t]=-1,n&=~r}}function hs(e){if(0!=(48&_l))throw Error(i(327));if(Os(),e===Nl&&0!=(e.expiredLanes&Ol)){var n=Ol,t=Is(e,n);0!=(Rl&Ul)&&(t=Is(e,n=Mn(e,n)))}else t=Is(e,n=Mn(e,0));if(0!==e.tag&&2===t&&(_l|=64,e.hydrate&&(e.hydrate=!1,Yr(e.containerInfo)),0!==(n=Un(e))&&(t=Is(e,n))),1===t)throw t=Ll,xs(e,0),As(e,n),ps(e,Do()),t;return e.finishedWork=e.current.alternate,e.finishedLanes=n,_s(e),ps(e,Do()),null}function gs(e,n){var t=_l;_l|=1;try{return e(n)}finally{0===(_l=t)&&(Ql(),$o())}}function vs(e,n){var t=_l;_l&=-2,_l|=8;try{return e(n)}finally{0===(_l=t)&&(Ql(),$o())}}function bs(e,n){uo(jl,Pl),Pl|=n,Rl|=n}function ys(){Pl=jl.current,co(jl)}function xs(e,n){e.finishedWork=null,e.finishedLanes=0;var t=e.timeoutHandle;if(-1!==t&&(e.timeoutHandle=-1,Zr(t)),null!==Tl)for(t=Tl.return;null!==t;){var r=t;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&vo();break;case 3:ja(),co(mo),co(po),Ha();break;case 5:La(r);break;case 4:ja();break;case 13:case 19:co(Ra);break;case 10:ra(r);break;case 23:case 24:ys()}t=t.return}Nl=e,Tl=Ds(e.current,null),Ol=Pl=Rl=n,zl=0,Ll=null,Wl=Ul=Ml=0}function Cs(e,n){for(;;){var t=Tl;try{if(ta(),Xa.current=Ti,ti){for(var r=Ga.memoizedState;null!==r;){var o=r.queue;null!==o&&(o.pending=null),r=r.next}ti=!1}if(Ja=0,ni=ei=Ga=null,ri=!1,Sl.current=null,null===t||null===t.return){zl=1,Ll=n,Tl=null;break}e:{var a=e,i=t.return,l=t,s=n;if(n=Ol,l.flags|=2048,l.firstEffect=l.lastEffect=null,null!==s&&"object"==typeof s&&"function"==typeof s.then){var c=s;if(0==(2&l.mode)){var u=l.alternate;u?(l.updateQueue=u.updateQueue,l.memoizedState=u.memoizedState,l.lanes=u.lanes):(l.updateQueue=null,l.memoizedState=null)}var f=0!=(1&Ra.current),d=i;do{var p;if(p=13===d.tag){var m=d.memoizedState;if(null!==m)p=null!==m.dehydrated;else{var A=d.memoizedProps;p=void 0!==A.fallback&&(!0!==A.unstable_avoidThisFallback||!f)}}if(p){var h=d.updateQueue;if(null===h){var g=new Set;g.add(c),d.updateQueue=g}else h.add(c);if(0==(2&d.mode)){if(d.flags|=64,l.flags|=16384,l.flags&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var v=ua(-1,1);v.tag=2,fa(l,v)}l.lanes|=1;break e}s=void 0,l=n;var b=a.pingCache;if(null===b?(b=a.pingCache=new sl,s=new Set,b.set(c,s)):void 0===(s=b.get(c))&&(s=new Set,b.set(c,s)),!s.has(l)){s.add(l);var y=Ms.bind(null,a,c,l);c.then(y,y)}d.flags|=4096,d.lanes=n;break e}d=d.return}while(null!==d);s=Error((V(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==zl&&(zl=2),s=il(s,l),d=i;do{switch(d.tag){case 3:a=s,d.flags|=4096,n&=-n,d.lanes|=n,da(d,cl(0,a,n));break e;case 1:a=s;var x=d.type,C=d.stateNode;if(0==(64&d.flags)&&("function"==typeof x.getDerivedStateFromError||null!==C&&"function"==typeof C.componentDidCatch&&(null===Hl||!Hl.has(C)))){d.flags|=4096,n&=-n,d.lanes|=n,da(d,ul(d,a,n));break e}}d=d.return}while(null!==d)}Ss(t)}catch(e){n=e,Tl===t&&null!==t&&(Tl=t=t.return);continue}break}}function ws(){var e=El.current;return El.current=Ti,null===e?Ti:e}function Is(e,n){var t=_l;_l|=16;var r=ws();for(Nl===e&&Ol===n||xs(e,n);;)try{ks();break}catch(n){Cs(e,n)}if(ta(),_l=t,El.current=r,null!==Tl)throw Error(i(261));return Nl=null,Ol=0,zl}function ks(){for(;null!==Tl;)Es(Tl)}function Bs(){for(;null!==Tl&&!So();)Es(Tl)}function Es(e){var n=Zl(e.alternate,e,Pl);e.memoizedProps=e.pendingProps,null===n?Ss(e):Tl=n,Sl.current=null}function Ss(e){var n=e;do{var t=n.alternate;if(e=n.return,0==(2048&n.flags)){if(null!==(t=ol(t,n,Pl)))return void(Tl=t);if(24!==(t=n).tag&&23!==t.tag||null===t.memoizedState||0!=(1073741824&Pl)||0==(4&t.mode)){for(var r=0,o=t.child;null!==o;)r|=o.lanes|o.childLanes,o=o.sibling;t.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=n.firstEffect),null!==n.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=n.firstEffect),e.lastEffect=n.lastEffect),1<n.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=n:e.firstEffect=n,e.lastEffect=n))}else{if(null!==(t=al(n)))return t.flags&=2047,void(Tl=t);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(n=n.sibling))return void(Tl=n);Tl=n=e}while(null!==n);0===zl&&(zl=5)}function _s(e){var n=Qo();return Yo(99,Ns.bind(null,e,n)),null}function Ns(e,n){do{Os()}while(null!==Kl);if(0!=(48&_l))throw Error(i(327));var t=e.finishedWork;if(null===t)return null;if(e.finishedWork=null,e.finishedLanes=0,t===e.current)throw Error(i(177));e.callbackNode=null;var r=t.lanes|t.childLanes,o=r,a=e.pendingLanes&~o;e.pendingLanes=o,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=o,e.mutableReadLanes&=o,e.entangledLanes&=o,o=e.entanglements;for(var l=e.eventTimes,s=e.expirationTimes;0<a;){var c=31-Qn(a),u=1<<c;o[c]=0,l[c]=-1,s[c]=-1,a&=~u}if(null!==ns&&0==(24&r)&&ns.has(e)&&ns.delete(e),e===Nl&&(Tl=Nl=null,Ol=0),1<t.flags?null!==t.lastEffect?(t.lastEffect.nextEffect=t,r=t.firstEffect):r=t:r=t.firstEffect,null!==r){if(o=_l,_l|=32,Sl.current=null,Wr=Hn,hr(l=Ar())){if("selectionStart"in l)s={start:l.selectionStart,end:l.selectionEnd};else e:if(s=(s=l.ownerDocument)&&s.defaultView||window,(u=s.getSelection&&s.getSelection())&&0!==u.rangeCount){s=u.anchorNode,a=u.anchorOffset,c=u.focusNode,u=u.focusOffset;try{s.nodeType,c.nodeType}catch(e){s=null;break e}var f=0,d=-1,p=-1,m=0,A=0,h=l,g=null;n:for(;;){for(var v;h!==s||0!==a&&3!==h.nodeType||(d=f+a),h!==c||0!==u&&3!==h.nodeType||(p=f+u),3===h.nodeType&&(f+=h.nodeValue.length),null!==(v=h.firstChild);)g=h,h=v;for(;;){if(h===l)break n;if(g===s&&++m===a&&(d=f),g===c&&++A===u&&(p=f),null!==(v=h.nextSibling))break;g=(h=g).parentNode}h=v}s=-1===d||-1===p?null:{start:d,end:p}}else s=null;s=s||{start:0,end:0}}else s=null;Fr={focusedElem:l,selectionRange:s},Hn=!1,ls=null,ss=!1,Yl=r;do{try{Ts()}catch(e){if(null===Yl)throw Error(i(330));Rs(Yl,e),Yl=Yl.nextEffect}}while(null!==Yl);ls=null,Yl=r;do{try{for(l=e;null!==Yl;){var b=Yl.flags;if(16&b&&ge(Yl.stateNode,""),128&b){var y=Yl.alternate;if(null!==y){var x=y.ref;null!==x&&("function"==typeof x?x(null):x.current=null)}}switch(1038&b){case 2:bl(Yl),Yl.flags&=-3;break;case 6:bl(Yl),Yl.flags&=-3,wl(Yl.alternate,Yl);break;case 1024:Yl.flags&=-1025;break;case 1028:Yl.flags&=-1025,wl(Yl.alternate,Yl);break;case 4:wl(Yl.alternate,Yl);break;case 8:Cl(l,s=Yl);var C=s.alternate;gl(s),null!==C&&gl(C)}Yl=Yl.nextEffect}}catch(e){if(null===Yl)throw Error(i(330));Rs(Yl,e),Yl=Yl.nextEffect}}while(null!==Yl);if(x=Fr,y=Ar(),b=x.focusedElem,l=x.selectionRange,y!==b&&b&&b.ownerDocument&&mr(b.ownerDocument.documentElement,b)){null!==l&&hr(b)&&(y=l.start,void 0===(x=l.end)&&(x=y),"selectionStart"in b?(b.selectionStart=y,b.selectionEnd=Math.min(x,b.value.length)):(x=(y=b.ownerDocument||document)&&y.defaultView||window).getSelection&&(x=x.getSelection(),s=b.textContent.length,C=Math.min(l.start,s),l=void 0===l.end?C:Math.min(l.end,s),!x.extend&&C>l&&(s=l,l=C,C=s),s=pr(b,C),a=pr(b,l),s&&a&&(1!==x.rangeCount||x.anchorNode!==s.node||x.anchorOffset!==s.offset||x.focusNode!==a.node||x.focusOffset!==a.offset)&&((y=y.createRange()).setStart(s.node,s.offset),x.removeAllRanges(),C>l?(x.addRange(y),x.extend(a.node,a.offset)):(y.setEnd(a.node,a.offset),x.addRange(y))))),y=[];for(x=b;x=x.parentNode;)1===x.nodeType&&y.push({element:x,left:x.scrollLeft,top:x.scrollTop});for("function"==typeof b.focus&&b.focus(),b=0;b<y.length;b++)(x=y[b]).element.scrollLeft=x.left,x.element.scrollTop=x.top}Hn=!!Wr,Fr=Wr=null,e.current=t,Yl=r;do{try{for(b=e;null!==Yl;){var w=Yl.flags;if(36&w&&ml(b,Yl.alternate,Yl),128&w){y=void 0;var I=Yl.ref;if(null!==I){var k=Yl.stateNode;Yl.tag,y=k,"function"==typeof I?I(y):I.current=y}}Yl=Yl.nextEffect}}catch(e){if(null===Yl)throw Error(i(330));Rs(Yl,e),Yl=Yl.nextEffect}}while(null!==Yl);Yl=null,Mo(),_l=o}else e.current=t;if(Xl)Xl=!1,Kl=e,Jl=n;else for(Yl=r;null!==Yl;)n=Yl.nextEffect,Yl.nextEffect=null,8&Yl.flags&&((w=Yl).sibling=null,w.stateNode=null),Yl=n;if(0===(r=e.pendingLanes)&&(Hl=null),1===r?e===rs?ts++:(ts=0,rs=e):ts=0,t=t.stateNode,Io&&"function"==typeof Io.onCommitFiberRoot)try{Io.onCommitFiberRoot(wo,t,void 0,64==(64&t.current.flags))}catch(e){}if(ps(e,Do()),Vl)throw Vl=!1,e=$l,$l=null,e;return 0!=(8&_l)||$o(),null}function Ts(){for(;null!==Yl;){var e=Yl.alternate;ss||null===ls||(0!=(8&Yl.flags)?Ge(Yl,ls)&&(ss=!0):13===Yl.tag&&kl(e,Yl)&&Ge(Yl,ls)&&(ss=!0));var n=Yl.flags;0!=(256&n)&&pl(e,Yl),0==(512&n)||Xl||(Xl=!0,Vo(97,(function(){return Os(),null}))),Yl=Yl.nextEffect}}function Os(){if(90!==Jl){var e=97<Jl?97:Jl;return Jl=90,Yo(e,zs)}return!1}function Ps(e,n){Gl.push(n,e),Xl||(Xl=!0,Vo(97,(function(){return Os(),null})))}function js(e,n){es.push(n,e),Xl||(Xl=!0,Vo(97,(function(){return Os(),null})))}function zs(){if(null===Kl)return!1;var e=Kl;if(Kl=null,0!=(48&_l))throw Error(i(331));var n=_l;_l|=32;var t=es;es=[];for(var r=0;r<t.length;r+=2){var o=t[r],a=t[r+1],l=o.destroy;if(o.destroy=void 0,"function"==typeof l)try{l()}catch(e){if(null===a)throw Error(i(330));Rs(a,e)}}for(t=Gl,Gl=[],r=0;r<t.length;r+=2){o=t[r],a=t[r+1];try{var s=o.create;o.destroy=s()}catch(e){if(null===a)throw Error(i(330));Rs(a,e)}}for(s=e.current.firstEffect;null!==s;)e=s.nextEffect,s.nextEffect=null,8&s.flags&&(s.sibling=null,s.stateNode=null),s=e;return _l=n,$o(),!0}function Ls(e,n,t){fa(e,n=cl(0,n=il(t,n),1)),n=cs(),null!==(e=ds(e,1))&&(Dn(e,1,n),ps(e,n))}function Rs(e,n){if(3===e.tag)Ls(e,e,n);else for(var t=e.return;null!==t;){if(3===t.tag){Ls(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Hl||!Hl.has(r))){var o=ul(t,e=il(n,e),1);if(fa(t,o),o=cs(),null!==(t=ds(t,1)))Dn(t,1,o),ps(t,o);else if("function"==typeof r.componentDidCatch&&(null===Hl||!Hl.has(r)))try{r.componentDidCatch(n,e)}catch(e){}break}}t=t.return}}function Ms(e,n,t){var r=e.pingCache;null!==r&&r.delete(n),n=cs(),e.pingedLanes|=e.suspendedLanes&t,Nl===e&&(Ol&t)===t&&(4===zl||3===zl&&(62914560&Ol)===Ol&&500>Do()-ql?xs(e,0):Wl|=t),ps(e,n)}function Us(e,n){var t=e.stateNode;null!==t&&t.delete(n),0==(n=0)&&(0==(2&(n=e.mode))?n=1:0==(4&n)?n=99===Qo()?1:2:(0===as&&(as=Rl),0===(n=Fn(62914560&~as))&&(n=4194304))),t=cs(),null!==(e=ds(e,n))&&(Dn(e,n,t),ps(e,t))}function Ws(e,n,t,r){this.tag=e,this.key=t,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=n,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Fs(e,n,t,r){return new Ws(e,n,t,r)}function qs(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Ds(e,n){var t=e.alternate;return null===t?((t=Fs(e.tag,n,e.key,e.mode)).elementType=e.elementType,t.type=e.type,t.stateNode=e.stateNode,t.alternate=e,e.alternate=t):(t.pendingProps=n,t.type=e.type,t.flags=0,t.nextEffect=null,t.firstEffect=null,t.lastEffect=null),t.childLanes=e.childLanes,t.lanes=e.lanes,t.child=e.child,t.memoizedProps=e.memoizedProps,t.memoizedState=e.memoizedState,t.updateQueue=e.updateQueue,n=e.dependencies,t.dependencies=null===n?null:{lanes:n.lanes,firstContext:n.firstContext},t.sibling=e.sibling,t.index=e.index,t.ref=e.ref,t}function Qs(e,n,t,r,o,a){var l=2;if(r=e,"function"==typeof e)qs(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case I:return Zs(t.children,o,a,n);case L:l=8,o|=16;break;case k:l=8,o|=1;break;case B:return(e=Fs(12,t,n,8|o)).elementType=B,e.type=B,e.lanes=a,e;case N:return(e=Fs(13,t,n,o)).type=N,e.elementType=N,e.lanes=a,e;case T:return(e=Fs(19,t,n,o)).elementType=T,e.lanes=a,e;case R:return Ys(t,o,a,n);case M:return(e=Fs(24,t,n,o)).elementType=M,e.lanes=a,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case E:l=10;break e;case S:l=9;break e;case _:l=11;break e;case O:l=14;break e;case P:l=16,r=null;break e;case j:l=22;break e}throw Error(i(130,null==e?e:typeof e,""))}return(n=Fs(l,t,n,o)).elementType=e,n.type=r,n.lanes=a,n}function Zs(e,n,t,r){return(e=Fs(7,e,r,n)).lanes=t,e}function Ys(e,n,t,r){return(e=Fs(23,e,r,n)).elementType=R,e.lanes=t,e}function Vs(e,n,t){return(e=Fs(6,e,null,n)).lanes=t,e}function $s(e,n,t){return(n=Fs(4,null!==e.children?e.children:[],e.key,n)).lanes=t,n.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},n}function Hs(e,n,t){this.tag=n,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=t,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=qn(0),this.expirationTimes=qn(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=qn(0),this.mutableSourceEagerHydrationData=null}function Xs(e,n,t){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:w,key:null==r?null:""+r,children:e,containerInfo:n,implementation:t}}function Ks(e,n,t,r){var o=n.current,a=cs(),l=us(o);e:if(t){n:{if(He(t=t._reactInternals)!==t||1!==t.tag)throw Error(i(170));var s=t;do{switch(s.tag){case 3:s=s.stateNode.context;break n;case 1:if(go(s.type)){s=s.stateNode.__reactInternalMemoizedMergedChildContext;break n}}s=s.return}while(null!==s);throw Error(i(171))}if(1===t.tag){var c=t.type;if(go(c)){t=yo(t,c,s);break e}}t=s}else t=fo;return null===n.context?n.context=t:n.pendingContext=t,(n=ua(a,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(n.callback=r),fa(o,n),fs(o,l,a),l}function Js(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Gs(e,n){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var t=e.retryLane;e.retryLane=0!==t&&t<n?t:n}}function ec(e,n){Gs(e,n),(e=e.alternate)&&Gs(e,n)}function nc(e,n,t){var r=null!=t&&null!=t.hydrationOptions&&t.hydrationOptions.mutableSources||null;if(t=new Hs(e,n,null!=t&&!0===t.hydrate),n=Fs(3,null,null,2===n?7:1===n?3:0),t.current=n,n.stateNode=t,sa(n),e[Gr]=t.current,Tr(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var o=(n=r[e])._getVersion;o=o(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,o]:t.mutableSourceEagerHydrationData.push(n,o)}this._internalRoot=t}function tc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function rc(e,n,t,r,o){var a=t._reactRootContainer;if(a){var i=a._internalRoot;if("function"==typeof o){var l=o;o=function(){var e=Js(i);l.call(e)}}Ks(n,i,e,o)}else{if(a=t._reactRootContainer=function(e,n){if(n||(n=!(!(n=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==n.nodeType||!n.hasAttribute("data-reactroot"))),!n)for(var t;t=e.lastChild;)e.removeChild(t);return new nc(e,0,n?{hydrate:!0}:void 0)}(t,r),i=a._internalRoot,"function"==typeof o){var s=o;o=function(){var e=Js(i);s.call(e)}}vs((function(){Ks(n,i,e,o)}))}return Js(i)}function oc(e,n){var t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!tc(n))throw Error(i(200));return Xs(e,n,null,t)}Zl=function(e,n,t){var r=n.lanes;if(null!==e)if(e.memoizedProps!==n.pendingProps||mo.current)Li=!0;else{if(0==(t&r)){switch(Li=!1,n.tag){case 3:Yi(n),Va();break;case 5:za(n);break;case 1:go(n.type)&&xo(n);break;case 4:Pa(n,n.stateNode.containerInfo);break;case 10:r=n.memoizedProps.value;var o=n.type._context;uo(Jo,o._currentValue),o._currentValue=r;break;case 13:if(null!==n.memoizedState)return 0!=(t&n.child.childLanes)?Ki(e,n,t):(uo(Ra,1&Ra.current),null!==(n=tl(e,n,t))?n.sibling:null);uo(Ra,1&Ra.current);break;case 19:if(r=0!=(t&n.childLanes),0!=(64&e.flags)){if(r)return nl(e,n,t);n.flags|=64}if(null!==(o=n.memoizedState)&&(o.rendering=null,o.tail=null,o.lastEffect=null),uo(Ra,Ra.current),r)break;return null;case 23:case 24:return n.lanes=0,Fi(e,n,t)}return tl(e,n,t)}Li=0!=(16384&e.flags)}else Li=!1;switch(n.lanes=0,n.tag){case 2:if(r=n.type,null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2),e=n.pendingProps,o=ho(n,po.current),aa(n,t),o=ii(null,n,r,e,o,t),n.flags|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(n.tag=1,n.memoizedState=null,n.updateQueue=null,go(r)){var a=!0;xo(n)}else a=!1;n.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,sa(n);var l=r.getDerivedStateFromProps;"function"==typeof l&&ha(n,r,l,e),o.updater=ga,n.stateNode=o,o._reactInternals=n,xa(n,r,e,t),n=Zi(null,n,r,!0,a,t)}else n.tag=0,Ri(null,n,o,t),n=n.child;return n;case 16:o=n.elementType;e:{switch(null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2),e=n.pendingProps,o=(a=o._init)(o._payload),n.type=o,a=n.tag=function(e){if("function"==typeof e)return qs(e)?1:0;if(null!=e){if((e=e.$$typeof)===_)return 11;if(e===O)return 14}return 2}(o),e=Ko(o,e),a){case 0:n=Di(null,n,o,e,t);break e;case 1:n=Qi(null,n,o,e,t);break e;case 11:n=Mi(null,n,o,e,t);break e;case 14:n=Ui(null,n,o,Ko(o.type,e),r,t);break e}throw Error(i(306,o,""))}return n;case 0:return r=n.type,o=n.pendingProps,Di(e,n,r,o=n.elementType===r?o:Ko(r,o),t);case 1:return r=n.type,o=n.pendingProps,Qi(e,n,r,o=n.elementType===r?o:Ko(r,o),t);case 3:if(Yi(n),r=n.updateQueue,null===e||null===r)throw Error(i(282));if(r=n.pendingProps,o=null!==(o=n.memoizedState)?o.element:null,ca(e,n),pa(n,r,null,t),(r=n.memoizedState.element)===o)Va(),n=tl(e,n,t);else{if((a=(o=n.stateNode).hydrate)&&(Wa=Vr(n.stateNode.containerInfo.firstChild),Ua=n,a=Fa=!0),a){if(null!=(e=o.mutableSourceEagerHydrationData))for(o=0;o<e.length;o+=2)(a=e[o])._workInProgressVersionPrimary=e[o+1],$a.push(a);for(t=Ea(n,null,r,t),n.child=t;t;)t.flags=-3&t.flags|1024,t=t.sibling}else Ri(e,n,r,t),Va();n=n.child}return n;case 5:return za(n),null===e&&Qa(n),r=n.type,o=n.pendingProps,a=null!==e?e.memoizedProps:null,l=o.children,Dr(r,o)?l=null:null!==a&&Dr(r,a)&&(n.flags|=16),qi(e,n),Ri(e,n,l,t),n.child;case 6:return null===e&&Qa(n),null;case 13:return Ki(e,n,t);case 4:return Pa(n,n.stateNode.containerInfo),r=n.pendingProps,null===e?n.child=Ba(n,null,r,t):Ri(e,n,r,t),n.child;case 11:return r=n.type,o=n.pendingProps,Mi(e,n,r,o=n.elementType===r?o:Ko(r,o),t);case 7:return Ri(e,n,n.pendingProps,t),n.child;case 8:case 12:return Ri(e,n,n.pendingProps.children,t),n.child;case 10:e:{r=n.type._context,o=n.pendingProps,l=n.memoizedProps,a=o.value;var s=n.type._context;if(uo(Jo,s._currentValue),s._currentValue=a,null!==l)if(s=l.value,0==(a=cr(s,a)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(s,a):1073741823))){if(l.children===o.children&&!mo.current){n=tl(e,n,t);break e}}else for(null!==(s=n.child)&&(s.return=n);null!==s;){var c=s.dependencies;if(null!==c){l=s.child;for(var u=c.firstContext;null!==u;){if(u.context===r&&0!=(u.observedBits&a)){1===s.tag&&((u=ua(-1,t&-t)).tag=2,fa(s,u)),s.lanes|=t,null!==(u=s.alternate)&&(u.lanes|=t),oa(s.return,t),c.lanes|=t;break}u=u.next}}else l=10===s.tag&&s.type===n.type?null:s.child;if(null!==l)l.return=s;else for(l=s;null!==l;){if(l===n){l=null;break}if(null!==(s=l.sibling)){s.return=l.return,l=s;break}l=l.return}s=l}Ri(e,n,o.children,t),n=n.child}return n;case 9:return o=n.type,r=(a=n.pendingProps).children,aa(n,t),r=r(o=ia(o,a.unstable_observedBits)),n.flags|=1,Ri(e,n,r,t),n.child;case 14:return a=Ko(o=n.type,n.pendingProps),Ui(e,n,o,a=Ko(o.type,a),r,t);case 15:return Wi(e,n,n.type,n.pendingProps,r,t);case 17:return r=n.type,o=n.pendingProps,o=n.elementType===r?o:Ko(r,o),null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2),n.tag=1,go(r)?(e=!0,xo(n)):e=!1,aa(n,t),ba(n,r,o),xa(n,r,o,t),Zi(null,n,r,!0,e,t);case 19:return nl(e,n,t);case 23:case 24:return Fi(e,n,t)}throw Error(i(156,n.tag))},nc.prototype.render=function(e){Ks(e,this._internalRoot,null,null)},nc.prototype.unmount=function(){var e=this._internalRoot,n=e.containerInfo;Ks(null,e,null,(function(){n[Gr]=null}))},en=function(e){13===e.tag&&(fs(e,4,cs()),ec(e,4))},nn=function(e){13===e.tag&&(fs(e,67108864,cs()),ec(e,67108864))},tn=function(e){if(13===e.tag){var n=cs(),t=us(e);fs(e,t,n),ec(e,t)}},rn=function(e,n){return n()},Be=function(e,n,t){switch(n){case"input":if(te(e,t),n=t.name,"radio"===t.type&&null!=n){for(t=e;t.parentNode;)t=t.parentNode;for(t=t.querySelectorAll("input[name="+JSON.stringify(""+n)+'][type="radio"]'),n=0;n<t.length;n++){var r=t[n];if(r!==e&&r.form===e.form){var o=oo(r);if(!o)throw Error(i(90));K(r),te(r,o)}}}break;case"textarea":ce(e,t);break;case"select":null!=(n=t.value)&&ie(e,!!t.multiple,n,!1)}},Oe=gs,Pe=function(e,n,t,r,o){var a=_l;_l|=4;try{return Yo(98,e.bind(null,n,t,r,o))}finally{0===(_l=a)&&(Ql(),$o())}},je=function(){0==(49&_l)&&(function(){if(null!==ns){var e=ns;ns=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,ps(e,Do())}))}$o()}(),Os())},ze=function(e,n){var t=_l;_l|=2;try{return e(n)}finally{0===(_l=t)&&(Ql(),$o())}};var ac={Events:[to,ro,oo,Ne,Te,Os,{current:!1}]},ic={findFiberByHostInstance:no,bundleType:0,version:"17.0.2",rendererPackageName:"react-dom"},lc={bundleType:ic.bundleType,version:ic.version,rendererPackageName:ic.rendererPackageName,rendererConfig:ic.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:x.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Je(e))?null:e.stateNode},findFiberByHostInstance:ic.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var sc=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!sc.isDisabled&&sc.supportsFiber)try{wo=sc.inject(lc),Io=sc}catch(Ae){}}n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ac,n.createPortal=oc,n.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var n=e._reactInternals;if(void 0===n){if("function"==typeof e.render)throw Error(i(188));throw Error(i(268,Object.keys(e)))}return null===(e=Je(n))?null:e.stateNode},n.flushSync=function(e,n){var t=_l;if(0!=(48&t))return e(n);_l|=1;try{if(e)return Yo(99,e.bind(null,n))}finally{_l=t,$o()}},n.hydrate=function(e,n,t){if(!tc(n))throw Error(i(200));return rc(null,e,n,!0,t)},n.render=function(e,n,t){if(!tc(n))throw Error(i(200));return rc(null,e,n,!1,t)},n.unmountComponentAtNode=function(e){if(!tc(e))throw Error(i(40));return!!e._reactRootContainer&&(vs((function(){rc(null,null,e,!1,(function(){e._reactRootContainer=null,e[Gr]=null}))})),!0)},n.unstable_batchedUpdates=gs,n.unstable_createPortal=function(e,n){return oc(e,n,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},n.unstable_renderSubtreeIntoContainer=function(e,n,t,r){if(!tc(t))throw Error(i(200));if(null==e||void 0===e._reactInternals)throw Error(i(38));return rc(e,n,t,!1,r)},n.version="17.0.2"},1542:(e,n,t)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=t(3577)},1535:(e,n,t)=>{"use strict";var r=t(2525),o=60103,a=60106;n.Fragment=60107,n.StrictMode=60108,n.Profiler=60114;var i=60109,l=60110,s=60112;n.Suspense=60113;var c=60115,u=60116;if("function"==typeof Symbol&&Symbol.for){var f=Symbol.for;o=f("react.element"),a=f("react.portal"),n.Fragment=f("react.fragment"),n.StrictMode=f("react.strict_mode"),n.Profiler=f("react.profiler"),i=f("react.provider"),l=f("react.context"),s=f("react.forward_ref"),n.Suspense=f("react.suspense"),c=f("react.memo"),u=f("react.lazy")}var d="function"==typeof Symbol&&Symbol.iterator;function p(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},A={};function h(e,n,t){this.props=e,this.context=n,this.refs=A,this.updater=t||m}function g(){}function v(e,n,t){this.props=e,this.context=n,this.refs=A,this.updater=t||m}h.prototype.isReactComponent={},h.prototype.setState=function(e,n){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,n,"setState")},h.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},g.prototype=h.prototype;var b=v.prototype=new g;b.constructor=v,r(b,h.prototype),b.isPureReactComponent=!0;var y={current:null},x=Object.prototype.hasOwnProperty,C={key:!0,ref:!0,__self:!0,__source:!0};function w(e,n,t){var r,a={},i=null,l=null;if(null!=n)for(r in void 0!==n.ref&&(l=n.ref),void 0!==n.key&&(i=""+n.key),n)x.call(n,r)&&!C.hasOwnProperty(r)&&(a[r]=n[r]);var s=arguments.length-2;if(1===s)a.children=t;else if(1<s){for(var c=Array(s),u=0;u<s;u++)c[u]=arguments[u+2];a.children=c}if(e&&e.defaultProps)for(r in s=e.defaultProps)void 0===a[r]&&(a[r]=s[r]);return{$$typeof:o,type:e,key:i,ref:l,props:a,_owner:y.current}}function I(e){return"object"==typeof e&&null!==e&&e.$$typeof===o}var k=/\/+/g;function B(e,n){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var n={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return n[e]}))}(""+e.key):n.toString(36)}function E(e,n,t,r,i){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var s=!1;if(null===e)s=!0;else switch(l){case"string":case"number":s=!0;break;case"object":switch(e.$$typeof){case o:case a:s=!0}}if(s)return i=i(s=e),e=""===r?"."+B(s,0):r,Array.isArray(i)?(t="",null!=e&&(t=e.replace(k,"$&/")+"/"),E(i,n,t,"",(function(e){return e}))):null!=i&&(I(i)&&(i=function(e,n){return{$$typeof:o,type:e.type,key:n,ref:e.ref,props:e.props,_owner:e._owner}}(i,t+(!i.key||s&&s.key===i.key?"":(""+i.key).replace(k,"$&/")+"/")+e)),n.push(i)),1;if(s=0,r=""===r?".":r+":",Array.isArray(e))for(var c=0;c<e.length;c++){var u=r+B(l=e[c],c);s+=E(l,n,t,u,i)}else if(u=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e),"function"==typeof u)for(e=u.call(e),c=0;!(l=e.next()).done;)s+=E(l=l.value,n,t,u=r+B(l,c++),i);else if("object"===l)throw n=""+e,Error(p(31,"[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n));return s}function S(e,n,t){if(null==e)return e;var r=[],o=0;return E(e,r,"","",(function(e){return n.call(t,e,o++)})),r}function _(e){if(-1===e._status){var n=e._result;n=n(),e._status=0,e._result=n,n.then((function(n){0===e._status&&(n=n.default,e._status=1,e._result=n)}),(function(n){0===e._status&&(e._status=2,e._result=n)}))}if(1===e._status)return e._result;throw e._result}var N={current:null};function T(){var e=N.current;if(null===e)throw Error(p(321));return e}var O={ReactCurrentDispatcher:N,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:y,IsSomeRendererActing:{current:!1},assign:r};n.Children={map:S,forEach:function(e,n,t){S(e,(function(){n.apply(this,arguments)}),t)},count:function(e){var n=0;return S(e,(function(){n++})),n},toArray:function(e){return S(e,(function(e){return e}))||[]},only:function(e){if(!I(e))throw Error(p(143));return e}},n.Component=h,n.PureComponent=v,n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=O,n.cloneElement=function(e,n,t){if(null==e)throw Error(p(267,e));var a=r({},e.props),i=e.key,l=e.ref,s=e._owner;if(null!=n){if(void 0!==n.ref&&(l=n.ref,s=y.current),void 0!==n.key&&(i=""+n.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(u in n)x.call(n,u)&&!C.hasOwnProperty(u)&&(a[u]=void 0===n[u]&&void 0!==c?c[u]:n[u])}var u=arguments.length-2;if(1===u)a.children=t;else if(1<u){c=Array(u);for(var f=0;f<u;f++)c[f]=arguments[f+2];a.children=c}return{$$typeof:o,type:e.type,key:i,ref:l,props:a,_owner:s}},n.createContext=function(e,n){return void 0===n&&(n=null),(e={$$typeof:l,_calculateChangedBits:n,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},n.createElement=w,n.createFactory=function(e){var n=w.bind(null,e);return n.type=e,n},n.createRef=function(){return{current:null}},n.forwardRef=function(e){return{$$typeof:s,render:e}},n.isValidElement=I,n.lazy=function(e){return{$$typeof:u,_payload:{_status:-1,_result:e},_init:_}},n.memo=function(e,n){return{$$typeof:c,type:e,compare:void 0===n?null:n}},n.useCallback=function(e,n){return T().useCallback(e,n)},n.useContext=function(e,n){return T().useContext(e,n)},n.useDebugValue=function(){},n.useEffect=function(e,n){return T().useEffect(e,n)},n.useImperativeHandle=function(e,n,t){return T().useImperativeHandle(e,n,t)},n.useLayoutEffect=function(e,n){return T().useLayoutEffect(e,n)},n.useMemo=function(e,n){return T().useMemo(e,n)},n.useReducer=function(e,n,t){return T().useReducer(e,n,t)},n.useRef=function(e){return T().useRef(e)},n.useState=function(e){return T().useState(e)},n.version="17.0.2"},7378:(e,n,t)=>{"use strict";e.exports=t(1535)},3323:(e,n)=>{"use strict";var t,r,o,a;if("object"==typeof performance&&"function"==typeof performance.now){var i=performance;n.unstable_now=function(){return i.now()}}else{var l=Date,s=l.now();n.unstable_now=function(){return l.now()-s}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var c=null,u=null,f=function(){if(null!==c)try{var e=n.unstable_now();c(!0,e),c=null}catch(e){throw setTimeout(f,0),e}};t=function(e){null!==c?setTimeout(t,0,e):(c=e,setTimeout(f,0))},r=function(e,n){u=setTimeout(e,n)},o=function(){clearTimeout(u)},n.unstable_shouldYield=function(){return!1},a=n.unstable_forceFrameRate=function(){}}else{var d=window.setTimeout,p=window.clearTimeout;if("undefined"!=typeof console){var m=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof m&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var A=!1,h=null,g=-1,v=5,b=0;n.unstable_shouldYield=function(){return n.unstable_now()>=b},a=function(){},n.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):v=0<e?Math.floor(1e3/e):5};var y=new MessageChannel,x=y.port2;y.port1.onmessage=function(){if(null!==h){var e=n.unstable_now();b=e+v;try{h(!0,e)?x.postMessage(null):(A=!1,h=null)}catch(e){throw x.postMessage(null),e}}else A=!1},t=function(e){h=e,A||(A=!0,x.postMessage(null))},r=function(e,t){g=d((function(){e(n.unstable_now())}),t)},o=function(){p(g),g=-1}}function C(e,n){var t=e.length;e.push(n);e:for(;;){var r=t-1>>>1,o=e[r];if(!(void 0!==o&&0<k(o,n)))break e;e[r]=n,e[t]=o,t=r}}function w(e){return void 0===(e=e[0])?null:e}function I(e){var n=e[0];if(void 0!==n){var t=e.pop();if(t!==n){e[0]=t;e:for(var r=0,o=e.length;r<o;){var a=2*(r+1)-1,i=e[a],l=a+1,s=e[l];if(void 0!==i&&0>k(i,t))void 0!==s&&0>k(s,i)?(e[r]=s,e[l]=t,r=l):(e[r]=i,e[a]=t,r=a);else{if(!(void 0!==s&&0>k(s,t)))break e;e[r]=s,e[l]=t,r=l}}}return n}return null}function k(e,n){var t=e.sortIndex-n.sortIndex;return 0!==t?t:e.id-n.id}var B=[],E=[],S=1,_=null,N=3,T=!1,O=!1,P=!1;function j(e){for(var n=w(E);null!==n;){if(null===n.callback)I(E);else{if(!(n.startTime<=e))break;I(E),n.sortIndex=n.expirationTime,C(B,n)}n=w(E)}}function z(e){if(P=!1,j(e),!O)if(null!==w(B))O=!0,t(L);else{var n=w(E);null!==n&&r(z,n.startTime-e)}}function L(e,t){O=!1,P&&(P=!1,o()),T=!0;var a=N;try{for(j(t),_=w(B);null!==_&&(!(_.expirationTime>t)||e&&!n.unstable_shouldYield());){var i=_.callback;if("function"==typeof i){_.callback=null,N=_.priorityLevel;var l=i(_.expirationTime<=t);t=n.unstable_now(),"function"==typeof l?_.callback=l:_===w(B)&&I(B),j(t)}else I(B);_=w(B)}if(null!==_)var s=!0;else{var c=w(E);null!==c&&r(z,c.startTime-t),s=!1}return s}finally{_=null,N=a,T=!1}}var R=a;n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(e){e.callback=null},n.unstable_continueExecution=function(){O||T||(O=!0,t(L))},n.unstable_getCurrentPriorityLevel=function(){return N},n.unstable_getFirstCallbackNode=function(){return w(B)},n.unstable_next=function(e){switch(N){case 1:case 2:case 3:var n=3;break;default:n=N}var t=N;N=n;try{return e()}finally{N=t}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=R,n.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var t=N;N=e;try{return n()}finally{N=t}},n.unstable_scheduleCallback=function(e,a,i){var l=n.unstable_now();switch(i="object"==typeof i&&null!==i&&"number"==typeof(i=i.delay)&&0<i?l+i:l,e){case 1:var s=-1;break;case 2:s=250;break;case 5:s=1073741823;break;case 4:s=1e4;break;default:s=5e3}return e={id:S++,callback:a,priorityLevel:e,startTime:i,expirationTime:s=i+s,sortIndex:-1},i>l?(e.sortIndex=i,C(E,e),null===w(B)&&e===w(E)&&(P?o():P=!0,r(z,i-l))):(e.sortIndex=s,C(B,e),O||T||(O=!0,t(L))),e},n.unstable_wrapCallback=function(e){var n=N;return function(){var t=N;N=n;try{return e.apply(this,arguments)}finally{N=t}}}},1102:(e,n,t)=>{"use strict";e.exports=t(3323)},1892:e=>{"use strict";var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},i=[],l=0;l<e.length;l++){var s=e[l],c=r.base?s[0]+r.base:s[0],u=a[c]||0,f="".concat(c," ").concat(u);a[c]=u+1;var d=t(f),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)n[d].references++,n[d].updater(p);else{var m=o(p,r);r.byIndex=l,n.splice(l,0,{identifier:f,updater:m,references:1})}i.push(f)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var l=t(a[i]);n[l].references--}for(var s=r(e,o),c=0;c<a.length;c++){var u=t(a[c]);0===n[u].references&&(n[u].updater(),n.splice(u,1))}a=s}}},8311:e=>{"use strict";var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},8060:e=>{"use strict";e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},8192:(e,n,t)=>{"use strict";e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},5760:e=>{"use strict";e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},4865:e=>{"use strict";e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},9642:(e,n,t)=>{"use strict";e.exports=t.p+"images/apparatnyij-limfodrenazh.jpg"},4841:(e,n,t)=>{"use strict";e.exports=t.p+"images/holter.jpg"},7726:(e,n,t)=>{"use strict";e.exports=t.p+"images/kedrovaya-bochka.jpg"},7069:(e,n,t)=>{"use strict";e.exports=t.p+"images/lechenie-bez-lekarstv.jpg"},9696:(e,n,t)=>{"use strict";e.exports=t.p+"images/speleoterapiya.jpg"},928:(e,n,t)=>{"use strict";e.exports=t.p+"images/tambukanskaya-gryaz.jpg"}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0,(()=>{"use strict";var e,n=t(7378),r=t(1542);function o(){return o=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},o.apply(this,arguments)}!function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"}(e||(e={}));var a="beforeunload";function i(e){e.preventDefault(),e.returnValue=""}function l(){var e=[];return{get length(){return e.length},push:function(n){return e.push(n),function(){e=e.filter((function(e){return e!==n}))}},call:function(n){e.forEach((function(e){return e&&e(n)}))}}}function s(e){var n=e.pathname,t=void 0===n?"/":n,r=e.search,o=void 0===r?"":r,a=e.hash,i=void 0===a?"":a;return o&&"?"!==o&&(t+="?"===o.charAt(0)?o:"?"+o),i&&"#"!==i&&(t+="#"===i.charAt(0)?i:"#"+i),t}function c(e){var n={};if(e){var t=e.indexOf("#");t>=0&&(n.hash=e.substr(t),e=e.substr(0,t));var r=e.indexOf("?");r>=0&&(n.search=e.substr(r),e=e.substr(0,r)),e&&(n.pathname=e)}return n}const u=(0,n.createContext)(null),f=(0,n.createContext)(null),d=(0,n.createContext)({outlet:null,matches:[]});function p(e,n){if(!e)throw new Error(n)}function m(e,n,t){void 0===t&&(t="/");let r=C(("string"==typeof n?c(n):n).pathname||"/",t);if(null==r)return null;let o=A(e);!function(e){e.sort(((e,n)=>e.score!==n.score?n.score-e.score:function(e,n){let t=e.length===n.length&&e.slice(0,-1).every(((e,t)=>e===n[t]));return t?e[e.length-1]-n[n.length-1]:0}(e.routesMeta.map((e=>e.childrenIndex)),n.routesMeta.map((e=>e.childrenIndex)))))}(o);let a=null;for(let e=0;null==a&&e<o.length;++e)a=b(o[e],r);return a}function A(e,n,t,r){return void 0===n&&(n=[]),void 0===t&&(t=[]),void 0===r&&(r=""),e.forEach(((e,o)=>{let a={relativePath:e.path||"",caseSensitive:!0===e.caseSensitive,childrenIndex:o,route:e};a.relativePath.startsWith("/")&&(a.relativePath.startsWith(r)||p(!1),a.relativePath=a.relativePath.slice(r.length));let i=w([r,a.relativePath]),l=t.concat(a);e.children&&e.children.length>0&&(!0===e.index&&p(!1),A(e.children,n,l,i)),(null!=e.path||e.index)&&n.push({path:i,score:v(i,e.index),routesMeta:l})})),n}const h=/^:\w+$/,g=e=>"*"===e;function v(e,n){let t=e.split("/"),r=t.length;return t.some(g)&&(r+=-2),n&&(r+=2),t.filter((e=>!g(e))).reduce(((e,n)=>e+(h.test(n)?3:""===n?1:10)),r)}function b(e,n){let{routesMeta:t}=e,r={},o="/",a=[];for(let e=0;e<t.length;++e){let i=t[e],l=e===t.length-1,s="/"===o?n:n.slice(o.length)||"/",c=y({path:i.relativePath,caseSensitive:i.caseSensitive,end:l},s);if(!c)return null;Object.assign(r,c.params);let u=i.route;a.push({params:r,pathname:w([o,c.pathname]),pathnameBase:I(w([o,c.pathnameBase])),route:u}),"/"!==c.pathnameBase&&(o=w([o,c.pathnameBase]))}return a}function y(e,n){"string"==typeof e&&(e={path:e,caseSensitive:!1,end:!0});let[t,r]=function(e,n,t){void 0===n&&(n=!1),void 0===t&&(t=!0);let r=[],o="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^$?{}|()[\]]/g,"\\$&").replace(/:(\w+)/g,((e,n)=>(r.push(n),"([^\\/]+)")));return e.endsWith("*")?(r.push("*"),o+="*"===e||"/*"===e?"(.*)$":"(?:\\/(.+)|\\/*)$"):o+=t?"\\/*$":"(?:(?=[.~-]|%[0-9A-F]{2})|\\b|\\/|$)",[new RegExp(o,n?void 0:"i"),r]}(e.path,e.caseSensitive,e.end),o=n.match(t);if(!o)return null;let a=o[0],i=a.replace(/(.)\/+$/,"$1"),l=o.slice(1);return{params:r.reduce(((e,n,t)=>{if("*"===n){let e=l[t]||"";i=a.slice(0,a.length-e.length).replace(/(.)\/+$/,"$1")}return e[n]=function(e,n){try{return decodeURIComponent(e)}catch(n){return e}}(l[t]||""),e}),{}),pathname:a,pathnameBase:i,pattern:e}}function x(e,n,t){let r,o="string"==typeof e?c(e):e,a=""===e||""===o.pathname?"/":o.pathname;if(null==a)r=t;else{let e=n.length-1;if(a.startsWith("..")){let n=a.split("/");for(;".."===n[0];)n.shift(),e-=1;o.pathname=n.join("/")}r=e>=0?n[e]:"/"}let i=function(e,n){void 0===n&&(n="/");let{pathname:t,search:r="",hash:o=""}="string"==typeof e?c(e):e,a=t?t.startsWith("/")?t:function(e,n){let t=n.replace(/\/+$/,"").split("/");return e.split("/").forEach((e=>{".."===e?t.length>1&&t.pop():"."!==e&&t.push(e)})),t.length>1?t.join("/"):"/"}(t,n):n;return{pathname:a,search:k(r),hash:B(o)}}(o,r);return a&&"/"!==a&&a.endsWith("/")&&!i.pathname.endsWith("/")&&(i.pathname+="/"),i}function C(e,n){if("/"===n)return e;if(!e.toLowerCase().startsWith(n.toLowerCase()))return null;let t=e.charAt(n.length);return t&&"/"!==t?null:e.slice(n.length)||"/"}const w=e=>e.join("/").replace(/\/\/+/g,"/"),I=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/"),k=e=>e&&"?"!==e?e.startsWith("?")?e:"?"+e:"",B=e=>e&&"#"!==e?e.startsWith("#")?e:"#"+e:"";function E(){return null!=(0,n.useContext)(f)}function S(){return E()||p(!1),(0,n.useContext)(f).location}function _(e){let{matches:t}=(0,n.useContext)(d),{pathname:r}=S(),o=JSON.stringify(t.map((e=>e.pathnameBase)));return(0,n.useMemo)((()=>x(e,JSON.parse(o),r)),[e,o,r])}function N(e){p(!1)}function T(t){let{basename:r="/",children:o=null,location:a,navigationType:i=e.Pop,navigator:l,static:s=!1}=t;E()&&p(!1);let d=I(r),m=(0,n.useMemo)((()=>({basename:d,navigator:l,static:s})),[d,l,s]);"string"==typeof a&&(a=c(a));let{pathname:A="/",search:h="",hash:g="",state:v=null,key:b="default"}=a,y=(0,n.useMemo)((()=>{let e=C(A,d);return null==e?null:{pathname:e,search:h,hash:g,state:v,key:b}}),[d,A,h,g,v,b]);return null==y?null:(0,n.createElement)(u.Provider,{value:m},(0,n.createElement)(f.Provider,{children:o,value:{location:y,navigationType:i}}))}function O(e){let{children:t,location:r}=e;return function(e,t){E()||p(!1);let{matches:r}=(0,n.useContext)(d),o=r[r.length-1],a=o?o.params:{},i=(o&&o.pathname,o?o.pathnameBase:"/");o&&o.route;let l,s=S();if(t){var u;let e="string"==typeof t?c(t):t;"/"===i||(null==(u=e.pathname)?void 0:u.startsWith(i))||p(!1),l=e}else l=s;let f=l.pathname||"/",A=m(e,{pathname:"/"===i?f:f.slice(i.length)||"/"});return function(e,t){return void 0===t&&(t=[]),null==e?null:e.reduceRight(((r,o,a)=>(0,n.createElement)(d.Provider,{children:void 0!==o.route.element?o.route.element:r,value:{outlet:r,matches:t.concat(e.slice(0,a+1))}})),null)}(A&&A.map((e=>Object.assign({},e,{params:Object.assign({},a,e.params),pathname:w([i,e.pathname]),pathnameBase:"/"===e.pathnameBase?i:w([i,e.pathnameBase])}))),r)}(P(t),r)}function P(e){let t=[];return n.Children.forEach(e,(e=>{if(!(0,n.isValidElement)(e))return;if(e.type===n.Fragment)return void t.push.apply(t,P(e.props.children));e.type!==N&&p(!1);let r={caseSensitive:e.props.caseSensitive,element:e.props.element,index:e.props.index,path:e.props.path};e.props.children&&(r.children=P(e.props.children)),t.push(r)})),t}function j(){return j=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},j.apply(this,arguments)}const z=["onClick","reloadDocument","replace","state","target","to"];function L(t){let{basename:r,children:u,window:f}=t,d=(0,n.useRef)();null==d.current&&(d.current=function(n){void 0===n&&(n={});var t=n.window,r=void 0===t?document.defaultView:t,u=r.history;function f(){var e=c(r.location.hash.substr(1)),n=e.pathname,t=void 0===n?"/":n,o=e.search,a=void 0===o?"":o,i=e.hash,l=void 0===i?"":i,s=u.state||{};return[s.idx,{pathname:t,search:a,hash:l,state:s.usr||null,key:s.key||"default"}]}var d=null;function p(){if(d)b.call(d),d=null;else{var n=e.Pop,t=f(),r=t[0],o=t[1];if(b.length){if(null!=r){var a=h-r;a&&(d={action:n,location:o,retry:function(){k(-1*a)}},k(a))}}else I(n)}}r.addEventListener("popstate",p),r.addEventListener("hashchange",(function(){s(f()[1])!==s(g)&&p()}));var m=e.Pop,A=f(),h=A[0],g=A[1],v=l(),b=l();function y(e){return function(){var e=document.querySelector("base"),n="";if(e&&e.getAttribute("href")){var t=r.location.href,o=t.indexOf("#");n=-1===o?t:t.slice(0,o)}return n}()+"#"+("string"==typeof e?e:s(e))}function x(e,n){return void 0===n&&(n=null),o({pathname:g.pathname,hash:"",search:""},"string"==typeof e?c(e):e,{state:n,key:Math.random().toString(36).substr(2,8)})}function C(e,n){return[{usr:e.state,key:e.key,idx:n},y(e)]}function w(e,n,t){return!b.length||(b.call({action:e,location:n,retry:t}),!1)}function I(e){m=e;var n=f();h=n[0],g=n[1],v.call({action:m,location:g})}function k(e){u.go(e)}return null==h&&(h=0,u.replaceState(o({},u.state,{idx:h}),"")),{get action(){return m},get location(){return g},createHref:y,push:function n(t,o){var a=e.Push,i=x(t,o);if(w(a,i,(function(){n(t,o)}))){var l=C(i,h+1),s=l[0],c=l[1];try{u.pushState(s,"",c)}catch(e){r.location.assign(c)}I(a)}},replace:function n(t,r){var o=e.Replace,a=x(t,r);if(w(o,a,(function(){n(t,r)}))){var i=C(a,h),l=i[0],s=i[1];u.replaceState(l,"",s),I(o)}},go:k,back:function(){k(-1)},forward:function(){k(1)},listen:function(e){return v.push(e)},block:function(e){var n=b.push(e);return 1===b.length&&r.addEventListener(a,i),function(){n(),b.length||r.removeEventListener(a,i)}}}}({window:f}));let p=d.current,[m,A]=(0,n.useState)({action:p.action,location:p.location});return(0,n.useLayoutEffect)((()=>p.listen(A)),[p]),(0,n.createElement)(T,{basename:r,children:u,location:m.location,navigationType:m.action,navigator:p})}const R=(0,n.forwardRef)((function(e,t){let{onClick:r,reloadDocument:o,replace:a=!1,state:i,target:l,to:f}=e,m=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,z),A=function(e){E()||p(!1);let{basename:t,navigator:r}=(0,n.useContext)(u),{hash:o,pathname:a,search:i}=_(e),l=a;if("/"!==t){let n=function(e){return""===e||""===e.pathname?"/":"string"==typeof e?c(e).pathname:e.pathname}(e),r=null!=n&&n.endsWith("/");l="/"===a?t+(r?"/":""):w([t,a])}return r.createHref({pathname:l,search:i,hash:o})}(f),h=function(e,t){let{target:r,replace:o,state:a}=void 0===t?{}:t,i=function(){E()||p(!1);let{basename:e,navigator:t}=(0,n.useContext)(u),{matches:r}=(0,n.useContext)(d),{pathname:o}=S(),a=JSON.stringify(r.map((e=>e.pathnameBase))),i=(0,n.useRef)(!1);(0,n.useEffect)((()=>{i.current=!0}));let l=(0,n.useCallback)((function(n,r){if(void 0===r&&(r={}),!i.current)return;if("number"==typeof n)return void t.go(n);let l=x(n,JSON.parse(a),o);"/"!==e&&(l.pathname=w([e,l.pathname])),(r.replace?t.replace:t.push)(l,r.state)}),[e,t,a,o]);return l}(),l=S(),c=_(e);return(0,n.useCallback)((n=>{if(!(0!==n.button||r&&"_self"!==r||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(n))){n.preventDefault();let t=!!o||s(l)===s(c);i(e,{replace:t,state:a})}}),[l,i,c,o,a,r,e])}(f,{replace:a,state:i,target:l});return(0,n.createElement)("a",j({},m,{href:A,onClick:function(e){r&&r(e),e.defaultPrevented||o||h(e)},ref:t,target:l}))}));function M(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}function U(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,o,a=[],i=!0,l=!1;try{for(t=t.call(e);!(i=(r=t.next()).done)&&(a.push(r.value),!n||a.length!==n);i=!0);}catch(e){l=!0,o=e}finally{try{i||null==t.return||t.return()}finally{if(l)throw o}}return a}}(e,n)||function(e,n){if(e){if("string"==typeof e)return M(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?M(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var W=t(3615),F=t.n(W),q=t(1892),D=t.n(q),Q=t(5760),Z=t.n(Q),Y=t(8311),V=t.n(Y),$=t(8192),H=t.n($),X=t(8060),K=t.n(X),J=t(4865),G=t.n(J),ee=t(2064),ne={};ne.styleTagTransform=G(),ne.setAttributes=H(),ne.insert=V().bind(null,"head"),ne.domAPI=Z(),ne.insertStyleElement=K(),D()(ee.Z,ne);const te=ee.Z&&ee.Z.locals?ee.Z.locals:void 0;var re=function(e){var t=e.menuItems,r=e.isMobile,o=U((0,n.useState)(!0),2),a=o[0],i=o[1],l=U((0,n.useState)(!0),2),s=l[0],c=l[1],u=function(){return t&&t.map((function(e,t){return n.createElement(R,{key:t,className:te.navigationMenuItem,to:e.link,onClick:function(){return f()}},n.createElement("span",{className:te.navigationMenuItemText},e.name))}))},f=function(){document.getElementById("titleText").scrollIntoView({behavior:"smooth"})};return r?r?n.createElement("div",{className:te.navigationMenuContainer},n.createElement("div",{className:te.openMenu,onClick:function(){i(!a),c(!s)}},n.createElement("div",{className:te.btnMenu},n.createElement("span",null," ")),s?n.createElement("div",null," Закрыть меню "):n.createElement("div",null," Открыть меню ")),a?n.createElement("ul",{className:te.navigationMenuList},u()):null):void 0:n.createElement("div",{className:te.navigationMenuContainer},n.createElement("ul",{className:te.navigationMenuList},u()))};re.propTypes={menuItems:F().array,isMobile:F().bool};const oe=re;var ae=t(586),ie={};ie.styleTagTransform=G(),ie.setAttributes=H(),ie.insert=V().bind(null,"head"),ie.domAPI=Z(),ie.insertStyleElement=K(),D()(ae.Z,ie);const le=ae.Z&&ae.Z.locals?ae.Z.locals:void 0;var se=function(e){var t=e.textButton,r=e.handler;return n.createElement("div",{className:le.buttonContainer,onClick:r},n.createElement("div",{className:le.buttonText},t))};se.propTypes={textButton:F().string,handler:F().func};const ce=se;var ue=t(704),fe={};fe.styleTagTransform=G(),fe.setAttributes=H(),fe.insert=V().bind(null,"head"),fe.domAPI=Z(),fe.insertStyleElement=K(),D()(ue.Z,fe);const de=ue.Z&&ue.Z.locals?ue.Z.locals:void 0;var pe=function(e){var t=e.isActive,r=e.setActive,o=e.isClosable,a=e.children;return n.createElement("div",{className:t?"".concat(de.modal," ").concat(de.active):de.modal,onClick:function(){o&&r(!1)}},n.createElement("div",{className:t?"".concat(de.modalContent," ").concat(de.active):de.modalContent,onClick:function(e){return e.stopPropagation()}},a))};pe.propTypes={isActive:F().bool,setActive:F().func,isClosable:F().bool,children:F().any},pe.defaultProps={isActive:!1,isClosable:!0};const me=pe;function Ae(e,n,t,r,o,a,i){try{var l=e[a](i),s=l.value}catch(e){return void t(e)}l.done?n(s):Promise.resolve(s).then(r,o)}function he(e){return function(){var n=this,t=arguments;return new Promise((function(r,o){var a=e.apply(n,t);function i(e){Ae(a,r,o,i,l,"next",e)}function l(e){Ae(a,r,o,i,l,"throw",e)}i(void 0)}))}}var ge=t(7135),ve=t.n(ge),be=t(4206),ye=t.n(be),xe=function(){var e=he(ve().mark((function e(n){var t,r,o;return ve().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,ye().get("http://localhost:8080/api/doctor/getFullList");case 3:if(200!==(t=e.sent).status){e.next=9;break}if(!(t.data.length>=0)){e.next=9;break}for(r=[],o=0;o<t.data.length;o++)t.data[o].direction.toLowerCase()===n.toLowerCase()&&r.push(t.data[o]);return e.abrupt("return",r);case 9:e.next=14;break;case 11:e.prev=11,e.t0=e.catch(0),console.log("Ошибка получения данных с сервера");case 14:case"end":return e.stop()}}),e,null,[[0,11]])})));return function(n){return e.apply(this,arguments)}}(),Ce=function(){var e=he(ve().mark((function e(n,t,r){var o;return ve().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return o={method:"POST",headers:{"Content-type":"application/json"},data:{name:n,telephone:t,date:r},url:"http://localhost:8080/api/request/setRequest"},e.next=3,ye()(o).then((function(e){return e.data}));case 3:case"end":return e.stop()}}),e)})));return function(n,t,r){return e.apply(this,arguments)}}(),we=function(){var e=he(ve().mark((function e(n,t,r,o,a){var i;return ve().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return i={method:"POST",headers:{"Content-type":"application/json"},data:{name:n,sms:o,email:r,telephone:t,date:a},url:"http://localhost:8080/api/message/setMessage"},e.next=3,ye()(i).then((function(e){return e.data}));case 3:case"end":return e.stop()}}),e)})));return function(n,t,r,o,a){return e.apply(this,arguments)}}(),Ie=t(2203),ke={};ke.styleTagTransform=G(),ke.setAttributes=H(),ke.insert=V().bind(null,"head"),ke.domAPI=Z(),ke.insertStyleElement=K(),D()(Ie.Z,ke);const Be=Ie.Z&&Ie.Z.locals?Ie.Z.locals:void 0;var Ee=function(e){var t=e.setIsModalActive,r=e.setIsModalValidationFalseActive,o=U((0,n.useState)(""),2),a=o[0],i=o[1],l=U((0,n.useState)(""),2),s=l[0],c=l[1];return n.createElement("div",{className:Be.requestContainer},n.createElement("div",{className:Be.orderItem},n.createElement("div",{className:Be.blockHeaderText},"Мы Вам перезвоним"),n.createElement("div",{className:Be.fieldFlex},n.createElement("div",{className:Be.inputContainer},n.createElement("input",{placeholder:"Имя*",onBlur:function(e){i(e.target.value)},className:Be.textInput})),n.createElement("div",{className:Be.inputContainer},n.createElement("input",{placeholder:"Телефон*",onBlur:function(e){c(e.target.value)},className:Be.textInput})))),n.createElement("div",{className:Be.blockText},"Оставьте заявку на звонок и мы вам перезвоним!"),n.createElement("div",{className:Be.requestButtonsContainer},n.createElement(ce,{textButton:"Отправить заявку",handler:function(){return function(){var e=0,n=[];if(a.length>=2&&a.length<15?e++:n.push("Ошибка ввода имени"),/^(\+7|7|8)?[\s\-]?\(?[489][0-9]{2}\)?[\s\-]?[0-9]{3}[\s\-]?[0-9]{2}[\s\-]?[0-9]{2}$/.test(s)?e++:n.push("Ошибка ввода телефона"),2===e){var o=(new Date).toLocaleDateString("ru-RU")+" "+(new Date).toLocaleTimeString();Ce(a,s,o),t(!1)}2!==e&&(t(!1),r(!0))}()}}),n.createElement(ce,{textButton:"Закрыть",handler:function(){return t()}})))};Ee.propTypes={setIsModalActive:F().func,setIsModalValidationFalseActive:F().func};const Se=Ee;var _e=t(3318),Ne={};Ne.styleTagTransform=G(),Ne.setAttributes=H(),Ne.insert=V().bind(null,"head"),Ne.domAPI=Z(),Ne.insertStyleElement=K(),D()(_e.Z,Ne);const Te=_e.Z&&_e.Z.locals?_e.Z.locals:void 0;var Oe=function(e){var t=e.setIsModalActive,r=e.setIsModalValidationFalseActive,o=U((0,n.useState)(""),2),a=o[0],i=o[1],l=U((0,n.useState)(""),2),s=l[0],c=l[1],u=U((0,n.useState)(""),2),f=u[0],d=u[1],p=U((0,n.useState)(""),2),m=p[0],A=p[1];return n.createElement("div",{className:Te.requestContainer},n.createElement("div",{className:Te.orderItem},n.createElement("div",{className:Te.blockHeaderText},"Написать нам"),n.createElement("div",{className:Te.fieldFlex},n.createElement("div",{className:Te.inputContainer},n.createElement("input",{placeholder:"Имя*",onBlur:function(e){i(e.target.value)},className:Te.textInput})),n.createElement("div",{className:Te.inputContainer},n.createElement("input",{placeholder:"Email*",onBlur:function(e){c(e.target.value)},className:Te.textInput})),n.createElement("div",{className:Te.inputContainer},n.createElement("input",{placeholder:"Телефон",onBlur:function(e){d(e.target.value)},className:Te.textInput})),n.createElement("div",{className:Te.inputContainer},n.createElement("textarea",{placeholder:"Сообщение*",onBlur:function(e){A(e.target.value)},className:Te.textInput})))),n.createElement("div",{className:Te.requestButtonsContainer},n.createElement(ce,{textButton:"Отправить",handler:function(){return function(){var e=0,n=[];if(a.length>=2&&a.length<15?e++:n.push("Ошибка ввода имени"),/^(\+7|7|8)?[\s\-]?\(?[489][0-9]{2}\)?[\s\-]?[0-9]{3}[\s\-]?[0-9]{2}[\s\-]?[0-9]{2}$/.test(f)?e++:n.push("Ошибка ввода телефона"),function(e){return/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(e)}(s)?e++:n.push("Ошибка ввода email"),m.length>5&&m.length<200?e++:n.push("Слишком длинное или маленькое сообщение "),4===e){var o=(new Date).toLocaleDateString("ru-RU")+" "+(new Date).toLocaleTimeString();we(a,f,s,m,o),t(!1)}else t(!1),r(!0)}()}}),n.createElement(ce,{textButton:"Закрыть",handler:function(){return t()}})))};Oe.propTypes={setIsModalActive:F().func,setIsModalValidationFalseActive:F().func};const Pe=Oe;var je=t(8464),ze={};ze.styleTagTransform=G(),ze.setAttributes=H(),ze.insert=V().bind(null,"head"),ze.domAPI=Z(),ze.insertStyleElement=K(),D()(je.Z,ze);const Le=je.Z&&je.Z.locals?je.Z.locals:void 0,Re=t.p+"images/logo.png",Me=t.p+"images/call.png";var Ue=function(e){var t=e.isMobile,r=U((0,n.useState)(!1),2),o=r[0],a=r[1],i=U((0,n.useState)(!1),2),l=i[0],s=i[1],c=U((0,n.useState)(!1),2),u=c[0],f=c[1];return n.createElement(n.Fragment,null,n.createElement("div",{className:Le.header},n.createElement("div",{className:Le.blockLogo},n.createElement(R,{to:"/"},n.createElement("img",{className:Le.imageLogo,src:Re})),n.createElement("div",{className:Le.textBlock},n.createElement("div",{className:Le.textLogoUp},"Консультативно-диагностическая"),n.createElement("div",{className:Le.textLogoDown},"Поликлиника"))),n.createElement("div",{className:Le.blockInfoContacts},n.createElement("div",{className:Le.infoNumber},n.createElement("div",{className:Le.blockNumber},n.createElement("img",{className:Le.imageInfoContacts,src:Me}),n.createElement("div",{className:Le.textTelephone},n.createElement("span",{className:Le.City},"Чапаевск "),n.createElement("a",{href:"tel:+78463930092"},"+7(84639)",n.createElement("span",{className:Le.numberPhone}," 3-00-92 ")))),n.createElement("div",{className:Le.blockNumber},n.createElement("img",{className:Le.imageInfoContacts,src:Me}),n.createElement("div",{className:Le.textTelephone},n.createElement("span",{className:Le.City},"Безенчук"),n.createElement("span",{className:Le.numberPhone},n.createElement("a",{href:"tel:+78463930092"}," +7 (927) 750-56-56 "))))),n.createElement("div",{className:Le.buttonsBlock},n.createElement(ce,{textButton:"Написать нам",handler:function(){return s(!0)}}),n.createElement(ce,{textButton:"Оставить заявку на звонок",handler:function(){return a(!0)}}))),n.createElement(me,{isActive:o,setActive:a,isClosable:!1},n.createElement(Se,{setIsModalActive:a,setIsModalValidationFalseActive:f})),n.createElement(me,{isActive:l,setActive:s,isClosable:!1},n.createElement(Pe,{setIsModalActive:s,setIsModalValidationFalseActive:f})),n.createElement(me,{isActive:u,setActive:f,isClosable:!1},n.createElement("div",{className:Le.requestContainer},n.createElement("div",{className:Le.orderItem},n.createElement("div",{className:Le.blockHeaderText},"Ошибка")),n.createElement("div",{className:Le.blockText},"Некорректный ввод данных"),n.createElement("div",{className:Le.requestButtonsContainer},n.createElement(ce,{textButton:"Закрыть",handler:function(){return f(!1)}}))))),n.createElement(oe,{menuItems:[{name:"ГЛАВНАЯ",link:"/"},{name:"СПЕЦИАЛИСТЫ",link:"/specialists"},{name:"УСЛУГИ",link:"/services"},{name:"ПРОФОСМОТРЫ",link:"/previews"},{name:"КОНТАКТЫ",link:"/contacts"}],isMobile:t}))};Ue.propTypes={isMobile:F().bool};const We=Ue,Fe=t.p+"images/left.png",qe=t.p+"images/right.png";var De=t(7834),Qe={};Qe.styleTagTransform=G(),Qe.setAttributes=H(),Qe.insert=V().bind(null,"head"),Qe.domAPI=Z(),Qe.insertStyleElement=K(),D()(De.Z,Qe);const Ze=De.Z&&De.Z.locals?De.Z.locals:void 0;var Ye=function(e){var t=e.menuItems,r=U((0,n.useState)(0),2),o=r[0],a=r[1];return n.createElement("div",{className:Ze.containerSlider},n.createElement("div",{className:Ze.slider},n.createElement("div",{className:Ze.sliderItem},n.createElement("div",{className:Ze.buttonNavigation,onClick:function(){o>0&&a(o-1)}},n.createElement("img",{src:Fe})),function(e){var r=t[e];return n.createElement("img",{src:r,className:Ze.sliderImage})}(o),n.createElement("div",{className:Ze.buttonNavigation,onClick:function(){o<t.length-1&&a(o+1)}},n.createElement("img",{src:qe})))))};Ye.propTypes={menuItems:F().array};const Ve=Ye,$e=t.p+"images/location.png";var He=t(7119),Xe={};Xe.styleTagTransform=G(),Xe.setAttributes=H(),Xe.insert=V().bind(null,"head"),Xe.domAPI=Z(),Xe.insertStyleElement=K(),D()(He.Z,Xe);const Ke=He.Z&&He.Z.locals?He.Z.locals:void 0;var Je=function(e){var t=e.name,r=e.surname,o=e.patronymic,a=e.direction,i=e.experience,l=e.city,s=e.number;return n.createElement("div",{className:Ke.blockSpecialist},n.createElement("div",{className:Ke.infoSpecialist},n.createElement("div",{className:Ke.fio},r," ",t," ",o)),n.createElement("div",{className:Ke.infoSpecialist},"Направление: ",a),n.createElement("div",{className:Ke.infoSpecialist},"Стаж: ",i,"+"),n.createElement("div",{className:Ke.allInfo},n.createElement("img",{className:Ke.imageInfoContacts,src:$e}),l),n.createElement("div",{className:Ke.allInfo},n.createElement("img",{className:Ke.imageInfoContacts,src:Me}),n.createElement("a",{href:"tel:".concat(s)},s)))};Je.propTypes={name:F().string,surname:F().string,patronymic:F().string,direction:F().string,experience:F().number,city:F().string,number:F().string};const Ge=Je;var en=t(3561),nn={};nn.styleTagTransform=G(),nn.setAttributes=H(),nn.insert=V().bind(null,"head"),nn.domAPI=Z(),nn.insertStyleElement=K(),D()(en.Z,nn);const tn=en.Z&&en.Z.locals?en.Z.locals:void 0;var rn=function(e){var t=e.title,r=e.handler;return n.createElement("div",{className:tn.blockTypeDoctor,onClick:function(){return r(t)}},n.createElement("div",{className:tn.blockTitle},t))};rn.propTypes={title:F().string,handler:F().func};const on=rn,an=t.p+"images/slider1.png",ln=t.p+"images/slider2.png",sn=t.p+"images/slider3.png",cn=t.p+"images/slider4.png";var un=t(451),fn={};fn.styleTagTransform=G(),fn.setAttributes=H(),fn.insert=V().bind(null,"head"),fn.domAPI=Z(),fn.insertStyleElement=K(),D()(un.Z,fn);const dn=un.Z&&un.Z.locals?un.Z.locals:void 0;var pn=function(e){var t=e.availabilitySlider,r=U((0,n.useState)(!1),2),o=r[0],a=r[1],i=U((0,n.useState)(""),2),l=i[0],s=i[1],c=U((0,n.useState)(),2),u=c[0],f=c[1],d=U((0,n.useState)(!1),2),p=d[0],m=d[1],A=function(){var e=he(ve().mark((function e(n){var t,r,o;return ve().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return s(n),e.next=3,xe(n);case 3:for(t=e.sent,r=[],o=0;o<t.length;o++)r.push([t[o].name,t[o].surname,t[o].patronymic,t[o].direction,t[o].experience,t[o].city]);f(r),document.getElementById("direction").scrollIntoView({behavior:"smooth"});case 8:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}();return n.createElement("div",{className:dn.specialistsPage},t?null:n.createElement(Ve,{menuItems:[an,ln,sn,cn]}),n.createElement("div",{className:dn.headerText,id:"titleText"},"Специалисты"),n.createElement("div",{className:dn.discriptionText},"Наши специалисты - одни из лучших в Самарской области и по праву заслужили благодарность многих пациентов своим высоким профессионализмом, точностью работы и человеческой отзывчивостью к нуждам пациентов. И мы гордимся коллективом работников, сформировавшимся в нашей клинике."),n.createElement("div",{className:dn.discriptionText},"При необходимости можно получить консультации специалиста и провести осмотр на дому или на территории предприятия. Оценив качество и оперативность оказываемых нами услуг, а также высокий профессионализм наших специалистов, в число наших постоянных клиентов вошли многие крупные организации Самарской области."),n.createElement("div",{className:dn.discriptionText},"Если вы хотите провести профилактический осмотр своих сотрудников; если вам нужна квалифицированная медицинская помощь; если вы пока еще не знаете, кому доверить заботу о своем здоровье,",n.createElement("span",{className:dn.textLinkRequest,onClick:function(){return a(!0)}},"позвоните нам.")),n.createElement("div",{className:dn.discriptionText},"Вы очень скоро сумеете оценить профессионализм и ответственность наших специалистов и тот высокий уровень работы, который мы поддерживаем на протяжении многих лет."),n.createElement("div",{className:dn.headerText},"Направления:"),n.createElement("div",{className:dn.blockMenuSpecialists},n.createElement("div",{className:dn.menuSpecialists},n.createElement(on,{title:"НЕВРОЛОГ",handler:A}),n.createElement(on,{title:"ОФТАЛЬМОЛОГ",handler:A}),n.createElement(on,{title:"ДЕРМАТОВЕНЕРОЛОГ",handler:A}),n.createElement(on,{title:"ОТОРИНОЛАРИНГОЛОГ",handler:A}),n.createElement(on,{title:"УРОЛОГ",handler:A}),n.createElement(on,{title:"ТЕРАПЕВТ",handler:A}),n.createElement(on,{title:"РЕВМАТОЛОГ",handler:A}),n.createElement(on,{title:"ХИРУРГ",handler:A}),n.createElement(on,{title:"РЕВМАТОЛОГ",handler:A}),n.createElement(on,{title:"ФУНКЦИОНАЛЬНАЯ ДИАГНОСТИКА",handler:A}),n.createElement(on,{title:"АКУШЕР-ГИНЕКОЛОГ",handler:A}),n.createElement(on,{title:"УЛЬТРАЗВУКОВАЯ ДИАГНОСТИКА",handler:A}),n.createElement(on,{title:"ЭНДОКРИНОЛОГ",handler:A}),n.createElement(on,{title:"КАРДИОЛОГ",handler:A}))),n.createElement("div",{className:dn.listSpecialists},n.createElement("div",{className:dn.headerText,id:"direction"},l),u&&function(e){return e.map((function(e,t){return n.createElement(Ge,{key:t,name:e[0],surname:e[1],patronymic:e[2],direction:e[3],experience:e[4],city:e[5],number:"Чапаевск"===e[5]?"+7(84639) 3-00-92":"+7 (927) 750-56-56"})}))}(u)),n.createElement(me,{isActive:o,setActive:a,isClosable:!1},n.createElement(Se,{setIsModalActive:a,setIsModalValidationFalseActive:m})),n.createElement(me,{isActive:p,setActive:m,isClosable:!1},n.createElement("div",{className:dn.requestContainer},n.createElement("div",{className:dn.orderItem},n.createElement("div",{className:dn.blockHeaderText},"Ошибка")),n.createElement("div",{className:dn.blockText},"Некорректный ввод данных"),n.createElement("div",{className:dn.requestButtonsContainer},n.createElement(ce,{textButton:"Закрыть",handler:function(){return m(!1)}})))))};pn.propTypes={availabilitySlider:F().bool};const mn=pn,An=t.p+"images/time.png";var hn=t(8446),gn={};gn.styleTagTransform=G(),gn.setAttributes=H(),gn.insert=V().bind(null,"head"),gn.domAPI=Z(),gn.insertStyleElement=K(),D()(hn.Z,gn);const vn=hn.Z&&hn.Z.locals?hn.Z.locals:void 0;var bn=function(e){var t=e.title,r=e.address,o=e.timeJobs,a=e.phoneNumber;return n.createElement("div",{className:vn.cardHospital},n.createElement("div",{className:vn.headerText},t),n.createElement("div",{className:vn.blockDiscription},n.createElement("div",{className:vn.blockInfo},n.createElement("img",{className:vn.imageInfoContacts,src:$e}),"Адрес: ",n.createElement("span",{className:vn.infoText},r)),n.createElement("div",{className:vn.blockInfo},n.createElement("img",{className:vn.imageInfoContacts,src:An}),"Время: ",n.createElement("span",{className:vn.infoText},o)),n.createElement("div",{className:vn.blockInfo},n.createElement("img",{className:vn.imageInfoContacts,src:Me}),"Телефон: ",n.createElement("span",{className:vn.infoText},a))))};bn.propTypes={title:F().string,address:F().string,timeJobs:F().string,phoneNumber:F().string};const yn=bn;var xn=t(9142),Cn={};Cn.styleTagTransform=G(),Cn.setAttributes=H(),Cn.insert=V().bind(null,"head"),Cn.domAPI=Z(),Cn.insertStyleElement=K(),D()(xn.Z,Cn);const wn=xn.Z&&xn.Z.locals?xn.Z.locals:void 0,In=function(){return n.createElement(n.Fragment,null,n.createElement("div",{className:wn.mainPage},n.createElement(Ve,{menuItems:[an,ln,sn,cn]}),n.createElement("div",{className:wn.blockText},n.createElement("div",{id:"titleText",className:wn.headerText},"Консультативно-диагностическая поликлиника"),n.createElement("div",{className:wn.smallHeaderText},"Вы не можете решить возникшие проблемы со здоровьем или хотите его сохранить? Мы знаем, как это сделать!"),n.createElement("div",{className:wn.discriptionText},"ООО «Консультативно-диагностическая поликлиника» осуществляет медицинские услуги для населения и организаций Самарской области с 2009 года. За это время мы сформировали дружный коллектив профессионалов, способных оказать качественную, квалифицированную и оперативную консультационную и лечебную помощь гражданам в самых разных ситуациях."),n.createElement("div",{className:wn.discriptionText},"На базе клиники проводятся консультации, ведение пациентов, а также их лечение с помощью новейших техник и методик, в том числе - без лекарств."),n.createElement("div",{className:wn.headerText},"Мы находимся:")),n.createElement("div",{className:wn.cardsHospital},n.createElement(yn,{title:"Чапаевск",address:"Чапаевск, ул. Ватутина, д. 11",timeJobs:"Будни:8:00-19:00",phoneNumber:"+7 (84639) 3-00-92 "}),n.createElement(yn,{title:"Безенчук",address:"Безенчук, ул. Советская, д. 56",timeJobs:"Будни:8:00-19:00,Суббота 8:00-17:00",phoneNumber:"+7 (927) 750-56-56"}))),n.createElement(mn,{availabilitySlider:!0}))};var kn=t(8257),Bn={};Bn.styleTagTransform=G(),Bn.setAttributes=H(),Bn.insert=V().bind(null,"head"),Bn.domAPI=Z(),Bn.insertStyleElement=K(),D()(kn.Z,Bn);const En=kn.Z&&kn.Z.locals?kn.Z.locals:void 0;var Sn=function(e){var t=e.img,r=e.title,o=e.objText,a=e.arrList;return n.createElement("div",{className:En.cardService},n.createElement("div",{className:En.titleService},r),n.createElement("div",{className:En.blockImage},n.createElement("img",{className:En.imageService,src:t})),n.createElement("div",{className:En.discriptionService},void 0!==o.text_one?o.text_one:""),n.createElement("div",{className:En.discriptionService},void 0!==o.text_two?o.text_two:""),n.createElement("ul",null,a.map((function(e,t){return n.createElement("li",{key:t},e)}))),n.createElement("div",{className:En.discriptionService},void 0!==o.text_three?o.text_three:""),n.createElement("div",{className:En.discriptionService},void 0!==o.text_four?o.text_four:""),n.createElement("div",{className:En.discriptionService},void 0!==o.text_five?o.text_five:""),n.createElement("div",{className:En.discriptionService},void 0!==o.text_six?o.text_six:""))};Sn.propTypes={img:F().any,title:F().string,objText:F().object,arrList:F().array};const _n=Sn;var Nn=t(8048),Tn={};Tn.styleTagTransform=G(),Tn.setAttributes=H(),Tn.insert=V().bind(null,"head"),Tn.domAPI=Z(),Tn.insertStyleElement=K(),D()(Nn.Z,Tn);const On=Nn.Z&&Nn.Z.locals?Nn.Z.locals:void 0,Pn=function(){return n.createElement("div",{className:On.mainPage},n.createElement(Ve,{menuItems:[an,ln,sn,cn]}),n.createElement("div",{className:On.headerText,id:"titleText"},"Услуги"),n.createElement("div",{className:On.listServices},n.createElement(_n,{img:t(9696),title:"Спелеотерапия",arrList:["Восстановление проходимости бронхов;","Повышение общего и местного иммунитета;","Облегчение отхождения мокроты, снижение аллергии;","Противовоспалительное действие;","Стабилизация психоэмоционального состояния человека;","Нормализация артериального давления в начальных стадиях."],objText:{text_one:"Высокоэффективный метод лечения без лекарств вдыханием воздуха, насыщенного сухим аэрозолем хлорида натрия.",text_two:"Результаты спелеотерапии:",text_three:"Спелеотерапия (соляная шахта) не вызывает побочных действий, поэтому может применяться при лечении маленьких детей и беременных женщин.",text_four:"Воздействие спелеотерапии усиливается при сочетании с лечебной физкультурой, массажем, иглорефлексотерапией, позволяет отказаться от лекарственных средств.",text_five:"Спелеотерапия восстанавливает компенсаторные резервы организма, предупреждает обострение имеющихся хронических заболеваний и снижает риск возникновения простудных заболеваний, особенно у детей дошкольного возраста.",text_six:"Курс лечения 10-15 сеансов по 30 минут. Больным с хронической патологией органов дыхания верхних дыхательных путей проводится 2 раза в год."}}),n.createElement(_n,{img:t(9642),title:"Аппаратный лимфодренаж",arrList:["Уменьшению отечности тканей, нормализации водного баланса в них;","Активизации процессов крово- и лимфообращения;","Нормализации обменных процессов в организме","Снижению веса;","Повышению тонуса кожи, устранению дряблости и целлюлита;","Повышению общего тонуса организма, стрессоустойчивости и иммунитета."],objText:{text_one:"Данная процедура является эффективным и безопасным способом оздоровления организма и способствует:"}}),n.createElement(_n,{img:t(928),title:"Тамбуканская грязь",arrList:["Остеохондрозе позвоночника;","Артрозах и артритах крупных суставов;","Заболеваниях желудочно-кишечного тракта;","Заболеваниях нервной системы;","Заболеваниях сосудистой системы;","Заболеваниях органов дыхания нетуберкулезного характера;","Заболеваниях кожи."],objText:{text_one:"Применение показано при:"}}),n.createElement(_n,{img:t(7069),title:"Лечение без лекарств",arrList:["Массаж классический для детей и взрослых,","Гидромассаж незаменим при лечении и реабилитации пациентов с заболеваниями позвоночника. Гидромассаж снимает стресс, улучшает настроение, обладает выраженным косметическим воздействием на состояние кожи."],objText:{}}),n.createElement(_n,{img:t(7726),title:"Мини-сауна «Кедровая бочка»",arrList:[],objText:{text_one:"Мини-сауна «Кедровая бочка» - сочетание воздействия горячего пара, кедра при необходимости лекарственных трав. Поскольку голова пациента во время процедуры находится снаружи «кедровой бочки», и он дышит обычным воздухом, лечение хорошо переносится. «Кедровая бочка» улучшает кровообращение, нормализует обмен веществ, восстанавливает иммунитет, выводит токсины из организма. Решает проблему лишнего веса, очищает и омолаживает кожу. Одним из показаний является хронические заболевания органов женской половой системы."}}),n.createElement(_n,{img:t(4841),title:"Холтер",arrList:[],objText:{text_one:"Холтер — это портативный монитор, с помощью которого осуществляется длительная запись сердечного ритма. Обычно холтер фиксируется на теле пациента на срок от 24 часов до 3 суток. Все это время прибор точно фиксирует все особенности сердечного ритма, которые впоследствии расшифровывает лечащий врач-кардиолог. Исследование при помощи холтер-монитора показано в случае, когда обычная кардиограмма не может дать достаточно сведений о состоянии сердца пациента.",text_two:"При установке холтер-монитора к грудной клетке пациента прилепляются электроды, соединенные с записывающим устройством. Ношение холтер-монитора причиняет лишь незначительное неудобство, при этом само исследование является очень точным и информативным, что позволяет лечащему врачу поставить правильный диагноз."}})),n.createElement("div",{className:On.titleService},"УЗИ, ЭКГ и многое другое"))};var jn=t(3098),zn={};zn.styleTagTransform=G(),zn.setAttributes=H(),zn.insert=V().bind(null,"head"),zn.domAPI=Z(),zn.insertStyleElement=K(),D()(jn.Z,zn);const Ln=jn.Z&&jn.Z.locals?jn.Z.locals:void 0,Rn=function(){return n.createElement("div",{className:Ln.mainPage},n.createElement(Ve,{menuItems:[an,ln,sn,cn]}),n.createElement("div",{className:Ln.headerText,id:"titleText"},"Профосмотры"),n.createElement("div",{className:Ln.discriptionText},"Специалистами клиники осуществляется проведение комплексных профилактических осмотров частных лиц и сотрудников предприятий."),n.createElement("div",{className:Ln.discriptionText},"Опыт и профессионализм наших специалистов, наличие всей необходимой материально-технической базы и высокая мобильность позволяют нам оказывать услуги в короткие сроки и на самом высоком уровне."),n.createElement("div",{className:Ln.headerText},"Наши клиенты"),n.createElement("div",{className:Ln.clientText},"- Завод ООО «Фармопол-Волга»"),n.createElement("div",{className:Ln.clientText},"- Страховая группа ЗАО «Уралсиб»"),n.createElement("div",{className:Ln.clientText},"- Завод ОАО «Промсинтез»"),n.createElement("div",{className:Ln.clientText},"- ФКП «Чапаевский механический завод»"),n.createElement("div",{className:Ln.clientText},"- ФКП «Приволжский государственный боеприпасный испытательный полигон»"),n.createElement("div",{className:Ln.clientText},"- ОАО «Теплоэнергокомпания» и многие другие."),n.createElement("div",{className:Ln.discriptionText},"Детали проведения профосмотров вы можете узнать, связавшись с нами по телефонам, указанным на странице контактов, или оставив свое сообщение на сайте."))};var Mn="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==t.g?t.g:"undefined"!=typeof self?self:{};function Un(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function Wn(e,n){return e(n={exports:{}},n.exports),n.exports}var Fn="function"==typeof Symbol&&Symbol.for,qn=Fn?Symbol.for("react.element"):60103,Dn=Fn?Symbol.for("react.portal"):60106,Qn=Fn?Symbol.for("react.fragment"):60107,Zn=Fn?Symbol.for("react.strict_mode"):60108,Yn=Fn?Symbol.for("react.profiler"):60114,Vn=Fn?Symbol.for("react.provider"):60109,$n=Fn?Symbol.for("react.context"):60110,Hn=Fn?Symbol.for("react.async_mode"):60111,Xn=Fn?Symbol.for("react.concurrent_mode"):60111,Kn=Fn?Symbol.for("react.forward_ref"):60112,Jn=Fn?Symbol.for("react.suspense"):60113,Gn=Fn?Symbol.for("react.suspense_list"):60120,et=Fn?Symbol.for("react.memo"):60115,nt=Fn?Symbol.for("react.lazy"):60116,tt=Fn?Symbol.for("react.block"):60121,rt=Fn?Symbol.for("react.fundamental"):60117,ot=Fn?Symbol.for("react.responder"):60118,at=Fn?Symbol.for("react.scope"):60119;function it(e){if("object"==typeof e&&null!==e){var n=e.$$typeof;switch(n){case qn:switch(e=e.type){case Hn:case Xn:case Qn:case Yn:case Zn:case Jn:return e;default:switch(e=e&&e.$$typeof){case $n:case Kn:case nt:case et:case Vn:return e;default:return n}}case Dn:return n}}}function lt(e){return it(e)===Xn}var st={AsyncMode:Hn,ConcurrentMode:Xn,ContextConsumer:$n,ContextProvider:Vn,Element:qn,ForwardRef:Kn,Fragment:Qn,Lazy:nt,Memo:et,Portal:Dn,Profiler:Yn,StrictMode:Zn,Suspense:Jn,isAsyncMode:function(e){return lt(e)||it(e)===Hn},isConcurrentMode:lt,isContextConsumer:function(e){return it(e)===$n},isContextProvider:function(e){return it(e)===Vn},isElement:function(e){return"object"==typeof e&&null!==e&&e.$$typeof===qn},isForwardRef:function(e){return it(e)===Kn},isFragment:function(e){return it(e)===Qn},isLazy:function(e){return it(e)===nt},isMemo:function(e){return it(e)===et},isPortal:function(e){return it(e)===Dn},isProfiler:function(e){return it(e)===Yn},isStrictMode:function(e){return it(e)===Zn},isSuspense:function(e){return it(e)===Jn},isValidElementType:function(e){return"string"==typeof e||"function"==typeof e||e===Qn||e===Xn||e===Yn||e===Zn||e===Jn||e===Gn||"object"==typeof e&&null!==e&&(e.$$typeof===nt||e.$$typeof===et||e.$$typeof===Vn||e.$$typeof===$n||e.$$typeof===Kn||e.$$typeof===rt||e.$$typeof===ot||e.$$typeof===at||e.$$typeof===tt)},typeOf:it};function ct(){}function ut(){}Wn((function(e,n){})),Wn((function(e){e.exports=st})),function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var n={},t=0;t<10;t++)n["_"+String.fromCharCode(t)]=t;if("0123456789"!==Object.getOwnPropertyNames(n).map((function(e){return n[e]})).join(""))return!1;var r={};"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}(),Function.call.bind(Object.prototype.hasOwnProperty),ut.resetWarningCache=ct;var ft=Wn((function(e){e.exports=function(){function e(e,n,t,r,o,a){if("SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"!==a){var i=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw i.name="Invariant Violation",i}}function n(){return e}e.isRequired=e;var t={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:n,element:e,elementType:e,instanceOf:n,node:e,objectOf:n,oneOf:n,oneOfType:n,shape:n,exact:n,checkPropTypes:ut,resetWarningCache:ct};return t.PropTypes=t,t}()})),dt=Un(Wn((function(e,n){Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e){return e.displayName||e.name||("string"==typeof e&&e.length>0?e:"Unknown")}}))),pt=function(e,n){var t={};for(var r in e)-1===n.indexOf(r)&&(t[r]=e[r]);return t},mt="__global_unique_id__",At=function(){return Mn[mt]=(Mn[mt]||0)+1},ht=function(){},gt=Wn((function(e,t){t.__esModule=!0;var r=a(ft),o=a(At);function a(e){return e&&e.__esModule?e:{default:e}}function i(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function l(e,n){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?e:n}function s(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}a(ht),t.default=function(e,t){var a,c,u="__create-react-context-"+(0,o.default)()+"__",f=function(e){function n(){var t,r,o,a;i(this,n);for(var s=arguments.length,c=Array(s),u=0;u<s;u++)c[u]=arguments[u];return t=r=l(this,e.call.apply(e,[this].concat(c))),r.emitter=(o=r.props.value,a=[],{on:function(e){a.push(e)},off:function(e){a=a.filter((function(n){return n!==e}))},get:function(){return o},set:function(e,n){o=e,a.forEach((function(e){return e(o,n)}))}}),l(r,t)}return s(n,e),n.prototype.getChildContext=function(){var e;return(e={})[u]=this.emitter,e},n.prototype.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n=this.props.value,r=e.value,o=void 0;((a=n)===(i=r)?0!==a||1/a==1/i:a!=a&&i!=i)?o=0:(o="function"==typeof t?t(n,r):1073741823,0!=(o|=0)&&this.emitter.set(e.value,o))}var a,i},n.prototype.render=function(){return this.props.children},n}(n.Component);f.childContextTypes=((a={})[u]=r.default.object.isRequired,a);var d=function(n){function t(){var e,r;i(this,t);for(var o=arguments.length,a=Array(o),s=0;s<o;s++)a[s]=arguments[s];return e=r=l(this,n.call.apply(n,[this].concat(a))),r.state={value:r.getValue()},r.onUpdate=function(e,n){0!=((0|r.observedBits)&n)&&r.setState({value:r.getValue()})},l(r,e)}return s(t,n),t.prototype.componentWillReceiveProps=function(e){var n=e.observedBits;this.observedBits=null==n?1073741823:n},t.prototype.componentDidMount=function(){this.context[u]&&this.context[u].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?1073741823:e},t.prototype.componentWillUnmount=function(){this.context[u]&&this.context[u].off(this.onUpdate)},t.prototype.getValue=function(){return this.context[u]?this.context[u].get():e},t.prototype.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},t}(n.Component);return d.contextTypes=((c={})[u]=r.default.object,c),{Provider:f,Consumer:d}},e.exports=t.default}));Un(gt);var vt=Un(Wn((function(e,t){t.__esModule=!0;var r=a(n),o=a(gt);function a(e){return e&&e.__esModule?e:{default:e}}t.default=r.default.createContext||o.default,e.exports=t.default}))),bt=vt(null),yt=vt(null),xt=function(e){return function(t){return n.createElement(yt.Consumer,null,(function(r){return n.createElement(e,Object.assign({},{parent:r},t))}))}};function Ct(e,t,r){void 0===t&&(t=!1),void 0===r&&(r=[]);var o=function(o){function a(){o.call(this),this.state={loading:!0},this._isMounted=!1}return o&&(a.__proto__=o),(a.prototype=Object.create(o&&o.prototype)).constructor=a,a.prototype.componentDidMount=function(){var e=this;this._isMounted=!0,this.props.ymaps.load().then((function(n){return Promise.all(r.concat(e.props.modules).map(n.loadModule)).then((function(){!0===e._isMounted&&e.setState({loading:!1},(function(){e.props.onLoad(n)}))}))})).catch((function(n){!0===e._isMounted&&e.props.onError(n)}))},a.prototype.componentWillUnmount=function(){this._isMounted=!1},a.prototype.render=function(){var r=this.props.ymaps,o=!1===t||!1===this.state.loading,a=pt(this.props,["onLoad","onError","modules","ymaps"]);return o&&n.createElement(e,Object.assign({},{ymaps:r.getApi()},a))},a}(n.Component);return o.defaultProps={onLoad:Function.prototype,onError:Function.prototype,modules:[]},function(e){var t=dt(e);return function(r){return n.createElement(bt.Consumer,null,(function(o){if(null===o)throw new Error("Couldn't find Yandex.Maps API in the context. Make sure that <"+t+" /> is inside <YMaps /> provider");return n.createElement(e,Object.assign({},{ymaps:o},r))}))}}(o)}var wt={lang:"ru_RU",load:"",ns:"",mode:"release"},It={},kt=function(e){var n=Date.now().toString(32);this.options=e,this.namespace=e.query.ns||wt.ns,this.onload="__yandex-maps-api-onload__$$"+n,this.onerror="__yandex-maps-api-onerror__$$"+n};kt.prototype.getApi=function(){return"undefined"!=typeof window&&this.namespace?window[this.namespace]:this.api},kt.prototype.setApi=function(e){return this.api=e},kt.prototype.getPromise=function(){return this.namespace?It[this.namespace]:this.promise},kt.prototype.setPromise=function(e){return this.namespace?It[this.namespace]=this.promise=e:this.promise=e},kt.prototype.load=function(){var e=this;if(this.getApi())return Promise.resolve(this.setApi(this.getApi()));if(this.getPromise())return this.setPromise(this.getPromise());var n=Object.assign({onload:this.onload,onerror:this.onerror},wt,this.options.query),t=Object.keys(n).map((function(e){return e+"="+n[e]})).join("&"),r=["https://"+(this.options.enterprise?"enterprise.":"")+"api-maps.yandex.ru",this.options.version,"?"+t].join("/"),o=new Promise((function(n,t){window[e.onload]=function(t){delete window[e.onload],t.loadModule=e.loadModule.bind(e),t.ready((function(){return n(e.setApi(t))}))},window[e.onerror]=function(n){delete window[e.onerror],t(n)},e.fetchScript(r).catch(window[e.onerror])}));return this.setPromise(o)},kt.prototype.fetchScript=function(e){var n=this;return new Promise((function(t,r){n.script=document.createElement("script"),n.script.type="text/javascript",n.script.onload=t,n.script.onerror=r,n.script.src=e,n.script.async="async",document.head.appendChild(n.script)}))},kt.prototype.loadModule=function(e){var n=this;return new Promise((function(t,r){n.getApi().modules.require(e,(function(r){!function(e,n,t,r){void 0===r&&(r=!1),n="string"==typeof n?n.split("."):n.slice();for(var o,a=e;n.length>1;)a[o=n.shift()]||(a[o]={}),a=a[o];a[n[0]]=!0===r&&a[n[0]]||t}(n.api,e,r,!0),t(r)}),r,n.getApi())}))},kt._name="__react-yandex-maps__";var Bt=function(e){function t(n){e.call(this,n),this.ymaps=new kt(n)}return e&&(t.__proto__=e),(t.prototype=Object.create(e&&e.prototype)).constructor=t,t.prototype.componentDidMount=function(){!0===this.props.preload&&this.ymaps.load()},t.prototype.render=function(){return n.createElement(bt.Provider,{value:this.ymaps},this.props.children)},t}(n.Component);Bt.defaultProps={version:"2.1",enterprise:!1,query:{lang:"ru_RU",load:"",ns:""},preload:!1};var Et=/^on(?=[A-Z])/;function St(e){return Object.keys(e).reduce((function(n,t){if(Et.test(t)){var r=t.replace(Et,"").toLowerCase();n._events[r]=e[t]}else n[t]=e[t];return n}),{_events:{}})}function _t(e,n,t){"function"==typeof t&&e.events.add(n,t)}function Nt(e,n,t){"function"==typeof t&&e.events.remove(n,t)}function Tt(e,n,t){Object.keys(Object.assign({},n,t)).forEach((function(r){n[r]!==t[r]&&(Nt(e,r,n[r]),_t(e,r,t[r]))}))}var Ot=function(e){return"default"+e.charAt(0).toUpperCase()+e.slice(1)};function Pt(e,n){return void 0!==e[n]||void 0===e[Ot(n)]}function jt(e,n,t){return(Pt(e,n)?e[n]:e[Ot(n)])||t}function zt(e,n,t){if(void 0===t&&(t=null),e!==n){if(e&&(e.hasOwnProperty("current")?e.current=null:"function"==typeof e&&e(null)),!n)return;n.hasOwnProperty("current")?n.current=t:"function"==typeof n&&n(t)}}function Lt(e){var n=e.width,t=e.height,r=e.style,o=e.className;return void 0!==r||void 0!==o?Object.assign({},r&&{style:r},o&&{className:o}):{style:{width:n,height:t}}}var Rt=function(e){function t(){var n=this;e.call(this),this.state={instance:null},this._parentElement=null,this._getRef=function(e){n._parentElement=e}}return e&&(t.__proto__=e),(t.prototype=Object.create(e&&e.prototype)).constructor=t,t.prototype.componentDidMount=function(){var e=t.mountObject(this._parentElement,this.props.ymaps.Map,this.props);this.setState({instance:e})},t.prototype.componentDidUpdate=function(e){null!==this.state.instance&&t.updateObject(this.state.instance,e,this.props)},t.prototype.componentWillUnmount=function(){t.unmountObject(this.state.instance,this.props)},t.prototype.render=function(){var e=Lt(this.props),t=St(this.props),r=pt(t,["_events","state","defaultState","options","defaultOptions","instanceRef","ymaps","children","width","height","style","className"]);return n.createElement(yt.Provider,{value:this.state.instance},n.createElement("div",Object.assign({},{ref:this._getRef},e,r),this.props.children))},t.mountObject=function(e,n,t){var r=St(t),o=r.instanceRef,a=r._events,i=new n(e,jt(t,"state"),jt(t,"options"));return Object.keys(a).forEach((function(e){return _t(i,e,a[e])})),zt(null,o,i),i},t.updateObject=function(e,n,t){var r=St(t),o=r._events,a=r.instanceRef,i=St(n),l=i._events,s=i.instanceRef;if(Pt(t,"state")){var c=jt(n,"state",{}),u=jt(t,"state",{});c.type!==u.type&&e.setType(u.type),c.behaviors!==u.behaviors&&(c.behaviors&&e.behaviors.disable(c.behaviors),u.behaviors&&e.behaviors.enable(u.behaviors)),u.zoom&&c.zoom!==u.zoom&&e.setZoom(u.zoom),u.center&&c.center!==u.center&&e.setCenter(u.center),u.bounds&&c.bounds!==u.bounds&&e.setBounds(u.bounds)}if(Pt(t,"options")){var f=jt(n,"options"),d=jt(t,"options",{});f!==d&&e.options.set(d)}jt(n,"width")===jt(t,"width")&&jt(n,"height")===jt(t,"height")||e.container.fitToViewport(),Tt(e,l,o),zt(s,a,e)},t.unmountObject=function(e,n){var t=St(n),r=t.instanceRef,o=t._events;null!==e&&(Object.keys(o).forEach((function(n){return Nt(e,n,o[n])})),e.destroy(),zt(r))},t}(n.Component);Rt.defaultProps={width:320,height:240};var Mt=Ct(Rt,!0,["Map"]),Ut=function(e){function t(){var n=this;e.call(this),this.state={instance:null},this._parentElement=null,this._getRef=function(e){n._parentElement=e}}return e&&(t.__proto__=e),(t.prototype=Object.create(e&&e.prototype)).constructor=t,t.prototype.componentDidMount=function(){var e=this;this._mounted=!0,this.props.ymaps.panorama.isSupported()&&t.mountObject(this._parentElement,this.props.ymaps.panorama,this.props).then((function(n){return e._mounted&&e.setState({instance:n})}))},t.prototype.componentDidUpdate=function(e){null!==this.state.instance&&t.updateObject(this.state.instance,e,this.props)},t.prototype.componentWillUnmount=function(){this._mounted=!1,t.unmountObject(this.state.instance,this.props)},t.prototype.render=function(){var e=Lt(this.props);return n.createElement("div",Object.assign({},{ref:this._getRef},e))},t.mountObject=function(e,n,t){var r=St(t),o=r.instanceRef,a=r._events,i=jt(t,"point"),l=jt(t,"locateOptions"),s=jt(t,"options");return new Promise((function(t,r){n.locate(i,l).done((function(r){if(r.length>0){var i=new n.Player(e,r[0],s);zt(null,o,i),Object.keys(a).forEach((function(e){return _t(i,e,a[e])})),t(i)}}),r)}))},t.updateObject=function(e,n,t){var r=St(t),o=r._events,a=r.instanceRef,i=St(n),l=i._events,s=i.instanceRef;if(Pt(t,"options")){var c=jt(n,"options"),u=jt(t,"options");c!==u&&e.options.set(u)}if(Pt(t,"point")){var f=jt(t,"point"),d=jt(n,"point"),p=jt(t,"locateOptions");f!==d&&e.moveTo(f,p)}Tt(e,l,o),zt(s,a,e)},t.unmountObject=function(e,n){var t=St(n),r=t.instanceRef,o=t._events;null!==e&&(Object.keys(o).forEach((function(n){return Nt(e,n,o[n])})),zt(r))},t}(n.Component);Ut.defaultProps={width:320,height:240},Ct(Ut,!0,["panorama.isSupported","panorama.locate","panorama.createPlayer","panorama.Player"]);var Wt=function(e){function t(){e.call(this),this.state={instance:null}}return e&&(t.__proto__=e),(t.prototype=Object.create(e&&e.prototype)).constructor=t,t.prototype.componentDidMount=function(){var e=t.mountControl(this.props.ymaps.control[this.props.name],this.props);this.setState({instance:e})},t.prototype.componentDidUpdate=function(e){null!==this.state.instance&&t.updateControl(this.state.instance,e,this.props)},t.prototype.componentWillUnmount=function(){t.unmountControl(this.state.instance,this.props)},t.prototype.render=function(){return n.createElement(yt.Provider,{value:this.state.instance},this.props.children)},t.mountControl=function(e,n){var t=St(n),r=t.instanceRef,o=t.parent,a=t.lazy,i=t._events,l=new e({data:jt(n,"data"),options:jt(n,"options"),state:jt(n,"state"),mapTypes:jt(n,"mapTypes"),lazy:a});if(Object.keys(i).forEach((function(e){return _t(l,e,i[e])})),o&&o.controls&&"function"==typeof o.controls.add)o.controls.add(l);else{if(!o||!o.add||"function"!=typeof o.add)throw new Error("No parent found to mount "+n.name);o.add(l)}return zt(null,r,l),l},t.updateControl=function(e,n,t){var r=St(t),o=r._events,a=r.instanceRef,i=St(n),l=i._events,s=i.instanceRef;if(Pt(t,"options")){var c=jt(n,"options"),u=jt(t,"options");c!==u&&e.options.set(u)}if(Pt(t,"data")){var f=jt(n,"data"),d=jt(t,"data");f!==d&&e.data.set(d)}if(Pt(t,"state")){var p=jt(n,"state"),m=jt(t,"state");p!==m&&e.state.set(m)}if(Pt(t,"mapTypes")){var A=jt(n,"mapTypes"),h=jt(t,"mapTypes");A!==h&&(e.removeAllMapTypes(),h.forEach((function(n){return e.addMapType(n)})))}Tt(e,l,o),zt(s,a,e)},t.unmountControl=function(e,n){var t=St(n),r=t.instanceRef,o=t.parent,a=t._events;null!==e&&(Object.keys(a).forEach((function(n){return Nt(e,n,a[n])})),o.controls&&"function"==typeof o.controls.remove?o.controls.remove(e):o.remove&&"function"==typeof o.remove&&o.remove(e),zt(r))},t}(n.Component),Ft=(xt(Ct((function(e){return n.createElement(Wt,Object.assign({},e,{name:"Button"}))}),!0,["control.Button"])),xt(Ct((function(e){return n.createElement(Wt,Object.assign({},e,{name:"FullscreenControl"}))}),!0,["control.FullscreenControl"])),xt(Ct((function(e){return n.createElement(Wt,Object.assign({},e,{name:"GeolocationControl"}))}),!0,["control.GeolocationControl"])),xt(Ct((function(e){return n.createElement(Wt,Object.assign({},e,{name:"ListBox"}))}),!0,["control.ListBox"])),xt(Ct((function(e){return n.createElement(Wt,Object.assign({},e,{name:"ListBoxItem"}))}),!0,["control.ListBoxItem"])),xt(Ct((function(e){return n.createElement(Wt,Object.assign({},e,{name:"RouteButton"}))}),!0,["control.RouteButton"])),xt(Ct((function(e){return n.createElement(Wt,Object.assign({},e,{name:"RouteEditor"}))}),!0,["control.RouteEditor"])),xt(Ct((function(e){return n.createElement(Wt,Object.assign({},e,{name:"RoutePanel"}))}),!0,["control.RoutePanel"])),xt(Ct((function(e){return n.createElement(Wt,Object.assign({},e,{name:"RulerControl"}))}),!0,["control.RulerControl"])),xt(Ct((function(e){return n.createElement(Wt,Object.assign({},e,{name:"SearchControl"}))}),!0,["control.SearchControl"])),xt(Ct((function(e){return n.createElement(Wt,Object.assign({},e,{name:"TrafficControl"}))}),!0,["control.TrafficControl"])),xt(Ct((function(e){return n.createElement(Wt,Object.assign({},e,{name:"TypeSelector"}))}),!0,["control.TypeSelector"])),xt(Ct((function(e){return n.createElement(Wt,Object.assign({},e,{name:"ZoomControl"}))}),!0,["control.ZoomControl"])),xt(Ct(function(e){function t(){e.call(this),this.state={instance:null}}return e&&(t.__proto__=e),(t.prototype=Object.create(e&&e.prototype)).constructor=t,t.prototype.componentDidMount=function(){var e=t.mountObject(this.props.ymaps.Clusterer,this.props);this.setState({instance:e})},t.prototype.componentDidUpdate=function(e){null!==this.state.instance&&t.updateObject(this.state.instance,e,this.props)},t.prototype.componentWillUnmount=function(){t.unmountObject(this.state.instance,this.props)},t.prototype.render=function(){return n.createElement(yt.Provider,{value:this.state.instance},this.props.children)},t.mountObject=function(e,n){var t=St(n),r=t.instanceRef,o=t.parent,a=t._events,i=new e(jt(n,"options"));if(Object.keys(a).forEach((function(e){return _t(i,e,a[e])})),o.geoObjects&&"function"==typeof o.geoObjects.add)o.geoObjects.add(i);else{if(!o.add||"function"!=typeof o.add)throw new Error("No parent found to mount Clusterer");o.add(i)}return zt(null,r,i),i},t.updateObject=function(e,n,t){var r=St(t),o=r._events,a=r.instanceRef,i=St(n),l=i._events,s=i.instanceRef;if(Pt(t,"options")){var c=jt(n,"options"),u=jt(t,"options");c!==u&&e.options.set(u)}Tt(e,l,o),zt(s,a,e)},t.unmountObject=function(e,n){var t=St(n),r=t.instanceRef,o=t.parent,a=t._events;null!==e&&(Object.keys(a).forEach((function(n){return Nt(e,n,a[n])})),o.geoObjects&&"function"==typeof o.geoObjects.remove?o.geoObjects.remove(e):o.remove&&"function"==typeof o.remove&&o.remove(e),zt(r))},t}(n.Component),!0,["Clusterer"])),xt(Ct(function(e){function n(){e.call(this),this.state={instance:null}}return e&&(n.__proto__=e),(n.prototype=Object.create(e&&e.prototype)).constructor=n,n.prototype.componentDidMount=function(){var e=n.mountObject(this.props.ymaps.ObjectManager,this.props);this.setState({instance:e})},n.prototype.componentDidUpdate=function(e){null!==this.state.instance&&n.updateObject(this.state.instance,e,this.props)},n.prototype.componentWillUnmount=function(){n.unmountObject(this.state.instance,this.props)},n.prototype.render=function(){return null},n.mountObject=function(e,n){var t=St(n),r=t.instanceRef,o=t.parent,a=t._events,i=jt(n,"options",{}),l=jt(n,"features",{}),s=jt(n,"filter",null),c=jt(n,"objects",{}),u=jt(n,"clusters",{}),f=new e(i);if(f.add(l||[]),f.setFilter(s),f.objects.options.set(c),f.clusters.options.set(u),Object.keys(a).forEach((function(e){return _t(f,e,a[e])})),o.geoObjects&&"function"==typeof o.geoObjects.add)o.geoObjects.add(f);else{if(!o.add||"function"!=typeof o.add)throw new Error("No parent found to mount ObjectManager");o.add(f)}return zt(null,r,f),f},n.updateObject=function(e,n,t){var r=St(t),o=r._events,a=r.instanceRef,i=St(n),l=i._events,s=i.instanceRef;if(Pt(t,"options")){var c=jt(n,"options"),u=jt(t,"options");c!==u&&e.options.set(u)}if(Pt(t,"objects")){var f=jt(n,"objects"),d=jt(t,"objects");f!==d&&e.objects.options.set(d)}if(Pt(t,"clusters")){var p=jt(n,"clusters"),m=jt(t,"clusters");p!==m&&e.clusters.options.set(m)}if(Pt(t,"filter")){var A=jt(n,"filter"),h=jt(t,"filter");A!==h&&e.setFilter(h)}if(Pt(t,"features")){var g=jt(n,"features"),v=jt(t,"features");g!==v&&(e.remove(g),e.add(v))}Tt(e,l,o),zt(s,a,e)},n.unmountObject=function(e,n){var t=St(n),r=t.instanceRef,o=t.parent,a=t._events;null!==e&&(Object.keys(a).forEach((function(n){return Nt(e,n,a[n])})),o.geoObjects&&"function"==typeof o.geoObjects.remove?o.geoObjects.remove(e):o.remove&&"function"==typeof o.remove&&o.remove(e),zt(r))},n}(n.Component),!0,["ObjectManager"])),function(e){function n(){e.call(this),this.state={instance:null}}return e&&(n.__proto__=e),(n.prototype=Object.create(e&&e.prototype)).constructor=n,n.prototype.componentDidMount=function(){var e=this.props,t=e.name,r=e.ymaps,o=e.dangerZone,a=n.mountObject(o&&"function"==typeof o.modifyConstructor?o.modifyConstructor(r[t]):r[t],this.props);this.setState({instance:a})},n.prototype.componentDidUpdate=function(e){null!==this.state.instance&&n.updateObject(this.state.instance,e,this.props)},n.prototype.componentWillUnmount=function(){n.unmountObject(this.state.instance,this.props)},n.prototype.render=function(){return null},n.mountObject=function(e,n){var t=St(n),r=t.instanceRef,o=t.parent,a=t._events,i=new e(jt(n,"geometry"),jt(n,"properties"),jt(n,"options"));if(Object.keys(a).forEach((function(e){return _t(i,e,a[e])})),o&&o.geoObjects&&"function"==typeof o.geoObjects.add)o.geoObjects.add(i);else{if(!o||!o.add||"function"!=typeof o.add)throw new Error("No parent found to mount "+n.name);o.add(i)}return zt(null,r,i),i},n.updateObject=function(e,n,t){var r=St(t),o=r._events,a=r.instanceRef,i=St(n),l=i._events,s=i.instanceRef;if(Pt(t,"geometry")){var c=jt(n,"geometry",{}),u=jt(t,"geometry",{});Array.isArray(u)&&u!==c?Array.isArray(u[0])&&"number"==typeof u[1]?(e.geometry.setCoordinates(u[0]),e.geometry.setRadius(u[1])):e.geometry.setCoordinates(u):"object"==typeof u&&(u.coordinates!==c.coordinates&&e.geometry.setCoordinates(u.coordinates),u.radius!==c.radius&&e.geometry.setRadius(u.radius))}if(Pt(t,"properties")){var f=jt(n,"properties"),d=jt(t,"properties");f!==d&&e.properties.set(d)}if(Pt(t,"options")){var p=jt(n,"options"),m=jt(t,"options");p!==m&&e.options.set(m)}Tt(e,l,o),zt(s,a,e)},n.unmountObject=function(e,n){var t=St(n),r=t.instanceRef,o=t.parent,a=t._events;null!==e&&(Object.keys(a).forEach((function(n){return Nt(e,n,a[n])})),o.geoObjects&&"function"==typeof o.geoObjects.remove?o.geoObjects.remove(e):o.remove&&"function"==typeof o.remove&&o.remove(e),zt(r))},n}(n.Component)),qt={modifyConstructor:function(e){function n(n,t,r){e.call(this,{geometry:n,properties:t},r)}return n.prototype=e.prototype,n}},Dt=(xt(Ct((function(e){return n.createElement(Ft,Object.assign({},e,{name:"GeoObject",dangerZone:qt}))}),!0,["GeoObject"])),xt(Ct((function(e){return n.createElement(Ft,Object.assign({},e,{name:"Circle"}))}),!0,["Circle"])),xt(Ct((function(e){return n.createElement(Ft,Object.assign({},e,{name:"Placemark"}))}),!0,["Placemark"]))),Qt=(xt(Ct((function(e){return n.createElement(Ft,Object.assign({},e,{name:"Polygon"}))}),!0,["Polygon"])),xt(Ct((function(e){return n.createElement(Ft,Object.assign({},e,{name:"Polyline"}))}),!0,["Polyline"])),xt(Ct((function(e){return n.createElement(Ft,Object.assign({},e,{name:"Rectangle"}))}),!0,["Rectangle"])),t(8649)),Zt={};Zt.styleTagTransform=G(),Zt.setAttributes=H(),Zt.insert=V().bind(null,"head"),Zt.domAPI=Z(),Zt.insertStyleElement=K(),D()(Qt.Z,Zt);const Yt=Qt.Z&&Qt.Z.locals?Qt.Z.locals:void 0,Vt=function(){var e=U((0,n.useState)(!1),2),t=e[0],r=e[1],o=U((0,n.useState)(!1),2),a=o[0],i=o[1];return n.createElement("div",{className:Yt.mainPage},n.createElement(Ve,{menuItems:[an,ln,sn,cn]}),n.createElement("div",{className:Yt.headerText,id:"titleText"},"Контакты"),n.createElement("div",{className:Yt.contactsFields},n.createElement("div",{className:Yt.textField},n.createElement("div",{className:Yt.smallHeaderText},"ООО «Консультативно-диагностическая поликлиника»"),n.createElement("div",{className:Yt.discriptionText},"ИНН: 6330028603"),n.createElement("div",{className:Yt.discriptionText},"Адрес: 446100, Россия, Самарская область, г. Чапаевск, ул. Ватутина 11"),n.createElement("div",{className:Yt.discriptionText},"Режим работы: пн-пт с 8:00 до 19:00"),n.createElement("div",{className:Yt.discriptionText},"Адрес: Самарская область, п.г.т. Безенчук, ул. Советская 56"),n.createElement("div",{className:Yt.discriptionText},"Режим работы: пн-пт с 8:00 до 19:00, сб с 8-00 до 17-00"),n.createElement("div",{className:Yt.discriptionText},"Контактный телефон:"),n.createElement("div",{className:Yt.discriptionText},"Территориальный орган Федеральной службы по надзору в сфере здравоохранения и благополучия человека:"),n.createElement("div",{className:Yt.discriptionText},"Самарская обл.г. Чапаевск,ул. Ленина 95,т.8-(846)-39-305-29"),n.createElement("div",{className:Yt.blockButton},n.createElement(ce,{textButton:"Написать нам",handler:function(){return r(!0)}}))),n.createElement("div",{className:Yt.mapField},n.createElement(Bt,null,n.createElement(Mt,{state:{center:[52.95253916660395,49.69045349999999],zoom:16},width:300,height:450},n.createElement(Dt,{geometry:[52.95253916660395,49.69045349999999]}),n.createElement("div",{id:"blockInMap"}))))),n.createElement(me,{isActive:t,setActive:r,isClosable:!1},n.createElement(Pe,{setIsModalActive:r,setIsModalValidationFalseActive:i})),n.createElement(me,{isActive:a,setActive:i,isClosable:!1},n.createElement("div",{className:Yt.requestContainer},n.createElement("div",{className:Yt.orderItem},n.createElement("div",{className:Yt.blockHeaderText},"Ошибка")),n.createElement("div",{className:Yt.blockText},"Некорректный ввод данных"),n.createElement("div",{className:Yt.requestButtonsContainer},n.createElement(ce,{textButton:"Закрыть",handler:function(){return i(!1)}})))))};var $t=t(6439),Ht={};Ht.styleTagTransform=G(),Ht.setAttributes=H(),Ht.insert=V().bind(null,"head"),Ht.domAPI=Z(),Ht.insertStyleElement=K(),D()($t.Z,Ht);const Xt=$t.Z&&$t.Z.locals?$t.Z.locals:void 0,Kt=function(){return n.createElement("div",{className:Xt.main},n.createElement(O,null,n.createElement(N,{path:"/",element:n.createElement(In,null)}),n.createElement(N,{path:"/specialists",element:n.createElement(mn,null)}),n.createElement(N,{path:"/services",element:n.createElement(Pn,null)}),n.createElement(N,{path:"/previews",element:n.createElement(Rn,null)}),n.createElement(N,{path:"/contacts",element:n.createElement(Vt,null)})))};var Jt=t(9019),Gt={};Gt.styleTagTransform=G(),Gt.setAttributes=H(),Gt.insert=V().bind(null,"head"),Gt.domAPI=Z(),Gt.insertStyleElement=K(),D()(Jt.Z,Gt);const er=Jt.Z&&Jt.Z.locals?Jt.Z.locals:void 0,nr=t.p+"images/email.png",tr=function(){return n.createElement(n.Fragment,null,n.createElement("div",{className:er.footer},n.createElement("div",{className:er.menuFooter},n.createElement("div",{className:er.blockMenu},n.createElement(R,{className:er.menuItem,to:"/"},"Главная"),n.createElement(R,{className:er.menuItem,to:"/specialists"},"Специалисты"),n.createElement(R,{className:er.menuItem,to:"/services"},"Услуги")),n.createElement("div",{className:er.blockMenu},n.createElement(R,{className:er.menuItem,to:"/previews"},"Профосмотры"),n.createElement(R,{className:er.menuItem,to:"/contacts"},"Контакты"))),n.createElement("div",{className:er.blockInfo},n.createElement("div",{className:er.infoField},n.createElement("img",{className:er.imageInfoContacts,src:$e}),"Чапаевск,Безенчук"),n.createElement("div",{className:er.infoField},n.createElement("img",{className:er.imageInfoContacts,src:An}),"Режим работы: пн-пт с 8:00 до 19:00, сб с 8-00 до 17-00"),n.createElement("div",{className:er.infoField},n.createElement("img",{className:er.imageInfoContacts,src:nr}),"kd_p09@mail.ru"))),n.createElement("div",{className:er.downBlockFooter},n.createElement(R,{className:er.downText,to:"/"},"© ООО «Консультативно-диагностическая поликлиника»")))};var rr=t(6542),or={};or.styleTagTransform=G(),or.setAttributes=H(),or.insert=V().bind(null,"head"),or.domAPI=Z(),or.insertStyleElement=K(),D()(rr.Z,or);const ar=rr.Z&&rr.Z.locals?rr.Z.locals:void 0,ir=function(){var e=screen.width<500;return n.createElement("div",{className:ar.app},n.createElement(We,{isMobile:e}),n.createElement(Kt,null),n.createElement(tr,null))};var lr=function(){return n.createElement(L,null,n.createElement(ir,null))};r.render(n.createElement(lr,null),document.getElementById("root"))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUNJLHVCQUFLazZCLFVBQVdDLEdBQUFBLEtBQ1osZ0JBQUMsR0FBRCxDQUFRUCxTQUFVQSxJQUNsQixnQkFBQyxHQUFELE1BQ0EsZ0JBQUMsR0FBRCxRQ05aLElBQU1tTixHQUFnQixrQkFDbEIsZ0JBQUM5UixFQUFELEtBQ0ksZ0JBQUMsR0FBRCxRQUdSK1IsRUFBQUEsT0FBZ0IsZ0JBQUNELEdBQUQsTUFBbUJqcUQsU0FBU3U5QyxlQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3JlZ2VuZXJhdG9yUnVudGltZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvdHlwZW9mLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3IvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9heGlvcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9hZGFwdGVycy94aHIuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvYXhpb3MuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY2FuY2VsL0NhbmNlbC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jYW5jZWwvQ2FuY2VsVG9rZW4uanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY2FuY2VsL2lzQ2FuY2VsLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvQXhpb3MuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9JbnRlcmNlcHRvck1hbmFnZXIuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9idWlsZEZ1bGxQYXRoLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvY3JlYXRlRXJyb3IuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9kaXNwYXRjaFJlcXVlc3QuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9lbmhhbmNlRXJyb3IuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9tZXJnZUNvbmZpZy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL3NldHRsZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL3RyYW5zZm9ybURhdGEuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvZGVmYXVsdHMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvZGVmYXVsdHMvdHJhbnNpdGlvbmFsLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2Vudi9kYXRhLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYmluZC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2J1aWxkVVJMLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29tYmluZVVSTHMuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9jb29raWVzLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBYnNvbHV0ZVVSTC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2lzQXhpb3NFcnJvci5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2lzVVJMU2FtZU9yaWdpbi5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL25vcm1hbGl6ZUhlYWRlck5hbWUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9wYXJzZUhlYWRlcnMuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9zcHJlYWQuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy92YWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvdXRpbHMuanMiLCJ3ZWJwYWNrOi8vLy4vQXBwL0Zvb3Rlci9zdHlsZXMuY3NzIiwid2VicGFjazovLy8uL0FwcC9IZWFkZXIvc3R5bGVzLmNzcyIsIndlYnBhY2s6Ly8vLi9BcHAvTWFpbi9zdHlsZXMuY3NzIiwid2VicGFjazovLy8uL0FwcC9zdHlsZXMuY3NzIiwid2VicGFjazovLy8uL0NvbXBvbmVudHMvQnV0dG9uL3N0eWxlcy5jc3MiLCJ3ZWJwYWNrOi8vLy4vQ29tcG9uZW50cy9DYXJkSG9zcGl0YWwvc3R5bGVzLmNzcyIsIndlYnBhY2s6Ly8vLi9Db21wb25lbnRzL01vZGFsL3N0eWxlcy5jc3MiLCJ3ZWJwYWNrOi8vLy4vQ29tcG9uZW50cy9OYXZpZ2F0aW9uTWVudS9zdHlsZXMuY3NzIiwid2VicGFjazovLy8uL0NvbXBvbmVudHMvUmVxdWVzdENhbGwvc3R5bGVzLmNzcyIsIndlYnBhY2s6Ly8vLi9Db21wb25lbnRzL1JlcXVlc3RTbXMvc3R5bGVzLmNzcyIsIndlYnBhY2s6Ly8vLi9Db21wb25lbnRzL1NlcnZpY2Uvc3R5bGVzLmNzcyIsIndlYnBhY2s6Ly8vLi9Db21wb25lbnRzL1NsaWRlci9zdHlsZXMuY3NzIiwid2VicGFjazovLy8uL0NvbXBvbmVudHMvU3BlY2lhbGlzdC9zdHlsZXMuY3NzIiwid2VicGFjazovLy8uL0NvbXBvbmVudHMvVHlwZURvY3Rvci9zdHlsZXMuY3NzIiwid2VicGFjazovLy8uL1BhZ2VzL0NvbnRhY3RzUGFnZS9zdHlsZXMuY3NzIiwid2VicGFjazovLy8uL1BhZ2VzL01haW5QYWdlL3N0eWxlcy5jc3MiLCJ3ZWJwYWNrOi8vLy4vUGFnZXMvUHJldmlld3NQYWdlL3N0eWxlcy5jc3MiLCJ3ZWJwYWNrOi8vLy4vUGFnZXMvU2VydmljZXNQYWdlL3N0eWxlcy5jc3MiLCJ3ZWJwYWNrOi8vLy4vUGFnZXMvU3BlY2lhbGlzdHNQYWdlL3N0eWxlcy5jc3MiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvb2JqZWN0LWFzc2lnbi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9yZWFjdC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2luZGV4LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovLy93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly8vd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovLy93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovLy93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovLy93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly8vd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvaGlzdG9yeS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2luZGV4LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXJyYXlMaWtlVG9BcnJheS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3NsaWNlZFRvQXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hcnJheVdpdGhIb2xlcy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2l0ZXJhYmxlVG9BcnJheUxpbWl0LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9ub25JdGVyYWJsZVJlc3QuanMiLCJ3ZWJwYWNrOi8vLy4vQ29tcG9uZW50cy9OYXZpZ2F0aW9uTWVudS9zdHlsZXMuY3NzPzQ1ODgiLCJ3ZWJwYWNrOi8vLy4vQ29tcG9uZW50cy9OYXZpZ2F0aW9uTWVudS9pbmRleC5qc3giLCJ3ZWJwYWNrOi8vLy4vQ29tcG9uZW50cy9CdXR0b24vc3R5bGVzLmNzcz8yOTFkIiwid2VicGFjazovLy8uL0NvbXBvbmVudHMvQnV0dG9uL2luZGV4LmpzeCIsIndlYnBhY2s6Ly8vLi9Db21wb25lbnRzL01vZGFsL3N0eWxlcy5jc3M/MjVjMiIsIndlYnBhY2s6Ly8vLi9Db21wb25lbnRzL01vZGFsL2luZGV4LmpzeCIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vY29yZS9hcGkvYXBpRGNwLmpzIiwid2VicGFjazovLy8uL0NvbXBvbmVudHMvUmVxdWVzdENhbGwvc3R5bGVzLmNzcz9iMWRmIiwid2VicGFjazovLy8uL0NvbXBvbmVudHMvUmVxdWVzdENhbGwvaW5kZXguanN4Iiwid2VicGFjazovLy8uL0NvbXBvbmVudHMvUmVxdWVzdFNtcy9zdHlsZXMuY3NzP2Y1NmMiLCJ3ZWJwYWNrOi8vLy4vQ29tcG9uZW50cy9SZXF1ZXN0U21zL2luZGV4LmpzeCIsIndlYnBhY2s6Ly8vLi9BcHAvSGVhZGVyL3N0eWxlcy5jc3M/Mzk0ZSIsIndlYnBhY2s6Ly8vLi9BcHAvSGVhZGVyL2luZGV4LmpzeCIsIndlYnBhY2s6Ly8vLi9Db21wb25lbnRzL1NsaWRlci9zdHlsZXMuY3NzP2IyZDkiLCJ3ZWJwYWNrOi8vLy4vQ29tcG9uZW50cy9TbGlkZXIvaW5kZXguanN4Iiwid2VicGFjazovLy8uL0NvbXBvbmVudHMvU3BlY2lhbGlzdC9zdHlsZXMuY3NzP2E2NzEiLCJ3ZWJwYWNrOi8vLy4vQ29tcG9uZW50cy9TcGVjaWFsaXN0L2luZGV4LmpzeCIsIndlYnBhY2s6Ly8vLi9Db21wb25lbnRzL1R5cGVEb2N0b3Ivc3R5bGVzLmNzcz9kZDQ4Iiwid2VicGFjazovLy8uL0NvbXBvbmVudHMvVHlwZURvY3Rvci9pbmRleC5qc3giLCJ3ZWJwYWNrOi8vLy4vUGFnZXMvU3BlY2lhbGlzdHNQYWdlL3N0eWxlcy5jc3M/OGEyNCIsIndlYnBhY2s6Ly8vLi9QYWdlcy9TcGVjaWFsaXN0c1BhZ2UvaW5kZXguanN4Iiwid2VicGFjazovLy8uL0NvbXBvbmVudHMvQ2FyZEhvc3BpdGFsL3N0eWxlcy5jc3M/ZTI4ZCIsIndlYnBhY2s6Ly8vLi9Db21wb25lbnRzL0NhcmRIb3NwaXRhbC9pbmRleC5qc3giLCJ3ZWJwYWNrOi8vLy4vUGFnZXMvTWFpblBhZ2Uvc3R5bGVzLmNzcz9jZTRkIiwid2VicGFjazovLy8uL1BhZ2VzL01haW5QYWdlL2luZGV4LmpzeCIsIndlYnBhY2s6Ly8vLi9Db21wb25lbnRzL1NlcnZpY2Uvc3R5bGVzLmNzcz80MTA2Iiwid2VicGFjazovLy8uL0NvbXBvbmVudHMvU2VydmljZS9pbmRleC5qc3giLCJ3ZWJwYWNrOi8vLy4vUGFnZXMvU2VydmljZXNQYWdlL3N0eWxlcy5jc3M/NDYxYSIsIndlYnBhY2s6Ly8vLi9QYWdlcy9TZXJ2aWNlc1BhZ2UvaW5kZXguanN4Iiwid2VicGFjazovLy8uL1BhZ2VzL1ByZXZpZXdzUGFnZS9zdHlsZXMuY3NzPzk1MjAiLCJ3ZWJwYWNrOi8vLy4vUGFnZXMvUHJldmlld3NQYWdlL2luZGV4LmpzeCIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LXlhbmRleC1tYXBzL2Rpc3QvcHJvZHVjdGlvbi9yZWFjdC15YW5kZXgtbWFwcy5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vUGFnZXMvQ29udGFjdHNQYWdlL3N0eWxlcy5jc3M/NjkwZiIsIndlYnBhY2s6Ly8vLi9QYWdlcy9Db250YWN0c1BhZ2UvaW5kZXguanN4Iiwid2VicGFjazovLy8uL0FwcC9NYWluL3N0eWxlcy5jc3M/MDBjZiIsIndlYnBhY2s6Ly8vLi9BcHAvTWFpbi9pbmRleC5qc3giLCJ3ZWJwYWNrOi8vLy4vQXBwL0Zvb3Rlci9zdHlsZXMuY3NzP2ZiMDciLCJ3ZWJwYWNrOi8vLy4vQXBwL0Zvb3Rlci9pbmRleC5qc3giLCJ3ZWJwYWNrOi8vLy4vQXBwL3N0eWxlcy5jc3M/YjA2NCIsIndlYnBhY2s6Ly8vLi9BcHAvaW5kZXguanN4Iiwid2VicGFjazovLy8uL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfdHlwZW9mID0gcmVxdWlyZShcIi4vdHlwZW9mLmpzXCIpW1wiZGVmYXVsdFwiXTtcblxuZnVuY3Rpb24gX3JlZ2VuZXJhdG9yUnVudGltZSgpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG4gIC8qISByZWdlbmVyYXRvci1ydW50aW1lIC0tIENvcHlyaWdodCAoYykgMjAxNC1wcmVzZW50LCBGYWNlYm9vaywgSW5jLiAtLSBsaWNlbnNlIChNSVQpOiBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVnZW5lcmF0b3IvYmxvYi9tYWluL0xJQ0VOU0UgKi9cblxuICBtb2R1bGUuZXhwb3J0cyA9IF9yZWdlbmVyYXRvclJ1bnRpbWUgPSBmdW5jdGlvbiBfcmVnZW5lcmF0b3JSdW50aW1lKCkge1xuICAgIHJldHVybiBleHBvcnRzO1xuICB9LCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7XG4gIHZhciBleHBvcnRzID0ge30sXG4gICAgICBPcCA9IE9iamVjdC5wcm90b3R5cGUsXG4gICAgICBoYXNPd24gPSBPcC5oYXNPd25Qcm9wZXJ0eSxcbiAgICAgICRTeW1ib2wgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCA/IFN5bWJvbCA6IHt9LFxuICAgICAgaXRlcmF0b3JTeW1ib2wgPSAkU3ltYm9sLml0ZXJhdG9yIHx8IFwiQEBpdGVyYXRvclwiLFxuICAgICAgYXN5bmNJdGVyYXRvclN5bWJvbCA9ICRTeW1ib2wuYXN5bmNJdGVyYXRvciB8fCBcIkBAYXN5bmNJdGVyYXRvclwiLFxuICAgICAgdG9TdHJpbmdUYWdTeW1ib2wgPSAkU3ltYm9sLnRvU3RyaW5nVGFnIHx8IFwiQEB0b1N0cmluZ1RhZ1wiO1xuXG4gIGZ1bmN0aW9uIGRlZmluZShvYmosIGtleSwgdmFsdWUpIHtcbiAgICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBlbnVtZXJhYmxlOiAhMCxcbiAgICAgIGNvbmZpZ3VyYWJsZTogITAsXG4gICAgICB3cml0YWJsZTogITBcbiAgICB9KSwgb2JqW2tleV07XG4gIH1cblxuICB0cnkge1xuICAgIGRlZmluZSh7fSwgXCJcIik7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGRlZmluZSA9IGZ1bmN0aW9uIGRlZmluZShvYmosIGtleSwgdmFsdWUpIHtcbiAgICAgIHJldHVybiBvYmpba2V5XSA9IHZhbHVlO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiB3cmFwKGlubmVyRm4sIG91dGVyRm4sIHNlbGYsIHRyeUxvY3NMaXN0KSB7XG4gICAgdmFyIHByb3RvR2VuZXJhdG9yID0gb3V0ZXJGbiAmJiBvdXRlckZuLnByb3RvdHlwZSBpbnN0YW5jZW9mIEdlbmVyYXRvciA/IG91dGVyRm4gOiBHZW5lcmF0b3IsXG4gICAgICAgIGdlbmVyYXRvciA9IE9iamVjdC5jcmVhdGUocHJvdG9HZW5lcmF0b3IucHJvdG90eXBlKSxcbiAgICAgICAgY29udGV4dCA9IG5ldyBDb250ZXh0KHRyeUxvY3NMaXN0IHx8IFtdKTtcbiAgICByZXR1cm4gZ2VuZXJhdG9yLl9pbnZva2UgPSBmdW5jdGlvbiAoaW5uZXJGbiwgc2VsZiwgY29udGV4dCkge1xuICAgICAgdmFyIHN0YXRlID0gXCJzdXNwZW5kZWRTdGFydFwiO1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uIChtZXRob2QsIGFyZykge1xuICAgICAgICBpZiAoXCJleGVjdXRpbmdcIiA9PT0gc3RhdGUpIHRocm93IG5ldyBFcnJvcihcIkdlbmVyYXRvciBpcyBhbHJlYWR5IHJ1bm5pbmdcIik7XG5cbiAgICAgICAgaWYgKFwiY29tcGxldGVkXCIgPT09IHN0YXRlKSB7XG4gICAgICAgICAgaWYgKFwidGhyb3dcIiA9PT0gbWV0aG9kKSB0aHJvdyBhcmc7XG4gICAgICAgICAgcmV0dXJuIGRvbmVSZXN1bHQoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAoY29udGV4dC5tZXRob2QgPSBtZXRob2QsIGNvbnRleHQuYXJnID0gYXJnOzspIHtcbiAgICAgICAgICB2YXIgZGVsZWdhdGUgPSBjb250ZXh0LmRlbGVnYXRlO1xuXG4gICAgICAgICAgaWYgKGRlbGVnYXRlKSB7XG4gICAgICAgICAgICB2YXIgZGVsZWdhdGVSZXN1bHQgPSBtYXliZUludm9rZURlbGVnYXRlKGRlbGVnYXRlLCBjb250ZXh0KTtcblxuICAgICAgICAgICAgaWYgKGRlbGVnYXRlUmVzdWx0KSB7XG4gICAgICAgICAgICAgIGlmIChkZWxlZ2F0ZVJlc3VsdCA9PT0gQ29udGludWVTZW50aW5lbCkgY29udGludWU7XG4gICAgICAgICAgICAgIHJldHVybiBkZWxlZ2F0ZVJlc3VsdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoXCJuZXh0XCIgPT09IGNvbnRleHQubWV0aG9kKSBjb250ZXh0LnNlbnQgPSBjb250ZXh0Ll9zZW50ID0gY29udGV4dC5hcmc7ZWxzZSBpZiAoXCJ0aHJvd1wiID09PSBjb250ZXh0Lm1ldGhvZCkge1xuICAgICAgICAgICAgaWYgKFwic3VzcGVuZGVkU3RhcnRcIiA9PT0gc3RhdGUpIHRocm93IHN0YXRlID0gXCJjb21wbGV0ZWRcIiwgY29udGV4dC5hcmc7XG4gICAgICAgICAgICBjb250ZXh0LmRpc3BhdGNoRXhjZXB0aW9uKGNvbnRleHQuYXJnKTtcbiAgICAgICAgICB9IGVsc2UgXCJyZXR1cm5cIiA9PT0gY29udGV4dC5tZXRob2QgJiYgY29udGV4dC5hYnJ1cHQoXCJyZXR1cm5cIiwgY29udGV4dC5hcmcpO1xuICAgICAgICAgIHN0YXRlID0gXCJleGVjdXRpbmdcIjtcbiAgICAgICAgICB2YXIgcmVjb3JkID0gdHJ5Q2F0Y2goaW5uZXJGbiwgc2VsZiwgY29udGV4dCk7XG5cbiAgICAgICAgICBpZiAoXCJub3JtYWxcIiA9PT0gcmVjb3JkLnR5cGUpIHtcbiAgICAgICAgICAgIGlmIChzdGF0ZSA9IGNvbnRleHQuZG9uZSA/IFwiY29tcGxldGVkXCIgOiBcInN1c3BlbmRlZFlpZWxkXCIsIHJlY29yZC5hcmcgPT09IENvbnRpbnVlU2VudGluZWwpIGNvbnRpbnVlO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgdmFsdWU6IHJlY29yZC5hcmcsXG4gICAgICAgICAgICAgIGRvbmU6IGNvbnRleHQuZG9uZVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBcInRocm93XCIgPT09IHJlY29yZC50eXBlICYmIChzdGF0ZSA9IFwiY29tcGxldGVkXCIsIGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiLCBjb250ZXh0LmFyZyA9IHJlY29yZC5hcmcpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH0oaW5uZXJGbiwgc2VsZiwgY29udGV4dCksIGdlbmVyYXRvcjtcbiAgfVxuXG4gIGZ1bmN0aW9uIHRyeUNhdGNoKGZuLCBvYmosIGFyZykge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBcIm5vcm1hbFwiLFxuICAgICAgICBhcmc6IGZuLmNhbGwob2JqLCBhcmcpXG4gICAgICB9O1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogXCJ0aHJvd1wiLFxuICAgICAgICBhcmc6IGVyclxuICAgICAgfTtcbiAgICB9XG4gIH1cblxuICBleHBvcnRzLndyYXAgPSB3cmFwO1xuICB2YXIgQ29udGludWVTZW50aW5lbCA9IHt9O1xuXG4gIGZ1bmN0aW9uIEdlbmVyYXRvcigpIHt9XG5cbiAgZnVuY3Rpb24gR2VuZXJhdG9yRnVuY3Rpb24oKSB7fVxuXG4gIGZ1bmN0aW9uIEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlKCkge31cblxuICB2YXIgSXRlcmF0b3JQcm90b3R5cGUgPSB7fTtcbiAgZGVmaW5lKEl0ZXJhdG9yUHJvdG90eXBlLCBpdGVyYXRvclN5bWJvbCwgZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzO1xuICB9KTtcbiAgdmFyIGdldFByb3RvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mLFxuICAgICAgTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUgPSBnZXRQcm90byAmJiBnZXRQcm90byhnZXRQcm90byh2YWx1ZXMoW10pKSk7XG4gIE5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlICYmIE5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlICE9PSBPcCAmJiBoYXNPd24uY2FsbChOYXRpdmVJdGVyYXRvclByb3RvdHlwZSwgaXRlcmF0b3JTeW1ib2wpICYmIChJdGVyYXRvclByb3RvdHlwZSA9IE5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlKTtcbiAgdmFyIEdwID0gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUucHJvdG90eXBlID0gR2VuZXJhdG9yLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoSXRlcmF0b3JQcm90b3R5cGUpO1xuXG4gIGZ1bmN0aW9uIGRlZmluZUl0ZXJhdG9yTWV0aG9kcyhwcm90b3R5cGUpIHtcbiAgICBbXCJuZXh0XCIsIFwidGhyb3dcIiwgXCJyZXR1cm5cIl0uZm9yRWFjaChmdW5jdGlvbiAobWV0aG9kKSB7XG4gICAgICBkZWZpbmUocHJvdG90eXBlLCBtZXRob2QsIGZ1bmN0aW9uIChhcmcpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2ludm9rZShtZXRob2QsIGFyZyk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIEFzeW5jSXRlcmF0b3IoZ2VuZXJhdG9yLCBQcm9taXNlSW1wbCkge1xuICAgIGZ1bmN0aW9uIGludm9rZShtZXRob2QsIGFyZywgcmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICB2YXIgcmVjb3JkID0gdHJ5Q2F0Y2goZ2VuZXJhdG9yW21ldGhvZF0sIGdlbmVyYXRvciwgYXJnKTtcblxuICAgICAgaWYgKFwidGhyb3dcIiAhPT0gcmVjb3JkLnR5cGUpIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IHJlY29yZC5hcmcsXG4gICAgICAgICAgICB2YWx1ZSA9IHJlc3VsdC52YWx1ZTtcbiAgICAgICAgcmV0dXJuIHZhbHVlICYmIFwib2JqZWN0XCIgPT0gX3R5cGVvZih2YWx1ZSkgJiYgaGFzT3duLmNhbGwodmFsdWUsIFwiX19hd2FpdFwiKSA/IFByb21pc2VJbXBsLnJlc29sdmUodmFsdWUuX19hd2FpdCkudGhlbihmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICBpbnZva2UoXCJuZXh0XCIsIHZhbHVlLCByZXNvbHZlLCByZWplY3QpO1xuICAgICAgICB9LCBmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgICAgaW52b2tlKFwidGhyb3dcIiwgZXJyLCByZXNvbHZlLCByZWplY3QpO1xuICAgICAgICB9KSA6IFByb21pc2VJbXBsLnJlc29sdmUodmFsdWUpLnRoZW4oZnVuY3Rpb24gKHVud3JhcHBlZCkge1xuICAgICAgICAgIHJlc3VsdC52YWx1ZSA9IHVud3JhcHBlZCwgcmVzb2x2ZShyZXN1bHQpO1xuICAgICAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgICByZXR1cm4gaW52b2tlKFwidGhyb3dcIiwgZXJyb3IsIHJlc29sdmUsIHJlamVjdCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICByZWplY3QocmVjb3JkLmFyZyk7XG4gICAgfVxuXG4gICAgdmFyIHByZXZpb3VzUHJvbWlzZTtcblxuICAgIHRoaXMuX2ludm9rZSA9IGZ1bmN0aW9uIChtZXRob2QsIGFyZykge1xuICAgICAgZnVuY3Rpb24gY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmcoKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZUltcGwoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICAgIGludm9rZShtZXRob2QsIGFyZywgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBwcmV2aW91c1Byb21pc2UgPSBwcmV2aW91c1Byb21pc2UgPyBwcmV2aW91c1Byb21pc2UudGhlbihjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZywgY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmcpIDogY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmcoKTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gbWF5YmVJbnZva2VEZWxlZ2F0ZShkZWxlZ2F0ZSwgY29udGV4dCkge1xuICAgIHZhciBtZXRob2QgPSBkZWxlZ2F0ZS5pdGVyYXRvcltjb250ZXh0Lm1ldGhvZF07XG5cbiAgICBpZiAodW5kZWZpbmVkID09PSBtZXRob2QpIHtcbiAgICAgIGlmIChjb250ZXh0LmRlbGVnYXRlID0gbnVsbCwgXCJ0aHJvd1wiID09PSBjb250ZXh0Lm1ldGhvZCkge1xuICAgICAgICBpZiAoZGVsZWdhdGUuaXRlcmF0b3JbXCJyZXR1cm5cIl0gJiYgKGNvbnRleHQubWV0aG9kID0gXCJyZXR1cm5cIiwgY29udGV4dC5hcmcgPSB1bmRlZmluZWQsIG1heWJlSW52b2tlRGVsZWdhdGUoZGVsZWdhdGUsIGNvbnRleHQpLCBcInRocm93XCIgPT09IGNvbnRleHQubWV0aG9kKSkgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiLCBjb250ZXh0LmFyZyA9IG5ldyBUeXBlRXJyb3IoXCJUaGUgaXRlcmF0b3IgZG9lcyBub3QgcHJvdmlkZSBhICd0aHJvdycgbWV0aG9kXCIpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICB9XG5cbiAgICB2YXIgcmVjb3JkID0gdHJ5Q2F0Y2gobWV0aG9kLCBkZWxlZ2F0ZS5pdGVyYXRvciwgY29udGV4dC5hcmcpO1xuICAgIGlmIChcInRocm93XCIgPT09IHJlY29yZC50eXBlKSByZXR1cm4gY29udGV4dC5tZXRob2QgPSBcInRocm93XCIsIGNvbnRleHQuYXJnID0gcmVjb3JkLmFyZywgY29udGV4dC5kZWxlZ2F0ZSA9IG51bGwsIENvbnRpbnVlU2VudGluZWw7XG4gICAgdmFyIGluZm8gPSByZWNvcmQuYXJnO1xuICAgIHJldHVybiBpbmZvID8gaW5mby5kb25lID8gKGNvbnRleHRbZGVsZWdhdGUucmVzdWx0TmFtZV0gPSBpbmZvLnZhbHVlLCBjb250ZXh0Lm5leHQgPSBkZWxlZ2F0ZS5uZXh0TG9jLCBcInJldHVyblwiICE9PSBjb250ZXh0Lm1ldGhvZCAmJiAoY29udGV4dC5tZXRob2QgPSBcIm5leHRcIiwgY29udGV4dC5hcmcgPSB1bmRlZmluZWQpLCBjb250ZXh0LmRlbGVnYXRlID0gbnVsbCwgQ29udGludWVTZW50aW5lbCkgOiBpbmZvIDogKGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiLCBjb250ZXh0LmFyZyA9IG5ldyBUeXBlRXJyb3IoXCJpdGVyYXRvciByZXN1bHQgaXMgbm90IGFuIG9iamVjdFwiKSwgY29udGV4dC5kZWxlZ2F0ZSA9IG51bGwsIENvbnRpbnVlU2VudGluZWwpO1xuICB9XG5cbiAgZnVuY3Rpb24gcHVzaFRyeUVudHJ5KGxvY3MpIHtcbiAgICB2YXIgZW50cnkgPSB7XG4gICAgICB0cnlMb2M6IGxvY3NbMF1cbiAgICB9O1xuICAgIDEgaW4gbG9jcyAmJiAoZW50cnkuY2F0Y2hMb2MgPSBsb2NzWzFdKSwgMiBpbiBsb2NzICYmIChlbnRyeS5maW5hbGx5TG9jID0gbG9jc1syXSwgZW50cnkuYWZ0ZXJMb2MgPSBsb2NzWzNdKSwgdGhpcy50cnlFbnRyaWVzLnB1c2goZW50cnkpO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVzZXRUcnlFbnRyeShlbnRyeSkge1xuICAgIHZhciByZWNvcmQgPSBlbnRyeS5jb21wbGV0aW9uIHx8IHt9O1xuICAgIHJlY29yZC50eXBlID0gXCJub3JtYWxcIiwgZGVsZXRlIHJlY29yZC5hcmcsIGVudHJ5LmNvbXBsZXRpb24gPSByZWNvcmQ7XG4gIH1cblxuICBmdW5jdGlvbiBDb250ZXh0KHRyeUxvY3NMaXN0KSB7XG4gICAgdGhpcy50cnlFbnRyaWVzID0gW3tcbiAgICAgIHRyeUxvYzogXCJyb290XCJcbiAgICB9XSwgdHJ5TG9jc0xpc3QuZm9yRWFjaChwdXNoVHJ5RW50cnksIHRoaXMpLCB0aGlzLnJlc2V0KCEwKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHZhbHVlcyhpdGVyYWJsZSkge1xuICAgIGlmIChpdGVyYWJsZSkge1xuICAgICAgdmFyIGl0ZXJhdG9yTWV0aG9kID0gaXRlcmFibGVbaXRlcmF0b3JTeW1ib2xdO1xuICAgICAgaWYgKGl0ZXJhdG9yTWV0aG9kKSByZXR1cm4gaXRlcmF0b3JNZXRob2QuY2FsbChpdGVyYWJsZSk7XG4gICAgICBpZiAoXCJmdW5jdGlvblwiID09IHR5cGVvZiBpdGVyYWJsZS5uZXh0KSByZXR1cm4gaXRlcmFibGU7XG5cbiAgICAgIGlmICghaXNOYU4oaXRlcmFibGUubGVuZ3RoKSkge1xuICAgICAgICB2YXIgaSA9IC0xLFxuICAgICAgICAgICAgbmV4dCA9IGZ1bmN0aW9uIG5leHQoKSB7XG4gICAgICAgICAgZm9yICg7ICsraSA8IGl0ZXJhYmxlLmxlbmd0aDspIHtcbiAgICAgICAgICAgIGlmIChoYXNPd24uY2FsbChpdGVyYWJsZSwgaSkpIHJldHVybiBuZXh0LnZhbHVlID0gaXRlcmFibGVbaV0sIG5leHQuZG9uZSA9ICExLCBuZXh0O1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiBuZXh0LnZhbHVlID0gdW5kZWZpbmVkLCBuZXh0LmRvbmUgPSAhMCwgbmV4dDtcbiAgICAgICAgfTtcblxuICAgICAgICByZXR1cm4gbmV4dC5uZXh0ID0gbmV4dDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgbmV4dDogZG9uZVJlc3VsdFxuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBkb25lUmVzdWx0KCkge1xuICAgIHJldHVybiB7XG4gICAgICB2YWx1ZTogdW5kZWZpbmVkLFxuICAgICAgZG9uZTogITBcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIEdlbmVyYXRvckZ1bmN0aW9uLnByb3RvdHlwZSA9IEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlLCBkZWZpbmUoR3AsIFwiY29uc3RydWN0b3JcIiwgR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUpLCBkZWZpbmUoR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUsIFwiY29uc3RydWN0b3JcIiwgR2VuZXJhdG9yRnVuY3Rpb24pLCBHZW5lcmF0b3JGdW5jdGlvbi5kaXNwbGF5TmFtZSA9IGRlZmluZShHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSwgdG9TdHJpbmdUYWdTeW1ib2wsIFwiR2VuZXJhdG9yRnVuY3Rpb25cIiksIGV4cG9ydHMuaXNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uIChnZW5GdW4pIHtcbiAgICB2YXIgY3RvciA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgZ2VuRnVuICYmIGdlbkZ1bi5jb25zdHJ1Y3RvcjtcbiAgICByZXR1cm4gISFjdG9yICYmIChjdG9yID09PSBHZW5lcmF0b3JGdW5jdGlvbiB8fCBcIkdlbmVyYXRvckZ1bmN0aW9uXCIgPT09IChjdG9yLmRpc3BsYXlOYW1lIHx8IGN0b3IubmFtZSkpO1xuICB9LCBleHBvcnRzLm1hcmsgPSBmdW5jdGlvbiAoZ2VuRnVuKSB7XG4gICAgcmV0dXJuIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihnZW5GdW4sIEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlKSA6IChnZW5GdW4uX19wcm90b19fID0gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUsIGRlZmluZShnZW5GdW4sIHRvU3RyaW5nVGFnU3ltYm9sLCBcIkdlbmVyYXRvckZ1bmN0aW9uXCIpKSwgZ2VuRnVuLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoR3ApLCBnZW5GdW47XG4gIH0sIGV4cG9ydHMuYXdyYXAgPSBmdW5jdGlvbiAoYXJnKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIF9fYXdhaXQ6IGFyZ1xuICAgIH07XG4gIH0sIGRlZmluZUl0ZXJhdG9yTWV0aG9kcyhBc3luY0l0ZXJhdG9yLnByb3RvdHlwZSksIGRlZmluZShBc3luY0l0ZXJhdG9yLnByb3RvdHlwZSwgYXN5bmNJdGVyYXRvclN5bWJvbCwgZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzO1xuICB9KSwgZXhwb3J0cy5Bc3luY0l0ZXJhdG9yID0gQXN5bmNJdGVyYXRvciwgZXhwb3J0cy5hc3luYyA9IGZ1bmN0aW9uIChpbm5lckZuLCBvdXRlckZuLCBzZWxmLCB0cnlMb2NzTGlzdCwgUHJvbWlzZUltcGwpIHtcbiAgICB2b2lkIDAgPT09IFByb21pc2VJbXBsICYmIChQcm9taXNlSW1wbCA9IFByb21pc2UpO1xuICAgIHZhciBpdGVyID0gbmV3IEFzeW5jSXRlcmF0b3Iod3JhcChpbm5lckZuLCBvdXRlckZuLCBzZWxmLCB0cnlMb2NzTGlzdCksIFByb21pc2VJbXBsKTtcbiAgICByZXR1cm4gZXhwb3J0cy5pc0dlbmVyYXRvckZ1bmN0aW9uKG91dGVyRm4pID8gaXRlciA6IGl0ZXIubmV4dCgpLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgcmV0dXJuIHJlc3VsdC5kb25lID8gcmVzdWx0LnZhbHVlIDogaXRlci5uZXh0KCk7XG4gICAgfSk7XG4gIH0sIGRlZmluZUl0ZXJhdG9yTWV0aG9kcyhHcCksIGRlZmluZShHcCwgdG9TdHJpbmdUYWdTeW1ib2wsIFwiR2VuZXJhdG9yXCIpLCBkZWZpbmUoR3AsIGl0ZXJhdG9yU3ltYm9sLCBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH0pLCBkZWZpbmUoR3AsIFwidG9TdHJpbmdcIiwgZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBcIltvYmplY3QgR2VuZXJhdG9yXVwiO1xuICB9KSwgZXhwb3J0cy5rZXlzID0gZnVuY3Rpb24gKG9iamVjdCkge1xuICAgIHZhciBrZXlzID0gW107XG5cbiAgICBmb3IgKHZhciBrZXkgaW4gb2JqZWN0KSB7XG4gICAgICBrZXlzLnB1c2goa2V5KTtcbiAgICB9XG5cbiAgICByZXR1cm4ga2V5cy5yZXZlcnNlKCksIGZ1bmN0aW9uIG5leHQoKSB7XG4gICAgICBmb3IgKDsga2V5cy5sZW5ndGg7KSB7XG4gICAgICAgIHZhciBrZXkgPSBrZXlzLnBvcCgpO1xuICAgICAgICBpZiAoa2V5IGluIG9iamVjdCkgcmV0dXJuIG5leHQudmFsdWUgPSBrZXksIG5leHQuZG9uZSA9ICExLCBuZXh0O1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gbmV4dC5kb25lID0gITAsIG5leHQ7XG4gICAgfTtcbiAgfSwgZXhwb3J0cy52YWx1ZXMgPSB2YWx1ZXMsIENvbnRleHQucHJvdG90eXBlID0ge1xuICAgIGNvbnN0cnVjdG9yOiBDb250ZXh0LFxuICAgIHJlc2V0OiBmdW5jdGlvbiByZXNldChza2lwVGVtcFJlc2V0KSB7XG4gICAgICBpZiAodGhpcy5wcmV2ID0gMCwgdGhpcy5uZXh0ID0gMCwgdGhpcy5zZW50ID0gdGhpcy5fc2VudCA9IHVuZGVmaW5lZCwgdGhpcy5kb25lID0gITEsIHRoaXMuZGVsZWdhdGUgPSBudWxsLCB0aGlzLm1ldGhvZCA9IFwibmV4dFwiLCB0aGlzLmFyZyA9IHVuZGVmaW5lZCwgdGhpcy50cnlFbnRyaWVzLmZvckVhY2gocmVzZXRUcnlFbnRyeSksICFza2lwVGVtcFJlc2V0KSBmb3IgKHZhciBuYW1lIGluIHRoaXMpIHtcbiAgICAgICAgXCJ0XCIgPT09IG5hbWUuY2hhckF0KDApICYmIGhhc093bi5jYWxsKHRoaXMsIG5hbWUpICYmICFpc05hTigrbmFtZS5zbGljZSgxKSkgJiYgKHRoaXNbbmFtZV0gPSB1bmRlZmluZWQpO1xuICAgICAgfVxuICAgIH0sXG4gICAgc3RvcDogZnVuY3Rpb24gc3RvcCgpIHtcbiAgICAgIHRoaXMuZG9uZSA9ICEwO1xuICAgICAgdmFyIHJvb3RSZWNvcmQgPSB0aGlzLnRyeUVudHJpZXNbMF0uY29tcGxldGlvbjtcbiAgICAgIGlmIChcInRocm93XCIgPT09IHJvb3RSZWNvcmQudHlwZSkgdGhyb3cgcm9vdFJlY29yZC5hcmc7XG4gICAgICByZXR1cm4gdGhpcy5ydmFsO1xuICAgIH0sXG4gICAgZGlzcGF0Y2hFeGNlcHRpb246IGZ1bmN0aW9uIGRpc3BhdGNoRXhjZXB0aW9uKGV4Y2VwdGlvbikge1xuICAgICAgaWYgKHRoaXMuZG9uZSkgdGhyb3cgZXhjZXB0aW9uO1xuICAgICAgdmFyIGNvbnRleHQgPSB0aGlzO1xuXG4gICAgICBmdW5jdGlvbiBoYW5kbGUobG9jLCBjYXVnaHQpIHtcbiAgICAgICAgcmV0dXJuIHJlY29yZC50eXBlID0gXCJ0aHJvd1wiLCByZWNvcmQuYXJnID0gZXhjZXB0aW9uLCBjb250ZXh0Lm5leHQgPSBsb2MsIGNhdWdodCAmJiAoY29udGV4dC5tZXRob2QgPSBcIm5leHRcIiwgY29udGV4dC5hcmcgPSB1bmRlZmluZWQpLCAhIWNhdWdodDtcbiAgICAgIH1cblxuICAgICAgZm9yICh2YXIgaSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICB2YXIgZW50cnkgPSB0aGlzLnRyeUVudHJpZXNbaV0sXG4gICAgICAgICAgICByZWNvcmQgPSBlbnRyeS5jb21wbGV0aW9uO1xuICAgICAgICBpZiAoXCJyb290XCIgPT09IGVudHJ5LnRyeUxvYykgcmV0dXJuIGhhbmRsZShcImVuZFwiKTtcblxuICAgICAgICBpZiAoZW50cnkudHJ5TG9jIDw9IHRoaXMucHJldikge1xuICAgICAgICAgIHZhciBoYXNDYXRjaCA9IGhhc093bi5jYWxsKGVudHJ5LCBcImNhdGNoTG9jXCIpLFxuICAgICAgICAgICAgICBoYXNGaW5hbGx5ID0gaGFzT3duLmNhbGwoZW50cnksIFwiZmluYWxseUxvY1wiKTtcblxuICAgICAgICAgIGlmIChoYXNDYXRjaCAmJiBoYXNGaW5hbGx5KSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wcmV2IDwgZW50cnkuY2F0Y2hMb2MpIHJldHVybiBoYW5kbGUoZW50cnkuY2F0Y2hMb2MsICEwKTtcbiAgICAgICAgICAgIGlmICh0aGlzLnByZXYgPCBlbnRyeS5maW5hbGx5TG9jKSByZXR1cm4gaGFuZGxlKGVudHJ5LmZpbmFsbHlMb2MpO1xuICAgICAgICAgIH0gZWxzZSBpZiAoaGFzQ2F0Y2gpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnByZXYgPCBlbnRyeS5jYXRjaExvYykgcmV0dXJuIGhhbmRsZShlbnRyeS5jYXRjaExvYywgITApO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAoIWhhc0ZpbmFsbHkpIHRocm93IG5ldyBFcnJvcihcInRyeSBzdGF0ZW1lbnQgd2l0aG91dCBjYXRjaCBvciBmaW5hbGx5XCIpO1xuICAgICAgICAgICAgaWYgKHRoaXMucHJldiA8IGVudHJ5LmZpbmFsbHlMb2MpIHJldHVybiBoYW5kbGUoZW50cnkuZmluYWxseUxvYyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBhYnJ1cHQ6IGZ1bmN0aW9uIGFicnVwdCh0eXBlLCBhcmcpIHtcbiAgICAgIGZvciAodmFyIGkgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgICAgdmFyIGVudHJ5ID0gdGhpcy50cnlFbnRyaWVzW2ldO1xuXG4gICAgICAgIGlmIChlbnRyeS50cnlMb2MgPD0gdGhpcy5wcmV2ICYmIGhhc093bi5jYWxsKGVudHJ5LCBcImZpbmFsbHlMb2NcIikgJiYgdGhpcy5wcmV2IDwgZW50cnkuZmluYWxseUxvYykge1xuICAgICAgICAgIHZhciBmaW5hbGx5RW50cnkgPSBlbnRyeTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBmaW5hbGx5RW50cnkgJiYgKFwiYnJlYWtcIiA9PT0gdHlwZSB8fCBcImNvbnRpbnVlXCIgPT09IHR5cGUpICYmIGZpbmFsbHlFbnRyeS50cnlMb2MgPD0gYXJnICYmIGFyZyA8PSBmaW5hbGx5RW50cnkuZmluYWxseUxvYyAmJiAoZmluYWxseUVudHJ5ID0gbnVsbCk7XG4gICAgICB2YXIgcmVjb3JkID0gZmluYWxseUVudHJ5ID8gZmluYWxseUVudHJ5LmNvbXBsZXRpb24gOiB7fTtcbiAgICAgIHJldHVybiByZWNvcmQudHlwZSA9IHR5cGUsIHJlY29yZC5hcmcgPSBhcmcsIGZpbmFsbHlFbnRyeSA/ICh0aGlzLm1ldGhvZCA9IFwibmV4dFwiLCB0aGlzLm5leHQgPSBmaW5hbGx5RW50cnkuZmluYWxseUxvYywgQ29udGludWVTZW50aW5lbCkgOiB0aGlzLmNvbXBsZXRlKHJlY29yZCk7XG4gICAgfSxcbiAgICBjb21wbGV0ZTogZnVuY3Rpb24gY29tcGxldGUocmVjb3JkLCBhZnRlckxvYykge1xuICAgICAgaWYgKFwidGhyb3dcIiA9PT0gcmVjb3JkLnR5cGUpIHRocm93IHJlY29yZC5hcmc7XG4gICAgICByZXR1cm4gXCJicmVha1wiID09PSByZWNvcmQudHlwZSB8fCBcImNvbnRpbnVlXCIgPT09IHJlY29yZC50eXBlID8gdGhpcy5uZXh0ID0gcmVjb3JkLmFyZyA6IFwicmV0dXJuXCIgPT09IHJlY29yZC50eXBlID8gKHRoaXMucnZhbCA9IHRoaXMuYXJnID0gcmVjb3JkLmFyZywgdGhpcy5tZXRob2QgPSBcInJldHVyblwiLCB0aGlzLm5leHQgPSBcImVuZFwiKSA6IFwibm9ybWFsXCIgPT09IHJlY29yZC50eXBlICYmIGFmdGVyTG9jICYmICh0aGlzLm5leHQgPSBhZnRlckxvYyksIENvbnRpbnVlU2VudGluZWw7XG4gICAgfSxcbiAgICBmaW5pc2g6IGZ1bmN0aW9uIGZpbmlzaChmaW5hbGx5TG9jKSB7XG4gICAgICBmb3IgKHZhciBpID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIHZhciBlbnRyeSA9IHRoaXMudHJ5RW50cmllc1tpXTtcbiAgICAgICAgaWYgKGVudHJ5LmZpbmFsbHlMb2MgPT09IGZpbmFsbHlMb2MpIHJldHVybiB0aGlzLmNvbXBsZXRlKGVudHJ5LmNvbXBsZXRpb24sIGVudHJ5LmFmdGVyTG9jKSwgcmVzZXRUcnlFbnRyeShlbnRyeSksIENvbnRpbnVlU2VudGluZWw7XG4gICAgICB9XG4gICAgfSxcbiAgICBcImNhdGNoXCI6IGZ1bmN0aW9uIF9jYXRjaCh0cnlMb2MpIHtcbiAgICAgIGZvciAodmFyIGkgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgICAgdmFyIGVudHJ5ID0gdGhpcy50cnlFbnRyaWVzW2ldO1xuXG4gICAgICAgIGlmIChlbnRyeS50cnlMb2MgPT09IHRyeUxvYykge1xuICAgICAgICAgIHZhciByZWNvcmQgPSBlbnRyeS5jb21wbGV0aW9uO1xuXG4gICAgICAgICAgaWYgKFwidGhyb3dcIiA9PT0gcmVjb3JkLnR5cGUpIHtcbiAgICAgICAgICAgIHZhciB0aHJvd24gPSByZWNvcmQuYXJnO1xuICAgICAgICAgICAgcmVzZXRUcnlFbnRyeShlbnRyeSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIHRocm93bjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJpbGxlZ2FsIGNhdGNoIGF0dGVtcHRcIik7XG4gICAgfSxcbiAgICBkZWxlZ2F0ZVlpZWxkOiBmdW5jdGlvbiBkZWxlZ2F0ZVlpZWxkKGl0ZXJhYmxlLCByZXN1bHROYW1lLCBuZXh0TG9jKSB7XG4gICAgICByZXR1cm4gdGhpcy5kZWxlZ2F0ZSA9IHtcbiAgICAgICAgaXRlcmF0b3I6IHZhbHVlcyhpdGVyYWJsZSksXG4gICAgICAgIHJlc3VsdE5hbWU6IHJlc3VsdE5hbWUsXG4gICAgICAgIG5leHRMb2M6IG5leHRMb2NcbiAgICAgIH0sIFwibmV4dFwiID09PSB0aGlzLm1ldGhvZCAmJiAodGhpcy5hcmcgPSB1bmRlZmluZWQpLCBDb250aW51ZVNlbnRpbmVsO1xuICAgIH1cbiAgfSwgZXhwb3J0cztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfcmVnZW5lcmF0b3JSdW50aW1lLCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7IiwiZnVuY3Rpb24gX3R5cGVvZihvYmopIHtcbiAgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiO1xuXG4gIHJldHVybiAobW9kdWxlLmV4cG9ydHMgPSBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG9iaikge1xuICAgIHJldHVybiB0eXBlb2Ygb2JqO1xuICB9IDogZnVuY3Rpb24gKG9iaikge1xuICAgIHJldHVybiBvYmogJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7XG4gIH0sIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0cyksIF90eXBlb2Yob2JqKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfdHlwZW9mLCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7IiwiLy8gVE9ETyhCYWJlbCA4KTogUmVtb3ZlIHRoaXMgZmlsZS5cblxudmFyIHJ1bnRpbWUgPSByZXF1aXJlKFwiLi4vaGVscGVycy9yZWdlbmVyYXRvclJ1bnRpbWVcIikoKTtcbm1vZHVsZS5leHBvcnRzID0gcnVudGltZTtcblxuLy8gQ29waWVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlZ2VuZXJhdG9yL2Jsb2IvbWFpbi9wYWNrYWdlcy9ydW50aW1lL3J1bnRpbWUuanMjTDczNj1cbnRyeSB7XG4gIHJlZ2VuZXJhdG9yUnVudGltZSA9IHJ1bnRpbWU7XG59IGNhdGNoIChhY2NpZGVudGFsU3RyaWN0TW9kZSkge1xuICBpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09IFwib2JqZWN0XCIpIHtcbiAgICBnbG9iYWxUaGlzLnJlZ2VuZXJhdG9yUnVudGltZSA9IHJ1bnRpbWU7XG4gIH0gZWxzZSB7XG4gICAgRnVuY3Rpb24oXCJyXCIsIFwicmVnZW5lcmF0b3JSdW50aW1lID0gclwiKShydW50aW1lKTtcbiAgfVxufVxuIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2xpYi9heGlvcycpOyIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xudmFyIHNldHRsZSA9IHJlcXVpcmUoJy4vLi4vY29yZS9zZXR0bGUnKTtcbnZhciBjb29raWVzID0gcmVxdWlyZSgnLi8uLi9oZWxwZXJzL2Nvb2tpZXMnKTtcbnZhciBidWlsZFVSTCA9IHJlcXVpcmUoJy4vLi4vaGVscGVycy9idWlsZFVSTCcpO1xudmFyIGJ1aWxkRnVsbFBhdGggPSByZXF1aXJlKCcuLi9jb3JlL2J1aWxkRnVsbFBhdGgnKTtcbnZhciBwYXJzZUhlYWRlcnMgPSByZXF1aXJlKCcuLy4uL2hlbHBlcnMvcGFyc2VIZWFkZXJzJyk7XG52YXIgaXNVUkxTYW1lT3JpZ2luID0gcmVxdWlyZSgnLi8uLi9oZWxwZXJzL2lzVVJMU2FtZU9yaWdpbicpO1xudmFyIGNyZWF0ZUVycm9yID0gcmVxdWlyZSgnLi4vY29yZS9jcmVhdGVFcnJvcicpO1xudmFyIHRyYW5zaXRpb25hbERlZmF1bHRzID0gcmVxdWlyZSgnLi4vZGVmYXVsdHMvdHJhbnNpdGlvbmFsJyk7XG52YXIgQ2FuY2VsID0gcmVxdWlyZSgnLi4vY2FuY2VsL0NhbmNlbCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHhockFkYXB0ZXIoY29uZmlnKSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiBkaXNwYXRjaFhoclJlcXVlc3QocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgdmFyIHJlcXVlc3REYXRhID0gY29uZmlnLmRhdGE7XG4gICAgdmFyIHJlcXVlc3RIZWFkZXJzID0gY29uZmlnLmhlYWRlcnM7XG4gICAgdmFyIHJlc3BvbnNlVHlwZSA9IGNvbmZpZy5yZXNwb25zZVR5cGU7XG4gICAgdmFyIG9uQ2FuY2VsZWQ7XG4gICAgZnVuY3Rpb24gZG9uZSgpIHtcbiAgICAgIGlmIChjb25maWcuY2FuY2VsVG9rZW4pIHtcbiAgICAgICAgY29uZmlnLmNhbmNlbFRva2VuLnVuc3Vic2NyaWJlKG9uQ2FuY2VsZWQpO1xuICAgICAgfVxuXG4gICAgICBpZiAoY29uZmlnLnNpZ25hbCkge1xuICAgICAgICBjb25maWcuc2lnbmFsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2Fib3J0Jywgb25DYW5jZWxlZCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHV0aWxzLmlzRm9ybURhdGEocmVxdWVzdERhdGEpKSB7XG4gICAgICBkZWxldGUgcmVxdWVzdEhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddOyAvLyBMZXQgdGhlIGJyb3dzZXIgc2V0IGl0XG4gICAgfVxuXG4gICAgdmFyIHJlcXVlc3QgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcblxuICAgIC8vIEhUVFAgYmFzaWMgYXV0aGVudGljYXRpb25cbiAgICBpZiAoY29uZmlnLmF1dGgpIHtcbiAgICAgIHZhciB1c2VybmFtZSA9IGNvbmZpZy5hdXRoLnVzZXJuYW1lIHx8ICcnO1xuICAgICAgdmFyIHBhc3N3b3JkID0gY29uZmlnLmF1dGgucGFzc3dvcmQgPyB1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoY29uZmlnLmF1dGgucGFzc3dvcmQpKSA6ICcnO1xuICAgICAgcmVxdWVzdEhlYWRlcnMuQXV0aG9yaXphdGlvbiA9ICdCYXNpYyAnICsgYnRvYSh1c2VybmFtZSArICc6JyArIHBhc3N3b3JkKTtcbiAgICB9XG5cbiAgICB2YXIgZnVsbFBhdGggPSBidWlsZEZ1bGxQYXRoKGNvbmZpZy5iYXNlVVJMLCBjb25maWcudXJsKTtcbiAgICByZXF1ZXN0Lm9wZW4oY29uZmlnLm1ldGhvZC50b1VwcGVyQ2FzZSgpLCBidWlsZFVSTChmdWxsUGF0aCwgY29uZmlnLnBhcmFtcywgY29uZmlnLnBhcmFtc1NlcmlhbGl6ZXIpLCB0cnVlKTtcblxuICAgIC8vIFNldCB0aGUgcmVxdWVzdCB0aW1lb3V0IGluIE1TXG4gICAgcmVxdWVzdC50aW1lb3V0ID0gY29uZmlnLnRpbWVvdXQ7XG5cbiAgICBmdW5jdGlvbiBvbmxvYWRlbmQoKSB7XG4gICAgICBpZiAoIXJlcXVlc3QpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgLy8gUHJlcGFyZSB0aGUgcmVzcG9uc2VcbiAgICAgIHZhciByZXNwb25zZUhlYWRlcnMgPSAnZ2V0QWxsUmVzcG9uc2VIZWFkZXJzJyBpbiByZXF1ZXN0ID8gcGFyc2VIZWFkZXJzKHJlcXVlc3QuZ2V0QWxsUmVzcG9uc2VIZWFkZXJzKCkpIDogbnVsbDtcbiAgICAgIHZhciByZXNwb25zZURhdGEgPSAhcmVzcG9uc2VUeXBlIHx8IHJlc3BvbnNlVHlwZSA9PT0gJ3RleHQnIHx8ICByZXNwb25zZVR5cGUgPT09ICdqc29uJyA/XG4gICAgICAgIHJlcXVlc3QucmVzcG9uc2VUZXh0IDogcmVxdWVzdC5yZXNwb25zZTtcbiAgICAgIHZhciByZXNwb25zZSA9IHtcbiAgICAgICAgZGF0YTogcmVzcG9uc2VEYXRhLFxuICAgICAgICBzdGF0dXM6IHJlcXVlc3Quc3RhdHVzLFxuICAgICAgICBzdGF0dXNUZXh0OiByZXF1ZXN0LnN0YXR1c1RleHQsXG4gICAgICAgIGhlYWRlcnM6IHJlc3BvbnNlSGVhZGVycyxcbiAgICAgICAgY29uZmlnOiBjb25maWcsXG4gICAgICAgIHJlcXVlc3Q6IHJlcXVlc3RcbiAgICAgIH07XG5cbiAgICAgIHNldHRsZShmdW5jdGlvbiBfcmVzb2x2ZSh2YWx1ZSkge1xuICAgICAgICByZXNvbHZlKHZhbHVlKTtcbiAgICAgICAgZG9uZSgpO1xuICAgICAgfSwgZnVuY3Rpb24gX3JlamVjdChlcnIpIHtcbiAgICAgICAgcmVqZWN0KGVycik7XG4gICAgICAgIGRvbmUoKTtcbiAgICAgIH0sIHJlc3BvbnNlKTtcblxuICAgICAgLy8gQ2xlYW4gdXAgcmVxdWVzdFxuICAgICAgcmVxdWVzdCA9IG51bGw7XG4gICAgfVxuXG4gICAgaWYgKCdvbmxvYWRlbmQnIGluIHJlcXVlc3QpIHtcbiAgICAgIC8vIFVzZSBvbmxvYWRlbmQgaWYgYXZhaWxhYmxlXG4gICAgICByZXF1ZXN0Lm9ubG9hZGVuZCA9IG9ubG9hZGVuZDtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gTGlzdGVuIGZvciByZWFkeSBzdGF0ZSB0byBlbXVsYXRlIG9ubG9hZGVuZFxuICAgICAgcmVxdWVzdC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbiBoYW5kbGVMb2FkKCkge1xuICAgICAgICBpZiAoIXJlcXVlc3QgfHwgcmVxdWVzdC5yZWFkeVN0YXRlICE9PSA0KSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gVGhlIHJlcXVlc3QgZXJyb3JlZCBvdXQgYW5kIHdlIGRpZG4ndCBnZXQgYSByZXNwb25zZSwgdGhpcyB3aWxsIGJlXG4gICAgICAgIC8vIGhhbmRsZWQgYnkgb25lcnJvciBpbnN0ZWFkXG4gICAgICAgIC8vIFdpdGggb25lIGV4Y2VwdGlvbjogcmVxdWVzdCB0aGF0IHVzaW5nIGZpbGU6IHByb3RvY29sLCBtb3N0IGJyb3dzZXJzXG4gICAgICAgIC8vIHdpbGwgcmV0dXJuIHN0YXR1cyBhcyAwIGV2ZW4gdGhvdWdoIGl0J3MgYSBzdWNjZXNzZnVsIHJlcXVlc3RcbiAgICAgICAgaWYgKHJlcXVlc3Quc3RhdHVzID09PSAwICYmICEocmVxdWVzdC5yZXNwb25zZVVSTCAmJiByZXF1ZXN0LnJlc3BvbnNlVVJMLmluZGV4T2YoJ2ZpbGU6JykgPT09IDApKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIC8vIHJlYWR5c3RhdGUgaGFuZGxlciBpcyBjYWxsaW5nIGJlZm9yZSBvbmVycm9yIG9yIG9udGltZW91dCBoYW5kbGVycyxcbiAgICAgICAgLy8gc28gd2Ugc2hvdWxkIGNhbGwgb25sb2FkZW5kIG9uIHRoZSBuZXh0ICd0aWNrJ1xuICAgICAgICBzZXRUaW1lb3V0KG9ubG9hZGVuZCk7XG4gICAgICB9O1xuICAgIH1cblxuICAgIC8vIEhhbmRsZSBicm93c2VyIHJlcXVlc3QgY2FuY2VsbGF0aW9uIChhcyBvcHBvc2VkIHRvIGEgbWFudWFsIGNhbmNlbGxhdGlvbilcbiAgICByZXF1ZXN0Lm9uYWJvcnQgPSBmdW5jdGlvbiBoYW5kbGVBYm9ydCgpIHtcbiAgICAgIGlmICghcmVxdWVzdCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHJlamVjdChjcmVhdGVFcnJvcignUmVxdWVzdCBhYm9ydGVkJywgY29uZmlnLCAnRUNPTk5BQk9SVEVEJywgcmVxdWVzdCkpO1xuXG4gICAgICAvLyBDbGVhbiB1cCByZXF1ZXN0XG4gICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICB9O1xuXG4gICAgLy8gSGFuZGxlIGxvdyBsZXZlbCBuZXR3b3JrIGVycm9yc1xuICAgIHJlcXVlc3Qub25lcnJvciA9IGZ1bmN0aW9uIGhhbmRsZUVycm9yKCkge1xuICAgICAgLy8gUmVhbCBlcnJvcnMgYXJlIGhpZGRlbiBmcm9tIHVzIGJ5IHRoZSBicm93c2VyXG4gICAgICAvLyBvbmVycm9yIHNob3VsZCBvbmx5IGZpcmUgaWYgaXQncyBhIG5ldHdvcmsgZXJyb3JcbiAgICAgIHJlamVjdChjcmVhdGVFcnJvcignTmV0d29yayBFcnJvcicsIGNvbmZpZywgbnVsbCwgcmVxdWVzdCkpO1xuXG4gICAgICAvLyBDbGVhbiB1cCByZXF1ZXN0XG4gICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICB9O1xuXG4gICAgLy8gSGFuZGxlIHRpbWVvdXRcbiAgICByZXF1ZXN0Lm9udGltZW91dCA9IGZ1bmN0aW9uIGhhbmRsZVRpbWVvdXQoKSB7XG4gICAgICB2YXIgdGltZW91dEVycm9yTWVzc2FnZSA9IGNvbmZpZy50aW1lb3V0ID8gJ3RpbWVvdXQgb2YgJyArIGNvbmZpZy50aW1lb3V0ICsgJ21zIGV4Y2VlZGVkJyA6ICd0aW1lb3V0IGV4Y2VlZGVkJztcbiAgICAgIHZhciB0cmFuc2l0aW9uYWwgPSBjb25maWcudHJhbnNpdGlvbmFsIHx8IHRyYW5zaXRpb25hbERlZmF1bHRzO1xuICAgICAgaWYgKGNvbmZpZy50aW1lb3V0RXJyb3JNZXNzYWdlKSB7XG4gICAgICAgIHRpbWVvdXRFcnJvck1lc3NhZ2UgPSBjb25maWcudGltZW91dEVycm9yTWVzc2FnZTtcbiAgICAgIH1cbiAgICAgIHJlamVjdChjcmVhdGVFcnJvcihcbiAgICAgICAgdGltZW91dEVycm9yTWVzc2FnZSxcbiAgICAgICAgY29uZmlnLFxuICAgICAgICB0cmFuc2l0aW9uYWwuY2xhcmlmeVRpbWVvdXRFcnJvciA/ICdFVElNRURPVVQnIDogJ0VDT05OQUJPUlRFRCcsXG4gICAgICAgIHJlcXVlc3QpKTtcblxuICAgICAgLy8gQ2xlYW4gdXAgcmVxdWVzdFxuICAgICAgcmVxdWVzdCA9IG51bGw7XG4gICAgfTtcblxuICAgIC8vIEFkZCB4c3JmIGhlYWRlclxuICAgIC8vIFRoaXMgaXMgb25seSBkb25lIGlmIHJ1bm5pbmcgaW4gYSBzdGFuZGFyZCBicm93c2VyIGVudmlyb25tZW50LlxuICAgIC8vIFNwZWNpZmljYWxseSBub3QgaWYgd2UncmUgaW4gYSB3ZWIgd29ya2VyLCBvciByZWFjdC1uYXRpdmUuXG4gICAgaWYgKHV0aWxzLmlzU3RhbmRhcmRCcm93c2VyRW52KCkpIHtcbiAgICAgIC8vIEFkZCB4c3JmIGhlYWRlclxuICAgICAgdmFyIHhzcmZWYWx1ZSA9IChjb25maWcud2l0aENyZWRlbnRpYWxzIHx8IGlzVVJMU2FtZU9yaWdpbihmdWxsUGF0aCkpICYmIGNvbmZpZy54c3JmQ29va2llTmFtZSA/XG4gICAgICAgIGNvb2tpZXMucmVhZChjb25maWcueHNyZkNvb2tpZU5hbWUpIDpcbiAgICAgICAgdW5kZWZpbmVkO1xuXG4gICAgICBpZiAoeHNyZlZhbHVlKSB7XG4gICAgICAgIHJlcXVlc3RIZWFkZXJzW2NvbmZpZy54c3JmSGVhZGVyTmFtZV0gPSB4c3JmVmFsdWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gQWRkIGhlYWRlcnMgdG8gdGhlIHJlcXVlc3RcbiAgICBpZiAoJ3NldFJlcXVlc3RIZWFkZXInIGluIHJlcXVlc3QpIHtcbiAgICAgIHV0aWxzLmZvckVhY2gocmVxdWVzdEhlYWRlcnMsIGZ1bmN0aW9uIHNldFJlcXVlc3RIZWFkZXIodmFsLCBrZXkpIHtcbiAgICAgICAgaWYgKHR5cGVvZiByZXF1ZXN0RGF0YSA9PT0gJ3VuZGVmaW5lZCcgJiYga2V5LnRvTG93ZXJDYXNlKCkgPT09ICdjb250ZW50LXR5cGUnKSB7XG4gICAgICAgICAgLy8gUmVtb3ZlIENvbnRlbnQtVHlwZSBpZiBkYXRhIGlzIHVuZGVmaW5lZFxuICAgICAgICAgIGRlbGV0ZSByZXF1ZXN0SGVhZGVyc1trZXldO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIE90aGVyd2lzZSBhZGQgaGVhZGVyIHRvIHRoZSByZXF1ZXN0XG4gICAgICAgICAgcmVxdWVzdC5zZXRSZXF1ZXN0SGVhZGVyKGtleSwgdmFsKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy8gQWRkIHdpdGhDcmVkZW50aWFscyB0byByZXF1ZXN0IGlmIG5lZWRlZFxuICAgIGlmICghdXRpbHMuaXNVbmRlZmluZWQoY29uZmlnLndpdGhDcmVkZW50aWFscykpIHtcbiAgICAgIHJlcXVlc3Qud2l0aENyZWRlbnRpYWxzID0gISFjb25maWcud2l0aENyZWRlbnRpYWxzO1xuICAgIH1cblxuICAgIC8vIEFkZCByZXNwb25zZVR5cGUgdG8gcmVxdWVzdCBpZiBuZWVkZWRcbiAgICBpZiAocmVzcG9uc2VUeXBlICYmIHJlc3BvbnNlVHlwZSAhPT0gJ2pzb24nKSB7XG4gICAgICByZXF1ZXN0LnJlc3BvbnNlVHlwZSA9IGNvbmZpZy5yZXNwb25zZVR5cGU7XG4gICAgfVxuXG4gICAgLy8gSGFuZGxlIHByb2dyZXNzIGlmIG5lZWRlZFxuICAgIGlmICh0eXBlb2YgY29uZmlnLm9uRG93bmxvYWRQcm9ncmVzcyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcmVxdWVzdC5hZGRFdmVudExpc3RlbmVyKCdwcm9ncmVzcycsIGNvbmZpZy5vbkRvd25sb2FkUHJvZ3Jlc3MpO1xuICAgIH1cblxuICAgIC8vIE5vdCBhbGwgYnJvd3NlcnMgc3VwcG9ydCB1cGxvYWQgZXZlbnRzXG4gICAgaWYgKHR5cGVvZiBjb25maWcub25VcGxvYWRQcm9ncmVzcyA9PT0gJ2Z1bmN0aW9uJyAmJiByZXF1ZXN0LnVwbG9hZCkge1xuICAgICAgcmVxdWVzdC51cGxvYWQuYWRkRXZlbnRMaXN0ZW5lcigncHJvZ3Jlc3MnLCBjb25maWcub25VcGxvYWRQcm9ncmVzcyk7XG4gICAgfVxuXG4gICAgaWYgKGNvbmZpZy5jYW5jZWxUb2tlbiB8fCBjb25maWcuc2lnbmFsKSB7XG4gICAgICAvLyBIYW5kbGUgY2FuY2VsbGF0aW9uXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuICAgICAgb25DYW5jZWxlZCA9IGZ1bmN0aW9uKGNhbmNlbCkge1xuICAgICAgICBpZiAoIXJlcXVlc3QpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgcmVqZWN0KCFjYW5jZWwgfHwgKGNhbmNlbCAmJiBjYW5jZWwudHlwZSkgPyBuZXcgQ2FuY2VsKCdjYW5jZWxlZCcpIDogY2FuY2VsKTtcbiAgICAgICAgcmVxdWVzdC5hYm9ydCgpO1xuICAgICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICAgIH07XG5cbiAgICAgIGNvbmZpZy5jYW5jZWxUb2tlbiAmJiBjb25maWcuY2FuY2VsVG9rZW4uc3Vic2NyaWJlKG9uQ2FuY2VsZWQpO1xuICAgICAgaWYgKGNvbmZpZy5zaWduYWwpIHtcbiAgICAgICAgY29uZmlnLnNpZ25hbC5hYm9ydGVkID8gb25DYW5jZWxlZCgpIDogY29uZmlnLnNpZ25hbC5hZGRFdmVudExpc3RlbmVyKCdhYm9ydCcsIG9uQ2FuY2VsZWQpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICghcmVxdWVzdERhdGEpIHtcbiAgICAgIHJlcXVlc3REYXRhID0gbnVsbDtcbiAgICB9XG5cbiAgICAvLyBTZW5kIHRoZSByZXF1ZXN0XG4gICAgcmVxdWVzdC5zZW5kKHJlcXVlc3REYXRhKTtcbiAgfSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG52YXIgYmluZCA9IHJlcXVpcmUoJy4vaGVscGVycy9iaW5kJyk7XG52YXIgQXhpb3MgPSByZXF1aXJlKCcuL2NvcmUvQXhpb3MnKTtcbnZhciBtZXJnZUNvbmZpZyA9IHJlcXVpcmUoJy4vY29yZS9tZXJnZUNvbmZpZycpO1xudmFyIGRlZmF1bHRzID0gcmVxdWlyZSgnLi9kZWZhdWx0cycpO1xuXG4vKipcbiAqIENyZWF0ZSBhbiBpbnN0YW5jZSBvZiBBeGlvc1xuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBkZWZhdWx0Q29uZmlnIFRoZSBkZWZhdWx0IGNvbmZpZyBmb3IgdGhlIGluc3RhbmNlXG4gKiBAcmV0dXJuIHtBeGlvc30gQSBuZXcgaW5zdGFuY2Ugb2YgQXhpb3NcbiAqL1xuZnVuY3Rpb24gY3JlYXRlSW5zdGFuY2UoZGVmYXVsdENvbmZpZykge1xuICB2YXIgY29udGV4dCA9IG5ldyBBeGlvcyhkZWZhdWx0Q29uZmlnKTtcbiAgdmFyIGluc3RhbmNlID0gYmluZChBeGlvcy5wcm90b3R5cGUucmVxdWVzdCwgY29udGV4dCk7XG5cbiAgLy8gQ29weSBheGlvcy5wcm90b3R5cGUgdG8gaW5zdGFuY2VcbiAgdXRpbHMuZXh0ZW5kKGluc3RhbmNlLCBBeGlvcy5wcm90b3R5cGUsIGNvbnRleHQpO1xuXG4gIC8vIENvcHkgY29udGV4dCB0byBpbnN0YW5jZVxuICB1dGlscy5leHRlbmQoaW5zdGFuY2UsIGNvbnRleHQpO1xuXG4gIC8vIEZhY3RvcnkgZm9yIGNyZWF0aW5nIG5ldyBpbnN0YW5jZXNcbiAgaW5zdGFuY2UuY3JlYXRlID0gZnVuY3Rpb24gY3JlYXRlKGluc3RhbmNlQ29uZmlnKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUluc3RhbmNlKG1lcmdlQ29uZmlnKGRlZmF1bHRDb25maWcsIGluc3RhbmNlQ29uZmlnKSk7XG4gIH07XG5cbiAgcmV0dXJuIGluc3RhbmNlO1xufVxuXG4vLyBDcmVhdGUgdGhlIGRlZmF1bHQgaW5zdGFuY2UgdG8gYmUgZXhwb3J0ZWRcbnZhciBheGlvcyA9IGNyZWF0ZUluc3RhbmNlKGRlZmF1bHRzKTtcblxuLy8gRXhwb3NlIEF4aW9zIGNsYXNzIHRvIGFsbG93IGNsYXNzIGluaGVyaXRhbmNlXG5heGlvcy5BeGlvcyA9IEF4aW9zO1xuXG4vLyBFeHBvc2UgQ2FuY2VsICYgQ2FuY2VsVG9rZW5cbmF4aW9zLkNhbmNlbCA9IHJlcXVpcmUoJy4vY2FuY2VsL0NhbmNlbCcpO1xuYXhpb3MuQ2FuY2VsVG9rZW4gPSByZXF1aXJlKCcuL2NhbmNlbC9DYW5jZWxUb2tlbicpO1xuYXhpb3MuaXNDYW5jZWwgPSByZXF1aXJlKCcuL2NhbmNlbC9pc0NhbmNlbCcpO1xuYXhpb3MuVkVSU0lPTiA9IHJlcXVpcmUoJy4vZW52L2RhdGEnKS52ZXJzaW9uO1xuXG4vLyBFeHBvc2UgYWxsL3NwcmVhZFxuYXhpb3MuYWxsID0gZnVuY3Rpb24gYWxsKHByb21pc2VzKSB7XG4gIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcyk7XG59O1xuYXhpb3Muc3ByZWFkID0gcmVxdWlyZSgnLi9oZWxwZXJzL3NwcmVhZCcpO1xuXG4vLyBFeHBvc2UgaXNBeGlvc0Vycm9yXG5heGlvcy5pc0F4aW9zRXJyb3IgPSByZXF1aXJlKCcuL2hlbHBlcnMvaXNBeGlvc0Vycm9yJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gYXhpb3M7XG5cbi8vIEFsbG93IHVzZSBvZiBkZWZhdWx0IGltcG9ydCBzeW50YXggaW4gVHlwZVNjcmlwdFxubW9kdWxlLmV4cG9ydHMuZGVmYXVsdCA9IGF4aW9zO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIEEgYENhbmNlbGAgaXMgYW4gb2JqZWN0IHRoYXQgaXMgdGhyb3duIHdoZW4gYW4gb3BlcmF0aW9uIGlzIGNhbmNlbGVkLlxuICpcbiAqIEBjbGFzc1xuICogQHBhcmFtIHtzdHJpbmc9fSBtZXNzYWdlIFRoZSBtZXNzYWdlLlxuICovXG5mdW5jdGlvbiBDYW5jZWwobWVzc2FnZSkge1xuICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xufVxuXG5DYW5jZWwucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gIHJldHVybiAnQ2FuY2VsJyArICh0aGlzLm1lc3NhZ2UgPyAnOiAnICsgdGhpcy5tZXNzYWdlIDogJycpO1xufTtcblxuQ2FuY2VsLnByb3RvdHlwZS5fX0NBTkNFTF9fID0gdHJ1ZTtcblxubW9kdWxlLmV4cG9ydHMgPSBDYW5jZWw7XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBDYW5jZWwgPSByZXF1aXJlKCcuL0NhbmNlbCcpO1xuXG4vKipcbiAqIEEgYENhbmNlbFRva2VuYCBpcyBhbiBvYmplY3QgdGhhdCBjYW4gYmUgdXNlZCB0byByZXF1ZXN0IGNhbmNlbGxhdGlvbiBvZiBhbiBvcGVyYXRpb24uXG4gKlxuICogQGNsYXNzXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBleGVjdXRvciBUaGUgZXhlY3V0b3IgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIENhbmNlbFRva2VuKGV4ZWN1dG9yKSB7XG4gIGlmICh0eXBlb2YgZXhlY3V0b3IgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdleGVjdXRvciBtdXN0IGJlIGEgZnVuY3Rpb24uJyk7XG4gIH1cblxuICB2YXIgcmVzb2x2ZVByb21pc2U7XG5cbiAgdGhpcy5wcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24gcHJvbWlzZUV4ZWN1dG9yKHJlc29sdmUpIHtcbiAgICByZXNvbHZlUHJvbWlzZSA9IHJlc29sdmU7XG4gIH0pO1xuXG4gIHZhciB0b2tlbiA9IHRoaXM7XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbiAgdGhpcy5wcm9taXNlLnRoZW4oZnVuY3Rpb24oY2FuY2VsKSB7XG4gICAgaWYgKCF0b2tlbi5fbGlzdGVuZXJzKSByZXR1cm47XG5cbiAgICB2YXIgaTtcbiAgICB2YXIgbCA9IHRva2VuLl9saXN0ZW5lcnMubGVuZ3RoO1xuXG4gICAgZm9yIChpID0gMDsgaSA8IGw7IGkrKykge1xuICAgICAgdG9rZW4uX2xpc3RlbmVyc1tpXShjYW5jZWwpO1xuICAgIH1cbiAgICB0b2tlbi5fbGlzdGVuZXJzID0gbnVsbDtcbiAgfSk7XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbiAgdGhpcy5wcm9taXNlLnRoZW4gPSBmdW5jdGlvbihvbmZ1bGZpbGxlZCkge1xuICAgIHZhciBfcmVzb2x2ZTtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuICAgIHZhciBwcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSkge1xuICAgICAgdG9rZW4uc3Vic2NyaWJlKHJlc29sdmUpO1xuICAgICAgX3Jlc29sdmUgPSByZXNvbHZlO1xuICAgIH0pLnRoZW4ob25mdWxmaWxsZWQpO1xuXG4gICAgcHJvbWlzZS5jYW5jZWwgPSBmdW5jdGlvbiByZWplY3QoKSB7XG4gICAgICB0b2tlbi51bnN1YnNjcmliZShfcmVzb2x2ZSk7XG4gICAgfTtcblxuICAgIHJldHVybiBwcm9taXNlO1xuICB9O1xuXG4gIGV4ZWN1dG9yKGZ1bmN0aW9uIGNhbmNlbChtZXNzYWdlKSB7XG4gICAgaWYgKHRva2VuLnJlYXNvbikge1xuICAgICAgLy8gQ2FuY2VsbGF0aW9uIGhhcyBhbHJlYWR5IGJlZW4gcmVxdWVzdGVkXG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdG9rZW4ucmVhc29uID0gbmV3IENhbmNlbChtZXNzYWdlKTtcbiAgICByZXNvbHZlUHJvbWlzZSh0b2tlbi5yZWFzb24pO1xuICB9KTtcbn1cblxuLyoqXG4gKiBUaHJvd3MgYSBgQ2FuY2VsYCBpZiBjYW5jZWxsYXRpb24gaGFzIGJlZW4gcmVxdWVzdGVkLlxuICovXG5DYW5jZWxUb2tlbi5wcm90b3R5cGUudGhyb3dJZlJlcXVlc3RlZCA9IGZ1bmN0aW9uIHRocm93SWZSZXF1ZXN0ZWQoKSB7XG4gIGlmICh0aGlzLnJlYXNvbikge1xuICAgIHRocm93IHRoaXMucmVhc29uO1xuICB9XG59O1xuXG4vKipcbiAqIFN1YnNjcmliZSB0byB0aGUgY2FuY2VsIHNpZ25hbFxuICovXG5cbkNhbmNlbFRva2VuLnByb3RvdHlwZS5zdWJzY3JpYmUgPSBmdW5jdGlvbiBzdWJzY3JpYmUobGlzdGVuZXIpIHtcbiAgaWYgKHRoaXMucmVhc29uKSB7XG4gICAgbGlzdGVuZXIodGhpcy5yZWFzb24pO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmICh0aGlzLl9saXN0ZW5lcnMpIHtcbiAgICB0aGlzLl9saXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gIH0gZWxzZSB7XG4gICAgdGhpcy5fbGlzdGVuZXJzID0gW2xpc3RlbmVyXTtcbiAgfVxufTtcblxuLyoqXG4gKiBVbnN1YnNjcmliZSBmcm9tIHRoZSBjYW5jZWwgc2lnbmFsXG4gKi9cblxuQ2FuY2VsVG9rZW4ucHJvdG90eXBlLnVuc3Vic2NyaWJlID0gZnVuY3Rpb24gdW5zdWJzY3JpYmUobGlzdGVuZXIpIHtcbiAgaWYgKCF0aGlzLl9saXN0ZW5lcnMpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgdmFyIGluZGV4ID0gdGhpcy5fbGlzdGVuZXJzLmluZGV4T2YobGlzdGVuZXIpO1xuICBpZiAoaW5kZXggIT09IC0xKSB7XG4gICAgdGhpcy5fbGlzdGVuZXJzLnNwbGljZShpbmRleCwgMSk7XG4gIH1cbn07XG5cbi8qKlxuICogUmV0dXJucyBhbiBvYmplY3QgdGhhdCBjb250YWlucyBhIG5ldyBgQ2FuY2VsVG9rZW5gIGFuZCBhIGZ1bmN0aW9uIHRoYXQsIHdoZW4gY2FsbGVkLFxuICogY2FuY2VscyB0aGUgYENhbmNlbFRva2VuYC5cbiAqL1xuQ2FuY2VsVG9rZW4uc291cmNlID0gZnVuY3Rpb24gc291cmNlKCkge1xuICB2YXIgY2FuY2VsO1xuICB2YXIgdG9rZW4gPSBuZXcgQ2FuY2VsVG9rZW4oZnVuY3Rpb24gZXhlY3V0b3IoYykge1xuICAgIGNhbmNlbCA9IGM7XG4gIH0pO1xuICByZXR1cm4ge1xuICAgIHRva2VuOiB0b2tlbixcbiAgICBjYW5jZWw6IGNhbmNlbFxuICB9O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBDYW5jZWxUb2tlbjtcbiIsIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc0NhbmNlbCh2YWx1ZSkge1xuICByZXR1cm4gISEodmFsdWUgJiYgdmFsdWUuX19DQU5DRUxfXyk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG52YXIgYnVpbGRVUkwgPSByZXF1aXJlKCcuLi9oZWxwZXJzL2J1aWxkVVJMJyk7XG52YXIgSW50ZXJjZXB0b3JNYW5hZ2VyID0gcmVxdWlyZSgnLi9JbnRlcmNlcHRvck1hbmFnZXInKTtcbnZhciBkaXNwYXRjaFJlcXVlc3QgPSByZXF1aXJlKCcuL2Rpc3BhdGNoUmVxdWVzdCcpO1xudmFyIG1lcmdlQ29uZmlnID0gcmVxdWlyZSgnLi9tZXJnZUNvbmZpZycpO1xudmFyIHZhbGlkYXRvciA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvdmFsaWRhdG9yJyk7XG5cbnZhciB2YWxpZGF0b3JzID0gdmFsaWRhdG9yLnZhbGlkYXRvcnM7XG4vKipcbiAqIENyZWF0ZSBhIG5ldyBpbnN0YW5jZSBvZiBBeGlvc1xuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBpbnN0YW5jZUNvbmZpZyBUaGUgZGVmYXVsdCBjb25maWcgZm9yIHRoZSBpbnN0YW5jZVxuICovXG5mdW5jdGlvbiBBeGlvcyhpbnN0YW5jZUNvbmZpZykge1xuICB0aGlzLmRlZmF1bHRzID0gaW5zdGFuY2VDb25maWc7XG4gIHRoaXMuaW50ZXJjZXB0b3JzID0ge1xuICAgIHJlcXVlc3Q6IG5ldyBJbnRlcmNlcHRvck1hbmFnZXIoKSxcbiAgICByZXNwb25zZTogbmV3IEludGVyY2VwdG9yTWFuYWdlcigpXG4gIH07XG59XG5cbi8qKlxuICogRGlzcGF0Y2ggYSByZXF1ZXN0XG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZyBUaGUgY29uZmlnIHNwZWNpZmljIGZvciB0aGlzIHJlcXVlc3QgKG1lcmdlZCB3aXRoIHRoaXMuZGVmYXVsdHMpXG4gKi9cbkF4aW9zLnByb3RvdHlwZS5yZXF1ZXN0ID0gZnVuY3Rpb24gcmVxdWVzdChjb25maWdPclVybCwgY29uZmlnKSB7XG4gIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICAvLyBBbGxvdyBmb3IgYXhpb3MoJ2V4YW1wbGUvdXJsJ1ssIGNvbmZpZ10pIGEgbGEgZmV0Y2ggQVBJXG4gIGlmICh0eXBlb2YgY29uZmlnT3JVcmwgPT09ICdzdHJpbmcnKSB7XG4gICAgY29uZmlnID0gY29uZmlnIHx8IHt9O1xuICAgIGNvbmZpZy51cmwgPSBjb25maWdPclVybDtcbiAgfSBlbHNlIHtcbiAgICBjb25maWcgPSBjb25maWdPclVybCB8fCB7fTtcbiAgfVxuXG4gIGNvbmZpZyA9IG1lcmdlQ29uZmlnKHRoaXMuZGVmYXVsdHMsIGNvbmZpZyk7XG5cbiAgLy8gU2V0IGNvbmZpZy5tZXRob2RcbiAgaWYgKGNvbmZpZy5tZXRob2QpIHtcbiAgICBjb25maWcubWV0aG9kID0gY29uZmlnLm1ldGhvZC50b0xvd2VyQ2FzZSgpO1xuICB9IGVsc2UgaWYgKHRoaXMuZGVmYXVsdHMubWV0aG9kKSB7XG4gICAgY29uZmlnLm1ldGhvZCA9IHRoaXMuZGVmYXVsdHMubWV0aG9kLnRvTG93ZXJDYXNlKCk7XG4gIH0gZWxzZSB7XG4gICAgY29uZmlnLm1ldGhvZCA9ICdnZXQnO1xuICB9XG5cbiAgdmFyIHRyYW5zaXRpb25hbCA9IGNvbmZpZy50cmFuc2l0aW9uYWw7XG5cbiAgaWYgKHRyYW5zaXRpb25hbCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgdmFsaWRhdG9yLmFzc2VydE9wdGlvbnModHJhbnNpdGlvbmFsLCB7XG4gICAgICBzaWxlbnRKU09OUGFyc2luZzogdmFsaWRhdG9ycy50cmFuc2l0aW9uYWwodmFsaWRhdG9ycy5ib29sZWFuKSxcbiAgICAgIGZvcmNlZEpTT05QYXJzaW5nOiB2YWxpZGF0b3JzLnRyYW5zaXRpb25hbCh2YWxpZGF0b3JzLmJvb2xlYW4pLFxuICAgICAgY2xhcmlmeVRpbWVvdXRFcnJvcjogdmFsaWRhdG9ycy50cmFuc2l0aW9uYWwodmFsaWRhdG9ycy5ib29sZWFuKVxuICAgIH0sIGZhbHNlKTtcbiAgfVxuXG4gIC8vIGZpbHRlciBvdXQgc2tpcHBlZCBpbnRlcmNlcHRvcnNcbiAgdmFyIHJlcXVlc3RJbnRlcmNlcHRvckNoYWluID0gW107XG4gIHZhciBzeW5jaHJvbm91c1JlcXVlc3RJbnRlcmNlcHRvcnMgPSB0cnVlO1xuICB0aGlzLmludGVyY2VwdG9ycy5yZXF1ZXN0LmZvckVhY2goZnVuY3Rpb24gdW5zaGlmdFJlcXVlc3RJbnRlcmNlcHRvcnMoaW50ZXJjZXB0b3IpIHtcbiAgICBpZiAodHlwZW9mIGludGVyY2VwdG9yLnJ1bldoZW4gPT09ICdmdW5jdGlvbicgJiYgaW50ZXJjZXB0b3IucnVuV2hlbihjb25maWcpID09PSBmYWxzZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHN5bmNocm9ub3VzUmVxdWVzdEludGVyY2VwdG9ycyA9IHN5bmNocm9ub3VzUmVxdWVzdEludGVyY2VwdG9ycyAmJiBpbnRlcmNlcHRvci5zeW5jaHJvbm91cztcblxuICAgIHJlcXVlc3RJbnRlcmNlcHRvckNoYWluLnVuc2hpZnQoaW50ZXJjZXB0b3IuZnVsZmlsbGVkLCBpbnRlcmNlcHRvci5yZWplY3RlZCk7XG4gIH0pO1xuXG4gIHZhciByZXNwb25zZUludGVyY2VwdG9yQ2hhaW4gPSBbXTtcbiAgdGhpcy5pbnRlcmNlcHRvcnMucmVzcG9uc2UuZm9yRWFjaChmdW5jdGlvbiBwdXNoUmVzcG9uc2VJbnRlcmNlcHRvcnMoaW50ZXJjZXB0b3IpIHtcbiAgICByZXNwb25zZUludGVyY2VwdG9yQ2hhaW4ucHVzaChpbnRlcmNlcHRvci5mdWxmaWxsZWQsIGludGVyY2VwdG9yLnJlamVjdGVkKTtcbiAgfSk7XG5cbiAgdmFyIHByb21pc2U7XG5cbiAgaWYgKCFzeW5jaHJvbm91c1JlcXVlc3RJbnRlcmNlcHRvcnMpIHtcbiAgICB2YXIgY2hhaW4gPSBbZGlzcGF0Y2hSZXF1ZXN0LCB1bmRlZmluZWRdO1xuXG4gICAgQXJyYXkucHJvdG90eXBlLnVuc2hpZnQuYXBwbHkoY2hhaW4sIHJlcXVlc3RJbnRlcmNlcHRvckNoYWluKTtcbiAgICBjaGFpbiA9IGNoYWluLmNvbmNhdChyZXNwb25zZUludGVyY2VwdG9yQ2hhaW4pO1xuXG4gICAgcHJvbWlzZSA9IFByb21pc2UucmVzb2x2ZShjb25maWcpO1xuICAgIHdoaWxlIChjaGFpbi5sZW5ndGgpIHtcbiAgICAgIHByb21pc2UgPSBwcm9taXNlLnRoZW4oY2hhaW4uc2hpZnQoKSwgY2hhaW4uc2hpZnQoKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHByb21pc2U7XG4gIH1cblxuXG4gIHZhciBuZXdDb25maWcgPSBjb25maWc7XG4gIHdoaWxlIChyZXF1ZXN0SW50ZXJjZXB0b3JDaGFpbi5sZW5ndGgpIHtcbiAgICB2YXIgb25GdWxmaWxsZWQgPSByZXF1ZXN0SW50ZXJjZXB0b3JDaGFpbi5zaGlmdCgpO1xuICAgIHZhciBvblJlamVjdGVkID0gcmVxdWVzdEludGVyY2VwdG9yQ2hhaW4uc2hpZnQoKTtcbiAgICB0cnkge1xuICAgICAgbmV3Q29uZmlnID0gb25GdWxmaWxsZWQobmV3Q29uZmlnKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgb25SZWplY3RlZChlcnJvcik7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICB0cnkge1xuICAgIHByb21pc2UgPSBkaXNwYXRjaFJlcXVlc3QobmV3Q29uZmlnKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpO1xuICB9XG5cbiAgd2hpbGUgKHJlc3BvbnNlSW50ZXJjZXB0b3JDaGFpbi5sZW5ndGgpIHtcbiAgICBwcm9taXNlID0gcHJvbWlzZS50aGVuKHJlc3BvbnNlSW50ZXJjZXB0b3JDaGFpbi5zaGlmdCgpLCByZXNwb25zZUludGVyY2VwdG9yQ2hhaW4uc2hpZnQoKSk7XG4gIH1cblxuICByZXR1cm4gcHJvbWlzZTtcbn07XG5cbkF4aW9zLnByb3RvdHlwZS5nZXRVcmkgPSBmdW5jdGlvbiBnZXRVcmkoY29uZmlnKSB7XG4gIGNvbmZpZyA9IG1lcmdlQ29uZmlnKHRoaXMuZGVmYXVsdHMsIGNvbmZpZyk7XG4gIHJldHVybiBidWlsZFVSTChjb25maWcudXJsLCBjb25maWcucGFyYW1zLCBjb25maWcucGFyYW1zU2VyaWFsaXplcikucmVwbGFjZSgvXlxcPy8sICcnKTtcbn07XG5cbi8vIFByb3ZpZGUgYWxpYXNlcyBmb3Igc3VwcG9ydGVkIHJlcXVlc3QgbWV0aG9kc1xudXRpbHMuZm9yRWFjaChbJ2RlbGV0ZScsICdnZXQnLCAnaGVhZCcsICdvcHRpb25zJ10sIGZ1bmN0aW9uIGZvckVhY2hNZXRob2ROb0RhdGEobWV0aG9kKSB7XG4gIC8qZXNsaW50IGZ1bmMtbmFtZXM6MCovXG4gIEF4aW9zLnByb3RvdHlwZVttZXRob2RdID0gZnVuY3Rpb24odXJsLCBjb25maWcpIHtcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0KG1lcmdlQ29uZmlnKGNvbmZpZyB8fCB7fSwge1xuICAgICAgbWV0aG9kOiBtZXRob2QsXG4gICAgICB1cmw6IHVybCxcbiAgICAgIGRhdGE6IChjb25maWcgfHwge30pLmRhdGFcbiAgICB9KSk7XG4gIH07XG59KTtcblxudXRpbHMuZm9yRWFjaChbJ3Bvc3QnLCAncHV0JywgJ3BhdGNoJ10sIGZ1bmN0aW9uIGZvckVhY2hNZXRob2RXaXRoRGF0YShtZXRob2QpIHtcbiAgLyplc2xpbnQgZnVuYy1uYW1lczowKi9cbiAgQXhpb3MucHJvdG90eXBlW21ldGhvZF0gPSBmdW5jdGlvbih1cmwsIGRhdGEsIGNvbmZpZykge1xuICAgIHJldHVybiB0aGlzLnJlcXVlc3QobWVyZ2VDb25maWcoY29uZmlnIHx8IHt9LCB7XG4gICAgICBtZXRob2Q6IG1ldGhvZCxcbiAgICAgIHVybDogdXJsLFxuICAgICAgZGF0YTogZGF0YVxuICAgIH0pKTtcbiAgfTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEF4aW9zO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbmZ1bmN0aW9uIEludGVyY2VwdG9yTWFuYWdlcigpIHtcbiAgdGhpcy5oYW5kbGVycyA9IFtdO1xufVxuXG4vKipcbiAqIEFkZCBhIG5ldyBpbnRlcmNlcHRvciB0byB0aGUgc3RhY2tcbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdWxmaWxsZWQgVGhlIGZ1bmN0aW9uIHRvIGhhbmRsZSBgdGhlbmAgZm9yIGEgYFByb21pc2VgXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSByZWplY3RlZCBUaGUgZnVuY3Rpb24gdG8gaGFuZGxlIGByZWplY3RgIGZvciBhIGBQcm9taXNlYFxuICpcbiAqIEByZXR1cm4ge051bWJlcn0gQW4gSUQgdXNlZCB0byByZW1vdmUgaW50ZXJjZXB0b3IgbGF0ZXJcbiAqL1xuSW50ZXJjZXB0b3JNYW5hZ2VyLnByb3RvdHlwZS51c2UgPSBmdW5jdGlvbiB1c2UoZnVsZmlsbGVkLCByZWplY3RlZCwgb3B0aW9ucykge1xuICB0aGlzLmhhbmRsZXJzLnB1c2goe1xuICAgIGZ1bGZpbGxlZDogZnVsZmlsbGVkLFxuICAgIHJlamVjdGVkOiByZWplY3RlZCxcbiAgICBzeW5jaHJvbm91czogb3B0aW9ucyA/IG9wdGlvbnMuc3luY2hyb25vdXMgOiBmYWxzZSxcbiAgICBydW5XaGVuOiBvcHRpb25zID8gb3B0aW9ucy5ydW5XaGVuIDogbnVsbFxuICB9KTtcbiAgcmV0dXJuIHRoaXMuaGFuZGxlcnMubGVuZ3RoIC0gMTtcbn07XG5cbi8qKlxuICogUmVtb3ZlIGFuIGludGVyY2VwdG9yIGZyb20gdGhlIHN0YWNrXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IGlkIFRoZSBJRCB0aGF0IHdhcyByZXR1cm5lZCBieSBgdXNlYFxuICovXG5JbnRlcmNlcHRvck1hbmFnZXIucHJvdG90eXBlLmVqZWN0ID0gZnVuY3Rpb24gZWplY3QoaWQpIHtcbiAgaWYgKHRoaXMuaGFuZGxlcnNbaWRdKSB7XG4gICAgdGhpcy5oYW5kbGVyc1tpZF0gPSBudWxsO1xuICB9XG59O1xuXG4vKipcbiAqIEl0ZXJhdGUgb3ZlciBhbGwgdGhlIHJlZ2lzdGVyZWQgaW50ZXJjZXB0b3JzXG4gKlxuICogVGhpcyBtZXRob2QgaXMgcGFydGljdWxhcmx5IHVzZWZ1bCBmb3Igc2tpcHBpbmcgb3ZlciBhbnlcbiAqIGludGVyY2VwdG9ycyB0aGF0IG1heSBoYXZlIGJlY29tZSBgbnVsbGAgY2FsbGluZyBgZWplY3RgLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuIFRoZSBmdW5jdGlvbiB0byBjYWxsIGZvciBlYWNoIGludGVyY2VwdG9yXG4gKi9cbkludGVyY2VwdG9yTWFuYWdlci5wcm90b3R5cGUuZm9yRWFjaCA9IGZ1bmN0aW9uIGZvckVhY2goZm4pIHtcbiAgdXRpbHMuZm9yRWFjaCh0aGlzLmhhbmRsZXJzLCBmdW5jdGlvbiBmb3JFYWNoSGFuZGxlcihoKSB7XG4gICAgaWYgKGggIT09IG51bGwpIHtcbiAgICAgIGZuKGgpO1xuICAgIH1cbiAgfSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEludGVyY2VwdG9yTWFuYWdlcjtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGlzQWJzb2x1dGVVUkwgPSByZXF1aXJlKCcuLi9oZWxwZXJzL2lzQWJzb2x1dGVVUkwnKTtcbnZhciBjb21iaW5lVVJMcyA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvY29tYmluZVVSTHMnKTtcblxuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IFVSTCBieSBjb21iaW5pbmcgdGhlIGJhc2VVUkwgd2l0aCB0aGUgcmVxdWVzdGVkVVJMLFxuICogb25seSB3aGVuIHRoZSByZXF1ZXN0ZWRVUkwgaXMgbm90IGFscmVhZHkgYW4gYWJzb2x1dGUgVVJMLlxuICogSWYgdGhlIHJlcXVlc3RVUkwgaXMgYWJzb2x1dGUsIHRoaXMgZnVuY3Rpb24gcmV0dXJucyB0aGUgcmVxdWVzdGVkVVJMIHVudG91Y2hlZC5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gYmFzZVVSTCBUaGUgYmFzZSBVUkxcbiAqIEBwYXJhbSB7c3RyaW5nfSByZXF1ZXN0ZWRVUkwgQWJzb2x1dGUgb3IgcmVsYXRpdmUgVVJMIHRvIGNvbWJpbmVcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBjb21iaW5lZCBmdWxsIHBhdGhcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBidWlsZEZ1bGxQYXRoKGJhc2VVUkwsIHJlcXVlc3RlZFVSTCkge1xuICBpZiAoYmFzZVVSTCAmJiAhaXNBYnNvbHV0ZVVSTChyZXF1ZXN0ZWRVUkwpKSB7XG4gICAgcmV0dXJuIGNvbWJpbmVVUkxzKGJhc2VVUkwsIHJlcXVlc3RlZFVSTCk7XG4gIH1cbiAgcmV0dXJuIHJlcXVlc3RlZFVSTDtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBlbmhhbmNlRXJyb3IgPSByZXF1aXJlKCcuL2VuaGFuY2VFcnJvcicpO1xuXG4vKipcbiAqIENyZWF0ZSBhbiBFcnJvciB3aXRoIHRoZSBzcGVjaWZpZWQgbWVzc2FnZSwgY29uZmlnLCBlcnJvciBjb2RlLCByZXF1ZXN0IGFuZCByZXNwb25zZS5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZSBUaGUgZXJyb3IgbWVzc2FnZS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZy5cbiAqIEBwYXJhbSB7c3RyaW5nfSBbY29kZV0gVGhlIGVycm9yIGNvZGUgKGZvciBleGFtcGxlLCAnRUNPTk5BQk9SVEVEJykuXG4gKiBAcGFyYW0ge09iamVjdH0gW3JlcXVlc3RdIFRoZSByZXF1ZXN0LlxuICogQHBhcmFtIHtPYmplY3R9IFtyZXNwb25zZV0gVGhlIHJlc3BvbnNlLlxuICogQHJldHVybnMge0Vycm9yfSBUaGUgY3JlYXRlZCBlcnJvci5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjcmVhdGVFcnJvcihtZXNzYWdlLCBjb25maWcsIGNvZGUsIHJlcXVlc3QsIHJlc3BvbnNlKSB7XG4gIHZhciBlcnJvciA9IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgcmV0dXJuIGVuaGFuY2VFcnJvcihlcnJvciwgY29uZmlnLCBjb2RlLCByZXF1ZXN0LCByZXNwb25zZSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG52YXIgdHJhbnNmb3JtRGF0YSA9IHJlcXVpcmUoJy4vdHJhbnNmb3JtRGF0YScpO1xudmFyIGlzQ2FuY2VsID0gcmVxdWlyZSgnLi4vY2FuY2VsL2lzQ2FuY2VsJyk7XG52YXIgZGVmYXVsdHMgPSByZXF1aXJlKCcuLi9kZWZhdWx0cycpO1xudmFyIENhbmNlbCA9IHJlcXVpcmUoJy4uL2NhbmNlbC9DYW5jZWwnKTtcblxuLyoqXG4gKiBUaHJvd3MgYSBgQ2FuY2VsYCBpZiBjYW5jZWxsYXRpb24gaGFzIGJlZW4gcmVxdWVzdGVkLlxuICovXG5mdW5jdGlvbiB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZykge1xuICBpZiAoY29uZmlnLmNhbmNlbFRva2VuKSB7XG4gICAgY29uZmlnLmNhbmNlbFRva2VuLnRocm93SWZSZXF1ZXN0ZWQoKTtcbiAgfVxuXG4gIGlmIChjb25maWcuc2lnbmFsICYmIGNvbmZpZy5zaWduYWwuYWJvcnRlZCkge1xuICAgIHRocm93IG5ldyBDYW5jZWwoJ2NhbmNlbGVkJyk7XG4gIH1cbn1cblxuLyoqXG4gKiBEaXNwYXRjaCBhIHJlcXVlc3QgdG8gdGhlIHNlcnZlciB1c2luZyB0aGUgY29uZmlndXJlZCBhZGFwdGVyLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZyB0aGF0IGlzIHRvIGJlIHVzZWQgZm9yIHRoZSByZXF1ZXN0XG4gKiBAcmV0dXJucyB7UHJvbWlzZX0gVGhlIFByb21pc2UgdG8gYmUgZnVsZmlsbGVkXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZGlzcGF0Y2hSZXF1ZXN0KGNvbmZpZykge1xuICB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZyk7XG5cbiAgLy8gRW5zdXJlIGhlYWRlcnMgZXhpc3RcbiAgY29uZmlnLmhlYWRlcnMgPSBjb25maWcuaGVhZGVycyB8fCB7fTtcblxuICAvLyBUcmFuc2Zvcm0gcmVxdWVzdCBkYXRhXG4gIGNvbmZpZy5kYXRhID0gdHJhbnNmb3JtRGF0YS5jYWxsKFxuICAgIGNvbmZpZyxcbiAgICBjb25maWcuZGF0YSxcbiAgICBjb25maWcuaGVhZGVycyxcbiAgICBjb25maWcudHJhbnNmb3JtUmVxdWVzdFxuICApO1xuXG4gIC8vIEZsYXR0ZW4gaGVhZGVyc1xuICBjb25maWcuaGVhZGVycyA9IHV0aWxzLm1lcmdlKFxuICAgIGNvbmZpZy5oZWFkZXJzLmNvbW1vbiB8fCB7fSxcbiAgICBjb25maWcuaGVhZGVyc1tjb25maWcubWV0aG9kXSB8fCB7fSxcbiAgICBjb25maWcuaGVhZGVyc1xuICApO1xuXG4gIHV0aWxzLmZvckVhY2goXG4gICAgWydkZWxldGUnLCAnZ2V0JywgJ2hlYWQnLCAncG9zdCcsICdwdXQnLCAncGF0Y2gnLCAnY29tbW9uJ10sXG4gICAgZnVuY3Rpb24gY2xlYW5IZWFkZXJDb25maWcobWV0aG9kKSB7XG4gICAgICBkZWxldGUgY29uZmlnLmhlYWRlcnNbbWV0aG9kXTtcbiAgICB9XG4gICk7XG5cbiAgdmFyIGFkYXB0ZXIgPSBjb25maWcuYWRhcHRlciB8fCBkZWZhdWx0cy5hZGFwdGVyO1xuXG4gIHJldHVybiBhZGFwdGVyKGNvbmZpZykudGhlbihmdW5jdGlvbiBvbkFkYXB0ZXJSZXNvbHV0aW9uKHJlc3BvbnNlKSB7XG4gICAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gICAgLy8gVHJhbnNmb3JtIHJlc3BvbnNlIGRhdGFcbiAgICByZXNwb25zZS5kYXRhID0gdHJhbnNmb3JtRGF0YS5jYWxsKFxuICAgICAgY29uZmlnLFxuICAgICAgcmVzcG9uc2UuZGF0YSxcbiAgICAgIHJlc3BvbnNlLmhlYWRlcnMsXG4gICAgICBjb25maWcudHJhbnNmb3JtUmVzcG9uc2VcbiAgICApO1xuXG4gICAgcmV0dXJuIHJlc3BvbnNlO1xuICB9LCBmdW5jdGlvbiBvbkFkYXB0ZXJSZWplY3Rpb24ocmVhc29uKSB7XG4gICAgaWYgKCFpc0NhbmNlbChyZWFzb24pKSB7XG4gICAgICB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZyk7XG5cbiAgICAgIC8vIFRyYW5zZm9ybSByZXNwb25zZSBkYXRhXG4gICAgICBpZiAocmVhc29uICYmIHJlYXNvbi5yZXNwb25zZSkge1xuICAgICAgICByZWFzb24ucmVzcG9uc2UuZGF0YSA9IHRyYW5zZm9ybURhdGEuY2FsbChcbiAgICAgICAgICBjb25maWcsXG4gICAgICAgICAgcmVhc29uLnJlc3BvbnNlLmRhdGEsXG4gICAgICAgICAgcmVhc29uLnJlc3BvbnNlLmhlYWRlcnMsXG4gICAgICAgICAgY29uZmlnLnRyYW5zZm9ybVJlc3BvbnNlXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KHJlYXNvbik7XG4gIH0pO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBVcGRhdGUgYW4gRXJyb3Igd2l0aCB0aGUgc3BlY2lmaWVkIGNvbmZpZywgZXJyb3IgY29kZSwgYW5kIHJlc3BvbnNlLlxuICpcbiAqIEBwYXJhbSB7RXJyb3J9IGVycm9yIFRoZSBlcnJvciB0byB1cGRhdGUuXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnIFRoZSBjb25maWcuXG4gKiBAcGFyYW0ge3N0cmluZ30gW2NvZGVdIFRoZSBlcnJvciBjb2RlIChmb3IgZXhhbXBsZSwgJ0VDT05OQUJPUlRFRCcpLlxuICogQHBhcmFtIHtPYmplY3R9IFtyZXF1ZXN0XSBUaGUgcmVxdWVzdC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbcmVzcG9uc2VdIFRoZSByZXNwb25zZS5cbiAqIEByZXR1cm5zIHtFcnJvcn0gVGhlIGVycm9yLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGVuaGFuY2VFcnJvcihlcnJvciwgY29uZmlnLCBjb2RlLCByZXF1ZXN0LCByZXNwb25zZSkge1xuICBlcnJvci5jb25maWcgPSBjb25maWc7XG4gIGlmIChjb2RlKSB7XG4gICAgZXJyb3IuY29kZSA9IGNvZGU7XG4gIH1cblxuICBlcnJvci5yZXF1ZXN0ID0gcmVxdWVzdDtcbiAgZXJyb3IucmVzcG9uc2UgPSByZXNwb25zZTtcbiAgZXJyb3IuaXNBeGlvc0Vycm9yID0gdHJ1ZTtcblxuICBlcnJvci50b0pTT04gPSBmdW5jdGlvbiB0b0pTT04oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC8vIFN0YW5kYXJkXG4gICAgICBtZXNzYWdlOiB0aGlzLm1lc3NhZ2UsXG4gICAgICBuYW1lOiB0aGlzLm5hbWUsXG4gICAgICAvLyBNaWNyb3NvZnRcbiAgICAgIGRlc2NyaXB0aW9uOiB0aGlzLmRlc2NyaXB0aW9uLFxuICAgICAgbnVtYmVyOiB0aGlzLm51bWJlcixcbiAgICAgIC8vIE1vemlsbGFcbiAgICAgIGZpbGVOYW1lOiB0aGlzLmZpbGVOYW1lLFxuICAgICAgbGluZU51bWJlcjogdGhpcy5saW5lTnVtYmVyLFxuICAgICAgY29sdW1uTnVtYmVyOiB0aGlzLmNvbHVtbk51bWJlcixcbiAgICAgIHN0YWNrOiB0aGlzLnN0YWNrLFxuICAgICAgLy8gQXhpb3NcbiAgICAgIGNvbmZpZzogdGhpcy5jb25maWcsXG4gICAgICBjb2RlOiB0aGlzLmNvZGUsXG4gICAgICBzdGF0dXM6IHRoaXMucmVzcG9uc2UgJiYgdGhpcy5yZXNwb25zZS5zdGF0dXMgPyB0aGlzLnJlc3BvbnNlLnN0YXR1cyA6IG51bGxcbiAgICB9O1xuICB9O1xuICByZXR1cm4gZXJyb3I7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscycpO1xuXG4vKipcbiAqIENvbmZpZy1zcGVjaWZpYyBtZXJnZS1mdW5jdGlvbiB3aGljaCBjcmVhdGVzIGEgbmV3IGNvbmZpZy1vYmplY3RcbiAqIGJ5IG1lcmdpbmcgdHdvIGNvbmZpZ3VyYXRpb24gb2JqZWN0cyB0b2dldGhlci5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnMVxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZzJcbiAqIEByZXR1cm5zIHtPYmplY3R9IE5ldyBvYmplY3QgcmVzdWx0aW5nIGZyb20gbWVyZ2luZyBjb25maWcyIHRvIGNvbmZpZzFcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBtZXJnZUNvbmZpZyhjb25maWcxLCBjb25maWcyKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICBjb25maWcyID0gY29uZmlnMiB8fCB7fTtcbiAgdmFyIGNvbmZpZyA9IHt9O1xuXG4gIGZ1bmN0aW9uIGdldE1lcmdlZFZhbHVlKHRhcmdldCwgc291cmNlKSB7XG4gICAgaWYgKHV0aWxzLmlzUGxhaW5PYmplY3QodGFyZ2V0KSAmJiB1dGlscy5pc1BsYWluT2JqZWN0KHNvdXJjZSkpIHtcbiAgICAgIHJldHVybiB1dGlscy5tZXJnZSh0YXJnZXQsIHNvdXJjZSk7XG4gICAgfSBlbHNlIGlmICh1dGlscy5pc1BsYWluT2JqZWN0KHNvdXJjZSkpIHtcbiAgICAgIHJldHVybiB1dGlscy5tZXJnZSh7fSwgc291cmNlKTtcbiAgICB9IGVsc2UgaWYgKHV0aWxzLmlzQXJyYXkoc291cmNlKSkge1xuICAgICAgcmV0dXJuIHNvdXJjZS5zbGljZSgpO1xuICAgIH1cbiAgICByZXR1cm4gc291cmNlO1xuICB9XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbnNpc3RlbnQtcmV0dXJuXG4gIGZ1bmN0aW9uIG1lcmdlRGVlcFByb3BlcnRpZXMocHJvcCkge1xuICAgIGlmICghdXRpbHMuaXNVbmRlZmluZWQoY29uZmlnMltwcm9wXSkpIHtcbiAgICAgIHJldHVybiBnZXRNZXJnZWRWYWx1ZShjb25maWcxW3Byb3BdLCBjb25maWcyW3Byb3BdKTtcbiAgICB9IGVsc2UgaWYgKCF1dGlscy5pc1VuZGVmaW5lZChjb25maWcxW3Byb3BdKSkge1xuICAgICAgcmV0dXJuIGdldE1lcmdlZFZhbHVlKHVuZGVmaW5lZCwgY29uZmlnMVtwcm9wXSk7XG4gICAgfVxuICB9XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbnNpc3RlbnQtcmV0dXJuXG4gIGZ1bmN0aW9uIHZhbHVlRnJvbUNvbmZpZzIocHJvcCkge1xuICAgIGlmICghdXRpbHMuaXNVbmRlZmluZWQoY29uZmlnMltwcm9wXSkpIHtcbiAgICAgIHJldHVybiBnZXRNZXJnZWRWYWx1ZSh1bmRlZmluZWQsIGNvbmZpZzJbcHJvcF0pO1xuICAgIH1cbiAgfVxuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjb25zaXN0ZW50LXJldHVyblxuICBmdW5jdGlvbiBkZWZhdWx0VG9Db25maWcyKHByb3ApIHtcbiAgICBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGNvbmZpZzJbcHJvcF0pKSB7XG4gICAgICByZXR1cm4gZ2V0TWVyZ2VkVmFsdWUodW5kZWZpbmVkLCBjb25maWcyW3Byb3BdKTtcbiAgICB9IGVsc2UgaWYgKCF1dGlscy5pc1VuZGVmaW5lZChjb25maWcxW3Byb3BdKSkge1xuICAgICAgcmV0dXJuIGdldE1lcmdlZFZhbHVlKHVuZGVmaW5lZCwgY29uZmlnMVtwcm9wXSk7XG4gICAgfVxuICB9XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbnNpc3RlbnQtcmV0dXJuXG4gIGZ1bmN0aW9uIG1lcmdlRGlyZWN0S2V5cyhwcm9wKSB7XG4gICAgaWYgKHByb3AgaW4gY29uZmlnMikge1xuICAgICAgcmV0dXJuIGdldE1lcmdlZFZhbHVlKGNvbmZpZzFbcHJvcF0sIGNvbmZpZzJbcHJvcF0pO1xuICAgIH0gZWxzZSBpZiAocHJvcCBpbiBjb25maWcxKSB7XG4gICAgICByZXR1cm4gZ2V0TWVyZ2VkVmFsdWUodW5kZWZpbmVkLCBjb25maWcxW3Byb3BdKTtcbiAgICB9XG4gIH1cblxuICB2YXIgbWVyZ2VNYXAgPSB7XG4gICAgJ3VybCc6IHZhbHVlRnJvbUNvbmZpZzIsXG4gICAgJ21ldGhvZCc6IHZhbHVlRnJvbUNvbmZpZzIsXG4gICAgJ2RhdGEnOiB2YWx1ZUZyb21Db25maWcyLFxuICAgICdiYXNlVVJMJzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAndHJhbnNmb3JtUmVxdWVzdCc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ3RyYW5zZm9ybVJlc3BvbnNlJzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAncGFyYW1zU2VyaWFsaXplcic6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ3RpbWVvdXQnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICd0aW1lb3V0TWVzc2FnZSc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ3dpdGhDcmVkZW50aWFscyc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ2FkYXB0ZXInOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICdyZXNwb25zZVR5cGUnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICd4c3JmQ29va2llTmFtZSc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ3hzcmZIZWFkZXJOYW1lJzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAnb25VcGxvYWRQcm9ncmVzcyc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ29uRG93bmxvYWRQcm9ncmVzcyc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ2RlY29tcHJlc3MnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICdtYXhDb250ZW50TGVuZ3RoJzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAnbWF4Qm9keUxlbmd0aCc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ3RyYW5zcG9ydCc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ2h0dHBBZ2VudCc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ2h0dHBzQWdlbnQnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICdjYW5jZWxUb2tlbic6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ3NvY2tldFBhdGgnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICdyZXNwb25zZUVuY29kaW5nJzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAndmFsaWRhdGVTdGF0dXMnOiBtZXJnZURpcmVjdEtleXNcbiAgfTtcblxuICB1dGlscy5mb3JFYWNoKE9iamVjdC5rZXlzKGNvbmZpZzEpLmNvbmNhdChPYmplY3Qua2V5cyhjb25maWcyKSksIGZ1bmN0aW9uIGNvbXB1dGVDb25maWdWYWx1ZShwcm9wKSB7XG4gICAgdmFyIG1lcmdlID0gbWVyZ2VNYXBbcHJvcF0gfHwgbWVyZ2VEZWVwUHJvcGVydGllcztcbiAgICB2YXIgY29uZmlnVmFsdWUgPSBtZXJnZShwcm9wKTtcbiAgICAodXRpbHMuaXNVbmRlZmluZWQoY29uZmlnVmFsdWUpICYmIG1lcmdlICE9PSBtZXJnZURpcmVjdEtleXMpIHx8IChjb25maWdbcHJvcF0gPSBjb25maWdWYWx1ZSk7XG4gIH0pO1xuXG4gIHJldHVybiBjb25maWc7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgY3JlYXRlRXJyb3IgPSByZXF1aXJlKCcuL2NyZWF0ZUVycm9yJyk7XG5cbi8qKlxuICogUmVzb2x2ZSBvciByZWplY3QgYSBQcm9taXNlIGJhc2VkIG9uIHJlc3BvbnNlIHN0YXR1cy5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSByZXNvbHZlIEEgZnVuY3Rpb24gdGhhdCByZXNvbHZlcyB0aGUgcHJvbWlzZS5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IHJlamVjdCBBIGZ1bmN0aW9uIHRoYXQgcmVqZWN0cyB0aGUgcHJvbWlzZS5cbiAqIEBwYXJhbSB7b2JqZWN0fSByZXNwb25zZSBUaGUgcmVzcG9uc2UuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gc2V0dGxlKHJlc29sdmUsIHJlamVjdCwgcmVzcG9uc2UpIHtcbiAgdmFyIHZhbGlkYXRlU3RhdHVzID0gcmVzcG9uc2UuY29uZmlnLnZhbGlkYXRlU3RhdHVzO1xuICBpZiAoIXJlc3BvbnNlLnN0YXR1cyB8fCAhdmFsaWRhdGVTdGF0dXMgfHwgdmFsaWRhdGVTdGF0dXMocmVzcG9uc2Uuc3RhdHVzKSkge1xuICAgIHJlc29sdmUocmVzcG9uc2UpO1xuICB9IGVsc2Uge1xuICAgIHJlamVjdChjcmVhdGVFcnJvcihcbiAgICAgICdSZXF1ZXN0IGZhaWxlZCB3aXRoIHN0YXR1cyBjb2RlICcgKyByZXNwb25zZS5zdGF0dXMsXG4gICAgICByZXNwb25zZS5jb25maWcsXG4gICAgICBudWxsLFxuICAgICAgcmVzcG9uc2UucmVxdWVzdCxcbiAgICAgIHJlc3BvbnNlXG4gICAgKSk7XG4gIH1cbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcbnZhciBkZWZhdWx0cyA9IHJlcXVpcmUoJy4uL2RlZmF1bHRzJyk7XG5cbi8qKlxuICogVHJhbnNmb3JtIHRoZSBkYXRhIGZvciBhIHJlcXVlc3Qgb3IgYSByZXNwb25zZVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fFN0cmluZ30gZGF0YSBUaGUgZGF0YSB0byBiZSB0cmFuc2Zvcm1lZFxuICogQHBhcmFtIHtBcnJheX0gaGVhZGVycyBUaGUgaGVhZGVycyBmb3IgdGhlIHJlcXVlc3Qgb3IgcmVzcG9uc2VcbiAqIEBwYXJhbSB7QXJyYXl8RnVuY3Rpb259IGZucyBBIHNpbmdsZSBmdW5jdGlvbiBvciBBcnJheSBvZiBmdW5jdGlvbnNcbiAqIEByZXR1cm5zIHsqfSBUaGUgcmVzdWx0aW5nIHRyYW5zZm9ybWVkIGRhdGFcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB0cmFuc2Zvcm1EYXRhKGRhdGEsIGhlYWRlcnMsIGZucykge1xuICB2YXIgY29udGV4dCA9IHRoaXMgfHwgZGVmYXVsdHM7XG4gIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICB1dGlscy5mb3JFYWNoKGZucywgZnVuY3Rpb24gdHJhbnNmb3JtKGZuKSB7XG4gICAgZGF0YSA9IGZuLmNhbGwoY29udGV4dCwgZGF0YSwgaGVhZGVycyk7XG4gIH0pO1xuXG4gIHJldHVybiBkYXRhO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcbnZhciBub3JtYWxpemVIZWFkZXJOYW1lID0gcmVxdWlyZSgnLi4vaGVscGVycy9ub3JtYWxpemVIZWFkZXJOYW1lJyk7XG52YXIgZW5oYW5jZUVycm9yID0gcmVxdWlyZSgnLi4vY29yZS9lbmhhbmNlRXJyb3InKTtcbnZhciB0cmFuc2l0aW9uYWxEZWZhdWx0cyA9IHJlcXVpcmUoJy4vdHJhbnNpdGlvbmFsJyk7XG5cbnZhciBERUZBVUxUX0NPTlRFTlRfVFlQRSA9IHtcbiAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnXG59O1xuXG5mdW5jdGlvbiBzZXRDb250ZW50VHlwZUlmVW5zZXQoaGVhZGVycywgdmFsdWUpIHtcbiAgaWYgKCF1dGlscy5pc1VuZGVmaW5lZChoZWFkZXJzKSAmJiB1dGlscy5pc1VuZGVmaW5lZChoZWFkZXJzWydDb250ZW50LVR5cGUnXSkpIHtcbiAgICBoZWFkZXJzWydDb250ZW50LVR5cGUnXSA9IHZhbHVlO1xuICB9XG59XG5cbmZ1bmN0aW9uIGdldERlZmF1bHRBZGFwdGVyKCkge1xuICB2YXIgYWRhcHRlcjtcbiAgaWYgKHR5cGVvZiBYTUxIdHRwUmVxdWVzdCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAvLyBGb3IgYnJvd3NlcnMgdXNlIFhIUiBhZGFwdGVyXG4gICAgYWRhcHRlciA9IHJlcXVpcmUoJy4uL2FkYXB0ZXJzL3hocicpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJyAmJiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwocHJvY2VzcykgPT09ICdbb2JqZWN0IHByb2Nlc3NdJykge1xuICAgIC8vIEZvciBub2RlIHVzZSBIVFRQIGFkYXB0ZXJcbiAgICBhZGFwdGVyID0gcmVxdWlyZSgnLi4vYWRhcHRlcnMvaHR0cCcpO1xuICB9XG4gIHJldHVybiBhZGFwdGVyO1xufVxuXG5mdW5jdGlvbiBzdHJpbmdpZnlTYWZlbHkocmF3VmFsdWUsIHBhcnNlciwgZW5jb2Rlcikge1xuICBpZiAodXRpbHMuaXNTdHJpbmcocmF3VmFsdWUpKSB7XG4gICAgdHJ5IHtcbiAgICAgIChwYXJzZXIgfHwgSlNPTi5wYXJzZSkocmF3VmFsdWUpO1xuICAgICAgcmV0dXJuIHV0aWxzLnRyaW0ocmF3VmFsdWUpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGlmIChlLm5hbWUgIT09ICdTeW50YXhFcnJvcicpIHtcbiAgICAgICAgdGhyb3cgZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gKGVuY29kZXIgfHwgSlNPTi5zdHJpbmdpZnkpKHJhd1ZhbHVlKTtcbn1cblxudmFyIGRlZmF1bHRzID0ge1xuXG4gIHRyYW5zaXRpb25hbDogdHJhbnNpdGlvbmFsRGVmYXVsdHMsXG5cbiAgYWRhcHRlcjogZ2V0RGVmYXVsdEFkYXB0ZXIoKSxcblxuICB0cmFuc2Zvcm1SZXF1ZXN0OiBbZnVuY3Rpb24gdHJhbnNmb3JtUmVxdWVzdChkYXRhLCBoZWFkZXJzKSB7XG4gICAgbm9ybWFsaXplSGVhZGVyTmFtZShoZWFkZXJzLCAnQWNjZXB0Jyk7XG4gICAgbm9ybWFsaXplSGVhZGVyTmFtZShoZWFkZXJzLCAnQ29udGVudC1UeXBlJyk7XG5cbiAgICBpZiAodXRpbHMuaXNGb3JtRGF0YShkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNBcnJheUJ1ZmZlcihkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNCdWZmZXIoZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzU3RyZWFtKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc0ZpbGUoZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzQmxvYihkYXRhKVxuICAgICkge1xuICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfVxuICAgIGlmICh1dGlscy5pc0FycmF5QnVmZmVyVmlldyhkYXRhKSkge1xuICAgICAgcmV0dXJuIGRhdGEuYnVmZmVyO1xuICAgIH1cbiAgICBpZiAodXRpbHMuaXNVUkxTZWFyY2hQYXJhbXMoZGF0YSkpIHtcbiAgICAgIHNldENvbnRlbnRUeXBlSWZVbnNldChoZWFkZXJzLCAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkO2NoYXJzZXQ9dXRmLTgnKTtcbiAgICAgIHJldHVybiBkYXRhLnRvU3RyaW5nKCk7XG4gICAgfVxuICAgIGlmICh1dGlscy5pc09iamVjdChkYXRhKSB8fCAoaGVhZGVycyAmJiBoZWFkZXJzWydDb250ZW50LVR5cGUnXSA9PT0gJ2FwcGxpY2F0aW9uL2pzb24nKSkge1xuICAgICAgc2V0Q29udGVudFR5cGVJZlVuc2V0KGhlYWRlcnMsICdhcHBsaWNhdGlvbi9qc29uJyk7XG4gICAgICByZXR1cm4gc3RyaW5naWZ5U2FmZWx5KGRhdGEpO1xuICAgIH1cbiAgICByZXR1cm4gZGF0YTtcbiAgfV0sXG5cbiAgdHJhbnNmb3JtUmVzcG9uc2U6IFtmdW5jdGlvbiB0cmFuc2Zvcm1SZXNwb25zZShkYXRhKSB7XG4gICAgdmFyIHRyYW5zaXRpb25hbCA9IHRoaXMudHJhbnNpdGlvbmFsIHx8IGRlZmF1bHRzLnRyYW5zaXRpb25hbDtcbiAgICB2YXIgc2lsZW50SlNPTlBhcnNpbmcgPSB0cmFuc2l0aW9uYWwgJiYgdHJhbnNpdGlvbmFsLnNpbGVudEpTT05QYXJzaW5nO1xuICAgIHZhciBmb3JjZWRKU09OUGFyc2luZyA9IHRyYW5zaXRpb25hbCAmJiB0cmFuc2l0aW9uYWwuZm9yY2VkSlNPTlBhcnNpbmc7XG4gICAgdmFyIHN0cmljdEpTT05QYXJzaW5nID0gIXNpbGVudEpTT05QYXJzaW5nICYmIHRoaXMucmVzcG9uc2VUeXBlID09PSAnanNvbic7XG5cbiAgICBpZiAoc3RyaWN0SlNPTlBhcnNpbmcgfHwgKGZvcmNlZEpTT05QYXJzaW5nICYmIHV0aWxzLmlzU3RyaW5nKGRhdGEpICYmIGRhdGEubGVuZ3RoKSkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UoZGF0YSk7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGlmIChzdHJpY3RKU09OUGFyc2luZykge1xuICAgICAgICAgIGlmIChlLm5hbWUgPT09ICdTeW50YXhFcnJvcicpIHtcbiAgICAgICAgICAgIHRocm93IGVuaGFuY2VFcnJvcihlLCB0aGlzLCAnRV9KU09OX1BBUlNFJyk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHRocm93IGU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gZGF0YTtcbiAgfV0sXG5cbiAgLyoqXG4gICAqIEEgdGltZW91dCBpbiBtaWxsaXNlY29uZHMgdG8gYWJvcnQgYSByZXF1ZXN0LiBJZiBzZXQgdG8gMCAoZGVmYXVsdCkgYVxuICAgKiB0aW1lb3V0IGlzIG5vdCBjcmVhdGVkLlxuICAgKi9cbiAgdGltZW91dDogMCxcblxuICB4c3JmQ29va2llTmFtZTogJ1hTUkYtVE9LRU4nLFxuICB4c3JmSGVhZGVyTmFtZTogJ1gtWFNSRi1UT0tFTicsXG5cbiAgbWF4Q29udGVudExlbmd0aDogLTEsXG4gIG1heEJvZHlMZW5ndGg6IC0xLFxuXG4gIHZhbGlkYXRlU3RhdHVzOiBmdW5jdGlvbiB2YWxpZGF0ZVN0YXR1cyhzdGF0dXMpIHtcbiAgICByZXR1cm4gc3RhdHVzID49IDIwMCAmJiBzdGF0dXMgPCAzMDA7XG4gIH0sXG5cbiAgaGVhZGVyczoge1xuICAgIGNvbW1vbjoge1xuICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L3BsYWluLCAqLyonXG4gICAgfVxuICB9XG59O1xuXG51dGlscy5mb3JFYWNoKFsnZGVsZXRlJywgJ2dldCcsICdoZWFkJ10sIGZ1bmN0aW9uIGZvckVhY2hNZXRob2ROb0RhdGEobWV0aG9kKSB7XG4gIGRlZmF1bHRzLmhlYWRlcnNbbWV0aG9kXSA9IHt9O1xufSk7XG5cbnV0aWxzLmZvckVhY2goWydwb3N0JywgJ3B1dCcsICdwYXRjaCddLCBmdW5jdGlvbiBmb3JFYWNoTWV0aG9kV2l0aERhdGEobWV0aG9kKSB7XG4gIGRlZmF1bHRzLmhlYWRlcnNbbWV0aG9kXSA9IHV0aWxzLm1lcmdlKERFRkFVTFRfQ09OVEVOVF9UWVBFKTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGRlZmF1bHRzO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc2lsZW50SlNPTlBhcnNpbmc6IHRydWUsXG4gIGZvcmNlZEpTT05QYXJzaW5nOiB0cnVlLFxuICBjbGFyaWZ5VGltZW91dEVycm9yOiBmYWxzZVxufTtcbiIsIm1vZHVsZS5leHBvcnRzID0ge1xuICBcInZlcnNpb25cIjogXCIwLjI2LjFcIlxufTsiLCIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gYmluZChmbiwgdGhpc0FyZykge1xuICByZXR1cm4gZnVuY3Rpb24gd3JhcCgpIHtcbiAgICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3MubGVuZ3RoOyBpKyspIHtcbiAgICAgIGFyZ3NbaV0gPSBhcmd1bWVudHNbaV07XG4gICAgfVxuICAgIHJldHVybiBmbi5hcHBseSh0aGlzQXJnLCBhcmdzKTtcbiAgfTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxuZnVuY3Rpb24gZW5jb2RlKHZhbCkge1xuICByZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KHZhbCkuXG4gICAgcmVwbGFjZSgvJTNBL2dpLCAnOicpLlxuICAgIHJlcGxhY2UoLyUyNC9nLCAnJCcpLlxuICAgIHJlcGxhY2UoLyUyQy9naSwgJywnKS5cbiAgICByZXBsYWNlKC8lMjAvZywgJysnKS5cbiAgICByZXBsYWNlKC8lNUIvZ2ksICdbJykuXG4gICAgcmVwbGFjZSgvJTVEL2dpLCAnXScpO1xufVxuXG4vKipcbiAqIEJ1aWxkIGEgVVJMIGJ5IGFwcGVuZGluZyBwYXJhbXMgdG8gdGhlIGVuZFxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmwgVGhlIGJhc2Ugb2YgdGhlIHVybCAoZS5nLiwgaHR0cDovL3d3dy5nb29nbGUuY29tKVxuICogQHBhcmFtIHtvYmplY3R9IFtwYXJhbXNdIFRoZSBwYXJhbXMgdG8gYmUgYXBwZW5kZWRcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBmb3JtYXR0ZWQgdXJsXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gYnVpbGRVUkwodXJsLCBwYXJhbXMsIHBhcmFtc1NlcmlhbGl6ZXIpIHtcbiAgLyplc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246MCovXG4gIGlmICghcGFyYW1zKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxuXG4gIHZhciBzZXJpYWxpemVkUGFyYW1zO1xuICBpZiAocGFyYW1zU2VyaWFsaXplcikge1xuICAgIHNlcmlhbGl6ZWRQYXJhbXMgPSBwYXJhbXNTZXJpYWxpemVyKHBhcmFtcyk7XG4gIH0gZWxzZSBpZiAodXRpbHMuaXNVUkxTZWFyY2hQYXJhbXMocGFyYW1zKSkge1xuICAgIHNlcmlhbGl6ZWRQYXJhbXMgPSBwYXJhbXMudG9TdHJpbmcoKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgcGFydHMgPSBbXTtcblxuICAgIHV0aWxzLmZvckVhY2gocGFyYW1zLCBmdW5jdGlvbiBzZXJpYWxpemUodmFsLCBrZXkpIHtcbiAgICAgIGlmICh2YWwgPT09IG51bGwgfHwgdHlwZW9mIHZhbCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAodXRpbHMuaXNBcnJheSh2YWwpKSB7XG4gICAgICAgIGtleSA9IGtleSArICdbXSc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YWwgPSBbdmFsXTtcbiAgICAgIH1cblxuICAgICAgdXRpbHMuZm9yRWFjaCh2YWwsIGZ1bmN0aW9uIHBhcnNlVmFsdWUodikge1xuICAgICAgICBpZiAodXRpbHMuaXNEYXRlKHYpKSB7XG4gICAgICAgICAgdiA9IHYudG9JU09TdHJpbmcoKTtcbiAgICAgICAgfSBlbHNlIGlmICh1dGlscy5pc09iamVjdCh2KSkge1xuICAgICAgICAgIHYgPSBKU09OLnN0cmluZ2lmeSh2KTtcbiAgICAgICAgfVxuICAgICAgICBwYXJ0cy5wdXNoKGVuY29kZShrZXkpICsgJz0nICsgZW5jb2RlKHYpKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgc2VyaWFsaXplZFBhcmFtcyA9IHBhcnRzLmpvaW4oJyYnKTtcbiAgfVxuXG4gIGlmIChzZXJpYWxpemVkUGFyYW1zKSB7XG4gICAgdmFyIGhhc2htYXJrSW5kZXggPSB1cmwuaW5kZXhPZignIycpO1xuICAgIGlmIChoYXNobWFya0luZGV4ICE9PSAtMSkge1xuICAgICAgdXJsID0gdXJsLnNsaWNlKDAsIGhhc2htYXJrSW5kZXgpO1xuICAgIH1cblxuICAgIHVybCArPSAodXJsLmluZGV4T2YoJz8nKSA9PT0gLTEgPyAnPycgOiAnJicpICsgc2VyaWFsaXplZFBhcmFtcztcbiAgfVxuXG4gIHJldHVybiB1cmw7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBuZXcgVVJMIGJ5IGNvbWJpbmluZyB0aGUgc3BlY2lmaWVkIFVSTHNcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gYmFzZVVSTCBUaGUgYmFzZSBVUkxcbiAqIEBwYXJhbSB7c3RyaW5nfSByZWxhdGl2ZVVSTCBUaGUgcmVsYXRpdmUgVVJMXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgY29tYmluZWQgVVJMXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY29tYmluZVVSTHMoYmFzZVVSTCwgcmVsYXRpdmVVUkwpIHtcbiAgcmV0dXJuIHJlbGF0aXZlVVJMXG4gICAgPyBiYXNlVVJMLnJlcGxhY2UoL1xcLyskLywgJycpICsgJy8nICsgcmVsYXRpdmVVUkwucmVwbGFjZSgvXlxcLysvLCAnJylcbiAgICA6IGJhc2VVUkw7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gKFxuICB1dGlscy5pc1N0YW5kYXJkQnJvd3NlckVudigpID9cblxuICAvLyBTdGFuZGFyZCBicm93c2VyIGVudnMgc3VwcG9ydCBkb2N1bWVudC5jb29raWVcbiAgICAoZnVuY3Rpb24gc3RhbmRhcmRCcm93c2VyRW52KCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgd3JpdGU6IGZ1bmN0aW9uIHdyaXRlKG5hbWUsIHZhbHVlLCBleHBpcmVzLCBwYXRoLCBkb21haW4sIHNlY3VyZSkge1xuICAgICAgICAgIHZhciBjb29raWUgPSBbXTtcbiAgICAgICAgICBjb29raWUucHVzaChuYW1lICsgJz0nICsgZW5jb2RlVVJJQ29tcG9uZW50KHZhbHVlKSk7XG5cbiAgICAgICAgICBpZiAodXRpbHMuaXNOdW1iZXIoZXhwaXJlcykpIHtcbiAgICAgICAgICAgIGNvb2tpZS5wdXNoKCdleHBpcmVzPScgKyBuZXcgRGF0ZShleHBpcmVzKS50b0dNVFN0cmluZygpKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAodXRpbHMuaXNTdHJpbmcocGF0aCkpIHtcbiAgICAgICAgICAgIGNvb2tpZS5wdXNoKCdwYXRoPScgKyBwYXRoKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAodXRpbHMuaXNTdHJpbmcoZG9tYWluKSkge1xuICAgICAgICAgICAgY29va2llLnB1c2goJ2RvbWFpbj0nICsgZG9tYWluKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoc2VjdXJlID09PSB0cnVlKSB7XG4gICAgICAgICAgICBjb29raWUucHVzaCgnc2VjdXJlJyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgZG9jdW1lbnQuY29va2llID0gY29va2llLmpvaW4oJzsgJyk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgcmVhZDogZnVuY3Rpb24gcmVhZChuYW1lKSB7XG4gICAgICAgICAgdmFyIG1hdGNoID0gZG9jdW1lbnQuY29va2llLm1hdGNoKG5ldyBSZWdFeHAoJyhefDtcXFxccyopKCcgKyBuYW1lICsgJyk9KFteO10qKScpKTtcbiAgICAgICAgICByZXR1cm4gKG1hdGNoID8gZGVjb2RlVVJJQ29tcG9uZW50KG1hdGNoWzNdKSA6IG51bGwpO1xuICAgICAgICB9LFxuXG4gICAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKG5hbWUpIHtcbiAgICAgICAgICB0aGlzLndyaXRlKG5hbWUsICcnLCBEYXRlLm5vdygpIC0gODY0MDAwMDApO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH0pKCkgOlxuXG4gIC8vIE5vbiBzdGFuZGFyZCBicm93c2VyIGVudiAod2ViIHdvcmtlcnMsIHJlYWN0LW5hdGl2ZSkgbGFjayBuZWVkZWQgc3VwcG9ydC5cbiAgICAoZnVuY3Rpb24gbm9uU3RhbmRhcmRCcm93c2VyRW52KCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgd3JpdGU6IGZ1bmN0aW9uIHdyaXRlKCkge30sXG4gICAgICAgIHJlYWQ6IGZ1bmN0aW9uIHJlYWQoKSB7IHJldHVybiBudWxsOyB9LFxuICAgICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgICB9O1xuICAgIH0pKClcbik7XG4iLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBzcGVjaWZpZWQgVVJMIGlzIGFic29sdXRlXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHVybCBUaGUgVVJMIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHRoZSBzcGVjaWZpZWQgVVJMIGlzIGFic29sdXRlLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc0Fic29sdXRlVVJMKHVybCkge1xuICAvLyBBIFVSTCBpcyBjb25zaWRlcmVkIGFic29sdXRlIGlmIGl0IGJlZ2lucyB3aXRoIFwiPHNjaGVtZT46Ly9cIiBvciBcIi8vXCIgKHByb3RvY29sLXJlbGF0aXZlIFVSTCkuXG4gIC8vIFJGQyAzOTg2IGRlZmluZXMgc2NoZW1lIG5hbWUgYXMgYSBzZXF1ZW5jZSBvZiBjaGFyYWN0ZXJzIGJlZ2lubmluZyB3aXRoIGEgbGV0dGVyIGFuZCBmb2xsb3dlZFxuICAvLyBieSBhbnkgY29tYmluYXRpb24gb2YgbGV0dGVycywgZGlnaXRzLCBwbHVzLCBwZXJpb2QsIG9yIGh5cGhlbi5cbiAgcmV0dXJuIC9eKFthLXpdW2EtelxcZCtcXC0uXSo6KT9cXC9cXC8vaS50ZXN0KHVybCk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbi8qKlxuICogRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBwYXlsb2FkIGlzIGFuIGVycm9yIHRocm93biBieSBBeGlvc1xuICpcbiAqIEBwYXJhbSB7Kn0gcGF5bG9hZCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdGhlIHBheWxvYWQgaXMgYW4gZXJyb3IgdGhyb3duIGJ5IEF4aW9zLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc0F4aW9zRXJyb3IocGF5bG9hZCkge1xuICByZXR1cm4gdXRpbHMuaXNPYmplY3QocGF5bG9hZCkgJiYgKHBheWxvYWQuaXNBeGlvc0Vycm9yID09PSB0cnVlKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSAoXG4gIHV0aWxzLmlzU3RhbmRhcmRCcm93c2VyRW52KCkgP1xuXG4gIC8vIFN0YW5kYXJkIGJyb3dzZXIgZW52cyBoYXZlIGZ1bGwgc3VwcG9ydCBvZiB0aGUgQVBJcyBuZWVkZWQgdG8gdGVzdFxuICAvLyB3aGV0aGVyIHRoZSByZXF1ZXN0IFVSTCBpcyBvZiB0aGUgc2FtZSBvcmlnaW4gYXMgY3VycmVudCBsb2NhdGlvbi5cbiAgICAoZnVuY3Rpb24gc3RhbmRhcmRCcm93c2VyRW52KCkge1xuICAgICAgdmFyIG1zaWUgPSAvKG1zaWV8dHJpZGVudCkvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpO1xuICAgICAgdmFyIHVybFBhcnNpbmdOb2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuICAgICAgdmFyIG9yaWdpblVSTDtcblxuICAgICAgLyoqXG4gICAgKiBQYXJzZSBhIFVSTCB0byBkaXNjb3ZlciBpdCdzIGNvbXBvbmVudHNcbiAgICAqXG4gICAgKiBAcGFyYW0ge1N0cmluZ30gdXJsIFRoZSBVUkwgdG8gYmUgcGFyc2VkXG4gICAgKiBAcmV0dXJucyB7T2JqZWN0fVxuICAgICovXG4gICAgICBmdW5jdGlvbiByZXNvbHZlVVJMKHVybCkge1xuICAgICAgICB2YXIgaHJlZiA9IHVybDtcblxuICAgICAgICBpZiAobXNpZSkge1xuICAgICAgICAvLyBJRSBuZWVkcyBhdHRyaWJ1dGUgc2V0IHR3aWNlIHRvIG5vcm1hbGl6ZSBwcm9wZXJ0aWVzXG4gICAgICAgICAgdXJsUGFyc2luZ05vZGUuc2V0QXR0cmlidXRlKCdocmVmJywgaHJlZik7XG4gICAgICAgICAgaHJlZiA9IHVybFBhcnNpbmdOb2RlLmhyZWY7XG4gICAgICAgIH1cblxuICAgICAgICB1cmxQYXJzaW5nTm9kZS5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCBocmVmKTtcblxuICAgICAgICAvLyB1cmxQYXJzaW5nTm9kZSBwcm92aWRlcyB0aGUgVXJsVXRpbHMgaW50ZXJmYWNlIC0gaHR0cDovL3VybC5zcGVjLndoYXR3Zy5vcmcvI3VybHV0aWxzXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgaHJlZjogdXJsUGFyc2luZ05vZGUuaHJlZixcbiAgICAgICAgICBwcm90b2NvbDogdXJsUGFyc2luZ05vZGUucHJvdG9jb2wgPyB1cmxQYXJzaW5nTm9kZS5wcm90b2NvbC5yZXBsYWNlKC86JC8sICcnKSA6ICcnLFxuICAgICAgICAgIGhvc3Q6IHVybFBhcnNpbmdOb2RlLmhvc3QsXG4gICAgICAgICAgc2VhcmNoOiB1cmxQYXJzaW5nTm9kZS5zZWFyY2ggPyB1cmxQYXJzaW5nTm9kZS5zZWFyY2gucmVwbGFjZSgvXlxcPy8sICcnKSA6ICcnLFxuICAgICAgICAgIGhhc2g6IHVybFBhcnNpbmdOb2RlLmhhc2ggPyB1cmxQYXJzaW5nTm9kZS5oYXNoLnJlcGxhY2UoL14jLywgJycpIDogJycsXG4gICAgICAgICAgaG9zdG5hbWU6IHVybFBhcnNpbmdOb2RlLmhvc3RuYW1lLFxuICAgICAgICAgIHBvcnQ6IHVybFBhcnNpbmdOb2RlLnBvcnQsXG4gICAgICAgICAgcGF0aG5hbWU6ICh1cmxQYXJzaW5nTm9kZS5wYXRobmFtZS5jaGFyQXQoMCkgPT09ICcvJykgP1xuICAgICAgICAgICAgdXJsUGFyc2luZ05vZGUucGF0aG5hbWUgOlxuICAgICAgICAgICAgJy8nICsgdXJsUGFyc2luZ05vZGUucGF0aG5hbWVcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgb3JpZ2luVVJMID0gcmVzb2x2ZVVSTCh3aW5kb3cubG9jYXRpb24uaHJlZik7XG5cbiAgICAgIC8qKlxuICAgICogRGV0ZXJtaW5lIGlmIGEgVVJMIHNoYXJlcyB0aGUgc2FtZSBvcmlnaW4gYXMgdGhlIGN1cnJlbnQgbG9jYXRpb25cbiAgICAqXG4gICAgKiBAcGFyYW0ge1N0cmluZ30gcmVxdWVzdFVSTCBUaGUgVVJMIHRvIHRlc3RcbiAgICAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIFVSTCBzaGFyZXMgdGhlIHNhbWUgb3JpZ2luLCBvdGhlcndpc2UgZmFsc2VcbiAgICAqL1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uIGlzVVJMU2FtZU9yaWdpbihyZXF1ZXN0VVJMKSB7XG4gICAgICAgIHZhciBwYXJzZWQgPSAodXRpbHMuaXNTdHJpbmcocmVxdWVzdFVSTCkpID8gcmVzb2x2ZVVSTChyZXF1ZXN0VVJMKSA6IHJlcXVlc3RVUkw7XG4gICAgICAgIHJldHVybiAocGFyc2VkLnByb3RvY29sID09PSBvcmlnaW5VUkwucHJvdG9jb2wgJiZcbiAgICAgICAgICAgIHBhcnNlZC5ob3N0ID09PSBvcmlnaW5VUkwuaG9zdCk7XG4gICAgICB9O1xuICAgIH0pKCkgOlxuXG4gIC8vIE5vbiBzdGFuZGFyZCBicm93c2VyIGVudnMgKHdlYiB3b3JrZXJzLCByZWFjdC1uYXRpdmUpIGxhY2sgbmVlZGVkIHN1cHBvcnQuXG4gICAgKGZ1bmN0aW9uIG5vblN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICAgIHJldHVybiBmdW5jdGlvbiBpc1VSTFNhbWVPcmlnaW4oKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfTtcbiAgICB9KSgpXG4pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIG5vcm1hbGl6ZUhlYWRlck5hbWUoaGVhZGVycywgbm9ybWFsaXplZE5hbWUpIHtcbiAgdXRpbHMuZm9yRWFjaChoZWFkZXJzLCBmdW5jdGlvbiBwcm9jZXNzSGVhZGVyKHZhbHVlLCBuYW1lKSB7XG4gICAgaWYgKG5hbWUgIT09IG5vcm1hbGl6ZWROYW1lICYmIG5hbWUudG9VcHBlckNhc2UoKSA9PT0gbm9ybWFsaXplZE5hbWUudG9VcHBlckNhc2UoKSkge1xuICAgICAgaGVhZGVyc1tub3JtYWxpemVkTmFtZV0gPSB2YWx1ZTtcbiAgICAgIGRlbGV0ZSBoZWFkZXJzW25hbWVdO1xuICAgIH1cbiAgfSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbi8vIEhlYWRlcnMgd2hvc2UgZHVwbGljYXRlcyBhcmUgaWdub3JlZCBieSBub2RlXG4vLyBjLmYuIGh0dHBzOi8vbm9kZWpzLm9yZy9hcGkvaHR0cC5odG1sI2h0dHBfbWVzc2FnZV9oZWFkZXJzXG52YXIgaWdub3JlRHVwbGljYXRlT2YgPSBbXG4gICdhZ2UnLCAnYXV0aG9yaXphdGlvbicsICdjb250ZW50LWxlbmd0aCcsICdjb250ZW50LXR5cGUnLCAnZXRhZycsXG4gICdleHBpcmVzJywgJ2Zyb20nLCAnaG9zdCcsICdpZi1tb2RpZmllZC1zaW5jZScsICdpZi11bm1vZGlmaWVkLXNpbmNlJyxcbiAgJ2xhc3QtbW9kaWZpZWQnLCAnbG9jYXRpb24nLCAnbWF4LWZvcndhcmRzJywgJ3Byb3h5LWF1dGhvcml6YXRpb24nLFxuICAncmVmZXJlcicsICdyZXRyeS1hZnRlcicsICd1c2VyLWFnZW50J1xuXTtcblxuLyoqXG4gKiBQYXJzZSBoZWFkZXJzIGludG8gYW4gb2JqZWN0XG4gKlxuICogYGBgXG4gKiBEYXRlOiBXZWQsIDI3IEF1ZyAyMDE0IDA4OjU4OjQ5IEdNVFxuICogQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uXG4gKiBDb25uZWN0aW9uOiBrZWVwLWFsaXZlXG4gKiBUcmFuc2Zlci1FbmNvZGluZzogY2h1bmtlZFxuICogYGBgXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGhlYWRlcnMgSGVhZGVycyBuZWVkaW5nIHRvIGJlIHBhcnNlZFxuICogQHJldHVybnMge09iamVjdH0gSGVhZGVycyBwYXJzZWQgaW50byBhbiBvYmplY3RcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBwYXJzZUhlYWRlcnMoaGVhZGVycykge1xuICB2YXIgcGFyc2VkID0ge307XG4gIHZhciBrZXk7XG4gIHZhciB2YWw7XG4gIHZhciBpO1xuXG4gIGlmICghaGVhZGVycykgeyByZXR1cm4gcGFyc2VkOyB9XG5cbiAgdXRpbHMuZm9yRWFjaChoZWFkZXJzLnNwbGl0KCdcXG4nKSwgZnVuY3Rpb24gcGFyc2VyKGxpbmUpIHtcbiAgICBpID0gbGluZS5pbmRleE9mKCc6Jyk7XG4gICAga2V5ID0gdXRpbHMudHJpbShsaW5lLnN1YnN0cigwLCBpKSkudG9Mb3dlckNhc2UoKTtcbiAgICB2YWwgPSB1dGlscy50cmltKGxpbmUuc3Vic3RyKGkgKyAxKSk7XG5cbiAgICBpZiAoa2V5KSB7XG4gICAgICBpZiAocGFyc2VkW2tleV0gJiYgaWdub3JlRHVwbGljYXRlT2YuaW5kZXhPZihrZXkpID49IDApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKGtleSA9PT0gJ3NldC1jb29raWUnKSB7XG4gICAgICAgIHBhcnNlZFtrZXldID0gKHBhcnNlZFtrZXldID8gcGFyc2VkW2tleV0gOiBbXSkuY29uY2F0KFt2YWxdKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBhcnNlZFtrZXldID0gcGFyc2VkW2tleV0gPyBwYXJzZWRba2V5XSArICcsICcgKyB2YWwgOiB2YWw7XG4gICAgICB9XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gcGFyc2VkO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBTeW50YWN0aWMgc3VnYXIgZm9yIGludm9raW5nIGEgZnVuY3Rpb24gYW5kIGV4cGFuZGluZyBhbiBhcnJheSBmb3IgYXJndW1lbnRzLlxuICpcbiAqIENvbW1vbiB1c2UgY2FzZSB3b3VsZCBiZSB0byB1c2UgYEZ1bmN0aW9uLnByb3RvdHlwZS5hcHBseWAuXG4gKlxuICogIGBgYGpzXG4gKiAgZnVuY3Rpb24gZih4LCB5LCB6KSB7fVxuICogIHZhciBhcmdzID0gWzEsIDIsIDNdO1xuICogIGYuYXBwbHkobnVsbCwgYXJncyk7XG4gKiAgYGBgXG4gKlxuICogV2l0aCBgc3ByZWFkYCB0aGlzIGV4YW1wbGUgY2FuIGJlIHJlLXdyaXR0ZW4uXG4gKlxuICogIGBgYGpzXG4gKiAgc3ByZWFkKGZ1bmN0aW9uKHgsIHksIHopIHt9KShbMSwgMiwgM10pO1xuICogIGBgYFxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259XG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gc3ByZWFkKGNhbGxiYWNrKSB7XG4gIHJldHVybiBmdW5jdGlvbiB3cmFwKGFycikge1xuICAgIHJldHVybiBjYWxsYmFjay5hcHBseShudWxsLCBhcnIpO1xuICB9O1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIFZFUlNJT04gPSByZXF1aXJlKCcuLi9lbnYvZGF0YScpLnZlcnNpb247XG5cbnZhciB2YWxpZGF0b3JzID0ge307XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5bJ29iamVjdCcsICdib29sZWFuJywgJ251bWJlcicsICdmdW5jdGlvbicsICdzdHJpbmcnLCAnc3ltYm9sJ10uZm9yRWFjaChmdW5jdGlvbih0eXBlLCBpKSB7XG4gIHZhbGlkYXRvcnNbdHlwZV0gPSBmdW5jdGlvbiB2YWxpZGF0b3IodGhpbmcpIHtcbiAgICByZXR1cm4gdHlwZW9mIHRoaW5nID09PSB0eXBlIHx8ICdhJyArIChpIDwgMSA/ICduICcgOiAnICcpICsgdHlwZTtcbiAgfTtcbn0pO1xuXG52YXIgZGVwcmVjYXRlZFdhcm5pbmdzID0ge307XG5cbi8qKlxuICogVHJhbnNpdGlvbmFsIG9wdGlvbiB2YWxpZGF0b3JcbiAqIEBwYXJhbSB7ZnVuY3Rpb258Ym9vbGVhbj99IHZhbGlkYXRvciAtIHNldCB0byBmYWxzZSBpZiB0aGUgdHJhbnNpdGlvbmFsIG9wdGlvbiBoYXMgYmVlbiByZW1vdmVkXG4gKiBAcGFyYW0ge3N0cmluZz99IHZlcnNpb24gLSBkZXByZWNhdGVkIHZlcnNpb24gLyByZW1vdmVkIHNpbmNlIHZlcnNpb25cbiAqIEBwYXJhbSB7c3RyaW5nP30gbWVzc2FnZSAtIHNvbWUgbWVzc2FnZSB3aXRoIGFkZGl0aW9uYWwgaW5mb1xuICogQHJldHVybnMge2Z1bmN0aW9ufVxuICovXG52YWxpZGF0b3JzLnRyYW5zaXRpb25hbCA9IGZ1bmN0aW9uIHRyYW5zaXRpb25hbCh2YWxpZGF0b3IsIHZlcnNpb24sIG1lc3NhZ2UpIHtcbiAgZnVuY3Rpb24gZm9ybWF0TWVzc2FnZShvcHQsIGRlc2MpIHtcbiAgICByZXR1cm4gJ1tBeGlvcyB2JyArIFZFUlNJT04gKyAnXSBUcmFuc2l0aW9uYWwgb3B0aW9uIFxcJycgKyBvcHQgKyAnXFwnJyArIGRlc2MgKyAobWVzc2FnZSA/ICcuICcgKyBtZXNzYWdlIDogJycpO1xuICB9XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbiAgcmV0dXJuIGZ1bmN0aW9uKHZhbHVlLCBvcHQsIG9wdHMpIHtcbiAgICBpZiAodmFsaWRhdG9yID09PSBmYWxzZSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGZvcm1hdE1lc3NhZ2Uob3B0LCAnIGhhcyBiZWVuIHJlbW92ZWQnICsgKHZlcnNpb24gPyAnIGluICcgKyB2ZXJzaW9uIDogJycpKSk7XG4gICAgfVxuXG4gICAgaWYgKHZlcnNpb24gJiYgIWRlcHJlY2F0ZWRXYXJuaW5nc1tvcHRdKSB7XG4gICAgICBkZXByZWNhdGVkV2FybmluZ3Nbb3B0XSA9IHRydWU7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgY29uc29sZS53YXJuKFxuICAgICAgICBmb3JtYXRNZXNzYWdlKFxuICAgICAgICAgIG9wdCxcbiAgICAgICAgICAnIGhhcyBiZWVuIGRlcHJlY2F0ZWQgc2luY2UgdicgKyB2ZXJzaW9uICsgJyBhbmQgd2lsbCBiZSByZW1vdmVkIGluIHRoZSBuZWFyIGZ1dHVyZSdcbiAgICAgICAgKVxuICAgICAgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdmFsaWRhdG9yID8gdmFsaWRhdG9yKHZhbHVlLCBvcHQsIG9wdHMpIDogdHJ1ZTtcbiAgfTtcbn07XG5cbi8qKlxuICogQXNzZXJ0IG9iamVjdCdzIHByb3BlcnRpZXMgdHlwZVxuICogQHBhcmFtIHtvYmplY3R9IG9wdGlvbnNcbiAqIEBwYXJhbSB7b2JqZWN0fSBzY2hlbWFcbiAqIEBwYXJhbSB7Ym9vbGVhbj99IGFsbG93VW5rbm93blxuICovXG5cbmZ1bmN0aW9uIGFzc2VydE9wdGlvbnMob3B0aW9ucywgc2NoZW1hLCBhbGxvd1Vua25vd24pIHtcbiAgaWYgKHR5cGVvZiBvcHRpb25zICE9PSAnb2JqZWN0Jykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ29wdGlvbnMgbXVzdCBiZSBhbiBvYmplY3QnKTtcbiAgfVxuICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9wdGlvbnMpO1xuICB2YXIgaSA9IGtleXMubGVuZ3RoO1xuICB3aGlsZSAoaS0tID4gMCkge1xuICAgIHZhciBvcHQgPSBrZXlzW2ldO1xuICAgIHZhciB2YWxpZGF0b3IgPSBzY2hlbWFbb3B0XTtcbiAgICBpZiAodmFsaWRhdG9yKSB7XG4gICAgICB2YXIgdmFsdWUgPSBvcHRpb25zW29wdF07XG4gICAgICB2YXIgcmVzdWx0ID0gdmFsdWUgPT09IHVuZGVmaW5lZCB8fCB2YWxpZGF0b3IodmFsdWUsIG9wdCwgb3B0aW9ucyk7XG4gICAgICBpZiAocmVzdWx0ICE9PSB0cnVlKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ29wdGlvbiAnICsgb3B0ICsgJyBtdXN0IGJlICcgKyByZXN1bHQpO1xuICAgICAgfVxuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGlmIChhbGxvd1Vua25vd24gIT09IHRydWUpIHtcbiAgICAgIHRocm93IEVycm9yKCdVbmtub3duIG9wdGlvbiAnICsgb3B0KTtcbiAgICB9XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGFzc2VydE9wdGlvbnM6IGFzc2VydE9wdGlvbnMsXG4gIHZhbGlkYXRvcnM6IHZhbGlkYXRvcnNcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBiaW5kID0gcmVxdWlyZSgnLi9oZWxwZXJzL2JpbmQnKTtcblxuLy8gdXRpbHMgaXMgYSBsaWJyYXJ5IG9mIGdlbmVyaWMgaGVscGVyIGZ1bmN0aW9ucyBub24tc3BlY2lmaWMgdG8gYXhpb3NcblxudmFyIHRvU3RyaW5nID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztcblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhbiBBcnJheVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGFuIEFycmF5LCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNBcnJheSh2YWwpIHtcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkodmFsKTtcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyB1bmRlZmluZWRcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGUgdmFsdWUgaXMgdW5kZWZpbmVkLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNVbmRlZmluZWQodmFsKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsID09PSAndW5kZWZpbmVkJztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIEJ1ZmZlclxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgQnVmZmVyLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNCdWZmZXIodmFsKSB7XG4gIHJldHVybiB2YWwgIT09IG51bGwgJiYgIWlzVW5kZWZpbmVkKHZhbCkgJiYgdmFsLmNvbnN0cnVjdG9yICE9PSBudWxsICYmICFpc1VuZGVmaW5lZCh2YWwuY29uc3RydWN0b3IpXG4gICAgJiYgdHlwZW9mIHZhbC5jb25zdHJ1Y3Rvci5pc0J1ZmZlciA9PT0gJ2Z1bmN0aW9uJyAmJiB2YWwuY29uc3RydWN0b3IuaXNCdWZmZXIodmFsKTtcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhbiBBcnJheUJ1ZmZlclxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGFuIEFycmF5QnVmZmVyLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNBcnJheUJ1ZmZlcih2YWwpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgQXJyYXlCdWZmZXJdJztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIEZvcm1EYXRhXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYW4gRm9ybURhdGEsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0Zvcm1EYXRhKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBGb3JtRGF0YV0nO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgdmlldyBvbiBhbiBBcnJheUJ1ZmZlclxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgdmlldyBvbiBhbiBBcnJheUJ1ZmZlciwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzQXJyYXlCdWZmZXJWaWV3KHZhbCkge1xuICB2YXIgcmVzdWx0O1xuICBpZiAoKHR5cGVvZiBBcnJheUJ1ZmZlciAhPT0gJ3VuZGVmaW5lZCcpICYmIChBcnJheUJ1ZmZlci5pc1ZpZXcpKSB7XG4gICAgcmVzdWx0ID0gQXJyYXlCdWZmZXIuaXNWaWV3KHZhbCk7XG4gIH0gZWxzZSB7XG4gICAgcmVzdWx0ID0gKHZhbCkgJiYgKHZhbC5idWZmZXIpICYmIChpc0FycmF5QnVmZmVyKHZhbC5idWZmZXIpKTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgU3RyaW5nXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBTdHJpbmcsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc1N0cmluZyh2YWwpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWwgPT09ICdzdHJpbmcnO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgTnVtYmVyXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBOdW1iZXIsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc051bWJlcih2YWwpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWwgPT09ICdudW1iZXInO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGFuIE9iamVjdFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGFuIE9iamVjdCwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzT2JqZWN0KHZhbCkge1xuICByZXR1cm4gdmFsICE9PSBudWxsICYmIHR5cGVvZiB2YWwgPT09ICdvYmplY3QnO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgcGxhaW4gT2JqZWN0XG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybiB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIHBsYWluIE9iamVjdCwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzUGxhaW5PYmplY3QodmFsKSB7XG4gIGlmICh0b1N0cmluZy5jYWxsKHZhbCkgIT09ICdbb2JqZWN0IE9iamVjdF0nKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgdmFyIHByb3RvdHlwZSA9IE9iamVjdC5nZXRQcm90b3R5cGVPZih2YWwpO1xuICByZXR1cm4gcHJvdG90eXBlID09PSBudWxsIHx8IHByb3RvdHlwZSA9PT0gT2JqZWN0LnByb3RvdHlwZTtcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIERhdGVcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIERhdGUsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0RhdGUodmFsKSB7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKHZhbCkgPT09ICdbb2JqZWN0IERhdGVdJztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIEZpbGVcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIEZpbGUsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0ZpbGUodmFsKSB7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKHZhbCkgPT09ICdbb2JqZWN0IEZpbGVdJztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIEJsb2JcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIEJsb2IsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0Jsb2IodmFsKSB7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKHZhbCkgPT09ICdbb2JqZWN0IEJsb2JdJztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIEZ1bmN0aW9uXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBGdW5jdGlvbiwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzRnVuY3Rpb24odmFsKSB7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKHZhbCkgPT09ICdbb2JqZWN0IEZ1bmN0aW9uXSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBTdHJlYW1cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIFN0cmVhbSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzU3RyZWFtKHZhbCkge1xuICByZXR1cm4gaXNPYmplY3QodmFsKSAmJiBpc0Z1bmN0aW9uKHZhbC5waXBlKTtcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIFVSTFNlYXJjaFBhcmFtcyBvYmplY3RcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIFVSTFNlYXJjaFBhcmFtcyBvYmplY3QsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc1VSTFNlYXJjaFBhcmFtcyh2YWwpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgVVJMU2VhcmNoUGFyYW1zXSc7XG59XG5cbi8qKlxuICogVHJpbSBleGNlc3Mgd2hpdGVzcGFjZSBvZmYgdGhlIGJlZ2lubmluZyBhbmQgZW5kIG9mIGEgc3RyaW5nXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0ciBUaGUgU3RyaW5nIHRvIHRyaW1cbiAqIEByZXR1cm5zIHtTdHJpbmd9IFRoZSBTdHJpbmcgZnJlZWQgb2YgZXhjZXNzIHdoaXRlc3BhY2VcbiAqL1xuZnVuY3Rpb24gdHJpbShzdHIpIHtcbiAgcmV0dXJuIHN0ci50cmltID8gc3RyLnRyaW0oKSA6IHN0ci5yZXBsYWNlKC9eXFxzK3xcXHMrJC9nLCAnJyk7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIHdlJ3JlIHJ1bm5pbmcgaW4gYSBzdGFuZGFyZCBicm93c2VyIGVudmlyb25tZW50XG4gKlxuICogVGhpcyBhbGxvd3MgYXhpb3MgdG8gcnVuIGluIGEgd2ViIHdvcmtlciwgYW5kIHJlYWN0LW5hdGl2ZS5cbiAqIEJvdGggZW52aXJvbm1lbnRzIHN1cHBvcnQgWE1MSHR0cFJlcXVlc3QsIGJ1dCBub3QgZnVsbHkgc3RhbmRhcmQgZ2xvYmFscy5cbiAqXG4gKiB3ZWIgd29ya2VyczpcbiAqICB0eXBlb2Ygd2luZG93IC0+IHVuZGVmaW5lZFxuICogIHR5cGVvZiBkb2N1bWVudCAtPiB1bmRlZmluZWRcbiAqXG4gKiByZWFjdC1uYXRpdmU6XG4gKiAgbmF2aWdhdG9yLnByb2R1Y3QgLT4gJ1JlYWN0TmF0aXZlJ1xuICogbmF0aXZlc2NyaXB0XG4gKiAgbmF2aWdhdG9yLnByb2R1Y3QgLT4gJ05hdGl2ZVNjcmlwdCcgb3IgJ05TJ1xuICovXG5mdW5jdGlvbiBpc1N0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgaWYgKHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnICYmIChuYXZpZ2F0b3IucHJvZHVjdCA9PT0gJ1JlYWN0TmF0aXZlJyB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hdmlnYXRvci5wcm9kdWN0ID09PSAnTmF0aXZlU2NyaXB0JyB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hdmlnYXRvci5wcm9kdWN0ID09PSAnTlMnKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICByZXR1cm4gKFxuICAgIHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmXG4gICAgdHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJ1xuICApO1xufVxuXG4vKipcbiAqIEl0ZXJhdGUgb3ZlciBhbiBBcnJheSBvciBhbiBPYmplY3QgaW52b2tpbmcgYSBmdW5jdGlvbiBmb3IgZWFjaCBpdGVtLlxuICpcbiAqIElmIGBvYmpgIGlzIGFuIEFycmF5IGNhbGxiYWNrIHdpbGwgYmUgY2FsbGVkIHBhc3NpbmdcbiAqIHRoZSB2YWx1ZSwgaW5kZXgsIGFuZCBjb21wbGV0ZSBhcnJheSBmb3IgZWFjaCBpdGVtLlxuICpcbiAqIElmICdvYmonIGlzIGFuIE9iamVjdCBjYWxsYmFjayB3aWxsIGJlIGNhbGxlZCBwYXNzaW5nXG4gKiB0aGUgdmFsdWUsIGtleSwgYW5kIGNvbXBsZXRlIG9iamVjdCBmb3IgZWFjaCBwcm9wZXJ0eS5cbiAqXG4gKiBAcGFyYW0ge09iamVjdHxBcnJheX0gb2JqIFRoZSBvYmplY3QgdG8gaXRlcmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gVGhlIGNhbGxiYWNrIHRvIGludm9rZSBmb3IgZWFjaCBpdGVtXG4gKi9cbmZ1bmN0aW9uIGZvckVhY2gob2JqLCBmbikge1xuICAvLyBEb24ndCBib3RoZXIgaWYgbm8gdmFsdWUgcHJvdmlkZWRcbiAgaWYgKG9iaiA9PT0gbnVsbCB8fCB0eXBlb2Ygb2JqID09PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIEZvcmNlIGFuIGFycmF5IGlmIG5vdCBhbHJlYWR5IHNvbWV0aGluZyBpdGVyYWJsZVxuICBpZiAodHlwZW9mIG9iaiAhPT0gJ29iamVjdCcpIHtcbiAgICAvKmVzbGludCBuby1wYXJhbS1yZWFzc2lnbjowKi9cbiAgICBvYmogPSBbb2JqXTtcbiAgfVxuXG4gIGlmIChpc0FycmF5KG9iaikpIHtcbiAgICAvLyBJdGVyYXRlIG92ZXIgYXJyYXkgdmFsdWVzXG4gICAgZm9yICh2YXIgaSA9IDAsIGwgPSBvYmoubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICBmbi5jYWxsKG51bGwsIG9ialtpXSwgaSwgb2JqKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgLy8gSXRlcmF0ZSBvdmVyIG9iamVjdCBrZXlzXG4gICAgZm9yICh2YXIga2V5IGluIG9iaikge1xuICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHtcbiAgICAgICAgZm4uY2FsbChudWxsLCBvYmpba2V5XSwga2V5LCBvYmopO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIEFjY2VwdHMgdmFyYXJncyBleHBlY3RpbmcgZWFjaCBhcmd1bWVudCB0byBiZSBhbiBvYmplY3QsIHRoZW5cbiAqIGltbXV0YWJseSBtZXJnZXMgdGhlIHByb3BlcnRpZXMgb2YgZWFjaCBvYmplY3QgYW5kIHJldHVybnMgcmVzdWx0LlxuICpcbiAqIFdoZW4gbXVsdGlwbGUgb2JqZWN0cyBjb250YWluIHRoZSBzYW1lIGtleSB0aGUgbGF0ZXIgb2JqZWN0IGluXG4gKiB0aGUgYXJndW1lbnRzIGxpc3Qgd2lsbCB0YWtlIHByZWNlZGVuY2UuXG4gKlxuICogRXhhbXBsZTpcbiAqXG4gKiBgYGBqc1xuICogdmFyIHJlc3VsdCA9IG1lcmdlKHtmb286IDEyM30sIHtmb286IDQ1Nn0pO1xuICogY29uc29sZS5sb2cocmVzdWx0LmZvbyk7IC8vIG91dHB1dHMgNDU2XG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqMSBPYmplY3QgdG8gbWVyZ2VcbiAqIEByZXR1cm5zIHtPYmplY3R9IFJlc3VsdCBvZiBhbGwgbWVyZ2UgcHJvcGVydGllc1xuICovXG5mdW5jdGlvbiBtZXJnZSgvKiBvYmoxLCBvYmoyLCBvYmozLCAuLi4gKi8pIHtcbiAgdmFyIHJlc3VsdCA9IHt9O1xuICBmdW5jdGlvbiBhc3NpZ25WYWx1ZSh2YWwsIGtleSkge1xuICAgIGlmIChpc1BsYWluT2JqZWN0KHJlc3VsdFtrZXldKSAmJiBpc1BsYWluT2JqZWN0KHZhbCkpIHtcbiAgICAgIHJlc3VsdFtrZXldID0gbWVyZ2UocmVzdWx0W2tleV0sIHZhbCk7XG4gICAgfSBlbHNlIGlmIChpc1BsYWluT2JqZWN0KHZhbCkpIHtcbiAgICAgIHJlc3VsdFtrZXldID0gbWVyZ2Uoe30sIHZhbCk7XG4gICAgfSBlbHNlIGlmIChpc0FycmF5KHZhbCkpIHtcbiAgICAgIHJlc3VsdFtrZXldID0gdmFsLnNsaWNlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlc3VsdFtrZXldID0gdmFsO1xuICAgIH1cbiAgfVxuXG4gIGZvciAodmFyIGkgPSAwLCBsID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIGZvckVhY2goYXJndW1lbnRzW2ldLCBhc3NpZ25WYWx1ZSk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBFeHRlbmRzIG9iamVjdCBhIGJ5IG11dGFibHkgYWRkaW5nIHRvIGl0IHRoZSBwcm9wZXJ0aWVzIG9mIG9iamVjdCBiLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBhIFRoZSBvYmplY3QgdG8gYmUgZXh0ZW5kZWRcbiAqIEBwYXJhbSB7T2JqZWN0fSBiIFRoZSBvYmplY3QgdG8gY29weSBwcm9wZXJ0aWVzIGZyb21cbiAqIEBwYXJhbSB7T2JqZWN0fSB0aGlzQXJnIFRoZSBvYmplY3QgdG8gYmluZCBmdW5jdGlvbiB0b1xuICogQHJldHVybiB7T2JqZWN0fSBUaGUgcmVzdWx0aW5nIHZhbHVlIG9mIG9iamVjdCBhXG4gKi9cbmZ1bmN0aW9uIGV4dGVuZChhLCBiLCB0aGlzQXJnKSB7XG4gIGZvckVhY2goYiwgZnVuY3Rpb24gYXNzaWduVmFsdWUodmFsLCBrZXkpIHtcbiAgICBpZiAodGhpc0FyZyAmJiB0eXBlb2YgdmFsID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBhW2tleV0gPSBiaW5kKHZhbCwgdGhpc0FyZyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFba2V5XSA9IHZhbDtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gYTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgYnl0ZSBvcmRlciBtYXJrZXIuIFRoaXMgY2F0Y2hlcyBFRiBCQiBCRiAodGhlIFVURi04IEJPTSlcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gY29udGVudCB3aXRoIEJPTVxuICogQHJldHVybiB7c3RyaW5nfSBjb250ZW50IHZhbHVlIHdpdGhvdXQgQk9NXG4gKi9cbmZ1bmN0aW9uIHN0cmlwQk9NKGNvbnRlbnQpIHtcbiAgaWYgKGNvbnRlbnQuY2hhckNvZGVBdCgwKSA9PT0gMHhGRUZGKSB7XG4gICAgY29udGVudCA9IGNvbnRlbnQuc2xpY2UoMSk7XG4gIH1cbiAgcmV0dXJuIGNvbnRlbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBpc0FycmF5OiBpc0FycmF5LFxuICBpc0FycmF5QnVmZmVyOiBpc0FycmF5QnVmZmVyLFxuICBpc0J1ZmZlcjogaXNCdWZmZXIsXG4gIGlzRm9ybURhdGE6IGlzRm9ybURhdGEsXG4gIGlzQXJyYXlCdWZmZXJWaWV3OiBpc0FycmF5QnVmZmVyVmlldyxcbiAgaXNTdHJpbmc6IGlzU3RyaW5nLFxuICBpc051bWJlcjogaXNOdW1iZXIsXG4gIGlzT2JqZWN0OiBpc09iamVjdCxcbiAgaXNQbGFpbk9iamVjdDogaXNQbGFpbk9iamVjdCxcbiAgaXNVbmRlZmluZWQ6IGlzVW5kZWZpbmVkLFxuICBpc0RhdGU6IGlzRGF0ZSxcbiAgaXNGaWxlOiBpc0ZpbGUsXG4gIGlzQmxvYjogaXNCbG9iLFxuICBpc0Z1bmN0aW9uOiBpc0Z1bmN0aW9uLFxuICBpc1N0cmVhbTogaXNTdHJlYW0sXG4gIGlzVVJMU2VhcmNoUGFyYW1zOiBpc1VSTFNlYXJjaFBhcmFtcyxcbiAgaXNTdGFuZGFyZEJyb3dzZXJFbnY6IGlzU3RhbmRhcmRCcm93c2VyRW52LFxuICBmb3JFYWNoOiBmb3JFYWNoLFxuICBtZXJnZTogbWVyZ2UsXG4gIGV4dGVuZDogZXh0ZW5kLFxuICB0cmltOiB0cmltLFxuICBzdHJpcEJPTTogc3RyaXBCT01cbn07XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5mb290ZXItTlZVdUgge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcXHJcXG4gICAgd2lkdGg6IDgwJTtcXHJcXG4gICAgbWFyZ2luOiAwIGF1dG87XFxyXFxuICAgIGJvcmRlci10b3A6IDJweCBzb2xpZCByZ2IoNDAsIDEyOSwgMjA2KTtcXHJcXG4gICAgcGFkZGluZzogMTBweCAzMHB4O1xcclxcbn1cXHJcXG4ubWVudS1mb290ZXItTTBVWG0ge1xcclxcbiAgICB3aWR0aDogMjAwcHg7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxufVxcclxcblxcclxcbi5ibG9jay1tZW51LUlpYktzIHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XFxyXFxufVxcclxcbi5tZW51LWl0ZW0tbmVUYk8ge1xcclxcbiAgICBtYXJnaW46IDVweDtcXHJcXG4gICAgY29sb3I6ICMxMjUzOGI7XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4zcztcXHJcXG59XFxyXFxuLm1lbnUtaXRlbS1uZVRiTzpob3ZlciB7XFxyXFxuICAgIGNvbG9yOiAjMDcyYTQ4O1xcclxcbn1cXHJcXG4uYmxvY2staW5mby1oSE9RUyB7XFxyXFxuICAgIHRleHQtYWxpZ246IGxlZnQ7XFxyXFxufVxcclxcbi5pbWFnZUluZm9Db250YWN0cy1zNFZnSSB7XFxyXFxuICAgIHdpZHRoOiAyM3B4O1xcclxcbiAgICBoZWlnaHQ6IDIzcHg7XFxyXFxuICAgIG1hcmdpbi1yaWdodDogNXB4O1xcclxcbn1cXHJcXG4uaW5mby1maWVsZC1QYXZjdyB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIG1hcmdpbjogNXB4O1xcclxcbn1cXHJcXG4uZG93bi10ZXh0LXZuMmNDIHtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgICBjb2xvcjogIzEyNTM4YjtcXHJcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcclxcbiAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAwLjNzO1xcclxcbn1cXHJcXG4uZG93bi10ZXh0LXZuMmNDOmhvdmVyIHtcXHJcXG4gICAgY29sb3I6ICMwNzJhNDg7XFxyXFxufVxcclxcbi5kb3duLWJsb2NrLWZvb3Rlci1YOHdocCB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xcclxcbn1cXHJcXG5AbWVkaWEgKG1heC13aWR0aDogNTAwcHgpIHtcXHJcXG4gICAgLmZvb3Rlci1OVlV1SCB7XFxyXFxuICAgICAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgfVxcclxcbiAgICAubWVudS1mb290ZXItTTBVWG0ge1xcclxcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAgfVxcclxcbiAgICAuaW5mby1maWVsZC1QYXZjdyB7XFxyXFxuICAgICAgICBtYXJnaW4tdG9wOiA1cHg7XFxyXFxuICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xcclxcbiAgICB9XFxyXFxufVxcclxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL0FwcC9Gb290ZXIvc3R5bGVzLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGFBQWE7SUFDYiw2QkFBNkI7SUFDN0IsVUFBVTtJQUNWLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxZQUFZO0lBQ1osYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsdUJBQXVCO0FBQzNCO0FBQ0E7SUFDSSxXQUFXO0lBQ1gsY0FBYztJQUNkLGVBQWU7SUFDZix5QkFBeUI7QUFDN0I7QUFDQTtJQUNJLGNBQWM7QUFDbEI7QUFDQTtJQUNJLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixpQkFBaUI7QUFDckI7QUFDQTtJQUNJLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsV0FBVztBQUNmO0FBQ0E7SUFDSSxrQkFBa0I7SUFDbEIsY0FBYztJQUNkLGVBQWU7SUFDZix5QkFBeUI7QUFDN0I7QUFDQTtJQUNJLGNBQWM7QUFDbEI7QUFDQTtJQUNJLGFBQWE7SUFDYiw2QkFBNkI7QUFDakM7QUFDQTtJQUNJO1FBQ0ksV0FBVztJQUNmO0lBQ0E7UUFDSSxzQkFBc0I7SUFDMUI7SUFDQTtRQUNJLGVBQWU7UUFDZixtQkFBbUI7SUFDdkI7QUFDSlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuZm9vdGVyIHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XFxyXFxuICAgIHdpZHRoOiA4MCU7XFxyXFxuICAgIG1hcmdpbjogMCBhdXRvO1xcclxcbiAgICBib3JkZXItdG9wOiAycHggc29saWQgcmdiKDQwLCAxMjksIDIwNik7XFxyXFxuICAgIHBhZGRpbmc6IDEwcHggMzBweDtcXHJcXG59XFxyXFxuLm1lbnUtZm9vdGVyIHtcXHJcXG4gICAgd2lkdGg6IDIwMHB4O1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbn1cXHJcXG5cXHJcXG4uYmxvY2stbWVudSB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xcclxcbn1cXHJcXG4ubWVudS1pdGVtIHtcXHJcXG4gICAgbWFyZ2luOiA1cHg7XFxyXFxuICAgIGNvbG9yOiAjMTI1MzhiO1xcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDAuM3M7XFxyXFxufVxcclxcbi5tZW51LWl0ZW06aG92ZXIge1xcclxcbiAgICBjb2xvcjogIzA3MmE0ODtcXHJcXG59XFxyXFxuLmJsb2NrLWluZm8ge1xcclxcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xcclxcbn1cXHJcXG4uaW1hZ2VJbmZvQ29udGFjdHMge1xcclxcbiAgICB3aWR0aDogMjNweDtcXHJcXG4gICAgaGVpZ2h0OiAyM3B4O1xcclxcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcXHJcXG59XFxyXFxuLmluZm8tZmllbGQge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBtYXJnaW46IDVweDtcXHJcXG59XFxyXFxuLmRvd24tdGV4dCB7XFxyXFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG4gICAgY29sb3I6ICMxMjUzOGI7XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4zcztcXHJcXG59XFxyXFxuLmRvd24tdGV4dDpob3ZlciB7XFxyXFxuICAgIGNvbG9yOiAjMDcyYTQ4O1xcclxcbn1cXHJcXG4uZG93bi1ibG9jay1mb290ZXIge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcXHJcXG59XFxyXFxuQG1lZGlhIChtYXgtd2lkdGg6IDUwMHB4KSB7XFxyXFxuICAgIC5mb290ZXIge1xcclxcbiAgICAgICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIH1cXHJcXG4gICAgLm1lbnUtZm9vdGVyIHtcXHJcXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgIH1cXHJcXG4gICAgLmluZm8tZmllbGQge1xcclxcbiAgICAgICAgbWFyZ2luLXRvcDogNXB4O1xcclxcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcXHJcXG4gICAgfVxcclxcbn1cXHJcXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmxvY2FscyA9IHtcblx0XCJmb290ZXJcIjogXCJmb290ZXItTlZVdUhcIixcblx0XCJtZW51LWZvb3RlclwiOiBcIm1lbnUtZm9vdGVyLU0wVVhtXCIsXG5cdFwibWVudUZvb3RlclwiOiBcIm1lbnUtZm9vdGVyLU0wVVhtXCIsXG5cdFwiYmxvY2stbWVudVwiOiBcImJsb2NrLW1lbnUtSWliS3NcIixcblx0XCJibG9ja01lbnVcIjogXCJibG9jay1tZW51LUlpYktzXCIsXG5cdFwibWVudS1pdGVtXCI6IFwibWVudS1pdGVtLW5lVGJPXCIsXG5cdFwibWVudUl0ZW1cIjogXCJtZW51LWl0ZW0tbmVUYk9cIixcblx0XCJibG9jay1pbmZvXCI6IFwiYmxvY2staW5mby1oSE9RU1wiLFxuXHRcImJsb2NrSW5mb1wiOiBcImJsb2NrLWluZm8taEhPUVNcIixcblx0XCJpbWFnZUluZm9Db250YWN0c1wiOiBcImltYWdlSW5mb0NvbnRhY3RzLXM0VmdJXCIsXG5cdFwiaW5mby1maWVsZFwiOiBcImluZm8tZmllbGQtUGF2Y3dcIixcblx0XCJpbmZvRmllbGRcIjogXCJpbmZvLWZpZWxkLVBhdmN3XCIsXG5cdFwiZG93bi10ZXh0XCI6IFwiZG93bi10ZXh0LXZuMmNDXCIsXG5cdFwiZG93blRleHRcIjogXCJkb3duLXRleHQtdm4yY0NcIixcblx0XCJkb3duLWJsb2NrLWZvb3RlclwiOiBcImRvd24tYmxvY2stZm9vdGVyLVg4d2hwXCIsXG5cdFwiZG93bkJsb2NrRm9vdGVyXCI6IFwiZG93bi1ibG9jay1mb290ZXItWDh3aHBcIlxufTtcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIuaGVhZGVyLWNybFpOIHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcclxcbiAgICB3aWR0aDogODAlO1xcclxcbiAgICBtYXJnaW46IDAgYXV0bztcXHJcXG59XFxyXFxuLmJsb2NrLWxvZ28tejlkbVkge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbn1cXHJcXG4uaW1hZ2UtbG9nby1qZHpZMSB7XFxyXFxuICAgIHdpZHRoOiAxMDBweDtcXHJcXG4gICAgaGVpZ2h0OiAxMDVweDtcXHJcXG59XFxyXFxuLnRleHQtYmxvY2stUmFFOFQge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAgcGFkZGluZy1pbmxpbmU6IDEwcHg7XFxyXFxufVxcclxcbi50ZXh0LWxvZ28tdXAtQVg1ejIge1xcclxcbiAgICBmb250LXNpemU6IDI4cHg7XFxyXFxufVxcclxcbi50ZXh0LWxvZ28tZG93bi1KQ2EzSiB7XFxyXFxuICAgIGZvbnQtc2l6ZTogMzBweDtcXHJcXG59XFxyXFxuLmltYWdlLWluZm8tY29udGFjdHMtbnBPMmYge1xcclxcbiAgICB3aWR0aDogMzBweDtcXHJcXG4gICAgaGVpZ2h0OiAzMHB4O1xcclxcbn1cXHJcXG4uYmxvY2staW5mby1jb250YWN0cy1hblhLcCB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxufVxcclxcbi5pbmZvLW51bWJlci1BYlhTZCB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIG1hcmdpbi10b3A6IDEwcHg7XFxyXFxufVxcclxcbi50ZXh0LXRlbGVwaG9uZS1uOXJEbiB7XFxyXFxuICAgIHBhZGRpbmc6IDEwcHg7XFxyXFxuICAgIGZvbnQtc2l6ZTogMTZweDtcXHJcXG59XFxyXFxuLm51bWJlci1waG9uZS1vV3ZDayB7XFxyXFxuICAgIGNvbG9yOiByZ2IoNDAsIDEyOSwgMjA2KTtcXHJcXG59XFxyXFxuLmJ1dHRvbnMtYmxvY2steTV0Z3Yge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBtYXJnaW4tdG9wOiA1cHg7XFxyXFxuICAgIHdpZHRoOiA1NTBweDtcXHJcXG59XFxyXFxuLmJsb2NrLW51bWJlci1ocEtNWiB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxufVxcclxcbi5yZXF1ZXN0LWNvbnRhaW5lci14MzkxZ3tcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAgd2lkdGg6IDMyNXB4O1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjExIDIyOCAyNDUpO1xcclxcbiAgICBib3gtc2hhZG93OiAwcHggMHB4IDhweCByZ2IoNDAsIDEyOSwgMjA2KTtcXHJcXG4gICAgcGFkZGluZzogMTBweDtcXHJcXG4gICAgY29sb3I6ICMxYjFiMWI7XFxyXFxufVxcclxcbi5yZXF1ZXN0LWJ1dHRvbnMtY29udGFpbmVyLVlnS2oye1xcclxcbiAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XFxyXFxuICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgbWFyZ2luLXRvcDogYXV0bztcXHJcXG59XFxyXFxuXFxyXFxuLm9yZGVyLWNvbnRhaW5lci1mMEs0MCB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIHBhZGRpbmc6IDBweCAxMCU7XFxyXFxufVxcclxcbi5vcmRlci1pdGVtLUJKb0ZtIHtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogMTVweDtcXHJcXG4gICAgbWFyZ2luLWJvdHRvbTogN3B4O1xcclxcbn1cXHJcXG4uZmllbGQtZmxleC1SaUZXbiB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xcclxcbn1cXHJcXG5AbWVkaWEgKG1heC13aWR0aDogNTAwcHgpIHtcXHJcXG4gICAgLmhlYWRlci1jcmxaTiB7XFxyXFxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAgICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICB9XFxyXFxuICAgIC5pbWFnZS1sb2dvLWpkelkxIHtcXHJcXG4gICAgICAgIGhlaWdodDogMTEwcHg7XFxyXFxuICAgIH1cXHJcXG4gICAgLnRleHQtbG9nby11cC1BWDV6MiB7XFxyXFxuICAgICAgICBmb250LXNpemU6IDMwcHg7XFxyXFxuICAgIH1cXHJcXG4gICAgLnRleHQtbG9nby1kb3duLUpDYTNKIHtcXHJcXG4gICAgICAgIGZvbnQtc2l6ZTogMzBweDtcXHJcXG4gICAgfVxcclxcbiAgICAuaW5mby1udW1iZXItQWJYU2Qge1xcclxcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAgICAgIG1hcmdpbi10b3A6IDVweDtcXHJcXG4gICAgfVxcclxcbiAgICAuaW1hZ2UtaW5mby1jb250YWN0cy1ucE8yZiB7XFxyXFxuICAgICAgICB3aWR0aDogMjVweDtcXHJcXG4gICAgICAgIGhlaWdodDogMjVweDtcXHJcXG4gICAgfVxcclxcbiAgICAuYmxvY2staW5mby1jb250YWN0cy1hblhLcCB7XFxyXFxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uLXJldmVyc2U7XFxyXFxuICAgIH1cXHJcXG4gICAgLnRleHQtdGVsZXBob25lLW45ckRuIHtcXHJcXG4gICAgICAgIGZvbnQtc2l6ZTogMTdweDtcXHJcXG4gICAgfVxcclxcbiAgICAuYnV0dG9ucy1ibG9jay15NXRndiB7XFxyXFxuICAgICAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgfVxcclxcbiAgICAudGV4dC1ibG9jay1SYUU4VCB7XFxyXFxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxuICAgIH1cXHJcXG59XFxyXFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vQXBwL0hlYWRlci9zdHlsZXMuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksYUFBYTtJQUNiLDhCQUE4QjtJQUM5QixVQUFVO0lBQ1YsY0FBYztBQUNsQjtBQUNBO0lBQ0ksYUFBYTtBQUNqQjtBQUNBO0lBQ0ksWUFBWTtJQUNaLGFBQWE7QUFDakI7QUFDQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixvQkFBb0I7QUFDeEI7QUFDQTtJQUNJLGVBQWU7QUFDbkI7QUFDQTtJQUNJLGVBQWU7QUFDbkI7QUFDQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0FBQ2hCO0FBQ0E7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLG1CQUFtQjtBQUN2QjtBQUNBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLGFBQWE7SUFDYixlQUFlO0FBQ25CO0FBQ0E7SUFDSSx3QkFBd0I7QUFDNUI7QUFDQTtJQUNJLGFBQWE7SUFDYixlQUFlO0lBQ2YsWUFBWTtBQUNoQjtBQUNBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtBQUN2QjtBQUNBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixzQkFBc0I7SUFDdEIsWUFBWTtJQUNaLGtDQUFrQztJQUNsQyx5Q0FBeUM7SUFDekMsYUFBYTtJQUNiLGNBQWM7QUFDbEI7QUFDQTtJQUNJLFdBQVc7SUFDWCxhQUFhO0lBQ2IsNkJBQTZCO0lBQzdCLHFCQUFxQjtJQUNyQixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLG1CQUFtQjtJQUNuQixnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLG1CQUFtQjtJQUNuQixrQkFBa0I7QUFDdEI7QUFDQTtJQUNJLGFBQWE7SUFDYiw2QkFBNkI7SUFDN0IsbUJBQW1CO0lBQ25CLHNCQUFzQjtJQUN0QixnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJO1FBQ0ksYUFBYTtRQUNiLHNCQUFzQjtRQUN0QixXQUFXO0lBQ2Y7SUFDQTtRQUNJLGFBQWE7SUFDakI7SUFDQTtRQUNJLGVBQWU7SUFDbkI7SUFDQTtRQUNJLGVBQWU7SUFDbkI7SUFDQTtRQUNJLHNCQUFzQjtRQUN0QixlQUFlO0lBQ25CO0lBQ0E7UUFDSSxXQUFXO1FBQ1gsWUFBWTtJQUNoQjtJQUNBO1FBQ0ksOEJBQThCO0lBQ2xDO0lBQ0E7UUFDSSxlQUFlO0lBQ25CO0lBQ0E7UUFDSSxXQUFXO0lBQ2Y7SUFDQTtRQUNJLGtCQUFrQjtJQUN0QjtBQUNKXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5oZWFkZXIge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxyXFxuICAgIHdpZHRoOiA4MCU7XFxyXFxuICAgIG1hcmdpbjogMCBhdXRvO1xcclxcbn1cXHJcXG4uYmxvY2stbG9nbyB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxufVxcclxcbi5pbWFnZS1sb2dvIHtcXHJcXG4gICAgd2lkdGg6IDEwMHB4O1xcclxcbiAgICBoZWlnaHQ6IDEwNXB4O1xcclxcbn1cXHJcXG4udGV4dC1ibG9jayB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBwYWRkaW5nLWlubGluZTogMTBweDtcXHJcXG59XFxyXFxuLnRleHQtbG9nby11cCB7XFxyXFxuICAgIGZvbnQtc2l6ZTogMjhweDtcXHJcXG59XFxyXFxuLnRleHQtbG9nby1kb3duIHtcXHJcXG4gICAgZm9udC1zaXplOiAzMHB4O1xcclxcbn1cXHJcXG4uaW1hZ2UtaW5mby1jb250YWN0cyB7XFxyXFxuICAgIHdpZHRoOiAzMHB4O1xcclxcbiAgICBoZWlnaHQ6IDMwcHg7XFxyXFxufVxcclxcbi5ibG9jay1pbmZvLWNvbnRhY3RzIHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG59XFxyXFxuLmluZm8tbnVtYmVyIHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAgbWFyZ2luLXRvcDogMTBweDtcXHJcXG59XFxyXFxuLnRleHQtdGVsZXBob25lIHtcXHJcXG4gICAgcGFkZGluZzogMTBweDtcXHJcXG4gICAgZm9udC1zaXplOiAxNnB4O1xcclxcbn1cXHJcXG4ubnVtYmVyLXBob25lIHtcXHJcXG4gICAgY29sb3I6IHJnYig0MCwgMTI5LCAyMDYpO1xcclxcbn1cXHJcXG4uYnV0dG9ucy1ibG9jayB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIG1hcmdpbi10b3A6IDVweDtcXHJcXG4gICAgd2lkdGg6IDU1MHB4O1xcclxcbn1cXHJcXG4uYmxvY2stbnVtYmVyIHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG59XFxyXFxuLnJlcXVlc3QtY29udGFpbmVye1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICB3aWR0aDogMzI1cHg7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMTEgMjI4IDI0NSk7XFxyXFxuICAgIGJveC1zaGFkb3c6IDBweCAwcHggOHB4IHJnYig0MCwgMTI5LCAyMDYpO1xcclxcbiAgICBwYWRkaW5nOiAxMHB4O1xcclxcbiAgICBjb2xvcjogIzFiMWIxYjtcXHJcXG59XFxyXFxuLnJlcXVlc3QtYnV0dG9ucy1jb250YWluZXJ7XFxyXFxuICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcXHJcXG4gICAgYWxpZ24tY29udGVudDogY2VudGVyO1xcclxcbiAgICBtYXJnaW4tdG9wOiBhdXRvO1xcclxcbn1cXHJcXG5cXHJcXG4ub3JkZXItY29udGFpbmVyIHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAgcGFkZGluZzogMHB4IDEwJTtcXHJcXG59XFxyXFxuLm9yZGVyLWl0ZW0ge1xcclxcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xcclxcbiAgICBtYXJnaW4tYm90dG9tOiA3cHg7XFxyXFxufVxcclxcbi5maWVsZC1mbGV4IHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgIG1hcmdpbi10b3A6IDE1cHg7XFxyXFxufVxcclxcbkBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xcclxcbiAgICAuaGVhZGVyIHtcXHJcXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICAgICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIH1cXHJcXG4gICAgLmltYWdlLWxvZ28ge1xcclxcbiAgICAgICAgaGVpZ2h0OiAxMTBweDtcXHJcXG4gICAgfVxcclxcbiAgICAudGV4dC1sb2dvLXVwIHtcXHJcXG4gICAgICAgIGZvbnQtc2l6ZTogMzBweDtcXHJcXG4gICAgfVxcclxcbiAgICAudGV4dC1sb2dvLWRvd24ge1xcclxcbiAgICAgICAgZm9udC1zaXplOiAzMHB4O1xcclxcbiAgICB9XFxyXFxuICAgIC5pbmZvLW51bWJlciB7XFxyXFxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICAgICAgbWFyZ2luLXRvcDogNXB4O1xcclxcbiAgICB9XFxyXFxuICAgIC5pbWFnZS1pbmZvLWNvbnRhY3RzIHtcXHJcXG4gICAgICAgIHdpZHRoOiAyNXB4O1xcclxcbiAgICAgICAgaGVpZ2h0OiAyNXB4O1xcclxcbiAgICB9XFxyXFxuICAgIC5ibG9jay1pbmZvLWNvbnRhY3RzIHtcXHJcXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4tcmV2ZXJzZTtcXHJcXG4gICAgfVxcclxcbiAgICAudGV4dC10ZWxlcGhvbmUge1xcclxcbiAgICAgICAgZm9udC1zaXplOiAxN3B4O1xcclxcbiAgICB9XFxyXFxuICAgIC5idXR0b25zLWJsb2NrIHtcXHJcXG4gICAgICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICB9XFxyXFxuICAgIC50ZXh0LWJsb2NrIHtcXHJcXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG4gICAgfVxcclxcbn1cXHJcXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmxvY2FscyA9IHtcblx0XCJoZWFkZXJcIjogXCJoZWFkZXItY3JsWk5cIixcblx0XCJibG9jay1sb2dvXCI6IFwiYmxvY2stbG9nby16OWRtWVwiLFxuXHRcImJsb2NrTG9nb1wiOiBcImJsb2NrLWxvZ28tejlkbVlcIixcblx0XCJpbWFnZS1sb2dvXCI6IFwiaW1hZ2UtbG9nby1qZHpZMVwiLFxuXHRcImltYWdlTG9nb1wiOiBcImltYWdlLWxvZ28tamR6WTFcIixcblx0XCJ0ZXh0LWJsb2NrXCI6IFwidGV4dC1ibG9jay1SYUU4VFwiLFxuXHRcInRleHRCbG9ja1wiOiBcInRleHQtYmxvY2stUmFFOFRcIixcblx0XCJ0ZXh0LWxvZ28tdXBcIjogXCJ0ZXh0LWxvZ28tdXAtQVg1ejJcIixcblx0XCJ0ZXh0TG9nb1VwXCI6IFwidGV4dC1sb2dvLXVwLUFYNXoyXCIsXG5cdFwidGV4dC1sb2dvLWRvd25cIjogXCJ0ZXh0LWxvZ28tZG93bi1KQ2EzSlwiLFxuXHRcInRleHRMb2dvRG93blwiOiBcInRleHQtbG9nby1kb3duLUpDYTNKXCIsXG5cdFwiaW1hZ2UtaW5mby1jb250YWN0c1wiOiBcImltYWdlLWluZm8tY29udGFjdHMtbnBPMmZcIixcblx0XCJpbWFnZUluZm9Db250YWN0c1wiOiBcImltYWdlLWluZm8tY29udGFjdHMtbnBPMmZcIixcblx0XCJibG9jay1pbmZvLWNvbnRhY3RzXCI6IFwiYmxvY2staW5mby1jb250YWN0cy1hblhLcFwiLFxuXHRcImJsb2NrSW5mb0NvbnRhY3RzXCI6IFwiYmxvY2staW5mby1jb250YWN0cy1hblhLcFwiLFxuXHRcImluZm8tbnVtYmVyXCI6IFwiaW5mby1udW1iZXItQWJYU2RcIixcblx0XCJpbmZvTnVtYmVyXCI6IFwiaW5mby1udW1iZXItQWJYU2RcIixcblx0XCJ0ZXh0LXRlbGVwaG9uZVwiOiBcInRleHQtdGVsZXBob25lLW45ckRuXCIsXG5cdFwidGV4dFRlbGVwaG9uZVwiOiBcInRleHQtdGVsZXBob25lLW45ckRuXCIsXG5cdFwibnVtYmVyLXBob25lXCI6IFwibnVtYmVyLXBob25lLW9XdkNrXCIsXG5cdFwibnVtYmVyUGhvbmVcIjogXCJudW1iZXItcGhvbmUtb1d2Q2tcIixcblx0XCJidXR0b25zLWJsb2NrXCI6IFwiYnV0dG9ucy1ibG9jay15NXRndlwiLFxuXHRcImJ1dHRvbnNCbG9ja1wiOiBcImJ1dHRvbnMtYmxvY2steTV0Z3ZcIixcblx0XCJibG9jay1udW1iZXJcIjogXCJibG9jay1udW1iZXItaHBLTVpcIixcblx0XCJibG9ja051bWJlclwiOiBcImJsb2NrLW51bWJlci1ocEtNWlwiLFxuXHRcInJlcXVlc3QtY29udGFpbmVyXCI6IFwicmVxdWVzdC1jb250YWluZXIteDM5MWdcIixcblx0XCJyZXF1ZXN0Q29udGFpbmVyXCI6IFwicmVxdWVzdC1jb250YWluZXIteDM5MWdcIixcblx0XCJyZXF1ZXN0LWJ1dHRvbnMtY29udGFpbmVyXCI6IFwicmVxdWVzdC1idXR0b25zLWNvbnRhaW5lci1ZZ0tqMlwiLFxuXHRcInJlcXVlc3RCdXR0b25zQ29udGFpbmVyXCI6IFwicmVxdWVzdC1idXR0b25zLWNvbnRhaW5lci1ZZ0tqMlwiLFxuXHRcIm9yZGVyLWNvbnRhaW5lclwiOiBcIm9yZGVyLWNvbnRhaW5lci1mMEs0MFwiLFxuXHRcIm9yZGVyQ29udGFpbmVyXCI6IFwib3JkZXItY29udGFpbmVyLWYwSzQwXCIsXG5cdFwib3JkZXItaXRlbVwiOiBcIm9yZGVyLWl0ZW0tQkpvRm1cIixcblx0XCJvcmRlckl0ZW1cIjogXCJvcmRlci1pdGVtLUJKb0ZtXCIsXG5cdFwiZmllbGQtZmxleFwiOiBcImZpZWxkLWZsZXgtUmlGV25cIixcblx0XCJmaWVsZEZsZXhcIjogXCJmaWVsZC1mbGV4LVJpRlduXCJcbn07XG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLm1haW4tTnRuZ0N7XFxyXFxuICAgIHdpZHRoOiA4MCU7XFxyXFxuICAgIG1hcmdpbjogMCBhdXRvO1xcclxcbiAgICBwYWRkaW5nOiAwcHggNTBweDtcXHJcXG59XFxyXFxuQG1lZGlhIChtYXgtd2lkdGg6IDUwMHB4KSB7XFxyXFxuICAgIC5tYWluLU50bmdDe1xcclxcbiAgICAgICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgICAgICBwYWRkaW5nOiAwcHggMTBweDtcXHJcXG4gICAgfVxcclxcbn1cXHJcXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9BcHAvTWFpbi9zdHlsZXMuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksVUFBVTtJQUNWLGNBQWM7SUFDZCxpQkFBaUI7QUFDckI7QUFDQTtJQUNJO1FBQ0ksV0FBVztRQUNYLGlCQUFpQjtJQUNyQjtBQUNKXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5tYWlue1xcclxcbiAgICB3aWR0aDogODAlO1xcclxcbiAgICBtYXJnaW46IDAgYXV0bztcXHJcXG4gICAgcGFkZGluZzogMHB4IDUwcHg7XFxyXFxufVxcclxcbkBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xcclxcbiAgICAubWFpbntcXHJcXG4gICAgICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICAgICAgcGFkZGluZzogMHB4IDEwcHg7XFxyXFxuICAgIH1cXHJcXG59XFxyXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5sb2NhbHMgPSB7XG5cdFwibWFpblwiOiBcIm1haW4tTnRuZ0NcIlxufTtcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIvKtCe0LHQvdGD0LvQtdC90LjQtSovXFxyXFxuKntcXHJcXG5cXHRwYWRkaW5nOiAwO1xcclxcblxcdG1hcmdpbjogMDtcXHJcXG5cXHRib3JkZXI6IDA7XFxyXFxufVxcclxcbiosKjpiZWZvcmUsKjphZnRlcntcXHJcXG5cXHQtbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxyXFxuXFx0LXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xcclxcblxcdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxyXFxufVxcclxcblxcclxcbmE6Zm9jdXMsYTphY3RpdmV7b3V0bGluZTogbm9uZTt9XFxyXFxuYSwgYTp2aXNpdGVke3RleHQtZGVjb3JhdGlvbjogbm9uZTt9XFxyXFxuYTpob3Zlcnt0ZXh0LWRlY29yYXRpb246IG5vbmU7fVxcclxcbnVsIGxpe2xpc3Qtc3R5bGU6IG5vbmU7fVxcclxcbmltZ3t2ZXJ0aWNhbC1hbGlnbjogdG9wO31cXHJcXG5ib2R5e1xcclxcbiAgICBmb250LWZhbWlseTogJ1JhZGlvIENhbmFkYScsIHNhbnMtc2VyaWY7XFxyXFxuICAgIG1hcmdpbjogMDtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIxMSAyMjggMjQ1KTtcXHJcXG59XFxyXFxuLmFwcC13TmRPaHtcXHJcXG4gICAgaGVpZ2h0OiAxMDB2aDtcXHJcXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXHJcXG4gICAgb3ZlcmZsb3c6IGF1dG87XFxyXFxufVxcclxcbi5hcHAtd05kT2g6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcXHJcXG4gICAgd2lkdGg6IDVweFxcclxcbn1cXHJcXG5cXHJcXG4uYXBwLXdOZE9oOjotd2Via2l0LXNjcm9sbGJhci10aHVtYiB7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDFweDtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDQwLCAxMjksIDIwNilcXHJcXG59XFxyXFxuXFxyXFxuLmFwcC13TmRPaDo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2sge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjExIDIyOCAyNDUpO1xcclxcbn1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9BcHAvc3R5bGVzLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQSxZQUFZO0FBQ1o7Q0FDQyxVQUFVO0NBQ1YsU0FBUztDQUNULFNBQVM7QUFDVjtBQUNBO0NBQ0MsMkJBQTJCO0NBQzNCLDhCQUE4QjtDQUM5QixzQkFBc0I7QUFDdkI7O0FBRUEsaUJBQWlCLGFBQWEsQ0FBQztBQUMvQixhQUFhLHFCQUFxQixDQUFDO0FBQ25DLFFBQVEscUJBQXFCLENBQUM7QUFDOUIsTUFBTSxnQkFBZ0IsQ0FBQztBQUN2QixJQUFJLG1CQUFtQixDQUFDO0FBQ3hCO0lBQ0ksdUNBQXVDO0lBQ3ZDLFNBQVM7SUFDVCxrQ0FBa0M7QUFDdEM7QUFDQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsY0FBYztBQUNsQjtBQUNBO0lBQ0k7QUFDSjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQjtBQUNKOztBQUVBO0lBQ0ksa0NBQWtDO0FBQ3RDXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi8q0J7QsdC90YPQu9C10L3QuNC1Ki9cXHJcXG4qe1xcclxcblxcdHBhZGRpbmc6IDA7XFxyXFxuXFx0bWFyZ2luOiAwO1xcclxcblxcdGJvcmRlcjogMDtcXHJcXG59XFxyXFxuKiwqOmJlZm9yZSwqOmFmdGVye1xcclxcblxcdC1tb3otYm94LXNpemluZzogYm9yZGVyLWJveDtcXHJcXG5cXHQtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxyXFxuXFx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcXHJcXG59XFxyXFxuXFxyXFxuYTpmb2N1cyxhOmFjdGl2ZXtvdXRsaW5lOiBub25lO31cXHJcXG5hLCBhOnZpc2l0ZWR7dGV4dC1kZWNvcmF0aW9uOiBub25lO31cXHJcXG5hOmhvdmVye3RleHQtZGVjb3JhdGlvbjogbm9uZTt9XFxyXFxudWwgbGl7bGlzdC1zdHlsZTogbm9uZTt9XFxyXFxuaW1ne3ZlcnRpY2FsLWFsaWduOiB0b3A7fVxcclxcbmJvZHl7XFxyXFxuICAgIGZvbnQtZmFtaWx5OiAnUmFkaW8gQ2FuYWRhJywgc2Fucy1zZXJpZjtcXHJcXG4gICAgbWFyZ2luOiAwO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjExIDIyOCAyNDUpO1xcclxcbn1cXHJcXG4uYXBwe1xcclxcbiAgICBoZWlnaHQ6IDEwMHZoO1xcclxcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcclxcbiAgICBvdmVyZmxvdzogYXV0bztcXHJcXG59XFxyXFxuLmFwcDo6LXdlYmtpdC1zY3JvbGxiYXIge1xcclxcbiAgICB3aWR0aDogNXB4XFxyXFxufVxcclxcblxcclxcbi5hcHA6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iIHtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogMXB4O1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNDAsIDEyOSwgMjA2KVxcclxcbn1cXHJcXG5cXHJcXG4uYXBwOjotd2Via2l0LXNjcm9sbGJhci10cmFjayB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMTEgMjI4IDI0NSk7XFxyXFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ubG9jYWxzID0ge1xuXHRcImFwcFwiOiBcImFwcC13TmRPaFwiXG59O1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5idXR0b24tY29udGFpbmVyLXFGVXZzIHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICAgIGhlaWdodDogNDBweDtcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIGJveC1zaGFkb3c6IDBweCAwcHggNXB4IHJnYig0MCwgMTI5LCAyMDYpO1xcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICAgIGNvbG9yOiMxYjFiMWI7XFxyXFxuICAgIG1hcmdpbjogMTBweDtcXHJcXG4gICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4zcztcXHJcXG4gICAgLXdlYmtpdC10b3VjaC1jYWxsb3V0OiBub25lOyAvKiBpT1MgU2FmYXJpICovXFxyXFxuICAgIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7ICAgLyogQ2hyb21lL1NhZmFyaS9PcGVyYSAqL1xcclxcbiAgICAta2h0bWwtdXNlci1zZWxlY3Q6IG5vbmU7ICAgIC8qIEtvbnF1ZXJvciAqL1xcclxcbiAgICAtbW96LXVzZXItc2VsZWN0OiBub25lOyAgICAgIC8qIEZpcmVmb3ggKi9cXHJcXG4gICAgLW1zLXVzZXItc2VsZWN0OiBub25lOyAgICAgICAvKiBJbnRlcm5ldCBFeHBsb3Jlci9FZGdlICovXFxyXFxuICAgIHVzZXItc2VsZWN0OiBub25lO1xcclxcbn1cXHJcXG4uYnV0dG9uLWNvbnRhaW5lci1xRlV2czpob3ZlciB7XFxyXFxuICAgIGJveC1zaGFkb3c6IDBweCAwcHggNDBweCAjMDAwMDAwNDA7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig0MCwgMTI5LCAyMDYpO1xcclxcbn1cXHJcXG4uYnV0dG9uLXRleHQtZmNuNXR7XFxyXFxuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XFxyXFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vQ29tcG9uZW50cy9CdXR0b24vc3R5bGVzLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsbUJBQW1CO0lBQ25CLHVCQUF1QjtJQUN2QixZQUFZO0lBQ1osV0FBVztJQUNYLHlDQUF5QztJQUN6QyxlQUFlO0lBQ2YsYUFBYTtJQUNiLFlBQVk7SUFDWix5QkFBeUI7SUFDekIsMkJBQTJCLEVBQUUsZUFBZTtJQUM1Qyx5QkFBeUIsSUFBSSx3QkFBd0I7SUFDckQsd0JBQXdCLEtBQUssY0FBYztJQUMzQyxzQkFBc0IsT0FBTyxZQUFZO0lBQ3pDLHFCQUFxQixRQUFRLDJCQUEyQjtJQUN4RCxpQkFBaUI7QUFDckI7QUFDQTtJQUNJLGtDQUFrQztJQUNsQyxtQ0FBbUM7QUFDdkM7QUFDQTtJQUNJLGdCQUFnQjtJQUNoQixrQkFBa0I7QUFDdEJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLmJ1dHRvbi1jb250YWluZXIge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgaGVpZ2h0OiA0MHB4O1xcclxcbiAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgYm94LXNoYWRvdzogMHB4IDBweCA1cHggcmdiKDQwLCAxMjksIDIwNik7XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gICAgY29sb3I6IzFiMWIxYjtcXHJcXG4gICAgbWFyZ2luOiAxMHB4O1xcclxcbiAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAwLjNzO1xcclxcbiAgICAtd2Via2l0LXRvdWNoLWNhbGxvdXQ6IG5vbmU7IC8qIGlPUyBTYWZhcmkgKi9cXHJcXG4gICAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTsgICAvKiBDaHJvbWUvU2FmYXJpL09wZXJhICovXFxyXFxuICAgIC1raHRtbC11c2VyLXNlbGVjdDogbm9uZTsgICAgLyogS29ucXVlcm9yICovXFxyXFxuICAgIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7ICAgICAgLyogRmlyZWZveCAqL1xcclxcbiAgICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7ICAgICAgIC8qIEludGVybmV0IEV4cGxvcmVyL0VkZ2UgKi9cXHJcXG4gICAgdXNlci1zZWxlY3Q6IG5vbmU7XFxyXFxufVxcclxcbi5idXR0b24tY29udGFpbmVyOmhvdmVyIHtcXHJcXG4gICAgYm94LXNoYWRvdzogMHB4IDBweCA0MHB4ICMwMDAwMDA0MDtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDQwLCAxMjksIDIwNik7XFxyXFxufVxcclxcbi5idXR0b24tdGV4dHtcXHJcXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmxvY2FscyA9IHtcblx0XCJidXR0b24tY29udGFpbmVyXCI6IFwiYnV0dG9uLWNvbnRhaW5lci1xRlV2c1wiLFxuXHRcImJ1dHRvbkNvbnRhaW5lclwiOiBcImJ1dHRvbi1jb250YWluZXItcUZVdnNcIixcblx0XCJidXR0b24tdGV4dFwiOiBcImJ1dHRvbi10ZXh0LWZjbjV0XCIsXG5cdFwiYnV0dG9uVGV4dFwiOiBcImJ1dHRvbi10ZXh0LWZjbjV0XCJcbn07XG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLmNhcmQtaG9zcGl0YWwtT3JPNEx7XFxyXFxuICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICBtYXJnaW46IDMwcHg7XFxyXFxuICAgIGJveC1zaGFkb3c6IDBweCAwcHggNXB4IHJnYig0MCwgMTI5LCAyMDYpO1xcclxcbn1cXHJcXG4uaGVhZGVyLXRleHQtbFRCd2h7XFxyXFxuICAgIGZvbnQtc2l6ZTogMzBweDtcXHJcXG4gICAgbWFyZ2luLXRvcDogNXB4O1xcclxcbiAgICBjb2xvcjogIzEyNTM4YjtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbn1cXHJcXG4uYmxvY2staW5mby12aV84TXtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgYWxpZ24tY29udGVudDogY2VudGVyO1xcclxcbiAgICBmb250LXNpemU6IDE3cHg7XFxyXFxuICAgIG1hcmdpbjogMTVweDtcXHJcXG59XFxyXFxuLmltYWdlLWluZm8tY29udGFjdHMtSHJXbkN7XFxyXFxuICAgIHdpZHRoOiAyNXB4O1xcclxcbiAgICBoZWlnaHQ6IDI1cHg7XFxyXFxuICAgIG1hcmdpbi1yaWdodDogNXB4O1xcclxcbn1cXHJcXG4uaW5mby10ZXh0LWNoV2Rke1xcclxcbiAgICBwYWRkaW5nLWlubGluZTogNXB4O1xcclxcbn1cXHJcXG5AbWVkaWEgKG1heC13aWR0aDogNTAwcHgpIHtcXHJcXG4gICAgLmNhcmQtaG9zcGl0YWwtT3JPNEx7XFxyXFxuICAgICAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgICAgIG1hcmdpbjogMTBweDtcXHJcXG4gICAgfVxcclxcbiAgICAuYmxvY2staW5mby12aV84TXtcXHJcXG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcXHJcXG4gICAgICAgIG1hcmdpbjogMTNweDtcXHJcXG4gICAgfVxcclxcbiAgICAuaW1hZ2UtaW5mby1jb250YWN0cy1IclduQ3tcXHJcXG4gICAgICAgIHdpZHRoOiAxOXB4O1xcclxcbiAgICAgICAgaGVpZ2h0OiAxOXB4O1xcclxcbiAgICB9XFxyXFxufVxcclxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL0NvbXBvbmVudHMvQ2FyZEhvc3BpdGFsL3N0eWxlcy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxXQUFXO0lBQ1gsWUFBWTtJQUNaLHlDQUF5QztBQUM3QztBQUNBO0lBQ0ksZUFBZTtJQUNmLGVBQWU7SUFDZixjQUFjO0lBQ2Qsa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxhQUFhO0lBQ2IscUJBQXFCO0lBQ3JCLGVBQWU7SUFDZixZQUFZO0FBQ2hCO0FBQ0E7SUFDSSxXQUFXO0lBQ1gsWUFBWTtJQUNaLGlCQUFpQjtBQUNyQjtBQUNBO0lBQ0ksbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSTtRQUNJLFdBQVc7UUFDWCxZQUFZO0lBQ2hCO0lBQ0E7UUFDSSxlQUFlO1FBQ2YsWUFBWTtJQUNoQjtJQUNBO1FBQ0ksV0FBVztRQUNYLFlBQVk7SUFDaEI7QUFDSlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuY2FyZC1ob3NwaXRhbHtcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIG1hcmdpbjogMzBweDtcXHJcXG4gICAgYm94LXNoYWRvdzogMHB4IDBweCA1cHggcmdiKDQwLCAxMjksIDIwNik7XFxyXFxufVxcclxcbi5oZWFkZXItdGV4dHtcXHJcXG4gICAgZm9udC1zaXplOiAzMHB4O1xcclxcbiAgICBtYXJnaW4tdG9wOiA1cHg7XFxyXFxuICAgIGNvbG9yOiAjMTI1MzhiO1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxufVxcclxcbi5ibG9jay1pbmZve1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XFxyXFxuICAgIGZvbnQtc2l6ZTogMTdweDtcXHJcXG4gICAgbWFyZ2luOiAxNXB4O1xcclxcbn1cXHJcXG4uaW1hZ2UtaW5mby1jb250YWN0c3tcXHJcXG4gICAgd2lkdGg6IDI1cHg7XFxyXFxuICAgIGhlaWdodDogMjVweDtcXHJcXG4gICAgbWFyZ2luLXJpZ2h0OiA1cHg7XFxyXFxufVxcclxcbi5pbmZvLXRleHR7XFxyXFxuICAgIHBhZGRpbmctaW5saW5lOiA1cHg7XFxyXFxufVxcclxcbkBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xcclxcbiAgICAuY2FyZC1ob3NwaXRhbHtcXHJcXG4gICAgICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICAgICAgbWFyZ2luOiAxMHB4O1xcclxcbiAgICB9XFxyXFxuICAgIC5ibG9jay1pbmZve1xcclxcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xcclxcbiAgICAgICAgbWFyZ2luOiAxM3B4O1xcclxcbiAgICB9XFxyXFxuICAgIC5pbWFnZS1pbmZvLWNvbnRhY3Rze1xcclxcbiAgICAgICAgd2lkdGg6IDE5cHg7XFxyXFxuICAgICAgICBoZWlnaHQ6IDE5cHg7XFxyXFxuICAgIH1cXHJcXG59XFxyXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5sb2NhbHMgPSB7XG5cdFwiY2FyZC1ob3NwaXRhbFwiOiBcImNhcmQtaG9zcGl0YWwtT3JPNExcIixcblx0XCJjYXJkSG9zcGl0YWxcIjogXCJjYXJkLWhvc3BpdGFsLU9yTzRMXCIsXG5cdFwiaGVhZGVyLXRleHRcIjogXCJoZWFkZXItdGV4dC1sVEJ3aFwiLFxuXHRcImhlYWRlclRleHRcIjogXCJoZWFkZXItdGV4dC1sVEJ3aFwiLFxuXHRcImJsb2NrLWluZm9cIjogXCJibG9jay1pbmZvLXZpXzhNXCIsXG5cdFwiYmxvY2tJbmZvXCI6IFwiYmxvY2staW5mby12aV84TVwiLFxuXHRcImltYWdlLWluZm8tY29udGFjdHNcIjogXCJpbWFnZS1pbmZvLWNvbnRhY3RzLUhyV25DXCIsXG5cdFwiaW1hZ2VJbmZvQ29udGFjdHNcIjogXCJpbWFnZS1pbmZvLWNvbnRhY3RzLUhyV25DXCIsXG5cdFwiaW5mby10ZXh0XCI6IFwiaW5mby10ZXh0LWNoV2RkXCIsXG5cdFwiaW5mb1RleHRcIjogXCJpbmZvLXRleHQtY2hXZGRcIlxufTtcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIubW9kYWwtX1ZaUE8geyBcXHJcXG4gICAgaGVpZ2h0OiAxMDB2aDtcXHJcXG4gICAgd2lkdGg6IDEwMHZ3O1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNCk7XFxyXFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcXHJcXG4gICAgdG9wOiAwO1xcclxcbiAgICBsZWZ0OiAwO1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAgb3BhY2l0eTogMDtcXHJcXG4gICAgdHJhbnNpdGlvbjogMC41cztcXHJcXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7IFxcclxcbiAgICB6LWluZGV4OiAxO1xcclxcbn1cXHJcXG5cXHJcXG4ubW9kYWwtX1ZaUE8uYWN0aXZlLVRBSmVOIHtcXHJcXG4gICAgb3BhY2l0eTogMTtcXHJcXG4gICAgcG9pbnRlci1ldmVudHM6IGFsbDtcXHJcXG59XFxyXFxuXFxyXFxuLm1vZGFsLWNvbnRlbnQtUzVyaE0ge1xcclxcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuNSk7XFxyXFxuICAgIHRyYW5zaXRpb246IDAuNXM7XFxyXFxufVxcclxcblxcclxcbi5tb2RhbC1jb250ZW50LVM1cmhNLmFjdGl2ZS1UQUplTiB7XFxyXFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XFxyXFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL0NvbXBvbmVudHMvTW9kYWwvc3R5bGVzLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGFBQWE7SUFDYixZQUFZO0lBQ1osb0NBQW9DO0lBQ3BDLGVBQWU7SUFDZixNQUFNO0lBQ04sT0FBTztJQUNQLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLFVBQVU7SUFDVixnQkFBZ0I7SUFDaEIsb0JBQW9CO0lBQ3BCLFVBQVU7QUFDZDs7QUFFQTtJQUNJLFVBQVU7SUFDVixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksbUJBQW1CO0FBQ3ZCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5tb2RhbCB7IFxcclxcbiAgICBoZWlnaHQ6IDEwMHZoO1xcclxcbiAgICB3aWR0aDogMTAwdnc7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC40KTtcXHJcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcclxcbiAgICB0b3A6IDA7XFxyXFxuICAgIGxlZnQ6IDA7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBvcGFjaXR5OiAwO1xcclxcbiAgICB0cmFuc2l0aW9uOiAwLjVzO1xcclxcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTsgXFxyXFxuICAgIHotaW5kZXg6IDE7XFxyXFxufVxcclxcblxcclxcbi5tb2RhbC5hY3RpdmUge1xcclxcbiAgICBvcGFjaXR5OiAxO1xcclxcbiAgICBwb2ludGVyLWV2ZW50czogYWxsO1xcclxcbn1cXHJcXG5cXHJcXG4ubW9kYWwtY29udGVudCB7XFxyXFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMC41KTtcXHJcXG4gICAgdHJhbnNpdGlvbjogMC41cztcXHJcXG59XFxyXFxuXFxyXFxuLm1vZGFsLWNvbnRlbnQuYWN0aXZlIHtcXHJcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcXHJcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5sb2NhbHMgPSB7XG5cdFwibW9kYWxcIjogXCJtb2RhbC1fVlpQT1wiLFxuXHRcImFjdGl2ZVwiOiBcImFjdGl2ZS1UQUplTlwiLFxuXHRcIm1vZGFsLWNvbnRlbnRcIjogXCJtb2RhbC1jb250ZW50LVM1cmhNXCIsXG5cdFwibW9kYWxDb250ZW50XCI6IFwibW9kYWwtY29udGVudC1TNXJoTVwiXG59O1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5uYXZpZ2F0aW9uLW1lbnUtY29udGFpbmVyLWFUb05xIHtcXHJcXG4gICAgd2lkdGg6IDgwJTtcXHJcXG4gICAgbWFyZ2luOiA1cHggYXV0byAyMHB4IGF1dG87XFxyXFxufVxcclxcblxcclxcbi5uYXZpZ2F0aW9uLW1lbnUtbGlzdC13YWZvbCB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXHJcXG4gICAgcGFkZGluZzogMHB4O1xcclxcbiAgICBsaXN0LXN0eWxlOiBub25lO1xcclxcbn1cXHJcXG5cXHJcXG4ubmF2aWdhdGlvbi1tZW51LWl0ZW0tTkZwY0sge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBoZWlnaHQ6IDQwcHg7XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICBmbG9hdDogbGVmdDtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDQwLCAxMjksIDIwNik7XFxyXFxuICAgIGNvbG9yOiAjMWIxYjFiO1xcclxcbiAgICB0cmFuc2l0aW9uLXByb3BlcnR5OiBjb2xvciwgYmFja2dyb3VuZC1jb2xvcjtcXHJcXG4gICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4zcztcXHJcXG59XFxyXFxuXFxyXFxuLm5hdmlnYXRpb24tbWVudS1pdGVtLU5GcGNLOmhvdmVyIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI2LCA4NSwgMTM3KTtcXHJcXG59XFxyXFxuXFxyXFxuLm5hdmlnYXRpb24tbWVudS1pdGVtLXRleHQtR0hoSzAge1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XFxyXFxuICAgIGZvbnQtc2l6ZTogMTVweDtcXHJcXG4gICAgbWFyZ2luOiA1cHg7XFxyXFxufVxcclxcblxcclxcbkBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xcclxcbiAgICAubmF2aWdhdGlvbi1tZW51LWNvbnRhaW5lci1hVG9OcSB7XFxyXFxuICAgICAgICBtYXJnaW46IDEwcHggYXV0bztcXHJcXG4gICAgICAgIHdpZHRoOiA5MCU7XFxyXFxuICAgIH1cXHJcXG4gICAgLm5hdmlnYXRpb24tbWVudS1saXN0LXdhZm9sIHtcXHJcXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxuICAgICAgICB0b3A6IDEwcHg7XFxyXFxuICAgIH1cXHJcXG4gICAgLm5hdmlnYXRpb24tbWVudS1pdGVtLU5GcGNLIHtcXHJcXG4gICAgICAgIG1hcmdpbjogNXB4O1xcclxcbiAgICAgICAgYm94LXNoYWRvdzogMHB4IDBweCA1cHggcmdiKDQwIDEyOSAyMDYpO1xcclxcbiAgICB9XFxyXFxuICAgIC5vcGVuLW1lbnUtUFo1VjAge1xcclxcbiAgICAgICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAgICAgIGZvbnQtc2l6ZTogMjZweDtcXHJcXG4gICAgICAgIGNvbG9yOiAjMTI1MzhiO1xcclxcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgICB9XFxyXFxuICAgIC5vcGVuLW1lbnUtUFo1VjA6aG92ZXIge1xcclxcbiAgICAgICAgY29sb3I6ICMwNzJhNDg7XFxyXFxuICAgIH1cXHJcXG4gICAgLmJ0bi1tZW51LXVvU3ZuIHtcXHJcXG4gICAgICAgIHdpZHRoOiAyNXB4O1xcclxcbiAgICAgICAgaGVpZ2h0OiAyNXB4O1xcclxcbiAgICAgICAgcGFkZGluZy1pbmxpbmU6IDMwcHg7XFxyXFxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxuICAgIH1cXHJcXG4gICAgLmJ0bi1tZW51LXVvU3ZuOmJlZm9yZSB7XFxyXFxuICAgICAgICBjb250ZW50OiAnJztcXHJcXG4gICAgICAgIHRvcDogMDtcXHJcXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gICAgICAgIHdpZHRoOiAyNXB4O1xcclxcbiAgICAgICAgaGVpZ2h0OiAycHg7XFxyXFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNDAsIDEyOSwgMjA2KTtcXHJcXG4gICAgfVxcclxcbiAgICAuYnRuLW1lbnUtdW9Tdm46OmFmdGVyIHtcXHJcXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xcclxcbiAgICAgICAgYm90dG9tOiAwO1xcclxcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgICAgICAgd2lkdGg6IDI1cHg7XFxyXFxuICAgICAgICBoZWlnaHQ6IDJweDtcXHJcXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig0MCwgMTI5LCAyMDYpO1xcclxcbiAgICB9XFxyXFxuICAgIC5idG4tbWVudS11b1N2biBzcGFuIHtcXHJcXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xcclxcbiAgICAgICAgdG9wOiAxMXB4O1xcclxcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgICAgICAgd2lkdGg6IDI1cHg7XFxyXFxuICAgICAgICBoZWlnaHQ6IDJweDtcXHJcXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig0MCwgMTI5LCAyMDYpO1xcclxcbiAgICB9XFxyXFxuICAgIC5uYXZpZ2F0aW9uLW1lbnUtbGlzdC13YWZvbCB7XFxyXFxuICAgICAgICBhbmltYXRpb24tbmFtZTogbWVudS1uTWtCdDtcXHJcXG4gICAgICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMS41cztcXHJcXG4gICAgfVxcclxcblxcclxcbiAgICBAa2V5ZnJhbWVzIG1lbnUtbk1rQnQge1xcclxcbiAgICAgICAgMCV7XFxyXFxuICAgICAgICAgICAgb3BhY2l0eTogMDtcXHJcXG4gICAgICAgIH1cXHJcXG4gICAgICAgIDEwMCV7XFxyXFxuICAgICAgICAgICAgb3BhY2l0eTogMTtcXHJcXG4gICAgICAgIH1cXHJcXG4gICAgfVxcclxcbn1cXHJcXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9Db21wb25lbnRzL05hdmlnYXRpb25NZW51L3N0eWxlcy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxVQUFVO0lBQ1YsMEJBQTBCO0FBQzlCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLDhCQUE4QjtJQUM5QixZQUFZO0lBQ1osZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLFlBQVk7SUFDWixlQUFlO0lBQ2YsbUJBQW1CO0lBQ25CLHVCQUF1QjtJQUN2QixXQUFXO0lBQ1gsV0FBVztJQUNYLG1DQUFtQztJQUNuQyxjQUFjO0lBQ2QsNENBQTRDO0lBQzVDLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLGtDQUFrQztBQUN0Qzs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsZUFBZTtJQUNmLFdBQVc7QUFDZjs7QUFFQTtJQUNJO1FBQ0ksaUJBQWlCO1FBQ2pCLFVBQVU7SUFDZDtJQUNBO1FBQ0ksc0JBQXNCO1FBQ3RCLGtCQUFrQjtRQUNsQixTQUFTO0lBQ2I7SUFDQTtRQUNJLFdBQVc7UUFDWCx1Q0FBdUM7SUFDM0M7SUFDQTtRQUNJLGFBQWE7UUFDYix1QkFBdUI7UUFDdkIsbUJBQW1CO1FBQ25CLGVBQWU7UUFDZixjQUFjO1FBQ2Qsa0JBQWtCO0lBQ3RCO0lBQ0E7UUFDSSxjQUFjO0lBQ2xCO0lBQ0E7UUFDSSxXQUFXO1FBQ1gsWUFBWTtRQUNaLG9CQUFvQjtRQUNwQixrQkFBa0I7SUFDdEI7SUFDQTtRQUNJLFdBQVc7UUFDWCxNQUFNO1FBQ04sa0JBQWtCO1FBQ2xCLFdBQVc7UUFDWCxXQUFXO1FBQ1gsbUNBQW1DO0lBQ3ZDO0lBQ0E7UUFDSSxXQUFXO1FBQ1gsU0FBUztRQUNULGtCQUFrQjtRQUNsQixXQUFXO1FBQ1gsV0FBVztRQUNYLG1DQUFtQztJQUN2QztJQUNBO1FBQ0ksV0FBVztRQUNYLFNBQVM7UUFDVCxrQkFBa0I7UUFDbEIsV0FBVztRQUNYLFdBQVc7UUFDWCxtQ0FBbUM7SUFDdkM7SUFDQTtRQUNJLDBCQUFvQjtRQUNwQix3QkFBd0I7SUFDNUI7O0lBRUE7UUFDSTtZQUNJLFVBQVU7UUFDZDtRQUNBO1lBQ0ksVUFBVTtRQUNkO0lBQ0o7QUFDSlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIubmF2aWdhdGlvbi1tZW51LWNvbnRhaW5lciB7XFxyXFxuICAgIHdpZHRoOiA4MCU7XFxyXFxuICAgIG1hcmdpbjogNXB4IGF1dG8gMjBweCBhdXRvO1xcclxcbn1cXHJcXG5cXHJcXG4ubmF2aWdhdGlvbi1tZW51LWxpc3Qge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxyXFxuICAgIHBhZGRpbmc6IDBweDtcXHJcXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcXHJcXG59XFxyXFxuXFxyXFxuLm5hdmlnYXRpb24tbWVudS1pdGVtIHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgaGVpZ2h0OiA0MHB4O1xcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbiAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgZmxvYXQ6IGxlZnQ7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig0MCwgMTI5LCAyMDYpO1xcclxcbiAgICBjb2xvcjogIzFiMWIxYjtcXHJcXG4gICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogY29sb3IsIGJhY2tncm91bmQtY29sb3I7XFxyXFxuICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDAuM3M7XFxyXFxufVxcclxcblxcclxcbi5uYXZpZ2F0aW9uLW1lbnUtaXRlbTpob3ZlciB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyNiwgODUsIDEzNyk7XFxyXFxufVxcclxcblxcclxcbi5uYXZpZ2F0aW9uLW1lbnUtaXRlbS10ZXh0IHtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgICBmb250LXdlaWdodDogNjAwO1xcclxcbiAgICBmb250LXNpemU6IDE1cHg7XFxyXFxuICAgIG1hcmdpbjogNXB4O1xcclxcbn1cXHJcXG5cXHJcXG5AbWVkaWEgKG1heC13aWR0aDogNTAwcHgpIHtcXHJcXG4gICAgLm5hdmlnYXRpb24tbWVudS1jb250YWluZXIge1xcclxcbiAgICAgICAgbWFyZ2luOiAxMHB4IGF1dG87XFxyXFxuICAgICAgICB3aWR0aDogOTAlO1xcclxcbiAgICB9XFxyXFxuICAgIC5uYXZpZ2F0aW9uLW1lbnUtbGlzdCB7XFxyXFxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xcclxcbiAgICAgICAgdG9wOiAxMHB4O1xcclxcbiAgICB9XFxyXFxuICAgIC5uYXZpZ2F0aW9uLW1lbnUtaXRlbSB7XFxyXFxuICAgICAgICBtYXJnaW46IDVweDtcXHJcXG4gICAgICAgIGJveC1zaGFkb3c6IDBweCAwcHggNXB4IHJnYig0MCAxMjkgMjA2KTtcXHJcXG4gICAgfVxcclxcbiAgICAub3Blbi1tZW51IHtcXHJcXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgICAgICBmb250LXNpemU6IDI2cHg7XFxyXFxuICAgICAgICBjb2xvcjogIzEyNTM4YjtcXHJcXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG4gICAgfVxcclxcbiAgICAub3Blbi1tZW51OmhvdmVyIHtcXHJcXG4gICAgICAgIGNvbG9yOiAjMDcyYTQ4O1xcclxcbiAgICB9XFxyXFxuICAgIC5idG4tbWVudSB7XFxyXFxuICAgICAgICB3aWR0aDogMjVweDtcXHJcXG4gICAgICAgIGhlaWdodDogMjVweDtcXHJcXG4gICAgICAgIHBhZGRpbmctaW5saW5lOiAzMHB4O1xcclxcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xcclxcbiAgICB9XFxyXFxuICAgIC5idG4tbWVudTpiZWZvcmUge1xcclxcbiAgICAgICAgY29udGVudDogJyc7XFxyXFxuICAgICAgICB0b3A6IDA7XFxyXFxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICAgICAgICB3aWR0aDogMjVweDtcXHJcXG4gICAgICAgIGhlaWdodDogMnB4O1xcclxcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDQwLCAxMjksIDIwNik7XFxyXFxuICAgIH1cXHJcXG4gICAgLmJ0bi1tZW51OjphZnRlciB7XFxyXFxuICAgICAgICBjb250ZW50OiAnJztcXHJcXG4gICAgICAgIGJvdHRvbTogMDtcXHJcXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gICAgICAgIHdpZHRoOiAyNXB4O1xcclxcbiAgICAgICAgaGVpZ2h0OiAycHg7XFxyXFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNDAsIDEyOSwgMjA2KTtcXHJcXG4gICAgfVxcclxcbiAgICAuYnRuLW1lbnUgc3BhbiB7XFxyXFxuICAgICAgICBjb250ZW50OiAnJztcXHJcXG4gICAgICAgIHRvcDogMTFweDtcXHJcXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gICAgICAgIHdpZHRoOiAyNXB4O1xcclxcbiAgICAgICAgaGVpZ2h0OiAycHg7XFxyXFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNDAsIDEyOSwgMjA2KTtcXHJcXG4gICAgfVxcclxcbiAgICAubmF2aWdhdGlvbi1tZW51LWxpc3Qge1xcclxcbiAgICAgICAgYW5pbWF0aW9uLW5hbWU6IG1lbnU7XFxyXFxuICAgICAgICBhbmltYXRpb24tZHVyYXRpb246IDEuNXM7XFxyXFxuICAgIH1cXHJcXG5cXHJcXG4gICAgQGtleWZyYW1lcyBtZW51IHtcXHJcXG4gICAgICAgIDAle1xcclxcbiAgICAgICAgICAgIG9wYWNpdHk6IDA7XFxyXFxuICAgICAgICB9XFxyXFxuICAgICAgICAxMDAle1xcclxcbiAgICAgICAgICAgIG9wYWNpdHk6IDE7XFxyXFxuICAgICAgICB9XFxyXFxuICAgIH1cXHJcXG59XFxyXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5sb2NhbHMgPSB7XG5cdFwibmF2aWdhdGlvbi1tZW51LWNvbnRhaW5lclwiOiBcIm5hdmlnYXRpb24tbWVudS1jb250YWluZXItYVRvTnFcIixcblx0XCJuYXZpZ2F0aW9uTWVudUNvbnRhaW5lclwiOiBcIm5hdmlnYXRpb24tbWVudS1jb250YWluZXItYVRvTnFcIixcblx0XCJuYXZpZ2F0aW9uLW1lbnUtbGlzdFwiOiBcIm5hdmlnYXRpb24tbWVudS1saXN0LXdhZm9sXCIsXG5cdFwibmF2aWdhdGlvbk1lbnVMaXN0XCI6IFwibmF2aWdhdGlvbi1tZW51LWxpc3Qtd2Fmb2xcIixcblx0XCJuYXZpZ2F0aW9uLW1lbnUtaXRlbVwiOiBcIm5hdmlnYXRpb24tbWVudS1pdGVtLU5GcGNLXCIsXG5cdFwibmF2aWdhdGlvbk1lbnVJdGVtXCI6IFwibmF2aWdhdGlvbi1tZW51LWl0ZW0tTkZwY0tcIixcblx0XCJuYXZpZ2F0aW9uLW1lbnUtaXRlbS10ZXh0XCI6IFwibmF2aWdhdGlvbi1tZW51LWl0ZW0tdGV4dC1HSGhLMFwiLFxuXHRcIm5hdmlnYXRpb25NZW51SXRlbVRleHRcIjogXCJuYXZpZ2F0aW9uLW1lbnUtaXRlbS10ZXh0LUdIaEswXCIsXG5cdFwib3Blbi1tZW51XCI6IFwib3Blbi1tZW51LVBaNVYwXCIsXG5cdFwib3Blbk1lbnVcIjogXCJvcGVuLW1lbnUtUFo1VjBcIixcblx0XCJidG4tbWVudVwiOiBcImJ0bi1tZW51LXVvU3ZuXCIsXG5cdFwiYnRuTWVudVwiOiBcImJ0bi1tZW51LXVvU3ZuXCIsXG5cdFwibWVudVwiOiBcIm1lbnUtbk1rQnRcIlxufTtcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIucmVxdWVzdC1jb250YWluZXItQ2RaTEl7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgIHdpZHRoOiAzMjVweDtcXHJcXG4gICAgaGVpZ2h0OiAyNTBweDtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIxMSAyMjggMjQ1KTtcXHJcXG4gICAgYm94LXNoYWRvdzogMHB4IDBweCA4cHggcmdiKDQwLCAxMjksIDIwNik7XFxyXFxuICAgIHBhZGRpbmc6IDEwcHg7XFxyXFxuICAgIGNvbG9yOiAjMWIxYjFiO1xcclxcbn1cXHJcXG4ucmVxdWVzdC1idXR0b25zLWNvbnRhaW5lci1uZFV6SntcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xcclxcbiAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XFxyXFxuICAgIG1hcmdpbi10b3A6IGF1dG87XFxyXFxuICAgIG1hcmdpbi1ib3R0b206IDI1cHg7XFxyXFxufVxcclxcblxcclxcbi5vcmRlci1jb250YWluZXItczNLSWgge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBwYWRkaW5nOiAwcHggMTAlO1xcclxcbn1cXHJcXG4ub3JkZXItaXRlbS1jekdPMSB7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XFxyXFxuICAgIG1hcmdpbi1ib3R0b206IDdweDtcXHJcXG59XFxyXFxuLmZpZWxkLWZsZXgtTlBxa2sge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAgbWFyZ2luLXRvcDogMTVweDtcXHJcXG59XFxyXFxuLmlucHV0LWNvbnRhaW5lci14Qzd6TCB7XFxyXFxuICAgIHBhZGRpbmc6IDVweDtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcclxcbn1cXHJcXG4udGV4dC1pbnB1dC1rdjJHTiB7XFxyXFxuICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICBwYWRkaW5nOiAxMHB4IDE1cHg7XFxyXFxuICAgIHRleHQtYWxpZ246IGxlZnQ7XFxyXFxuICAgIGNvbG9yOiAjNGI0YjRiO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xcclxcbn1cXHJcXG4uYmxvY2stdGV4dC1mUVNOWXtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbn1cXHJcXG4uYmxvY2staGVhZGVyLXRleHQtX2xvVXB7XFxyXFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG4gICAgZm9udC1zaXplOiAxNXB4O1xcclxcbiAgICBmb250LXdlaWdodDogNjAwO1xcclxcbn1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9Db21wb25lbnRzL1JlcXVlc3RDYWxsL3N0eWxlcy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLHNCQUFzQjtJQUN0QixZQUFZO0lBQ1osYUFBYTtJQUNiLGtDQUFrQztJQUNsQyx5Q0FBeUM7SUFDekMsYUFBYTtJQUNiLGNBQWM7QUFDbEI7QUFDQTtJQUNJLFdBQVc7SUFDWCxhQUFhO0lBQ2IsNkJBQTZCO0lBQzdCLHFCQUFxQjtJQUNyQixnQkFBZ0I7SUFDaEIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixtQkFBbUI7SUFDbkIsZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxtQkFBbUI7SUFDbkIsa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxhQUFhO0lBQ2IsNkJBQTZCO0lBQzdCLG1CQUFtQjtJQUNuQixzQkFBc0I7SUFDdEIsZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxZQUFZO0lBQ1osYUFBYTtJQUNiLG1CQUFtQjtJQUNuQiw4QkFBOEI7QUFDbEM7QUFDQTtJQUNJLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGNBQWM7SUFDZCx5QkFBeUI7QUFDN0I7QUFDQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLGdCQUFnQjtBQUNwQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIucmVxdWVzdC1jb250YWluZXJ7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgIHdpZHRoOiAzMjVweDtcXHJcXG4gICAgaGVpZ2h0OiAyNTBweDtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIxMSAyMjggMjQ1KTtcXHJcXG4gICAgYm94LXNoYWRvdzogMHB4IDBweCA4cHggcmdiKDQwLCAxMjksIDIwNik7XFxyXFxuICAgIHBhZGRpbmc6IDEwcHg7XFxyXFxuICAgIGNvbG9yOiAjMWIxYjFiO1xcclxcbn1cXHJcXG4ucmVxdWVzdC1idXR0b25zLWNvbnRhaW5lcntcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xcclxcbiAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XFxyXFxuICAgIG1hcmdpbi10b3A6IGF1dG87XFxyXFxuICAgIG1hcmdpbi1ib3R0b206IDI1cHg7XFxyXFxufVxcclxcblxcclxcbi5vcmRlci1jb250YWluZXIge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBwYWRkaW5nOiAwcHggMTAlO1xcclxcbn1cXHJcXG4ub3JkZXItaXRlbSB7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XFxyXFxuICAgIG1hcmdpbi1ib3R0b206IDdweDtcXHJcXG59XFxyXFxuLmZpZWxkLWZsZXgge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAgbWFyZ2luLXRvcDogMTVweDtcXHJcXG59XFxyXFxuLmlucHV0LWNvbnRhaW5lciB7XFxyXFxuICAgIHBhZGRpbmc6IDVweDtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcclxcbn1cXHJcXG4udGV4dC1pbnB1dCB7XFxyXFxuICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICBwYWRkaW5nOiAxMHB4IDE1cHg7XFxyXFxuICAgIHRleHQtYWxpZ246IGxlZnQ7XFxyXFxuICAgIGNvbG9yOiAjNGI0YjRiO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xcclxcbn1cXHJcXG4uYmxvY2stdGV4dHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbn1cXHJcXG4uYmxvY2staGVhZGVyLXRleHR7XFxyXFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG4gICAgZm9udC1zaXplOiAxNXB4O1xcclxcbiAgICBmb250LXdlaWdodDogNjAwO1xcclxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmxvY2FscyA9IHtcblx0XCJyZXF1ZXN0LWNvbnRhaW5lclwiOiBcInJlcXVlc3QtY29udGFpbmVyLUNkWkxJXCIsXG5cdFwicmVxdWVzdENvbnRhaW5lclwiOiBcInJlcXVlc3QtY29udGFpbmVyLUNkWkxJXCIsXG5cdFwicmVxdWVzdC1idXR0b25zLWNvbnRhaW5lclwiOiBcInJlcXVlc3QtYnV0dG9ucy1jb250YWluZXItbmRVekpcIixcblx0XCJyZXF1ZXN0QnV0dG9uc0NvbnRhaW5lclwiOiBcInJlcXVlc3QtYnV0dG9ucy1jb250YWluZXItbmRVekpcIixcblx0XCJvcmRlci1jb250YWluZXJcIjogXCJvcmRlci1jb250YWluZXItczNLSWhcIixcblx0XCJvcmRlckNvbnRhaW5lclwiOiBcIm9yZGVyLWNvbnRhaW5lci1zM0tJaFwiLFxuXHRcIm9yZGVyLWl0ZW1cIjogXCJvcmRlci1pdGVtLWN6R08xXCIsXG5cdFwib3JkZXJJdGVtXCI6IFwib3JkZXItaXRlbS1jekdPMVwiLFxuXHRcImZpZWxkLWZsZXhcIjogXCJmaWVsZC1mbGV4LU5QcWtrXCIsXG5cdFwiZmllbGRGbGV4XCI6IFwiZmllbGQtZmxleC1OUHFra1wiLFxuXHRcImlucHV0LWNvbnRhaW5lclwiOiBcImlucHV0LWNvbnRhaW5lci14Qzd6TFwiLFxuXHRcImlucHV0Q29udGFpbmVyXCI6IFwiaW5wdXQtY29udGFpbmVyLXhDN3pMXCIsXG5cdFwidGV4dC1pbnB1dFwiOiBcInRleHQtaW5wdXQta3YyR05cIixcblx0XCJ0ZXh0SW5wdXRcIjogXCJ0ZXh0LWlucHV0LWt2MkdOXCIsXG5cdFwiYmxvY2stdGV4dFwiOiBcImJsb2NrLXRleHQtZlFTTllcIixcblx0XCJibG9ja1RleHRcIjogXCJibG9jay10ZXh0LWZRU05ZXCIsXG5cdFwiYmxvY2staGVhZGVyLXRleHRcIjogXCJibG9jay1oZWFkZXItdGV4dC1fbG9VcFwiLFxuXHRcImJsb2NrSGVhZGVyVGV4dFwiOiBcImJsb2NrLWhlYWRlci10ZXh0LV9sb1VwXCJcbn07XG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLnJlcXVlc3QtY29udGFpbmVyLV9PbkQ4IHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAgd2lkdGg6IDMyMHB4O1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjExIDIyOCAyNDUpO1xcclxcbiAgICBwYWRkaW5nOiAxMHB4O1xcclxcbiAgICBjb2xvcjogIzFiMWIxYjtcXHJcXG59XFxyXFxuLnJlcXVlc3QtYnV0dG9ucy1jb250YWluZXItemltZXIge1xcclxcbiAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XFxyXFxuICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgbWFyZ2luLXRvcDogYXV0bztcXHJcXG59XFxyXFxuXFxyXFxuLm9yZGVyLWNvbnRhaW5lci1HNXFsRiB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIHBhZGRpbmc6IDBweCAxMCU7XFxyXFxufVxcclxcbi5vcmRlci1pdGVtLUk1N2VwIHtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogMTVweDtcXHJcXG4gICAgbWFyZ2luLWJvdHRvbTogN3B4O1xcclxcbn1cXHJcXG4uZmllbGQtZmxleC1yS0ZobyB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xcclxcbn1cXHJcXG4uaW5wdXQtY29udGFpbmVyLXU2d2JOIHtcXHJcXG4gICAgcGFkZGluZzogNXB4O1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxyXFxufVxcclxcbi50ZXh0LWlucHV0LWg0cWtZIHtcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIHBhZGRpbmc6IDEwcHggMTVweDtcXHJcXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcXHJcXG4gICAgY29sb3I6ICM0YjRiNGI7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XFxyXFxufVxcclxcbi5ibG9jay10ZXh0LW95Znc0IHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbn1cXHJcXG4uYmxvY2staGVhZGVyLXRleHQtSmNMNFMge1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxuICAgIGZvbnQtc2l6ZTogMTVweDtcXHJcXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcXHJcXG59XFxyXFxuLmlucHV0LXRleHQtQ0thVWoge1xcclxcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xcclxcbiAgICBtaW4taGVpZ2h0OiAzMHB4O1xcclxcbiAgICBtYXgtaGVpZ2h0OiAxODBweDtcXHJcXG4gICAgb3ZlcmZsb3cteTogYXV0bztcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIHBhZGRpbmc6IDEwcHggMTVweDtcXHJcXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcXHJcXG4gICAgY29sb3I6ICM0YjRiNGI7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XFxyXFxufVxcclxcbi50ZXh0LWFyZWEtaW5wdXQtUnNlUUp7XFxyXFxuICAgIHJlc2l6ZTogdmVydGljYWw7XFxyXFxuICAgIG1heC1oZWlnaHQ6IDgwcHg7XFxyXFxuICAgIG1pbi1oZWlnaHQ6IDUwcHg7XFxyXFxuICAgIHdpZHRoOiAyMDBweDtcXHJcXG4gICAgcGFkZGluZzogMTBweCAxNXB4O1xcclxcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xcclxcbiAgICBjb2xvcjogIzRiNGI0YjtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcXHJcXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vQ29tcG9uZW50cy9SZXF1ZXN0U21zL3N0eWxlcy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLHNCQUFzQjtJQUN0QixZQUFZO0lBQ1osa0NBQWtDO0lBQ2xDLGFBQWE7SUFDYixjQUFjO0FBQ2xCO0FBQ0E7SUFDSSxXQUFXO0lBQ1gsYUFBYTtJQUNiLDZCQUE2QjtJQUM3QixxQkFBcUI7SUFDckIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixtQkFBbUI7SUFDbkIsZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxtQkFBbUI7SUFDbkIsa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxhQUFhO0lBQ2IsNkJBQTZCO0lBQzdCLG1CQUFtQjtJQUNuQixzQkFBc0I7SUFDdEIsZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxZQUFZO0lBQ1osYUFBYTtJQUNiLG1CQUFtQjtJQUNuQiw4QkFBOEI7QUFDbEM7QUFDQTtJQUNJLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGNBQWM7SUFDZCx5QkFBeUI7QUFDN0I7QUFDQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGNBQWM7SUFDZCx5QkFBeUI7QUFDN0I7QUFDQTtJQUNJLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGNBQWM7SUFDZCx5QkFBeUI7QUFDN0JcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLnJlcXVlc3QtY29udGFpbmVyIHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAgd2lkdGg6IDMyMHB4O1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjExIDIyOCAyNDUpO1xcclxcbiAgICBwYWRkaW5nOiAxMHB4O1xcclxcbiAgICBjb2xvcjogIzFiMWIxYjtcXHJcXG59XFxyXFxuLnJlcXVlc3QtYnV0dG9ucy1jb250YWluZXIge1xcclxcbiAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XFxyXFxuICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgbWFyZ2luLXRvcDogYXV0bztcXHJcXG59XFxyXFxuXFxyXFxuLm9yZGVyLWNvbnRhaW5lciB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIHBhZGRpbmc6IDBweCAxMCU7XFxyXFxufVxcclxcbi5vcmRlci1pdGVtIHtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogMTVweDtcXHJcXG4gICAgbWFyZ2luLWJvdHRvbTogN3B4O1xcclxcbn1cXHJcXG4uZmllbGQtZmxleCB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xcclxcbn1cXHJcXG4uaW5wdXQtY29udGFpbmVyIHtcXHJcXG4gICAgcGFkZGluZzogNXB4O1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxyXFxufVxcclxcbi50ZXh0LWlucHV0IHtcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIHBhZGRpbmc6IDEwcHggMTVweDtcXHJcXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcXHJcXG4gICAgY29sb3I6ICM0YjRiNGI7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XFxyXFxufVxcclxcbi5ibG9jay10ZXh0IHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbn1cXHJcXG4uYmxvY2staGVhZGVyLXRleHQge1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxuICAgIGZvbnQtc2l6ZTogMTVweDtcXHJcXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcXHJcXG59XFxyXFxuLmlucHV0LXRleHQge1xcclxcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xcclxcbiAgICBtaW4taGVpZ2h0OiAzMHB4O1xcclxcbiAgICBtYXgtaGVpZ2h0OiAxODBweDtcXHJcXG4gICAgb3ZlcmZsb3cteTogYXV0bztcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIHBhZGRpbmc6IDEwcHggMTVweDtcXHJcXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcXHJcXG4gICAgY29sb3I6ICM0YjRiNGI7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XFxyXFxufVxcclxcbi50ZXh0LWFyZWEtaW5wdXR7XFxyXFxuICAgIHJlc2l6ZTogdmVydGljYWw7XFxyXFxuICAgIG1heC1oZWlnaHQ6IDgwcHg7XFxyXFxuICAgIG1pbi1oZWlnaHQ6IDUwcHg7XFxyXFxuICAgIHdpZHRoOiAyMDBweDtcXHJcXG4gICAgcGFkZGluZzogMTBweCAxNXB4O1xcclxcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xcclxcbiAgICBjb2xvcjogIzRiNGI0YjtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcXHJcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5sb2NhbHMgPSB7XG5cdFwicmVxdWVzdC1jb250YWluZXJcIjogXCJyZXF1ZXN0LWNvbnRhaW5lci1fT25EOFwiLFxuXHRcInJlcXVlc3RDb250YWluZXJcIjogXCJyZXF1ZXN0LWNvbnRhaW5lci1fT25EOFwiLFxuXHRcInJlcXVlc3QtYnV0dG9ucy1jb250YWluZXJcIjogXCJyZXF1ZXN0LWJ1dHRvbnMtY29udGFpbmVyLXppbWVyXCIsXG5cdFwicmVxdWVzdEJ1dHRvbnNDb250YWluZXJcIjogXCJyZXF1ZXN0LWJ1dHRvbnMtY29udGFpbmVyLXppbWVyXCIsXG5cdFwib3JkZXItY29udGFpbmVyXCI6IFwib3JkZXItY29udGFpbmVyLUc1cWxGXCIsXG5cdFwib3JkZXJDb250YWluZXJcIjogXCJvcmRlci1jb250YWluZXItRzVxbEZcIixcblx0XCJvcmRlci1pdGVtXCI6IFwib3JkZXItaXRlbS1JNTdlcFwiLFxuXHRcIm9yZGVySXRlbVwiOiBcIm9yZGVyLWl0ZW0tSTU3ZXBcIixcblx0XCJmaWVsZC1mbGV4XCI6IFwiZmllbGQtZmxleC1yS0Zob1wiLFxuXHRcImZpZWxkRmxleFwiOiBcImZpZWxkLWZsZXgtcktGaG9cIixcblx0XCJpbnB1dC1jb250YWluZXJcIjogXCJpbnB1dC1jb250YWluZXItdTZ3Yk5cIixcblx0XCJpbnB1dENvbnRhaW5lclwiOiBcImlucHV0LWNvbnRhaW5lci11NndiTlwiLFxuXHRcInRleHQtaW5wdXRcIjogXCJ0ZXh0LWlucHV0LWg0cWtZXCIsXG5cdFwidGV4dElucHV0XCI6IFwidGV4dC1pbnB1dC1oNHFrWVwiLFxuXHRcImJsb2NrLXRleHRcIjogXCJibG9jay10ZXh0LW95Znc0XCIsXG5cdFwiYmxvY2tUZXh0XCI6IFwiYmxvY2stdGV4dC1veWZ3NFwiLFxuXHRcImJsb2NrLWhlYWRlci10ZXh0XCI6IFwiYmxvY2staGVhZGVyLXRleHQtSmNMNFNcIixcblx0XCJibG9ja0hlYWRlclRleHRcIjogXCJibG9jay1oZWFkZXItdGV4dC1KY0w0U1wiLFxuXHRcImlucHV0LXRleHRcIjogXCJpbnB1dC10ZXh0LUNLYVVqXCIsXG5cdFwiaW5wdXRUZXh0XCI6IFwiaW5wdXQtdGV4dC1DS2FValwiLFxuXHRcInRleHQtYXJlYS1pbnB1dFwiOiBcInRleHQtYXJlYS1pbnB1dC1Sc2VRSlwiLFxuXHRcInRleHRBcmVhSW5wdXRcIjogXCJ0ZXh0LWFyZWEtaW5wdXQtUnNlUUpcIlxufTtcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIuY2FyZC1zZXJ2aWNlLUdUSXBXe1xcclxcbiAgICB3aWR0aDogNTUwcHg7XFxyXFxuICAgIG1hcmdpbjogMjBweCAwcHg7XFxyXFxuICAgIHBhZGRpbmc6IDE1cHg7XFxyXFxuICAgIGJveC1zaGFkb3c6IDBweCAwcHggNXB4IHJnYig0MCwgMTI5LCAyMDYpO1xcclxcbn1cXHJcXG4udGl0bGUtc2VydmljZS1CcjlhU3tcXHJcXG4gICAgZm9udC1zaXplOiAzMHB4O1xcclxcbn1cXHJcXG4uZGlzY3JpcHRpb24tc2VydmljZS1iVWh5X3tcXHJcXG4gICAgbWFyZ2luOiAxMHB4IDBweDtcXHJcXG59XFxyXFxuLmJsb2NrLWltYWdlLW9nY1BHe1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYXJvdW5kO1xcclxcbiAgICBtYXJnaW46IDEwcHggMHB4O1xcclxcbn1cXHJcXG4uaW1hZ2Utc2VydmljZS13NXJYdntcXHJcXG4gICAgd2lkdGg6IDQwMHB4O1xcclxcbiAgICBoZWlnaHQ6IDIwMHB4O1xcclxcbiAgICBib3gtc2hhZG93OiAwcHggMHB4IDJweCByZ2IoNDAsIDEyOSwgMjA2KTtcXHJcXG59XFxyXFxuQG1lZGlhIChtYXgtd2lkdGg6IDUwMHB4KSB7XFxyXFxuICAgIC5jYXJkLXNlcnZpY2UtR1RJcFd7XFxyXFxuICAgICAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgfVxcclxcbiAgICAuaW1hZ2Utc2VydmljZS13NXJYdntcXHJcXG4gICAgICAgIHdpZHRoOiAzMDBweDtcXHJcXG4gICAgfVxcclxcbn1cXHJcXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9Db21wb25lbnRzL1NlcnZpY2Uvc3R5bGVzLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLHlDQUF5QztBQUM3QztBQUNBO0lBQ0ksZUFBZTtBQUNuQjtBQUNBO0lBQ0ksZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxhQUFhO0lBQ2IsNEJBQTRCO0lBQzVCLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksWUFBWTtJQUNaLGFBQWE7SUFDYix5Q0FBeUM7QUFDN0M7QUFDQTtJQUNJO1FBQ0ksV0FBVztJQUNmO0lBQ0E7UUFDSSxZQUFZO0lBQ2hCO0FBQ0pcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLmNhcmQtc2VydmljZXtcXHJcXG4gICAgd2lkdGg6IDU1MHB4O1xcclxcbiAgICBtYXJnaW46IDIwcHggMHB4O1xcclxcbiAgICBwYWRkaW5nOiAxNXB4O1xcclxcbiAgICBib3gtc2hhZG93OiAwcHggMHB4IDVweCByZ2IoNDAsIDEyOSwgMjA2KTtcXHJcXG59XFxyXFxuLnRpdGxlLXNlcnZpY2V7XFxyXFxuICAgIGZvbnQtc2l6ZTogMzBweDtcXHJcXG59XFxyXFxuLmRpc2NyaXB0aW9uLXNlcnZpY2V7XFxyXFxuICAgIG1hcmdpbjogMTBweCAwcHg7XFxyXFxufVxcclxcbi5ibG9jay1pbWFnZXtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OnNwYWNlLWFyb3VuZDtcXHJcXG4gICAgbWFyZ2luOiAxMHB4IDBweDtcXHJcXG59XFxyXFxuLmltYWdlLXNlcnZpY2V7XFxyXFxuICAgIHdpZHRoOiA0MDBweDtcXHJcXG4gICAgaGVpZ2h0OiAyMDBweDtcXHJcXG4gICAgYm94LXNoYWRvdzogMHB4IDBweCAycHggcmdiKDQwLCAxMjksIDIwNik7XFxyXFxufVxcclxcbkBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xcclxcbiAgICAuY2FyZC1zZXJ2aWNle1xcclxcbiAgICAgICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIH1cXHJcXG4gICAgLmltYWdlLXNlcnZpY2V7XFxyXFxuICAgICAgICB3aWR0aDogMzAwcHg7XFxyXFxuICAgIH1cXHJcXG59XFxyXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5sb2NhbHMgPSB7XG5cdFwiY2FyZC1zZXJ2aWNlXCI6IFwiY2FyZC1zZXJ2aWNlLUdUSXBXXCIsXG5cdFwiY2FyZFNlcnZpY2VcIjogXCJjYXJkLXNlcnZpY2UtR1RJcFdcIixcblx0XCJ0aXRsZS1zZXJ2aWNlXCI6IFwidGl0bGUtc2VydmljZS1CcjlhU1wiLFxuXHRcInRpdGxlU2VydmljZVwiOiBcInRpdGxlLXNlcnZpY2UtQnI5YVNcIixcblx0XCJkaXNjcmlwdGlvbi1zZXJ2aWNlXCI6IFwiZGlzY3JpcHRpb24tc2VydmljZS1iVWh5X1wiLFxuXHRcImRpc2NyaXB0aW9uU2VydmljZVwiOiBcImRpc2NyaXB0aW9uLXNlcnZpY2UtYlVoeV9cIixcblx0XCJibG9jay1pbWFnZVwiOiBcImJsb2NrLWltYWdlLW9nY1BHXCIsXG5cdFwiYmxvY2tJbWFnZVwiOiBcImJsb2NrLWltYWdlLW9nY1BHXCIsXG5cdFwiaW1hZ2Utc2VydmljZVwiOiBcImltYWdlLXNlcnZpY2UtdzVyWHZcIixcblx0XCJpbWFnZVNlcnZpY2VcIjogXCJpbWFnZS1zZXJ2aWNlLXc1clh2XCJcbn07XG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLmNvbnRhaW5lci1zbGlkZXItUWt4M1gge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG59XFxyXFxuLnNsaWRlci1Wd1FBWiB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIHdpZHRoOiA3MCU7XFxyXFxuICAgIGhlaWdodDogMjgwcHg7XFxyXFxufVxcclxcbi5idXR0b24tbmF2aWdhdGlvbi1mYjhuQyB7XFxyXFxuICAgIHdpZHRoOiBmaXQtY29udGVudDtcXHJcXG4gICAgaGVpZ2h0OiAxMDBweDtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG59XFxyXFxuLmJ1dHRvbi1uYXZpZ2F0aW9uLWZiOG5DID4gaW1nIHtcXHJcXG4gICAgd2lkdGg6IDMwcHg7XFxyXFxuICAgIGhlaWdodDogMzBweDtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogMTUlO1xcclxcbiAgICBmb250LXNpemU6IDE1cHg7XFxyXFxuICAgIGhlaWdodDogZml0LWNvbnRlbnQ7XFxyXFxuICAgIHdpZHRoOiBmaXQtY29udGVudDtcXHJcXG4gICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4zcztcXHJcXG59XFxyXFxuLmJ1dHRvbi1uYXZpZ2F0aW9uLWZiOG5DID4gaW1nOmhvdmVyIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI2LCA4NSwgMTM3KTtcXHJcXG59XFxyXFxuLnNsaWRlci1pdGVtLUVqaHBFIHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcclxcbiAgICBmbG9hdDogbGVmdDtcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIGhlaWdodDogMTAwJTtcXHJcXG4gICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogY29sb3IsIGJhY2tncm91bmQtY29sb3I7XFxyXFxuICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDAuM3M7XFxyXFxufVxcclxcbi5zbGlkZXItaW1hZ2UtQ2pXYkQge1xcclxcbiAgICB3aWR0aDogNjcwcHg7XFxyXFxuICAgIGhlaWdodDogMjgwcHg7XFxyXFxufVxcclxcbkBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xcclxcbiAgICAuYnV0dG9uLW5hdmlnYXRpb24tZmI4bkMge1xcclxcbiAgICAgICAgaGVpZ2h0OiAwO1xcclxcbiAgICB9XFxyXFxuICAgIC5zbGlkZXItaW1hZ2UtQ2pXYkQge1xcclxcbiAgICAgICAgd2lkdGg6IDI4MHB4O1xcclxcbiAgICAgICAgaGVpZ2h0OiAyNTBweDtcXHJcXG4gICAgfVxcclxcbiAgICAuc2xpZGVyLVZ3UUFaIHtcXHJcXG4gICAgICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICB9XFxyXFxuICAgIC5idXR0b24tbmF2aWdhdGlvbi1mYjhuQyA+IGltZyB7XFxyXFxuICAgICAgICB3aWR0aDogMjhweDtcXHJcXG4gICAgICAgIGhlaWdodDogNzVweDtcXHJcXG4gICAgfVxcclxcbn1cXHJcXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9Db21wb25lbnRzL1NsaWRlci9zdHlsZXMuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtBQUMzQjtBQUNBO0lBQ0ksYUFBYTtJQUNiLFVBQVU7SUFDVixhQUFhO0FBQ2pCO0FBQ0E7SUFDSSxrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLGVBQWU7QUFDbkI7QUFDQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixtQkFBbUI7SUFDbkIsa0JBQWtCO0lBQ2xCLHlCQUF5QjtBQUM3QjtBQUNBO0lBQ0ksa0NBQWtDO0FBQ3RDO0FBQ0E7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLDhCQUE4QjtJQUM5QixXQUFXO0lBQ1gsV0FBVztJQUNYLFlBQVk7SUFDWiw0Q0FBNEM7SUFDNUMseUJBQXlCO0FBQzdCO0FBQ0E7SUFDSSxZQUFZO0lBQ1osYUFBYTtBQUNqQjtBQUNBO0lBQ0k7UUFDSSxTQUFTO0lBQ2I7SUFDQTtRQUNJLFlBQVk7UUFDWixhQUFhO0lBQ2pCO0lBQ0E7UUFDSSxXQUFXO0lBQ2Y7SUFDQTtRQUNJLFdBQVc7UUFDWCxZQUFZO0lBQ2hCO0FBQ0pcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLmNvbnRhaW5lci1zbGlkZXIge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG59XFxyXFxuLnNsaWRlciB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIHdpZHRoOiA3MCU7XFxyXFxuICAgIGhlaWdodDogMjgwcHg7XFxyXFxufVxcclxcbi5idXR0b24tbmF2aWdhdGlvbiB7XFxyXFxuICAgIHdpZHRoOiBmaXQtY29udGVudDtcXHJcXG4gICAgaGVpZ2h0OiAxMDBweDtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG59XFxyXFxuLmJ1dHRvbi1uYXZpZ2F0aW9uID4gaW1nIHtcXHJcXG4gICAgd2lkdGg6IDMwcHg7XFxyXFxuICAgIGhlaWdodDogMzBweDtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogMTUlO1xcclxcbiAgICBmb250LXNpemU6IDE1cHg7XFxyXFxuICAgIGhlaWdodDogZml0LWNvbnRlbnQ7XFxyXFxuICAgIHdpZHRoOiBmaXQtY29udGVudDtcXHJcXG4gICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4zcztcXHJcXG59XFxyXFxuLmJ1dHRvbi1uYXZpZ2F0aW9uID4gaW1nOmhvdmVyIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI2LCA4NSwgMTM3KTtcXHJcXG59XFxyXFxuLnNsaWRlci1pdGVtIHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcclxcbiAgICBmbG9hdDogbGVmdDtcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIGhlaWdodDogMTAwJTtcXHJcXG4gICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogY29sb3IsIGJhY2tncm91bmQtY29sb3I7XFxyXFxuICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDAuM3M7XFxyXFxufVxcclxcbi5zbGlkZXItaW1hZ2Uge1xcclxcbiAgICB3aWR0aDogNjcwcHg7XFxyXFxuICAgIGhlaWdodDogMjgwcHg7XFxyXFxufVxcclxcbkBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xcclxcbiAgICAuYnV0dG9uLW5hdmlnYXRpb24ge1xcclxcbiAgICAgICAgaGVpZ2h0OiAwO1xcclxcbiAgICB9XFxyXFxuICAgIC5zbGlkZXItaW1hZ2Uge1xcclxcbiAgICAgICAgd2lkdGg6IDI4MHB4O1xcclxcbiAgICAgICAgaGVpZ2h0OiAyNTBweDtcXHJcXG4gICAgfVxcclxcbiAgICAuc2xpZGVyIHtcXHJcXG4gICAgICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICB9XFxyXFxuICAgIC5idXR0b24tbmF2aWdhdGlvbiA+IGltZyB7XFxyXFxuICAgICAgICB3aWR0aDogMjhweDtcXHJcXG4gICAgICAgIGhlaWdodDogNzVweDtcXHJcXG4gICAgfVxcclxcbn1cXHJcXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmxvY2FscyA9IHtcblx0XCJjb250YWluZXItc2xpZGVyXCI6IFwiY29udGFpbmVyLXNsaWRlci1Ra3gzWFwiLFxuXHRcImNvbnRhaW5lclNsaWRlclwiOiBcImNvbnRhaW5lci1zbGlkZXItUWt4M1hcIixcblx0XCJzbGlkZXJcIjogXCJzbGlkZXItVndRQVpcIixcblx0XCJidXR0b24tbmF2aWdhdGlvblwiOiBcImJ1dHRvbi1uYXZpZ2F0aW9uLWZiOG5DXCIsXG5cdFwiYnV0dG9uTmF2aWdhdGlvblwiOiBcImJ1dHRvbi1uYXZpZ2F0aW9uLWZiOG5DXCIsXG5cdFwic2xpZGVyLWl0ZW1cIjogXCJzbGlkZXItaXRlbS1FamhwRVwiLFxuXHRcInNsaWRlckl0ZW1cIjogXCJzbGlkZXItaXRlbS1FamhwRVwiLFxuXHRcInNsaWRlci1pbWFnZVwiOiBcInNsaWRlci1pbWFnZS1DaldiRFwiLFxuXHRcInNsaWRlckltYWdlXCI6IFwic2xpZGVyLWltYWdlLUNqV2JEXCJcbn07XG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLmJsb2NrLXNwZWNpYWxpc3QtbEx1QVR7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgIHdpZHRoOiA1MCU7XFxyXFxuICAgIHBhZGRpbmc6IDEwcHg7XFxyXFxuICAgIGJveC1zaGFkb3c6IDBweCAwcHggNXB4IHJnYig0NCwgMTQ1LCAyMzMpO1xcclxcbiAgICBtYXJnaW46IDE1cHggMDtcXHJcXG59XFxyXFxuLmluZm8tc3BlY2lhbGlzdC1hZ3JVZHtcXHJcXG4gICAgZm9udC1zaXplOiAxOHB4O1xcclxcbiAgICBwYWRkaW5nOiA5cHg7XFxyXFxuICAgIGNvbG9yOiAjMTI1MzhiO1xcclxcbn1cXHJcXG4uZmlvLUhnOXhWe1xcclxcbiAgICBmb250LXNpemU6IDI1cHg7XFxyXFxuICAgIGNvbG9yOiAjMTI1MzhiO1xcclxcbn1cXHJcXG4uaW1hZ2UtaW5mby1jb250YWN0cy1XR2RxWSB7XFxyXFxuICAgIHdpZHRoOiAzMHB4O1xcclxcbiAgICBoZWlnaHQ6IDMwcHg7XFxyXFxufVxcclxcbi5hbGwtaW5mby1GYkhxN3tcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAgZm9udC1zaXplOiAxOHB4O1xcclxcbiAgICBwYWRkaW5nOiA5cHg7XFxyXFxuICAgIGNvbG9yOiAjMTI1MzhiO1xcclxcbn1cXHJcXG5AbWVkaWEgKG1heC13aWR0aDogNTAwcHgpIHtcXHJcXG4gICAgLmJsb2NrLXNwZWNpYWxpc3QtbEx1QVR7XFxyXFxuICAgICAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgfVxcclxcbn1cXHJcXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9Db21wb25lbnRzL1NwZWNpYWxpc3Qvc3R5bGVzLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsVUFBVTtJQUNWLGFBQWE7SUFDYix5Q0FBeUM7SUFDekMsY0FBYztBQUNsQjtBQUNBO0lBQ0ksZUFBZTtJQUNmLFlBQVk7SUFDWixjQUFjO0FBQ2xCO0FBQ0E7SUFDSSxlQUFlO0lBQ2YsY0FBYztBQUNsQjtBQUNBO0lBQ0ksV0FBVztJQUNYLFlBQVk7QUFDaEI7QUFDQTtJQUNJLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsZUFBZTtJQUNmLFlBQVk7SUFDWixjQUFjO0FBQ2xCO0FBQ0E7SUFDSTtRQUNJLFdBQVc7SUFDZjtBQUNKXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5ibG9jay1zcGVjaWFsaXN0e1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICB3aWR0aDogNTAlO1xcclxcbiAgICBwYWRkaW5nOiAxMHB4O1xcclxcbiAgICBib3gtc2hhZG93OiAwcHggMHB4IDVweCByZ2IoNDQsIDE0NSwgMjMzKTtcXHJcXG4gICAgbWFyZ2luOiAxNXB4IDA7XFxyXFxufVxcclxcbi5pbmZvLXNwZWNpYWxpc3R7XFxyXFxuICAgIGZvbnQtc2l6ZTogMThweDtcXHJcXG4gICAgcGFkZGluZzogOXB4O1xcclxcbiAgICBjb2xvcjogIzEyNTM4YjtcXHJcXG59XFxyXFxuLmZpb3tcXHJcXG4gICAgZm9udC1zaXplOiAyNXB4O1xcclxcbiAgICBjb2xvcjogIzEyNTM4YjtcXHJcXG59XFxyXFxuLmltYWdlLWluZm8tY29udGFjdHMge1xcclxcbiAgICB3aWR0aDogMzBweDtcXHJcXG4gICAgaGVpZ2h0OiAzMHB4O1xcclxcbn1cXHJcXG4uYWxsLWluZm97XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIGZvbnQtc2l6ZTogMThweDtcXHJcXG4gICAgcGFkZGluZzogOXB4O1xcclxcbiAgICBjb2xvcjogIzEyNTM4YjtcXHJcXG59XFxyXFxuQG1lZGlhIChtYXgtd2lkdGg6IDUwMHB4KSB7XFxyXFxuICAgIC5ibG9jay1zcGVjaWFsaXN0e1xcclxcbiAgICAgICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIH1cXHJcXG59XFxyXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5sb2NhbHMgPSB7XG5cdFwiYmxvY2stc3BlY2lhbGlzdFwiOiBcImJsb2NrLXNwZWNpYWxpc3QtbEx1QVRcIixcblx0XCJibG9ja1NwZWNpYWxpc3RcIjogXCJibG9jay1zcGVjaWFsaXN0LWxMdUFUXCIsXG5cdFwiaW5mby1zcGVjaWFsaXN0XCI6IFwiaW5mby1zcGVjaWFsaXN0LWFnclVkXCIsXG5cdFwiaW5mb1NwZWNpYWxpc3RcIjogXCJpbmZvLXNwZWNpYWxpc3QtYWdyVWRcIixcblx0XCJmaW9cIjogXCJmaW8tSGc5eFZcIixcblx0XCJpbWFnZS1pbmZvLWNvbnRhY3RzXCI6IFwiaW1hZ2UtaW5mby1jb250YWN0cy1XR2RxWVwiLFxuXHRcImltYWdlSW5mb0NvbnRhY3RzXCI6IFwiaW1hZ2UtaW5mby1jb250YWN0cy1XR2RxWVwiLFxuXHRcImFsbC1pbmZvXCI6IFwiYWxsLWluZm8tRmJIcTdcIixcblx0XCJhbGxJbmZvXCI6IFwiYWxsLWluZm8tRmJIcTdcIlxufTtcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIuYmxvY2stdHlwZS1kb2N0b3ItQ1d0anUge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgaGVpZ2h0OiA3MHB4O1xcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICAgIHBhZGRpbmc6IDVweDtcXHJcXG4gICAgYm94LXNoYWRvdzogMHB4IDBweCA1cHggcmdiKDQwLCAxMjksIDIwNik7XFxyXFxuICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDAuM3M7XFxyXFxuICAgIC13ZWJraXQtdG91Y2gtY2FsbG91dDogbm9uZTsgLyogaU9TIFNhZmFyaSAqL1xcclxcbiAgICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lOyAgIC8qIENocm9tZS9TYWZhcmkvT3BlcmEgKi9cXHJcXG4gICAgLWtodG1sLXVzZXItc2VsZWN0OiBub25lOyAgICAvKiBLb25xdWVyb3IgKi9cXHJcXG4gICAgLW1vei11c2VyLXNlbGVjdDogbm9uZTsgICAgICAvKiBGaXJlZm94ICovXFxyXFxuICAgIC1tcy11c2VyLXNlbGVjdDogbm9uZTsgICAgICAgLyogSW50ZXJuZXQgRXhwbG9yZXIvRWRnZSAqL1xcclxcbiAgICB1c2VyLXNlbGVjdDogbm9uZTtcXHJcXG59XFxyXFxuLmJsb2NrLXR5cGUtZG9jdG9yLUNXdGp1OmhvdmVyIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2IwYzdkYTtcXHJcXG4gICAgYm94LXNoYWRvdzogMHB4IDBweCAxMHB4IHJnYigzMSwgMTAxLCAxNjIpO1xcclxcbn1cXHJcXG4uYmxvY2stdGl0bGUtdnlXV0kge1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxuICAgIGZvbnQtc2l6ZTogMjBweDtcXHJcXG4gICAgY29sb3I6ICMxMjUzOGI7XFxyXFxufVxcclxcblxcclxcbkBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xcclxcbiAgICAuYmxvY2stdGl0bGUtdnlXV0kge1xcclxcbiAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcXHJcXG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcXHJcXG4gICAgfVxcclxcbn1cXHJcXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9Db21wb25lbnRzL1R5cGVEb2N0b3Ivc3R5bGVzLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsdUJBQXVCO0lBQ3ZCLFlBQVk7SUFDWixlQUFlO0lBQ2YsWUFBWTtJQUNaLHlDQUF5QztJQUN6Qyx5QkFBeUI7SUFDekIsMkJBQTJCLEVBQUUsZUFBZTtJQUM1Qyx5QkFBeUIsSUFBSSx3QkFBd0I7SUFDckQsd0JBQXdCLEtBQUssY0FBYztJQUMzQyxzQkFBc0IsT0FBTyxZQUFZO0lBQ3pDLHFCQUFxQixRQUFRLDJCQUEyQjtJQUN4RCxpQkFBaUI7QUFDckI7QUFDQTtJQUNJLHlCQUF5QjtJQUN6QiwwQ0FBMEM7QUFDOUM7QUFDQTtJQUNJLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsY0FBYztBQUNsQjs7QUFFQTtJQUNJO1FBQ0ksZ0JBQWdCO1FBQ2hCLGVBQWU7SUFDbkI7QUFDSlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuYmxvY2stdHlwZS1kb2N0b3Ige1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgaGVpZ2h0OiA3MHB4O1xcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICAgIHBhZGRpbmc6IDVweDtcXHJcXG4gICAgYm94LXNoYWRvdzogMHB4IDBweCA1cHggcmdiKDQwLCAxMjksIDIwNik7XFxyXFxuICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDAuM3M7XFxyXFxuICAgIC13ZWJraXQtdG91Y2gtY2FsbG91dDogbm9uZTsgLyogaU9TIFNhZmFyaSAqL1xcclxcbiAgICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lOyAgIC8qIENocm9tZS9TYWZhcmkvT3BlcmEgKi9cXHJcXG4gICAgLWtodG1sLXVzZXItc2VsZWN0OiBub25lOyAgICAvKiBLb25xdWVyb3IgKi9cXHJcXG4gICAgLW1vei11c2VyLXNlbGVjdDogbm9uZTsgICAgICAvKiBGaXJlZm94ICovXFxyXFxuICAgIC1tcy11c2VyLXNlbGVjdDogbm9uZTsgICAgICAgLyogSW50ZXJuZXQgRXhwbG9yZXIvRWRnZSAqL1xcclxcbiAgICB1c2VyLXNlbGVjdDogbm9uZTtcXHJcXG59XFxyXFxuLmJsb2NrLXR5cGUtZG9jdG9yOmhvdmVyIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2IwYzdkYTtcXHJcXG4gICAgYm94LXNoYWRvdzogMHB4IDBweCAxMHB4IHJnYigzMSwgMTAxLCAxNjIpO1xcclxcbn1cXHJcXG4uYmxvY2stdGl0bGUge1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxuICAgIGZvbnQtc2l6ZTogMjBweDtcXHJcXG4gICAgY29sb3I6ICMxMjUzOGI7XFxyXFxufVxcclxcblxcclxcbkBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xcclxcbiAgICAuYmxvY2stdGl0bGUge1xcclxcbiAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcXHJcXG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcXHJcXG4gICAgfVxcclxcbn1cXHJcXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmxvY2FscyA9IHtcblx0XCJibG9jay10eXBlLWRvY3RvclwiOiBcImJsb2NrLXR5cGUtZG9jdG9yLUNXdGp1XCIsXG5cdFwiYmxvY2tUeXBlRG9jdG9yXCI6IFwiYmxvY2stdHlwZS1kb2N0b3ItQ1d0anVcIixcblx0XCJibG9jay10aXRsZVwiOiBcImJsb2NrLXRpdGxlLXZ5V1dJXCIsXG5cdFwiYmxvY2tUaXRsZVwiOiBcImJsb2NrLXRpdGxlLXZ5V1dJXCJcbn07XG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLm1haW4tcGFnZS1PY1VEc3tcXHJcXG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcXHJcXG59XFxyXFxuLmhlYWRlci10ZXh0LWJ6emxUe1xcclxcbiAgICBmb250LXNpemU6IDMwcHg7XFxyXFxuICAgIG1hcmdpbi10b3A6IDEwcHg7XFxyXFxuICAgIGNvbG9yOiAjMTI1MzhiO1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxufVxcclxcbi5kaXNjcmlwdGlvbi10ZXh0LXBxZElse1xcclxcbiAgICBmb250LXNpemU6IDE1cHg7XFxyXFxuICAgIG1hcmdpbi10b3A6IDE1cHg7XFxyXFxufVxcclxcbi5jb250YWN0cy1maWVsZHMtdlhFZkl7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xcclxcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xcclxcbiAgICBwYWRkaW5nOiA1cHg7XFxyXFxufVxcclxcbi50ZXh0LWZpZWxkLUxQS1BKe1xcclxcbiAgICB3aWR0aDogMzUwcHg7XFxyXFxufVxcclxcbi5ibG9jay1idXR0b24tbktraEd7XFxyXFxuICAgIHdpZHRoOiAzMDBweDtcXHJcXG59XFxyXFxuLm1hcC1maWVsZC14VmlkQXtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxufVxcclxcbi5jb250YWN0cy1tYXAtWFNWUjJ7XFxyXFxuICAgIHdpZHRoOiA1MDBweDtcXHJcXG59XFxyXFxuLnJlcXVlc3QtY29udGFpbmVyLVg0NXFDe1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICB3aWR0aDogMzI1cHg7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMTEgMjI4IDI0NSk7XFxyXFxuICAgIGJveC1zaGFkb3c6IDBweCAwcHggOHB4IHJnYig0MCwgMTI5LCAyMDYpO1xcclxcbiAgICBwYWRkaW5nOiAxMHB4O1xcclxcbiAgICBjb2xvcjogIzFiMWIxYjtcXHJcXG59XFxyXFxuLnJlcXVlc3QtYnV0dG9ucy1jb250YWluZXItWW9Ga0F7XFxyXFxuICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcXHJcXG4gICAgYWxpZ24tY29udGVudDogY2VudGVyO1xcclxcbiAgICBtYXJnaW4tdG9wOiBhdXRvO1xcclxcbn1cXHJcXG5cXHJcXG4ub3JkZXItY29udGFpbmVyLXRMdnNSIHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAgcGFkZGluZzogMHB4IDEwJTtcXHJcXG59XFxyXFxuLm9yZGVyLWl0ZW0taVdQYmwge1xcclxcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xcclxcbiAgICBtYXJnaW4tYm90dG9tOiA3cHg7XFxyXFxufVxcclxcbi5maWVsZC1mbGV4LVdkVHFZIHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgIG1hcmdpbi10b3A6IDE1cHg7XFxyXFxufVxcclxcbkBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xcclxcbiAgICAuY29udGFjdHMtZmllbGRzLXZYRWZJe1xcclxcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAgfVxcclxcbiAgICAuYmxvY2stYnV0dG9uLW5La2hHe1xcclxcbiAgICAgICAgd2lkdGg6IDkwJTtcXHJcXG4gICAgfVxcclxcbn1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9QYWdlcy9Db250YWN0c1BhZ2Uvc3R5bGVzLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLG1CQUFtQjtBQUN2QjtBQUNBO0lBQ0ksZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixjQUFjO0lBQ2Qsa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxlQUFlO0lBQ2YsZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxhQUFhO0lBQ2IsNkJBQTZCO0lBQzdCLG1CQUFtQjtJQUNuQixZQUFZO0FBQ2hCO0FBQ0E7SUFDSSxZQUFZO0FBQ2hCO0FBQ0E7SUFDSSxZQUFZO0FBQ2hCO0FBQ0E7SUFDSSxhQUFhO0lBQ2IsdUJBQXVCO0FBQzNCO0FBQ0E7SUFDSSxZQUFZO0FBQ2hCO0FBQ0E7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLHNCQUFzQjtJQUN0QixZQUFZO0lBQ1osa0NBQWtDO0lBQ2xDLHlDQUF5QztJQUN6QyxhQUFhO0lBQ2IsY0FBYztBQUNsQjtBQUNBO0lBQ0ksV0FBVztJQUNYLGFBQWE7SUFDYiw2QkFBNkI7SUFDN0IscUJBQXFCO0lBQ3JCLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsbUJBQW1CO0lBQ25CLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksbUJBQW1CO0lBQ25CLGtCQUFrQjtBQUN0QjtBQUNBO0lBQ0ksYUFBYTtJQUNiLDZCQUE2QjtJQUM3QixtQkFBbUI7SUFDbkIsc0JBQXNCO0lBQ3RCLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0k7UUFDSSxzQkFBc0I7SUFDMUI7SUFDQTtRQUNJLFVBQVU7SUFDZDtBQUNKXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5tYWluLXBhZ2V7XFxyXFxuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XFxyXFxufVxcclxcbi5oZWFkZXItdGV4dHtcXHJcXG4gICAgZm9udC1zaXplOiAzMHB4O1xcclxcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xcclxcbiAgICBjb2xvcjogIzEyNTM4YjtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbn1cXHJcXG4uZGlzY3JpcHRpb24tdGV4dHtcXHJcXG4gICAgZm9udC1zaXplOiAxNXB4O1xcclxcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xcclxcbn1cXHJcXG4uY29udGFjdHMtZmllbGRze1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcXHJcXG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcXHJcXG4gICAgcGFkZGluZzogNXB4O1xcclxcbn1cXHJcXG4udGV4dC1maWVsZHtcXHJcXG4gICAgd2lkdGg6IDM1MHB4O1xcclxcbn1cXHJcXG4uYmxvY2stYnV0dG9ue1xcclxcbiAgICB3aWR0aDogMzAwcHg7XFxyXFxufVxcclxcbi5tYXAtZmllbGR7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbn1cXHJcXG4uY29udGFjdHMtbWFwe1xcclxcbiAgICB3aWR0aDogNTAwcHg7XFxyXFxufVxcclxcbi5yZXF1ZXN0LWNvbnRhaW5lcntcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAgd2lkdGg6IDMyNXB4O1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjExIDIyOCAyNDUpO1xcclxcbiAgICBib3gtc2hhZG93OiAwcHggMHB4IDhweCByZ2IoNDAsIDEyOSwgMjA2KTtcXHJcXG4gICAgcGFkZGluZzogMTBweDtcXHJcXG4gICAgY29sb3I6ICMxYjFiMWI7XFxyXFxufVxcclxcbi5yZXF1ZXN0LWJ1dHRvbnMtY29udGFpbmVye1xcclxcbiAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XFxyXFxuICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgbWFyZ2luLXRvcDogYXV0bztcXHJcXG59XFxyXFxuXFxyXFxuLm9yZGVyLWNvbnRhaW5lciB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIHBhZGRpbmc6IDBweCAxMCU7XFxyXFxufVxcclxcbi5vcmRlci1pdGVtIHtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogMTVweDtcXHJcXG4gICAgbWFyZ2luLWJvdHRvbTogN3B4O1xcclxcbn1cXHJcXG4uZmllbGQtZmxleCB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xcclxcbn1cXHJcXG5AbWVkaWEgKG1heC13aWR0aDogNTAwcHgpIHtcXHJcXG4gICAgLmNvbnRhY3RzLWZpZWxkc3tcXHJcXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgIH1cXHJcXG4gICAgLmJsb2NrLWJ1dHRvbntcXHJcXG4gICAgICAgIHdpZHRoOiA5MCU7XFxyXFxuICAgIH1cXHJcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5sb2NhbHMgPSB7XG5cdFwibWFpbi1wYWdlXCI6IFwibWFpbi1wYWdlLU9jVURzXCIsXG5cdFwibWFpblBhZ2VcIjogXCJtYWluLXBhZ2UtT2NVRHNcIixcblx0XCJoZWFkZXItdGV4dFwiOiBcImhlYWRlci10ZXh0LWJ6emxUXCIsXG5cdFwiaGVhZGVyVGV4dFwiOiBcImhlYWRlci10ZXh0LWJ6emxUXCIsXG5cdFwiZGlzY3JpcHRpb24tdGV4dFwiOiBcImRpc2NyaXB0aW9uLXRleHQtcHFkSWxcIixcblx0XCJkaXNjcmlwdGlvblRleHRcIjogXCJkaXNjcmlwdGlvbi10ZXh0LXBxZElsXCIsXG5cdFwiY29udGFjdHMtZmllbGRzXCI6IFwiY29udGFjdHMtZmllbGRzLXZYRWZJXCIsXG5cdFwiY29udGFjdHNGaWVsZHNcIjogXCJjb250YWN0cy1maWVsZHMtdlhFZklcIixcblx0XCJ0ZXh0LWZpZWxkXCI6IFwidGV4dC1maWVsZC1MUEtQSlwiLFxuXHRcInRleHRGaWVsZFwiOiBcInRleHQtZmllbGQtTFBLUEpcIixcblx0XCJibG9jay1idXR0b25cIjogXCJibG9jay1idXR0b24tbktraEdcIixcblx0XCJibG9ja0J1dHRvblwiOiBcImJsb2NrLWJ1dHRvbi1uS2toR1wiLFxuXHRcIm1hcC1maWVsZFwiOiBcIm1hcC1maWVsZC14VmlkQVwiLFxuXHRcIm1hcEZpZWxkXCI6IFwibWFwLWZpZWxkLXhWaWRBXCIsXG5cdFwiY29udGFjdHMtbWFwXCI6IFwiY29udGFjdHMtbWFwLVhTVlIyXCIsXG5cdFwiY29udGFjdHNNYXBcIjogXCJjb250YWN0cy1tYXAtWFNWUjJcIixcblx0XCJyZXF1ZXN0LWNvbnRhaW5lclwiOiBcInJlcXVlc3QtY29udGFpbmVyLVg0NXFDXCIsXG5cdFwicmVxdWVzdENvbnRhaW5lclwiOiBcInJlcXVlc3QtY29udGFpbmVyLVg0NXFDXCIsXG5cdFwicmVxdWVzdC1idXR0b25zLWNvbnRhaW5lclwiOiBcInJlcXVlc3QtYnV0dG9ucy1jb250YWluZXItWW9Ga0FcIixcblx0XCJyZXF1ZXN0QnV0dG9uc0NvbnRhaW5lclwiOiBcInJlcXVlc3QtYnV0dG9ucy1jb250YWluZXItWW9Ga0FcIixcblx0XCJvcmRlci1jb250YWluZXJcIjogXCJvcmRlci1jb250YWluZXItdEx2c1JcIixcblx0XCJvcmRlckNvbnRhaW5lclwiOiBcIm9yZGVyLWNvbnRhaW5lci10THZzUlwiLFxuXHRcIm9yZGVyLWl0ZW1cIjogXCJvcmRlci1pdGVtLWlXUGJsXCIsXG5cdFwib3JkZXJJdGVtXCI6IFwib3JkZXItaXRlbS1pV1BibFwiLFxuXHRcImZpZWxkLWZsZXhcIjogXCJmaWVsZC1mbGV4LVdkVHFZXCIsXG5cdFwiZmllbGRGbGV4XCI6IFwiZmllbGQtZmxleC1XZFRxWVwiXG59O1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIlxcclxcbi5oZWFkZXItdGV4dC1BRGJ0b3tcXHJcXG4gICAgZm9udC1zaXplOiAzMHB4O1xcclxcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xcclxcbiAgICBjb2xvcjogIzEyNTM4YjtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbn1cXHJcXG4uc21hbGwtaGVhZGVyLXRleHQtVTRUMFh7XFxyXFxuICAgIGZvbnQtc2l6ZTogMTZweDtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgICBjb2xvcjogIzMxOGNlNztcXHJcXG59XFxyXFxuLmRpc2NyaXB0aW9uLXRleHQtSWY0M097XFxyXFxuICAgIGZvbnQtc2l6ZTogMjBweDtcXHJcXG4gICAgbWFyZ2luLXRvcDogMTVweDtcXHJcXG59XFxyXFxuLmNhcmRzLWhvc3BpdGFsLVR2dVdpe1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbn1cXHJcXG5AbWVkaWEgKG1heC13aWR0aDogNTAwcHgpIHtcXHJcXG4gICAgLmhlYWRlci10ZXh0LUFEYnRve1xcclxcbiAgICAgICAgZm9udC1zaXplOiAyNHB4O1xcclxcbiAgICAgICAgbWFyZ2luLXRvcDogNXB4O1xcclxcbiAgICB9XFxyXFxuICAgIC5zbWFsbC1oZWFkZXItdGV4dC1VNFQwWHtcXHJcXG4gICAgICAgIGZvbnQtc2l6ZTogMTlweDtcXHJcXG4gICAgICAgIG1hcmdpbi10b3A6IDVweDtcXHJcXG4gICAgfVxcclxcbiAgICAuY2FyZHMtaG9zcGl0YWwtVHZ1V2l7XFxyXFxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICB9XFxyXFxuICAgIC5kaXNjcmlwdGlvbi10ZXh0LUlmNDNPe1xcclxcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgICB9XFxyXFxufVxcclxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL1BhZ2VzL01haW5QYWdlL3N0eWxlcy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIjtBQUNBO0lBQ0ksZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixjQUFjO0lBQ2Qsa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLGNBQWM7QUFDbEI7QUFDQTtJQUNJLGVBQWU7SUFDZixnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLGFBQWE7SUFDYixtQkFBbUI7QUFDdkI7QUFDQTtJQUNJO1FBQ0ksZUFBZTtRQUNmLGVBQWU7SUFDbkI7SUFDQTtRQUNJLGVBQWU7UUFDZixlQUFlO0lBQ25CO0lBQ0E7UUFDSSxzQkFBc0I7SUFDMUI7SUFDQTtRQUNJLGtCQUFrQjtJQUN0QjtBQUNKXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIlxcclxcbi5oZWFkZXItdGV4dHtcXHJcXG4gICAgZm9udC1zaXplOiAzMHB4O1xcclxcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xcclxcbiAgICBjb2xvcjogIzEyNTM4YjtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbn1cXHJcXG4uc21hbGwtaGVhZGVyLXRleHR7XFxyXFxuICAgIGZvbnQtc2l6ZTogMTZweDtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgICBjb2xvcjogIzMxOGNlNztcXHJcXG59XFxyXFxuLmRpc2NyaXB0aW9uLXRleHR7XFxyXFxuICAgIGZvbnQtc2l6ZTogMjBweDtcXHJcXG4gICAgbWFyZ2luLXRvcDogMTVweDtcXHJcXG59XFxyXFxuLmNhcmRzLWhvc3BpdGFse1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbn1cXHJcXG5AbWVkaWEgKG1heC13aWR0aDogNTAwcHgpIHtcXHJcXG4gICAgLmhlYWRlci10ZXh0e1xcclxcbiAgICAgICAgZm9udC1zaXplOiAyNHB4O1xcclxcbiAgICAgICAgbWFyZ2luLXRvcDogNXB4O1xcclxcbiAgICB9XFxyXFxuICAgIC5zbWFsbC1oZWFkZXItdGV4dHtcXHJcXG4gICAgICAgIGZvbnQtc2l6ZTogMTlweDtcXHJcXG4gICAgICAgIG1hcmdpbi10b3A6IDVweDtcXHJcXG4gICAgfVxcclxcbiAgICAuY2FyZHMtaG9zcGl0YWx7XFxyXFxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICB9XFxyXFxuICAgIC5kaXNjcmlwdGlvbi10ZXh0e1xcclxcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgICB9XFxyXFxufVxcclxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ubG9jYWxzID0ge1xuXHRcImhlYWRlci10ZXh0XCI6IFwiaGVhZGVyLXRleHQtQURidG9cIixcblx0XCJoZWFkZXJUZXh0XCI6IFwiaGVhZGVyLXRleHQtQURidG9cIixcblx0XCJzbWFsbC1oZWFkZXItdGV4dFwiOiBcInNtYWxsLWhlYWRlci10ZXh0LVU0VDBYXCIsXG5cdFwic21hbGxIZWFkZXJUZXh0XCI6IFwic21hbGwtaGVhZGVyLXRleHQtVTRUMFhcIixcblx0XCJkaXNjcmlwdGlvbi10ZXh0XCI6IFwiZGlzY3JpcHRpb24tdGV4dC1JZjQzT1wiLFxuXHRcImRpc2NyaXB0aW9uVGV4dFwiOiBcImRpc2NyaXB0aW9uLXRleHQtSWY0M09cIixcblx0XCJjYXJkcy1ob3NwaXRhbFwiOiBcImNhcmRzLWhvc3BpdGFsLVR2dVdpXCIsXG5cdFwiY2FyZHNIb3NwaXRhbFwiOiBcImNhcmRzLWhvc3BpdGFsLVR2dVdpXCJcbn07XG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLmhlYWRlci10ZXh0LVBsMG9Be1xcclxcbiAgICBmb250LXNpemU6IDMwcHg7XFxyXFxuICAgIG1hcmdpbi10b3A6IDEwcHg7XFxyXFxuICAgIGNvbG9yOiAjMTI1MzhiO1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxufVxcclxcbi5kaXNjcmlwdGlvbi10ZXh0LW5lR1dTe1xcclxcbiAgICBmb250LXNpemU6IDIwcHg7XFxyXFxuICAgIG1hcmdpbi10b3A6IDE1cHg7XFxyXFxufVxcclxcbi5jbGllbnQtdGV4dC1iWmlRY3tcXHJcXG4gICAgZm9udC1zaXplOiAxN3B4O1xcclxcbiAgICBtYXJnaW46IDVweDtcXHJcXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vUGFnZXMvUHJldmlld3NQYWdlL3N0eWxlcy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLGNBQWM7SUFDZCxrQkFBa0I7QUFDdEI7QUFDQTtJQUNJLGVBQWU7SUFDZixnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLGVBQWU7SUFDZixXQUFXO0FBQ2ZcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLmhlYWRlci10ZXh0e1xcclxcbiAgICBmb250LXNpemU6IDMwcHg7XFxyXFxuICAgIG1hcmdpbi10b3A6IDEwcHg7XFxyXFxuICAgIGNvbG9yOiAjMTI1MzhiO1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxufVxcclxcbi5kaXNjcmlwdGlvbi10ZXh0e1xcclxcbiAgICBmb250LXNpemU6IDIwcHg7XFxyXFxuICAgIG1hcmdpbi10b3A6IDE1cHg7XFxyXFxufVxcclxcbi5jbGllbnQtdGV4dHtcXHJcXG4gICAgZm9udC1zaXplOiAxN3B4O1xcclxcbiAgICBtYXJnaW46IDVweDtcXHJcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5sb2NhbHMgPSB7XG5cdFwiaGVhZGVyLXRleHRcIjogXCJoZWFkZXItdGV4dC1QbDBvQVwiLFxuXHRcImhlYWRlclRleHRcIjogXCJoZWFkZXItdGV4dC1QbDBvQVwiLFxuXHRcImRpc2NyaXB0aW9uLXRleHRcIjogXCJkaXNjcmlwdGlvbi10ZXh0LW5lR1dTXCIsXG5cdFwiZGlzY3JpcHRpb25UZXh0XCI6IFwiZGlzY3JpcHRpb24tdGV4dC1uZUdXU1wiLFxuXHRcImNsaWVudC10ZXh0XCI6IFwiY2xpZW50LXRleHQtYlppUWNcIixcblx0XCJjbGllbnRUZXh0XCI6IFwiY2xpZW50LXRleHQtYlppUWNcIlxufTtcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIuaGVhZGVyLXRleHQtemZjU3d7XFxyXFxuICAgIGZvbnQtc2l6ZTogMzBweDtcXHJcXG4gICAgbWFyZ2luLXRvcDogMTBweDtcXHJcXG4gICAgY29sb3I6ICMxMjUzOGI7XFxyXFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG59XFxyXFxuLmxpc3Qtc2VydmljZXMtcnQ2dG57XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxufVxcclxcbi50aXRsZS1zZXJ2aWNlLU5MYnhoe1xcclxcbiAgICBwYWRkaW5nLWlubGluZTogMjAwcHg7XFxyXFxuICAgIGZvbnQtc2l6ZTogMjVweDtcXHJcXG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcXHJcXG59XFxyXFxuQG1lZGlhIChtYXgtd2lkdGg6IDUwMHB4KSB7XFxyXFxuICAgIC50aXRsZS1zZXJ2aWNlLU5MYnhoe1xcclxcbiAgICAgICAgcGFkZGluZy1pbmxpbmU6IDBweDtcXHJcXG4gICAgfVxcclxcbn1cXHJcXG5cXHJcXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9QYWdlcy9TZXJ2aWNlc1BhZ2Uvc3R5bGVzLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsY0FBYztJQUNkLGtCQUFrQjtBQUN0QjtBQUNBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixtQkFBbUI7QUFDdkI7QUFDQTtJQUNJLHFCQUFxQjtJQUNyQixlQUFlO0lBQ2YsbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSTtRQUNJLG1CQUFtQjtJQUN2QjtBQUNKXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5oZWFkZXItdGV4dHtcXHJcXG4gICAgZm9udC1zaXplOiAzMHB4O1xcclxcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xcclxcbiAgICBjb2xvcjogIzEyNTM4YjtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbn1cXHJcXG4ubGlzdC1zZXJ2aWNlc3tcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG59XFxyXFxuLnRpdGxlLXNlcnZpY2V7XFxyXFxuICAgIHBhZGRpbmctaW5saW5lOiAyMDBweDtcXHJcXG4gICAgZm9udC1zaXplOiAyNXB4O1xcclxcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xcclxcbn1cXHJcXG5AbWVkaWEgKG1heC13aWR0aDogNTAwcHgpIHtcXHJcXG4gICAgLnRpdGxlLXNlcnZpY2V7XFxyXFxuICAgICAgICBwYWRkaW5nLWlubGluZTogMHB4O1xcclxcbiAgICB9XFxyXFxufVxcclxcblxcclxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ubG9jYWxzID0ge1xuXHRcImhlYWRlci10ZXh0XCI6IFwiaGVhZGVyLXRleHQtemZjU3dcIixcblx0XCJoZWFkZXJUZXh0XCI6IFwiaGVhZGVyLXRleHQtemZjU3dcIixcblx0XCJsaXN0LXNlcnZpY2VzXCI6IFwibGlzdC1zZXJ2aWNlcy1ydDZ0blwiLFxuXHRcImxpc3RTZXJ2aWNlc1wiOiBcImxpc3Qtc2VydmljZXMtcnQ2dG5cIixcblx0XCJ0aXRsZS1zZXJ2aWNlXCI6IFwidGl0bGUtc2VydmljZS1OTGJ4aFwiLFxuXHRcInRpdGxlU2VydmljZVwiOiBcInRpdGxlLXNlcnZpY2UtTkxieGhcIlxufTtcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIuaGVhZGVyLXRleHQtbDQ1TEcge1xcclxcbiAgICBmb250LXNpemU6IDMwcHg7XFxyXFxuICAgIG1hcmdpbi10b3A6IDEwcHg7XFxyXFxuICAgIGNvbG9yOiAjMTI1MzhiO1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxufVxcclxcbi5kaXNjcmlwdGlvbi10ZXh0LVlLNnVWIHtcXHJcXG4gICAgZm9udC1zaXplOiAyMHB4O1xcclxcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xcclxcbn1cXHJcXG4uYmxvY2stTWVudS1zcGVjaWFsaXN0cy1RNDhJcyB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbiAgICBwYWRkaW5nLWJvdHRvbTogNXB4O1xcclxcbn1cXHJcXG4ubWVudS1zcGVjaWFsaXN0cy1VN1k0QyB7XFxyXFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxyXFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDQsIDFmcik7XFxyXFxuICAgIGdyaWQtZ2FwOiAyNXB4O1xcclxcbiAgICByb3ctZ2FwOiAyNXB4O1xcclxcbiAgICBtYXJnaW46IDMwcHggYXV0bztcXHJcXG59XFxyXFxuLnRleHQtbGluay1yZXF1ZXN0LVZMb3k2IHtcXHJcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcclxcbiAgICBmb250LXNpemU6IDIycHg7XFxyXFxuICAgIGNvbG9yOiAjMTI1MzhiO1xcclxcbn1cXHJcXG4ubGlzdC1zcGVjaWFsaXN0cy1LWGZXNXtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcXHJcXG59XFxyXFxuLnJlcXVlc3QtY29udGFpbmVyLUVfWFBwe1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICB3aWR0aDogMzI1cHg7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMTEgMjI4IDI0NSk7XFxyXFxuICAgIGJveC1zaGFkb3c6IDBweCAwcHggOHB4IHJnYig0MCwgMTI5LCAyMDYpO1xcclxcbiAgICBwYWRkaW5nOiAxMHB4O1xcclxcbiAgICBjb2xvcjogIzFiMWIxYjtcXHJcXG59XFxyXFxuLnJlcXVlc3QtYnV0dG9ucy1jb250YWluZXItUGl1RU17XFxyXFxuICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcXHJcXG4gICAgYWxpZ24tY29udGVudDogY2VudGVyO1xcclxcbiAgICBtYXJnaW4tdG9wOiBhdXRvO1xcclxcbn1cXHJcXG5cXHJcXG4ub3JkZXItY29udGFpbmVyLUFIamtXIHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAgcGFkZGluZzogMHB4IDEwJTtcXHJcXG59XFxyXFxuLm9yZGVyLWl0ZW0tSnN3TUQge1xcclxcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xcclxcbiAgICBtYXJnaW4tYm90dG9tOiA3cHg7XFxyXFxufVxcclxcbi5maWVsZC1mbGV4LUJLM0JJIHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgIG1hcmdpbi10b3A6IDE1cHg7XFxyXFxufVxcclxcbkBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xcclxcbiAgICAubWVudS1zcGVjaWFsaXN0cy1VN1k0QyB7XFxyXFxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyLCAxZnIpO1xcclxcbiAgICAgICAgZ3JpZC1nYXA6IDEwcHg7XFxyXFxuICAgICAgICByb3ctZ2FwOiAxNXB4O1xcclxcbiAgICB9XFxyXFxuICAgIC5kaXNjcmlwdGlvbi10ZXh0LVlLNnVWIHtcXHJcXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG4gICAgfVxcclxcbn1cXHJcXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9QYWdlcy9TcGVjaWFsaXN0c1BhZ2Uvc3R5bGVzLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsY0FBYztJQUNkLGtCQUFrQjtBQUN0QjtBQUNBO0lBQ0ksZUFBZTtJQUNmLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSxhQUFhO0lBQ2IscUNBQXFDO0lBQ3JDLGNBQWM7SUFDZCxhQUFhO0lBQ2IsaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSSxlQUFlO0lBQ2YsZUFBZTtJQUNmLGNBQWM7QUFDbEI7QUFDQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsbUJBQW1CO0lBQ25CLG1CQUFtQjtBQUN2QjtBQUNBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixzQkFBc0I7SUFDdEIsWUFBWTtJQUNaLGtDQUFrQztJQUNsQyx5Q0FBeUM7SUFDekMsYUFBYTtJQUNiLGNBQWM7QUFDbEI7QUFDQTtJQUNJLFdBQVc7SUFDWCxhQUFhO0lBQ2IsNkJBQTZCO0lBQzdCLHFCQUFxQjtJQUNyQixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLG1CQUFtQjtJQUNuQixnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLG1CQUFtQjtJQUNuQixrQkFBa0I7QUFDdEI7QUFDQTtJQUNJLGFBQWE7SUFDYiw2QkFBNkI7SUFDN0IsbUJBQW1CO0lBQ25CLHNCQUFzQjtJQUN0QixnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJO1FBQ0kscUNBQXFDO1FBQ3JDLGNBQWM7UUFDZCxhQUFhO0lBQ2pCO0lBQ0E7UUFDSSxrQkFBa0I7SUFDdEI7QUFDSlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuaGVhZGVyLXRleHQge1xcclxcbiAgICBmb250LXNpemU6IDMwcHg7XFxyXFxuICAgIG1hcmdpbi10b3A6IDEwcHg7XFxyXFxuICAgIGNvbG9yOiAjMTI1MzhiO1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxufVxcclxcbi5kaXNjcmlwdGlvbi10ZXh0IHtcXHJcXG4gICAgZm9udC1zaXplOiAyMHB4O1xcclxcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xcclxcbn1cXHJcXG4uYmxvY2stTWVudS1zcGVjaWFsaXN0cyB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbiAgICBwYWRkaW5nLWJvdHRvbTogNXB4O1xcclxcbn1cXHJcXG4ubWVudS1zcGVjaWFsaXN0cyB7XFxyXFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxyXFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDQsIDFmcik7XFxyXFxuICAgIGdyaWQtZ2FwOiAyNXB4O1xcclxcbiAgICByb3ctZ2FwOiAyNXB4O1xcclxcbiAgICBtYXJnaW46IDMwcHggYXV0bztcXHJcXG59XFxyXFxuLnRleHQtbGluay1yZXF1ZXN0IHtcXHJcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcclxcbiAgICBmb250LXNpemU6IDIycHg7XFxyXFxuICAgIGNvbG9yOiAjMTI1MzhiO1xcclxcbn1cXHJcXG4ubGlzdC1zcGVjaWFsaXN0c3tcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcXHJcXG59XFxyXFxuLnJlcXVlc3QtY29udGFpbmVye1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICB3aWR0aDogMzI1cHg7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMTEgMjI4IDI0NSk7XFxyXFxuICAgIGJveC1zaGFkb3c6IDBweCAwcHggOHB4IHJnYig0MCwgMTI5LCAyMDYpO1xcclxcbiAgICBwYWRkaW5nOiAxMHB4O1xcclxcbiAgICBjb2xvcjogIzFiMWIxYjtcXHJcXG59XFxyXFxuLnJlcXVlc3QtYnV0dG9ucy1jb250YWluZXJ7XFxyXFxuICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcXHJcXG4gICAgYWxpZ24tY29udGVudDogY2VudGVyO1xcclxcbiAgICBtYXJnaW4tdG9wOiBhdXRvO1xcclxcbn1cXHJcXG5cXHJcXG4ub3JkZXItY29udGFpbmVyIHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAgcGFkZGluZzogMHB4IDEwJTtcXHJcXG59XFxyXFxuLm9yZGVyLWl0ZW0ge1xcclxcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xcclxcbiAgICBtYXJnaW4tYm90dG9tOiA3cHg7XFxyXFxufVxcclxcbi5maWVsZC1mbGV4IHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgIG1hcmdpbi10b3A6IDE1cHg7XFxyXFxufVxcclxcbkBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xcclxcbiAgICAubWVudS1zcGVjaWFsaXN0cyB7XFxyXFxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyLCAxZnIpO1xcclxcbiAgICAgICAgZ3JpZC1nYXA6IDEwcHg7XFxyXFxuICAgICAgICByb3ctZ2FwOiAxNXB4O1xcclxcbiAgICB9XFxyXFxuICAgIC5kaXNjcmlwdGlvbi10ZXh0IHtcXHJcXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG4gICAgfVxcclxcbn1cXHJcXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmxvY2FscyA9IHtcblx0XCJoZWFkZXItdGV4dFwiOiBcImhlYWRlci10ZXh0LWw0NUxHXCIsXG5cdFwiaGVhZGVyVGV4dFwiOiBcImhlYWRlci10ZXh0LWw0NUxHXCIsXG5cdFwiZGlzY3JpcHRpb24tdGV4dFwiOiBcImRpc2NyaXB0aW9uLXRleHQtWUs2dVZcIixcblx0XCJkaXNjcmlwdGlvblRleHRcIjogXCJkaXNjcmlwdGlvbi10ZXh0LVlLNnVWXCIsXG5cdFwiYmxvY2stTWVudS1zcGVjaWFsaXN0c1wiOiBcImJsb2NrLU1lbnUtc3BlY2lhbGlzdHMtUTQ4SXNcIixcblx0XCJibG9ja01lbnVTcGVjaWFsaXN0c1wiOiBcImJsb2NrLU1lbnUtc3BlY2lhbGlzdHMtUTQ4SXNcIixcblx0XCJtZW51LXNwZWNpYWxpc3RzXCI6IFwibWVudS1zcGVjaWFsaXN0cy1VN1k0Q1wiLFxuXHRcIm1lbnVTcGVjaWFsaXN0c1wiOiBcIm1lbnUtc3BlY2lhbGlzdHMtVTdZNENcIixcblx0XCJ0ZXh0LWxpbmstcmVxdWVzdFwiOiBcInRleHQtbGluay1yZXF1ZXN0LVZMb3k2XCIsXG5cdFwidGV4dExpbmtSZXF1ZXN0XCI6IFwidGV4dC1saW5rLXJlcXVlc3QtVkxveTZcIixcblx0XCJsaXN0LXNwZWNpYWxpc3RzXCI6IFwibGlzdC1zcGVjaWFsaXN0cy1LWGZXNVwiLFxuXHRcImxpc3RTcGVjaWFsaXN0c1wiOiBcImxpc3Qtc3BlY2lhbGlzdHMtS1hmVzVcIixcblx0XCJyZXF1ZXN0LWNvbnRhaW5lclwiOiBcInJlcXVlc3QtY29udGFpbmVyLUVfWFBwXCIsXG5cdFwicmVxdWVzdENvbnRhaW5lclwiOiBcInJlcXVlc3QtY29udGFpbmVyLUVfWFBwXCIsXG5cdFwicmVxdWVzdC1idXR0b25zLWNvbnRhaW5lclwiOiBcInJlcXVlc3QtYnV0dG9ucy1jb250YWluZXItUGl1RU1cIixcblx0XCJyZXF1ZXN0QnV0dG9uc0NvbnRhaW5lclwiOiBcInJlcXVlc3QtYnV0dG9ucy1jb250YWluZXItUGl1RU1cIixcblx0XCJvcmRlci1jb250YWluZXJcIjogXCJvcmRlci1jb250YWluZXItQUhqa1dcIixcblx0XCJvcmRlckNvbnRhaW5lclwiOiBcIm9yZGVyLWNvbnRhaW5lci1BSGprV1wiLFxuXHRcIm9yZGVyLWl0ZW1cIjogXCJvcmRlci1pdGVtLUpzd01EXCIsXG5cdFwib3JkZXJJdGVtXCI6IFwib3JkZXItaXRlbS1Kc3dNRFwiLFxuXHRcImZpZWxkLWZsZXhcIjogXCJmaWVsZC1mbGV4LUJLM0JJXCIsXG5cdFwiZmllbGRGbGV4XCI6IFwiZmllbGQtZmxleC1CSzNCSVwiXG59O1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cblxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG5cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCIvKlxub2JqZWN0LWFzc2lnblxuKGMpIFNpbmRyZSBTb3JodXNcbkBsaWNlbnNlIE1JVFxuKi9cblxuJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBwcm9wSXNFbnVtZXJhYmxlID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuZnVuY3Rpb24gdG9PYmplY3QodmFsKSB7XG5cdGlmICh2YWwgPT09IG51bGwgfHwgdmFsID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QuYXNzaWduIGNhbm5vdCBiZSBjYWxsZWQgd2l0aCBudWxsIG9yIHVuZGVmaW5lZCcpO1xuXHR9XG5cblx0cmV0dXJuIE9iamVjdCh2YWwpO1xufVxuXG5mdW5jdGlvbiBzaG91bGRVc2VOYXRpdmUoKSB7XG5cdHRyeSB7XG5cdFx0aWYgKCFPYmplY3QuYXNzaWduKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZWN0IGJ1Z2d5IHByb3BlcnR5IGVudW1lcmF0aW9uIG9yZGVyIGluIG9sZGVyIFY4IHZlcnNpb25zLlxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9NDExOFxuXHRcdHZhciB0ZXN0MSA9IG5ldyBTdHJpbmcoJ2FiYycpOyAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXctd3JhcHBlcnNcblx0XHR0ZXN0MVs1XSA9ICdkZSc7XG5cdFx0aWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QxKVswXSA9PT0gJzUnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MiA9IHt9O1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykge1xuXHRcdFx0dGVzdDJbJ18nICsgU3RyaW5nLmZyb21DaGFyQ29kZShpKV0gPSBpO1xuXHRcdH1cblx0XHR2YXIgb3JkZXIyID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDIpLm1hcChmdW5jdGlvbiAobikge1xuXHRcdFx0cmV0dXJuIHRlc3QyW25dO1xuXHRcdH0pO1xuXHRcdGlmIChvcmRlcjIuam9pbignJykgIT09ICcwMTIzNDU2Nzg5Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDMgPSB7fTtcblx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChsZXR0ZXIpIHtcblx0XHRcdHRlc3QzW2xldHRlcl0gPSBsZXR0ZXI7XG5cdFx0fSk7XG5cdFx0aWYgKE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sIHRlc3QzKSkuam9pbignJykgIT09XG5cdFx0XHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0Ly8gV2UgZG9uJ3QgZXhwZWN0IGFueSBvZiB0aGUgYWJvdmUgdG8gdGhyb3csIGJ1dCBiZXR0ZXIgdG8gYmUgc2FmZS5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaG91bGRVc2VOYXRpdmUoKSA/IE9iamVjdC5hc3NpZ24gOiBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcblx0dmFyIGZyb207XG5cdHZhciB0byA9IHRvT2JqZWN0KHRhcmdldCk7XG5cdHZhciBzeW1ib2xzO1xuXG5cdGZvciAodmFyIHMgPSAxOyBzIDwgYXJndW1lbnRzLmxlbmd0aDsgcysrKSB7XG5cdFx0ZnJvbSA9IE9iamVjdChhcmd1bWVudHNbc10pO1xuXG5cdFx0Zm9yICh2YXIga2V5IGluIGZyb20pIHtcblx0XHRcdGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGZyb20sIGtleSkpIHtcblx0XHRcdFx0dG9ba2V5XSA9IGZyb21ba2V5XTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG5cdFx0XHRzeW1ib2xzID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGZyb20pO1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzeW1ib2xzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGlmIChwcm9wSXNFbnVtZXJhYmxlLmNhbGwoZnJvbSwgc3ltYm9sc1tpXSkpIHtcblx0XHRcdFx0XHR0b1tzeW1ib2xzW2ldXSA9IGZyb21bc3ltYm9sc1tpXV07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdG87XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9IHJlcXVpcmUoJy4vbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0Jyk7XG5cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb24oKSB7fVxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbldpdGhSZXNldCgpIHt9XG5lbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LnJlc2V0V2FybmluZ0NhY2hlID0gZW1wdHlGdW5jdGlvbjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gc2hpbShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIHNlY3JldCkge1xuICAgIGlmIChzZWNyZXQgPT09IFJlYWN0UHJvcFR5cGVzU2VjcmV0KSB7XG4gICAgICAvLyBJdCBpcyBzdGlsbCBzYWZlIHdoZW4gY2FsbGVkIGZyb20gUmVhY3QuXG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoXG4gICAgICAnQ2FsbGluZyBQcm9wVHlwZXMgdmFsaWRhdG9ycyBkaXJlY3RseSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZS4gJyArXG4gICAgICAnVXNlIFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpIHRvIGNhbGwgdGhlbS4gJyArXG4gICAgICAnUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlcydcbiAgICApO1xuICAgIGVyci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIHRocm93IGVycjtcbiAgfTtcbiAgc2hpbS5pc1JlcXVpcmVkID0gc2hpbTtcbiAgZnVuY3Rpb24gZ2V0U2hpbSgpIHtcbiAgICByZXR1cm4gc2hpbTtcbiAgfTtcbiAgLy8gSW1wb3J0YW50IVxuICAvLyBLZWVwIHRoaXMgbGlzdCBpbiBzeW5jIHdpdGggcHJvZHVjdGlvbiB2ZXJzaW9uIGluIGAuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzYC5cbiAgdmFyIFJlYWN0UHJvcFR5cGVzID0ge1xuICAgIGFycmF5OiBzaGltLFxuICAgIGJpZ2ludDogc2hpbSxcbiAgICBib29sOiBzaGltLFxuICAgIGZ1bmM6IHNoaW0sXG4gICAgbnVtYmVyOiBzaGltLFxuICAgIG9iamVjdDogc2hpbSxcbiAgICBzdHJpbmc6IHNoaW0sXG4gICAgc3ltYm9sOiBzaGltLFxuXG4gICAgYW55OiBzaGltLFxuICAgIGFycmF5T2Y6IGdldFNoaW0sXG4gICAgZWxlbWVudDogc2hpbSxcbiAgICBlbGVtZW50VHlwZTogc2hpbSxcbiAgICBpbnN0YW5jZU9mOiBnZXRTaGltLFxuICAgIG5vZGU6IHNoaW0sXG4gICAgb2JqZWN0T2Y6IGdldFNoaW0sXG4gICAgb25lT2Y6IGdldFNoaW0sXG4gICAgb25lT2ZUeXBlOiBnZXRTaGltLFxuICAgIHNoYXBlOiBnZXRTaGltLFxuICAgIGV4YWN0OiBnZXRTaGltLFxuXG4gICAgY2hlY2tQcm9wVHlwZXM6IGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQsXG4gICAgcmVzZXRXYXJuaW5nQ2FjaGU6IGVtcHR5RnVuY3Rpb25cbiAgfTtcblxuICBSZWFjdFByb3BUeXBlcy5Qcm9wVHlwZXMgPSBSZWFjdFByb3BUeXBlcztcblxuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShSZWFjdElzLmlzRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE3LjAuMlxuICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksbT1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxyPXJlcXVpcmUoXCJzY2hlZHVsZXJcIik7ZnVuY3Rpb24geShhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn1pZighYWEpdGhyb3cgRXJyb3IoeSgyMjcpKTt2YXIgYmE9bmV3IFNldCxjYT17fTtmdW5jdGlvbiBkYShhLGIpe2VhKGEsYik7ZWEoYStcIkNhcHR1cmVcIixiKX1cbmZ1bmN0aW9uIGVhKGEsYil7Y2FbYV09Yjtmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKWJhLmFkZChiW2FdKX1cbnZhciBmYT0hKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudHx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCksaGE9L15bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRdWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFwtLjAtOVxcdTAwQjdcXHUwMzAwLVxcdTAzNkZcXHUyMDNGLVxcdTIwNDBdKiQvLGlhPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksXG5qYT17fSxrYT17fTtmdW5jdGlvbiBsYShhKXtpZihpYS5jYWxsKGthLGEpKXJldHVybiEwO2lmKGlhLmNhbGwoamEsYSkpcmV0dXJuITE7aWYoaGEudGVzdChhKSlyZXR1cm4ga2FbYV09ITA7amFbYV09ITA7cmV0dXJuITF9ZnVuY3Rpb24gbWEoYSxiLGMsZCl7aWYobnVsbCE9PWMmJjA9PT1jLnR5cGUpcmV0dXJuITE7c3dpdGNoKHR5cGVvZiBiKXtjYXNlIFwiZnVuY3Rpb25cIjpjYXNlIFwic3ltYm9sXCI6cmV0dXJuITA7Y2FzZSBcImJvb2xlYW5cIjppZihkKXJldHVybiExO2lmKG51bGwhPT1jKXJldHVybiFjLmFjY2VwdHNCb29sZWFuczthPWEudG9Mb3dlckNhc2UoKS5zbGljZSgwLDUpO3JldHVyblwiZGF0YS1cIiE9PWEmJlwiYXJpYS1cIiE9PWE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBuYShhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHxtYShhLGIsYyxkKSlyZXR1cm4hMDtpZihkKXJldHVybiExO2lmKG51bGwhPT1jKXN3aXRjaChjLnR5cGUpe2Nhc2UgMzpyZXR1cm4hYjtjYXNlIDQ6cmV0dXJuITE9PT1iO2Nhc2UgNTpyZXR1cm4gaXNOYU4oYik7Y2FzZSA2OnJldHVybiBpc05hTihiKXx8MT5ifXJldHVybiExfWZ1bmN0aW9uIEIoYSxiLGMsZCxlLGYsZyl7dGhpcy5hY2NlcHRzQm9vbGVhbnM9Mj09PWJ8fDM9PT1ifHw0PT09Yjt0aGlzLmF0dHJpYnV0ZU5hbWU9ZDt0aGlzLmF0dHJpYnV0ZU5hbWVzcGFjZT1lO3RoaXMubXVzdFVzZVByb3BlcnR5PWM7dGhpcy5wcm9wZXJ0eU5hbWU9YTt0aGlzLnR5cGU9Yjt0aGlzLnNhbml0aXplVVJMPWY7dGhpcy5yZW1vdmVFbXB0eVN0cmluZz1nfXZhciBEPXt9O1xuXCJjaGlsZHJlbiBkYW5nZXJvdXNseVNldElubmVySFRNTCBkZWZhdWx0VmFsdWUgZGVmYXVsdENoZWNrZWQgaW5uZXJIVE1MIHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcgc3R5bGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMCwhMSxhLG51bGwsITEsITEpfSk7W1tcImFjY2VwdENoYXJzZXRcIixcImFjY2VwdC1jaGFyc2V0XCJdLFtcImNsYXNzTmFtZVwiLFwiY2xhc3NcIl0sW1wiaHRtbEZvclwiLFwiZm9yXCJdLFtcImh0dHBFcXVpdlwiLFwiaHR0cC1lcXVpdlwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hWzBdO0RbYl09bmV3IEIoYiwxLCExLGFbMV0sbnVsbCwhMSwhMSl9KTtbXCJjb250ZW50RWRpdGFibGVcIixcImRyYWdnYWJsZVwiLFwic3BlbGxDaGVja1wiLFwidmFsdWVcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbltcImF1dG9SZXZlcnNlXCIsXCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIsXCJmb2N1c2FibGVcIixcInByZXNlcnZlQWxwaGFcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMiwhMSxhLG51bGwsITEsITEpfSk7XCJhbGxvd0Z1bGxTY3JlZW4gYXN5bmMgYXV0b0ZvY3VzIGF1dG9QbGF5IGNvbnRyb2xzIGRlZmF1bHQgZGVmZXIgZGlzYWJsZWQgZGlzYWJsZVBpY3R1cmVJblBpY3R1cmUgZGlzYWJsZVJlbW90ZVBsYXliYWNrIGZvcm1Ob1ZhbGlkYXRlIGhpZGRlbiBsb29wIG5vTW9kdWxlIG5vVmFsaWRhdGUgb3BlbiBwbGF5c0lubGluZSByZWFkT25seSByZXF1aXJlZCByZXZlcnNlZCBzY29wZWQgc2VhbWxlc3MgaXRlbVNjb3BlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDMsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7XG5bXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDMsITAsYSxudWxsLCExLCExKX0pO1tcImNhcHR1cmVcIixcImRvd25sb2FkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDQsITEsYSxudWxsLCExLCExKX0pO1tcImNvbHNcIixcInJvd3NcIixcInNpemVcIixcInNwYW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsNiwhMSxhLG51bGwsITEsITEpfSk7W1wicm93U3BhblwiLFwic3RhcnRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsNSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTt2YXIgb2E9L1tcXC06XShbYS16XSkvZztmdW5jdGlvbiBwYShhKXtyZXR1cm4gYVsxXS50b1VwcGVyQ2FzZSgpfVxuXCJhY2NlbnQtaGVpZ2h0IGFsaWdubWVudC1iYXNlbGluZSBhcmFiaWMtZm9ybSBiYXNlbGluZS1zaGlmdCBjYXAtaGVpZ2h0IGNsaXAtcGF0aCBjbGlwLXJ1bGUgY29sb3ItaW50ZXJwb2xhdGlvbiBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMgY29sb3ItcHJvZmlsZSBjb2xvci1yZW5kZXJpbmcgZG9taW5hbnQtYmFzZWxpbmUgZW5hYmxlLWJhY2tncm91bmQgZmlsbC1vcGFjaXR5IGZpbGwtcnVsZSBmbG9vZC1jb2xvciBmbG9vZC1vcGFjaXR5IGZvbnQtZmFtaWx5IGZvbnQtc2l6ZSBmb250LXNpemUtYWRqdXN0IGZvbnQtc3RyZXRjaCBmb250LXN0eWxlIGZvbnQtdmFyaWFudCBmb250LXdlaWdodCBnbHlwaC1uYW1lIGdseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwgZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwgaG9yaXotYWR2LXggaG9yaXotb3JpZ2luLXggaW1hZ2UtcmVuZGVyaW5nIGxldHRlci1zcGFjaW5nIGxpZ2h0aW5nLWNvbG9yIG1hcmtlci1lbmQgbWFya2VyLW1pZCBtYXJrZXItc3RhcnQgb3ZlcmxpbmUtcG9zaXRpb24gb3ZlcmxpbmUtdGhpY2tuZXNzIHBhaW50LW9yZGVyIHBhbm9zZS0xIHBvaW50ZXItZXZlbnRzIHJlbmRlcmluZy1pbnRlbnQgc2hhcGUtcmVuZGVyaW5nIHN0b3AtY29sb3Igc3RvcC1vcGFjaXR5IHN0cmlrZXRocm91Z2gtcG9zaXRpb24gc3RyaWtldGhyb3VnaC10aGlja25lc3Mgc3Ryb2tlLWRhc2hhcnJheSBzdHJva2UtZGFzaG9mZnNldCBzdHJva2UtbGluZWNhcCBzdHJva2UtbGluZWpvaW4gc3Ryb2tlLW1pdGVybGltaXQgc3Ryb2tlLW9wYWNpdHkgc3Ryb2tlLXdpZHRoIHRleHQtYW5jaG9yIHRleHQtZGVjb3JhdGlvbiB0ZXh0LXJlbmRlcmluZyB1bmRlcmxpbmUtcG9zaXRpb24gdW5kZXJsaW5lLXRoaWNrbmVzcyB1bmljb2RlLWJpZGkgdW5pY29kZS1yYW5nZSB1bml0cy1wZXItZW0gdi1hbHBoYWJldGljIHYtaGFuZ2luZyB2LWlkZW9ncmFwaGljIHYtbWF0aGVtYXRpY2FsIHZlY3Rvci1lZmZlY3QgdmVydC1hZHYteSB2ZXJ0LW9yaWdpbi14IHZlcnQtb3JpZ2luLXkgd29yZC1zcGFjaW5nIHdyaXRpbmctbW9kZSB4bWxuczp4bGluayB4LWhlaWdodFwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShvYSxcbnBhKTtEW2JdPW5ldyBCKGIsMSwhMSxhLG51bGwsITEsITEpfSk7XCJ4bGluazphY3R1YXRlIHhsaW5rOmFyY3JvbGUgeGxpbms6cm9sZSB4bGluazpzaG93IHhsaW5rOnRpdGxlIHhsaW5rOnR5cGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2Uob2EscGEpO0RbYl09bmV3IEIoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITEsITEpfSk7W1wieG1sOmJhc2VcIixcInhtbDpsYW5nXCIsXCJ4bWw6c3BhY2VcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2Uob2EscGEpO0RbYl09bmV3IEIoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIiwhMSwhMSl9KTtbXCJ0YWJJbmRleFwiLFwiY3Jvc3NPcmlnaW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbkQueGxpbmtIcmVmPW5ldyBCKFwieGxpbmtIcmVmXCIsMSwhMSxcInhsaW5rOmhyZWZcIixcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMCwhMSk7W1wic3JjXCIsXCJocmVmXCIsXCJhY3Rpb25cIixcImZvcm1BY3Rpb25cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMCwhMCl9KTtcbmZ1bmN0aW9uIHFhKGEsYixjLGQpe3ZhciBlPUQuaGFzT3duUHJvcGVydHkoYik/RFtiXTpudWxsO3ZhciBmPW51bGwhPT1lPzA9PT1lLnR5cGU6ZD8hMTohKDI8Yi5sZW5ndGgpfHxcIm9cIiE9PWJbMF0mJlwiT1wiIT09YlswXXx8XCJuXCIhPT1iWzFdJiZcIk5cIiE9PWJbMV0/ITE6ITA7Znx8KG5hKGIsYyxlLGQpJiYoYz1udWxsKSxkfHxudWxsPT09ZT9sYShiKSYmKG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOmEuc2V0QXR0cmlidXRlKGIsXCJcIitjKSk6ZS5tdXN0VXNlUHJvcGVydHk/YVtlLnByb3BlcnR5TmFtZV09bnVsbD09PWM/Mz09PWUudHlwZT8hMTpcIlwiOmM6KGI9ZS5hdHRyaWJ1dGVOYW1lLGQ9ZS5hdHRyaWJ1dGVOYW1lc3BhY2UsbnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6KGU9ZS50eXBlLGM9Mz09PWV8fDQ9PT1lJiYhMD09PWM/XCJcIjpcIlwiK2MsZD9hLnNldEF0dHJpYnV0ZU5TKGQsYixjKTphLnNldEF0dHJpYnV0ZShiLGMpKSkpfVxudmFyIHJhPWFhLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVELHNhPTYwMTAzLHRhPTYwMTA2LHVhPTYwMTA3LHdhPTYwMTA4LHhhPTYwMTE0LHlhPTYwMTA5LHphPTYwMTEwLEFhPTYwMTEyLEJhPTYwMTEzLENhPTYwMTIwLERhPTYwMTE1LEVhPTYwMTE2LEZhPTYwMTIxLEdhPTYwMTI4LEhhPTYwMTI5LElhPTYwMTMwLEphPTYwMTMxO1xuaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcil7dmFyIEU9U3ltYm9sLmZvcjtzYT1FKFwicmVhY3QuZWxlbWVudFwiKTt0YT1FKFwicmVhY3QucG9ydGFsXCIpO3VhPUUoXCJyZWFjdC5mcmFnbWVudFwiKTt3YT1FKFwicmVhY3Quc3RyaWN0X21vZGVcIik7eGE9RShcInJlYWN0LnByb2ZpbGVyXCIpO3lhPUUoXCJyZWFjdC5wcm92aWRlclwiKTt6YT1FKFwicmVhY3QuY29udGV4dFwiKTtBYT1FKFwicmVhY3QuZm9yd2FyZF9yZWZcIik7QmE9RShcInJlYWN0LnN1c3BlbnNlXCIpO0NhPUUoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpO0RhPUUoXCJyZWFjdC5tZW1vXCIpO0VhPUUoXCJyZWFjdC5sYXp5XCIpO0ZhPUUoXCJyZWFjdC5ibG9ja1wiKTtFKFwicmVhY3Quc2NvcGVcIik7R2E9RShcInJlYWN0Lm9wYXF1ZS5pZFwiKTtIYT1FKFwicmVhY3QuZGVidWdfdHJhY2VfbW9kZVwiKTtJYT1FKFwicmVhY3Qub2Zmc2NyZWVuXCIpO0phPUUoXCJyZWFjdC5sZWdhY3lfaGlkZGVuXCIpfVxudmFyIEthPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBMYShhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9S2EmJmFbS2FdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9dmFyIE1hO2Z1bmN0aW9uIE5hKGEpe2lmKHZvaWQgMD09PU1hKXRyeXt0aHJvdyBFcnJvcigpO31jYXRjaChjKXt2YXIgYj1jLnN0YWNrLnRyaW0oKS5tYXRjaCgvXFxuKCAqKGF0ICk/KS8pO01hPWImJmJbMV18fFwiXCJ9cmV0dXJuXCJcXG5cIitNYSthfXZhciBPYT0hMTtcbmZ1bmN0aW9uIFBhKGEsYil7aWYoIWF8fE9hKXJldHVyblwiXCI7T2E9ITA7dmFyIGM9RXJyb3IucHJlcGFyZVN0YWNrVHJhY2U7RXJyb3IucHJlcGFyZVN0YWNrVHJhY2U9dm9pZCAwO3RyeXtpZihiKWlmKGI9ZnVuY3Rpb24oKXt0aHJvdyBFcnJvcigpO30sT2JqZWN0LmRlZmluZVByb3BlcnR5KGIucHJvdG90eXBlLFwicHJvcHNcIix7c2V0OmZ1bmN0aW9uKCl7dGhyb3cgRXJyb3IoKTt9fSksXCJvYmplY3RcIj09PXR5cGVvZiBSZWZsZWN0JiZSZWZsZWN0LmNvbnN0cnVjdCl7dHJ5e1JlZmxlY3QuY29uc3RydWN0KGIsW10pfWNhdGNoKGspe3ZhciBkPWt9UmVmbGVjdC5jb25zdHJ1Y3QoYSxbXSxiKX1lbHNle3RyeXtiLmNhbGwoKX1jYXRjaChrKXtkPWt9YS5jYWxsKGIucHJvdG90eXBlKX1lbHNle3RyeXt0aHJvdyBFcnJvcigpO31jYXRjaChrKXtkPWt9YSgpfX1jYXRjaChrKXtpZihrJiZkJiZcInN0cmluZ1wiPT09dHlwZW9mIGsuc3RhY2spe2Zvcih2YXIgZT1rLnN0YWNrLnNwbGl0KFwiXFxuXCIpLFxuZj1kLnN0YWNrLnNwbGl0KFwiXFxuXCIpLGc9ZS5sZW5ndGgtMSxoPWYubGVuZ3RoLTE7MTw9ZyYmMDw9aCYmZVtnXSE9PWZbaF07KWgtLTtmb3IoOzE8PWcmJjA8PWg7Zy0tLGgtLSlpZihlW2ddIT09ZltoXSl7aWYoMSE9PWd8fDEhPT1oKXtkbyBpZihnLS0saC0tLDA+aHx8ZVtnXSE9PWZbaF0pcmV0dXJuXCJcXG5cIitlW2ddLnJlcGxhY2UoXCIgYXQgbmV3IFwiLFwiIGF0IFwiKTt3aGlsZSgxPD1nJiYwPD1oKX1icmVha319fWZpbmFsbHl7T2E9ITEsRXJyb3IucHJlcGFyZVN0YWNrVHJhY2U9Y31yZXR1cm4oYT1hP2EuZGlzcGxheU5hbWV8fGEubmFtZTpcIlwiKT9OYShhKTpcIlwifVxuZnVuY3Rpb24gUWEoYSl7c3dpdGNoKGEudGFnKXtjYXNlIDU6cmV0dXJuIE5hKGEudHlwZSk7Y2FzZSAxNjpyZXR1cm4gTmEoXCJMYXp5XCIpO2Nhc2UgMTM6cmV0dXJuIE5hKFwiU3VzcGVuc2VcIik7Y2FzZSAxOTpyZXR1cm4gTmEoXCJTdXNwZW5zZUxpc3RcIik7Y2FzZSAwOmNhc2UgMjpjYXNlIDE1OnJldHVybiBhPVBhKGEudHlwZSwhMSksYTtjYXNlIDExOnJldHVybiBhPVBhKGEudHlwZS5yZW5kZXIsITEpLGE7Y2FzZSAyMjpyZXR1cm4gYT1QYShhLnR5cGUuX3JlbmRlciwhMSksYTtjYXNlIDE6cmV0dXJuIGE9UGEoYS50eXBlLCEwKSxhO2RlZmF1bHQ6cmV0dXJuXCJcIn19XG5mdW5jdGlvbiBSYShhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fG51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKXJldHVybiBhO3N3aXRjaChhKXtjYXNlIHVhOnJldHVyblwiRnJhZ21lbnRcIjtjYXNlIHRhOnJldHVyblwiUG9ydGFsXCI7Y2FzZSB4YTpyZXR1cm5cIlByb2ZpbGVyXCI7Y2FzZSB3YTpyZXR1cm5cIlN0cmljdE1vZGVcIjtjYXNlIEJhOnJldHVyblwiU3VzcGVuc2VcIjtjYXNlIENhOnJldHVyblwiU3VzcGVuc2VMaXN0XCJ9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHphOnJldHVybihhLmRpc3BsYXlOYW1lfHxcIkNvbnRleHRcIikrXCIuQ29uc3VtZXJcIjtjYXNlIHlhOnJldHVybihhLl9jb250ZXh0LmRpc3BsYXlOYW1lfHxcIkNvbnRleHRcIikrXCIuUHJvdmlkZXJcIjtjYXNlIEFhOnZhciBiPWEucmVuZGVyO2I9Yi5kaXNwbGF5TmFtZXx8Yi5uYW1lfHxcIlwiO1xucmV0dXJuIGEuZGlzcGxheU5hbWV8fChcIlwiIT09Yj9cIkZvcndhcmRSZWYoXCIrYitcIilcIjpcIkZvcndhcmRSZWZcIik7Y2FzZSBEYTpyZXR1cm4gUmEoYS50eXBlKTtjYXNlIEZhOnJldHVybiBSYShhLl9yZW5kZXIpO2Nhc2UgRWE6Yj1hLl9wYXlsb2FkO2E9YS5faW5pdDt0cnl7cmV0dXJuIFJhKGEoYikpfWNhdGNoKGMpe319cmV0dXJuIG51bGx9ZnVuY3Rpb24gU2EoYSl7c3dpdGNoKHR5cGVvZiBhKXtjYXNlIFwiYm9vbGVhblwiOmNhc2UgXCJudW1iZXJcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJ1bmRlZmluZWRcIjpyZXR1cm4gYTtkZWZhdWx0OnJldHVyblwiXCJ9fWZ1bmN0aW9uIFRhKGEpe3ZhciBiPWEudHlwZTtyZXR1cm4oYT1hLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09YS50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09Ynx8XCJyYWRpb1wiPT09Yil9XG5mdW5jdGlvbiBVYShhKXt2YXIgYj1UYShhKT9cImNoZWNrZWRcIjpcInZhbHVlXCIsYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEuY29uc3RydWN0b3IucHJvdG90eXBlLGIpLGQ9XCJcIithW2JdO2lmKCFhLmhhc093blByb3BlcnR5KGIpJiZcInVuZGVmaW5lZFwiIT09dHlwZW9mIGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmdldCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuc2V0KXt2YXIgZT1jLmdldCxmPWMuc2V0O09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZS5jYWxsKHRoaXMpfSxzZXQ6ZnVuY3Rpb24oYSl7ZD1cIlwiK2E7Zi5jYWxsKHRoaXMsYSl9fSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7ZW51bWVyYWJsZTpjLmVudW1lcmFibGV9KTtyZXR1cm57Z2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gZH0sc2V0VmFsdWU6ZnVuY3Rpb24oYSl7ZD1cIlwiK2F9LHN0b3BUcmFja2luZzpmdW5jdGlvbigpe2EuX3ZhbHVlVHJhY2tlcj1cbm51bGw7ZGVsZXRlIGFbYl19fX19ZnVuY3Rpb24gVmEoYSl7YS5fdmFsdWVUcmFja2VyfHwoYS5fdmFsdWVUcmFja2VyPVVhKGEpKX1mdW5jdGlvbiBXYShhKXtpZighYSlyZXR1cm4hMTt2YXIgYj1hLl92YWx1ZVRyYWNrZXI7aWYoIWIpcmV0dXJuITA7dmFyIGM9Yi5nZXRWYWx1ZSgpO3ZhciBkPVwiXCI7YSYmKGQ9VGEoYSk/YS5jaGVja2VkP1widHJ1ZVwiOlwiZmFsc2VcIjphLnZhbHVlKTthPWQ7cmV0dXJuIGEhPT1jPyhiLnNldFZhbHVlKGEpLCEwKTohMX1mdW5jdGlvbiBYYShhKXthPWF8fChcInVuZGVmaW5lZFwiIT09dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50OnZvaWQgMCk7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhKXJldHVybiBudWxsO3RyeXtyZXR1cm4gYS5hY3RpdmVFbGVtZW50fHxhLmJvZHl9Y2F0Y2goYil7cmV0dXJuIGEuYm9keX19XG5mdW5jdGlvbiBZYShhLGIpe3ZhciBjPWIuY2hlY2tlZDtyZXR1cm4gbSh7fSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTp2b2lkIDAsY2hlY2tlZDpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9ZnVuY3Rpb24gWmEoYSxiKXt2YXIgYz1udWxsPT1iLmRlZmF1bHRWYWx1ZT9cIlwiOmIuZGVmYXVsdFZhbHVlLGQ9bnVsbCE9Yi5jaGVja2VkP2IuY2hlY2tlZDpiLmRlZmF1bHRDaGVja2VkO2M9U2EobnVsbCE9Yi52YWx1ZT9iLnZhbHVlOmMpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbENoZWNrZWQ6ZCxpbml0aWFsVmFsdWU6Yyxjb250cm9sbGVkOlwiY2hlY2tib3hcIj09PWIudHlwZXx8XCJyYWRpb1wiPT09Yi50eXBlP251bGwhPWIuY2hlY2tlZDpudWxsIT1iLnZhbHVlfX1mdW5jdGlvbiAkYShhLGIpe2I9Yi5jaGVja2VkO251bGwhPWImJnFhKGEsXCJjaGVja2VkXCIsYiwhMSl9XG5mdW5jdGlvbiBhYihhLGIpeyRhKGEsYik7dmFyIGM9U2EoYi52YWx1ZSksZD1iLnR5cGU7aWYobnVsbCE9YylpZihcIm51bWJlclwiPT09ZCl7aWYoMD09PWMmJlwiXCI9PT1hLnZhbHVlfHxhLnZhbHVlIT1jKWEudmFsdWU9XCJcIitjfWVsc2UgYS52YWx1ZSE9PVwiXCIrYyYmKGEudmFsdWU9XCJcIitjKTtlbHNlIGlmKFwic3VibWl0XCI9PT1kfHxcInJlc2V0XCI9PT1kKXthLnJlbW92ZUF0dHJpYnV0ZShcInZhbHVlXCIpO3JldHVybn1iLmhhc093blByb3BlcnR5KFwidmFsdWVcIik/YmIoYSxiLnR5cGUsYyk6Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSYmYmIoYSxiLnR5cGUsU2EoYi5kZWZhdWx0VmFsdWUpKTtudWxsPT1iLmNoZWNrZWQmJm51bGwhPWIuZGVmYXVsdENoZWNrZWQmJihhLmRlZmF1bHRDaGVja2VkPSEhYi5kZWZhdWx0Q2hlY2tlZCl9XG5mdW5jdGlvbiBjYihhLGIsYyl7aWYoYi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpfHxiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpKXt2YXIgZD1iLnR5cGU7aWYoIShcInN1Ym1pdFwiIT09ZCYmXCJyZXNldFwiIT09ZHx8dm9pZCAwIT09Yi52YWx1ZSYmbnVsbCE9PWIudmFsdWUpKXJldHVybjtiPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTtjfHxiPT09YS52YWx1ZXx8KGEudmFsdWU9Yik7YS5kZWZhdWx0VmFsdWU9Yn1jPWEubmFtZTtcIlwiIT09YyYmKGEubmFtZT1cIlwiKTthLmRlZmF1bHRDaGVja2VkPSEhYS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkO1wiXCIhPT1jJiYoYS5uYW1lPWMpfVxuZnVuY3Rpb24gYmIoYSxiLGMpe2lmKFwibnVtYmVyXCIhPT1ifHxYYShhLm93bmVyRG9jdW1lbnQpIT09YSludWxsPT1jP2EuZGVmYXVsdFZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTphLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYyYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYyl9ZnVuY3Rpb24gZGIoYSl7dmFyIGI9XCJcIjthYS5DaGlsZHJlbi5mb3JFYWNoKGEsZnVuY3Rpb24oYSl7bnVsbCE9YSYmKGIrPWEpfSk7cmV0dXJuIGJ9ZnVuY3Rpb24gZWIoYSxiKXthPW0oe2NoaWxkcmVuOnZvaWQgMH0sYik7aWYoYj1kYihiLmNoaWxkcmVuKSlhLmNoaWxkcmVuPWI7cmV0dXJuIGF9XG5mdW5jdGlvbiBmYihhLGIsYyxkKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWJbXCIkXCIrY1tlXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyllPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWUmJihhW2NdLnNlbGVjdGVkPWUpLGUmJmQmJihhW2NdLmRlZmF1bHRTZWxlY3RlZD0hMCl9ZWxzZXtjPVwiXCIrU2EoYyk7Yj1udWxsO2ZvcihlPTA7ZTxhLmxlbmd0aDtlKyspe2lmKGFbZV0udmFsdWU9PT1jKXthW2VdLnNlbGVjdGVkPSEwO2QmJihhW2VdLmRlZmF1bHRTZWxlY3RlZD0hMCk7cmV0dXJufW51bGwhPT1ifHxhW2VdLmRpc2FibGVkfHwoYj1hW2VdKX1udWxsIT09YiYmKGIuc2VsZWN0ZWQ9ITApfX1cbmZ1bmN0aW9uIGdiKGEsYil7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl0aHJvdyBFcnJvcih5KDkxKSk7cmV0dXJuIG0oe30sYix7dmFsdWU6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsY2hpbGRyZW46XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlfSl9ZnVuY3Rpb24gaGIoYSxiKXt2YXIgYz1iLnZhbHVlO2lmKG51bGw9PWMpe2M9Yi5jaGlsZHJlbjtiPWIuZGVmYXVsdFZhbHVlO2lmKG51bGwhPWMpe2lmKG51bGwhPWIpdGhyb3cgRXJyb3IoeSg5MikpO2lmKEFycmF5LmlzQXJyYXkoYykpe2lmKCEoMT49Yy5sZW5ndGgpKXRocm93IEVycm9yKHkoOTMpKTtjPWNbMF19Yj1jfW51bGw9PWImJihiPVwiXCIpO2M9Yn1hLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTpTYShjKX19XG5mdW5jdGlvbiBpYihhLGIpe3ZhciBjPVNhKGIudmFsdWUpLGQ9U2EoYi5kZWZhdWx0VmFsdWUpO251bGwhPWMmJihjPVwiXCIrYyxjIT09YS52YWx1ZSYmKGEudmFsdWU9YyksbnVsbD09Yi5kZWZhdWx0VmFsdWUmJmEuZGVmYXVsdFZhbHVlIT09YyYmKGEuZGVmYXVsdFZhbHVlPWMpKTtudWxsIT1kJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitkKX1mdW5jdGlvbiBqYihhKXt2YXIgYj1hLnRleHRDb250ZW50O2I9PT1hLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlJiZcIlwiIT09YiYmbnVsbCE9PWImJihhLnZhbHVlPWIpfXZhciBrYj17aHRtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixtYXRobWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsc3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIn07XG5mdW5jdGlvbiBsYihhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fWZ1bmN0aW9uIG1iKGEsYil7cmV0dXJuIG51bGw9PWF8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9sYihiKTpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI9PT1hJiZcImZvcmVpZ25PYmplY3RcIj09PWI/XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI6YX1cbnZhciBuYixvYj1mdW5jdGlvbihhKXtyZXR1cm5cInVuZGVmaW5lZFwiIT09dHlwZW9mIE1TQXBwJiZNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbj9mdW5jdGlvbihiLGMsZCxlKXtNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbihmdW5jdGlvbigpe3JldHVybiBhKGIsYyxkLGUpfSl9OmF9KGZ1bmN0aW9uKGEsYil7aWYoYS5uYW1lc3BhY2VVUkkhPT1rYi5zdmd8fFwiaW5uZXJIVE1MXCJpbiBhKWEuaW5uZXJIVE1MPWI7ZWxzZXtuYj1uYnx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtuYi5pbm5lckhUTUw9XCI8c3ZnPlwiK2IudmFsdWVPZigpLnRvU3RyaW5nKCkrXCI8L3N2Zz5cIjtmb3IoYj1uYi5maXJzdENoaWxkO2EuZmlyc3RDaGlsZDspYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2Zvcig7Yi5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKGIuZmlyc3RDaGlsZCl9fSk7XG5mdW5jdGlvbiBwYihhLGIpe2lmKGIpe3ZhciBjPWEuZmlyc3RDaGlsZDtpZihjJiZjPT09YS5sYXN0Q2hpbGQmJjM9PT1jLm5vZGVUeXBlKXtjLm5vZGVWYWx1ZT1iO3JldHVybn19YS50ZXh0Q29udGVudD1ifVxudmFyIHFiPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRBcmVhOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMCxmaWxsT3BhY2l0eTohMCxcbmZsb29kT3BhY2l0eTohMCxzdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LHJiPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtPYmplY3Qua2V5cyhxYikuZm9yRWFjaChmdW5jdGlvbihhKXtyYi5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO3FiW2JdPXFiW2FdfSl9KTtmdW5jdGlvbiBzYihhLGIsYyl7cmV0dXJuIG51bGw9PWJ8fFwiYm9vbGVhblwiPT09dHlwZW9mIGJ8fFwiXCI9PT1iP1wiXCI6Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBifHwwPT09Ynx8cWIuaGFzT3duUHJvcGVydHkoYSkmJnFiW2FdPyhcIlwiK2IpLnRyaW0oKTpiK1wicHhcIn1cbmZ1bmN0aW9uIHRiKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKSxlPXNiKGMsYltjXSxkKTtcImZsb2F0XCI9PT1jJiYoYz1cImNzc0Zsb2F0XCIpO2Q/YS5zZXRQcm9wZXJ0eShjLGUpOmFbY109ZX19dmFyIHViPW0oe21lbnVpdGVtOiEwfSx7YXJlYTohMCxiYXNlOiEwLGJyOiEwLGNvbDohMCxlbWJlZDohMCxocjohMCxpbWc6ITAsaW5wdXQ6ITAsa2V5Z2VuOiEwLGxpbms6ITAsbWV0YTohMCxwYXJhbTohMCxzb3VyY2U6ITAsdHJhY2s6ITAsd2JyOiEwfSk7XG5mdW5jdGlvbiB2YihhLGIpe2lmKGIpe2lmKHViW2FdJiYobnVsbCE9Yi5jaGlsZHJlbnx8bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IoeSgxMzcsYSkpO2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpe2lmKG51bGwhPWIuY2hpbGRyZW4pdGhyb3cgRXJyb3IoeSg2MCkpO2lmKCEoXCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcIl9faHRtbFwiaW4gYi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IoeSg2MSkpO31pZihudWxsIT1iLnN0eWxlJiZcIm9iamVjdFwiIT09dHlwZW9mIGIuc3R5bGUpdGhyb3cgRXJyb3IoeSg2MikpO319XG5mdW5jdGlvbiB3YihhLGIpe2lmKC0xPT09YS5pbmRleE9mKFwiLVwiKSlyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM7c3dpdGNoKGEpe2Nhc2UgXCJhbm5vdGF0aW9uLXhtbFwiOmNhc2UgXCJjb2xvci1wcm9maWxlXCI6Y2FzZSBcImZvbnQtZmFjZVwiOmNhc2UgXCJmb250LWZhY2Utc3JjXCI6Y2FzZSBcImZvbnQtZmFjZS11cmlcIjpjYXNlIFwiZm9udC1mYWNlLWZvcm1hdFwiOmNhc2UgXCJmb250LWZhY2UtbmFtZVwiOmNhc2UgXCJtaXNzaW5nLWdseXBoXCI6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMH19ZnVuY3Rpb24geGIoYSl7YT1hLnRhcmdldHx8YS5zcmNFbGVtZW50fHx3aW5kb3c7YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCYmKGE9YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCk7cmV0dXJuIDM9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphfXZhciB5Yj1udWxsLHpiPW51bGwsQWI9bnVsbDtcbmZ1bmN0aW9uIEJiKGEpe2lmKGE9Q2IoYSkpe2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiB5Yil0aHJvdyBFcnJvcih5KDI4MCkpO3ZhciBiPWEuc3RhdGVOb2RlO2ImJihiPURiKGIpLHliKGEuc3RhdGVOb2RlLGEudHlwZSxiKSl9fWZ1bmN0aW9uIEViKGEpe3piP0FiP0FiLnB1c2goYSk6QWI9W2FdOnpiPWF9ZnVuY3Rpb24gRmIoKXtpZih6Yil7dmFyIGE9emIsYj1BYjtBYj16Yj1udWxsO0JiKGEpO2lmKGIpZm9yKGE9MDthPGIubGVuZ3RoO2ErKylCYihiW2FdKX19ZnVuY3Rpb24gR2IoYSxiKXtyZXR1cm4gYShiKX1mdW5jdGlvbiBIYihhLGIsYyxkLGUpe3JldHVybiBhKGIsYyxkLGUpfWZ1bmN0aW9uIEliKCl7fXZhciBKYj1HYixLYj0hMSxMYj0hMTtmdW5jdGlvbiBNYigpe2lmKG51bGwhPT16Ynx8bnVsbCE9PUFiKUliKCksRmIoKX1cbmZ1bmN0aW9uIE5iKGEsYixjKXtpZihMYilyZXR1cm4gYShiLGMpO0xiPSEwO3RyeXtyZXR1cm4gSmIoYSxiLGMpfWZpbmFsbHl7TGI9ITEsTWIoKX19XG5mdW5jdGlvbiBPYihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKG51bGw9PT1jKXJldHVybiBudWxsO3ZhciBkPURiKGMpO2lmKG51bGw9PT1kKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjpjYXNlIFwib25Nb3VzZUVudGVyXCI6KGQ9IWQuZGlzYWJsZWQpfHwoYT1hLnR5cGUsZD0hKFwiYnV0dG9uXCI9PT1hfHxcImlucHV0XCI9PT1hfHxcInNlbGVjdFwiPT09YXx8XCJ0ZXh0YXJlYVwiPT09YSkpO2E9IWQ7YnJlYWsgYTtkZWZhdWx0OmE9ITF9aWYoYSlyZXR1cm4gbnVsbDtpZihjJiZcImZ1bmN0aW9uXCIhPT1cbnR5cGVvZiBjKXRocm93IEVycm9yKHkoMjMxLGIsdHlwZW9mIGMpKTtyZXR1cm4gY312YXIgUGI9ITE7aWYoZmEpdHJ5e3ZhciBRYj17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoUWIsXCJwYXNzaXZlXCIse2dldDpmdW5jdGlvbigpe1BiPSEwfX0pO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwidGVzdFwiLFFiLFFiKTt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRlc3RcIixRYixRYil9Y2F0Y2goYSl7UGI9ITF9ZnVuY3Rpb24gUmIoYSxiLGMsZCxlLGYsZyxoLGspe3ZhciBsPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywzKTt0cnl7Yi5hcHBseShjLGwpfWNhdGNoKG4pe3RoaXMub25FcnJvcihuKX19dmFyIFNiPSExLFRiPW51bGwsVWI9ITEsVmI9bnVsbCxXYj17b25FcnJvcjpmdW5jdGlvbihhKXtTYj0hMDtUYj1hfX07ZnVuY3Rpb24gWGIoYSxiLGMsZCxlLGYsZyxoLGspe1NiPSExO1RiPW51bGw7UmIuYXBwbHkoV2IsYXJndW1lbnRzKX1cbmZ1bmN0aW9uIFliKGEsYixjLGQsZSxmLGcsaCxrKXtYYi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoU2Ipe2lmKFNiKXt2YXIgbD1UYjtTYj0hMTtUYj1udWxsfWVsc2UgdGhyb3cgRXJyb3IoeSgxOTgpKTtVYnx8KFViPSEwLFZiPWwpfX1mdW5jdGlvbiBaYihhKXt2YXIgYj1hLGM9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7YT1iO2RvIGI9YSwwIT09KGIuZmxhZ3MmMTAyNikmJihjPWIucmV0dXJuKSxhPWIucmV0dXJuO3doaWxlKGEpfXJldHVybiAzPT09Yi50YWc/YzpudWxsfWZ1bmN0aW9uICRiKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09YiYmKGE9YS5hbHRlcm5hdGUsbnVsbCE9PWEmJihiPWEubWVtb2l6ZWRTdGF0ZSkpO2lmKG51bGwhPT1iKXJldHVybiBiLmRlaHlkcmF0ZWR9cmV0dXJuIG51bGx9ZnVuY3Rpb24gYWMoYSl7aWYoWmIoYSkhPT1hKXRocm93IEVycm9yKHkoMTg4KSk7fVxuZnVuY3Rpb24gYmMoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpe2I9WmIoYSk7aWYobnVsbD09PWIpdGhyb3cgRXJyb3IoeSgxODgpKTtyZXR1cm4gYiE9PWE/bnVsbDphfWZvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybjtpZihudWxsPT09ZSlicmVhazt2YXIgZj1lLmFsdGVybmF0ZTtpZihudWxsPT09Zil7ZD1lLnJldHVybjtpZihudWxsIT09ZCl7Yz1kO2NvbnRpbnVlfWJyZWFrfWlmKGUuY2hpbGQ9PT1mLmNoaWxkKXtmb3IoZj1lLmNoaWxkO2Y7KXtpZihmPT09YylyZXR1cm4gYWMoZSksYTtpZihmPT09ZClyZXR1cm4gYWMoZSksYjtmPWYuc2libGluZ310aHJvdyBFcnJvcih5KDE4OCkpO31pZihjLnJldHVybiE9PWQucmV0dXJuKWM9ZSxkPWY7ZWxzZXtmb3IodmFyIGc9ITEsaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1cbmMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXRocm93IEVycm9yKHkoMTg5KSk7fX1pZihjLmFsdGVybmF0ZSE9PWQpdGhyb3cgRXJyb3IoeSgxOTApKTt9aWYoMyE9PWMudGFnKXRocm93IEVycm9yKHkoMTg4KSk7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBjYyhhKXthPWJjKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQpYi5jaGlsZC5yZXR1cm49YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoOyFiLnNpYmxpbmc7KXtpZighYi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfVxuZnVuY3Rpb24gZGMoYSxiKXtmb3IodmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWI7KXtpZihiPT09YXx8Yj09PWMpcmV0dXJuITA7Yj1iLnJldHVybn1yZXR1cm4hMX12YXIgZWMsZmMsZ2MsaGMsaWM9ITEsamM9W10sa2M9bnVsbCxsYz1udWxsLG1jPW51bGwsbmM9bmV3IE1hcCxvYz1uZXcgTWFwLHBjPVtdLHFjPVwibW91c2Vkb3duIG1vdXNldXAgdG91Y2hjYW5jZWwgdG91Y2hlbmQgdG91Y2hzdGFydCBhdXhjbGljayBkYmxjbGljayBwb2ludGVyY2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJ1cCBkcmFnZW5kIGRyYWdzdGFydCBkcm9wIGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBpbnB1dCB0ZXh0SW5wdXQgY29weSBjdXQgcGFzdGUgY2xpY2sgY2hhbmdlIGNvbnRleHRtZW51IHJlc2V0IHN1Ym1pdFwiLnNwbGl0KFwiIFwiKTtcbmZ1bmN0aW9uIHJjKGEsYixjLGQsZSl7cmV0dXJue2Jsb2NrZWRPbjphLGRvbUV2ZW50TmFtZTpiLGV2ZW50U3lzdGVtRmxhZ3M6Y3wxNixuYXRpdmVFdmVudDplLHRhcmdldENvbnRhaW5lcnM6W2RdfX1mdW5jdGlvbiBzYyhhLGIpe3N3aXRjaChhKXtjYXNlIFwiZm9jdXNpblwiOmNhc2UgXCJmb2N1c291dFwiOmtjPW51bGw7YnJlYWs7Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnbGVhdmVcIjpsYz1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwibW91c2VvdXRcIjptYz1udWxsO2JyZWFrO2Nhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVyb3V0XCI6bmMuZGVsZXRlKGIucG9pbnRlcklkKTticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6b2MuZGVsZXRlKGIucG9pbnRlcklkKX19XG5mdW5jdGlvbiB0YyhhLGIsYyxkLGUsZil7aWYobnVsbD09PWF8fGEubmF0aXZlRXZlbnQhPT1mKXJldHVybiBhPXJjKGIsYyxkLGUsZiksbnVsbCE9PWImJihiPUNiKGIpLG51bGwhPT1iJiZmYyhiKSksYTthLmV2ZW50U3lzdGVtRmxhZ3N8PWQ7Yj1hLnRhcmdldENvbnRhaW5lcnM7bnVsbCE9PWUmJi0xPT09Yi5pbmRleE9mKGUpJiZiLnB1c2goZSk7cmV0dXJuIGF9XG5mdW5jdGlvbiB1YyhhLGIsYyxkLGUpe3N3aXRjaChiKXtjYXNlIFwiZm9jdXNpblwiOnJldHVybiBrYz10YyhrYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJkcmFnZW50ZXJcIjpyZXR1cm4gbGM9dGMobGMsYSxiLGMsZCxlKSwhMDtjYXNlIFwibW91c2VvdmVyXCI6cmV0dXJuIG1jPXRjKG1jLGEsYixjLGQsZSksITA7Y2FzZSBcInBvaW50ZXJvdmVyXCI6dmFyIGY9ZS5wb2ludGVySWQ7bmMuc2V0KGYsdGMobmMuZ2V0KGYpfHxudWxsLGEsYixjLGQsZSkpO3JldHVybiEwO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOnJldHVybiBmPWUucG9pbnRlcklkLG9jLnNldChmLHRjKG9jLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKSwhMH1yZXR1cm4hMX1cbmZ1bmN0aW9uIHZjKGEpe3ZhciBiPXdjKGEudGFyZ2V0KTtpZihudWxsIT09Yil7dmFyIGM9WmIoYik7aWYobnVsbCE9PWMpaWYoYj1jLnRhZywxMz09PWIpe2lmKGI9JGIoYyksbnVsbCE9PWIpe2EuYmxvY2tlZE9uPWI7aGMoYS5sYW5lUHJpb3JpdHksZnVuY3Rpb24oKXtyLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShhLnByaW9yaXR5LGZ1bmN0aW9uKCl7Z2MoYyl9KX0pO3JldHVybn19ZWxzZSBpZigzPT09YiYmYy5zdGF0ZU5vZGUuaHlkcmF0ZSl7YS5ibG9ja2VkT249Mz09PWMudGFnP2Muc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtyZXR1cm59fWEuYmxvY2tlZE9uPW51bGx9XG5mdW5jdGlvbiB4YyhhKXtpZihudWxsIT09YS5ibG9ja2VkT24pcmV0dXJuITE7Zm9yKHZhciBiPWEudGFyZ2V0Q29udGFpbmVyczswPGIubGVuZ3RoOyl7dmFyIGM9eWMoYS5kb21FdmVudE5hbWUsYS5ldmVudFN5c3RlbUZsYWdzLGJbMF0sYS5uYXRpdmVFdmVudCk7aWYobnVsbCE9PWMpcmV0dXJuIGI9Q2IoYyksbnVsbCE9PWImJmZjKGIpLGEuYmxvY2tlZE9uPWMsITE7Yi5zaGlmdCgpfXJldHVybiEwfWZ1bmN0aW9uIHpjKGEsYixjKXt4YyhhKSYmYy5kZWxldGUoYil9XG5mdW5jdGlvbiBBYygpe2ZvcihpYz0hMTswPGpjLmxlbmd0aDspe3ZhciBhPWpjWzBdO2lmKG51bGwhPT1hLmJsb2NrZWRPbil7YT1DYihhLmJsb2NrZWRPbik7bnVsbCE9PWEmJmVjKGEpO2JyZWFrfWZvcih2YXIgYj1hLnRhcmdldENvbnRhaW5lcnM7MDxiLmxlbmd0aDspe3ZhciBjPXljKGEuZG9tRXZlbnROYW1lLGEuZXZlbnRTeXN0ZW1GbGFncyxiWzBdLGEubmF0aXZlRXZlbnQpO2lmKG51bGwhPT1jKXthLmJsb2NrZWRPbj1jO2JyZWFrfWIuc2hpZnQoKX1udWxsPT09YS5ibG9ja2VkT24mJmpjLnNoaWZ0KCl9bnVsbCE9PWtjJiZ4YyhrYykmJihrYz1udWxsKTtudWxsIT09bGMmJnhjKGxjKSYmKGxjPW51bGwpO251bGwhPT1tYyYmeGMobWMpJiYobWM9bnVsbCk7bmMuZm9yRWFjaCh6Yyk7b2MuZm9yRWFjaCh6Yyl9XG5mdW5jdGlvbiBCYyhhLGIpe2EuYmxvY2tlZE9uPT09YiYmKGEuYmxvY2tlZE9uPW51bGwsaWN8fChpYz0hMCxyLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2soci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxBYykpKX1cbmZ1bmN0aW9uIENjKGEpe2Z1bmN0aW9uIGIoYil7cmV0dXJuIEJjKGIsYSl9aWYoMDxqYy5sZW5ndGgpe0JjKGpjWzBdLGEpO2Zvcih2YXIgYz0xO2M8amMubGVuZ3RoO2MrKyl7dmFyIGQ9amNbY107ZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCl9fW51bGwhPT1rYyYmQmMoa2MsYSk7bnVsbCE9PWxjJiZCYyhsYyxhKTtudWxsIT09bWMmJkJjKG1jLGEpO25jLmZvckVhY2goYik7b2MuZm9yRWFjaChiKTtmb3IoYz0wO2M8cGMubGVuZ3RoO2MrKylkPXBjW2NdLGQuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpO2Zvcig7MDxwYy5sZW5ndGgmJihjPXBjWzBdLG51bGw9PT1jLmJsb2NrZWRPbik7KXZjKGMpLG51bGw9PT1jLmJsb2NrZWRPbiYmcGMuc2hpZnQoKX1cbmZ1bmN0aW9uIERjKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7cmV0dXJuIGN9dmFyIEVjPXthbmltYXRpb25lbmQ6RGMoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246RGMoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDpEYyhcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDpEYyhcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LEZjPXt9LEdjPXt9O1xuZmEmJihHYz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSBFYy5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSBFYy5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSBFYy5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSBFYy50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO2Z1bmN0aW9uIEhjKGEpe2lmKEZjW2FdKXJldHVybiBGY1thXTtpZighRWNbYV0pcmV0dXJuIGE7dmFyIGI9RWNbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gR2MpcmV0dXJuIEZjW2FdPWJbY107cmV0dXJuIGF9XG52YXIgSWM9SGMoXCJhbmltYXRpb25lbmRcIiksSmM9SGMoXCJhbmltYXRpb25pdGVyYXRpb25cIiksS2M9SGMoXCJhbmltYXRpb25zdGFydFwiKSxMYz1IYyhcInRyYW5zaXRpb25lbmRcIiksTWM9bmV3IE1hcCxOYz1uZXcgTWFwLE9jPVtcImFib3J0XCIsXCJhYm9ydFwiLEljLFwiYW5pbWF0aW9uRW5kXCIsSmMsXCJhbmltYXRpb25JdGVyYXRpb25cIixLYyxcImFuaW1hdGlvblN0YXJ0XCIsXCJjYW5wbGF5XCIsXCJjYW5QbGF5XCIsXCJjYW5wbGF5dGhyb3VnaFwiLFwiY2FuUGxheVRocm91Z2hcIixcImR1cmF0aW9uY2hhbmdlXCIsXCJkdXJhdGlvbkNoYW5nZVwiLFwiZW1wdGllZFwiLFwiZW1wdGllZFwiLFwiZW5jcnlwdGVkXCIsXCJlbmNyeXB0ZWRcIixcImVuZGVkXCIsXCJlbmRlZFwiLFwiZXJyb3JcIixcImVycm9yXCIsXCJnb3Rwb2ludGVyY2FwdHVyZVwiLFwiZ290UG9pbnRlckNhcHR1cmVcIixcImxvYWRcIixcImxvYWRcIixcImxvYWRlZGRhdGFcIixcImxvYWRlZERhdGFcIixcImxvYWRlZG1ldGFkYXRhXCIsXCJsb2FkZWRNZXRhZGF0YVwiLFwibG9hZHN0YXJ0XCIsXCJsb2FkU3RhcnRcIixcblwibG9zdHBvaW50ZXJjYXB0dXJlXCIsXCJsb3N0UG9pbnRlckNhcHR1cmVcIixcInBsYXlpbmdcIixcInBsYXlpbmdcIixcInByb2dyZXNzXCIsXCJwcm9ncmVzc1wiLFwic2Vla2luZ1wiLFwic2Vla2luZ1wiLFwic3RhbGxlZFwiLFwic3RhbGxlZFwiLFwic3VzcGVuZFwiLFwic3VzcGVuZFwiLFwidGltZXVwZGF0ZVwiLFwidGltZVVwZGF0ZVwiLExjLFwidHJhbnNpdGlvbkVuZFwiLFwid2FpdGluZ1wiLFwid2FpdGluZ1wiXTtmdW5jdGlvbiBQYyhhLGIpe2Zvcih2YXIgYz0wO2M8YS5sZW5ndGg7Yys9Mil7dmFyIGQ9YVtjXSxlPWFbYysxXTtlPVwib25cIisoZVswXS50b1VwcGVyQ2FzZSgpK2Uuc2xpY2UoMSkpO05jLnNldChkLGIpO01jLnNldChkLGUpO2RhKGUsW2RdKX19dmFyIFFjPXIudW5zdGFibGVfbm93O1FjKCk7dmFyIEY9ODtcbmZ1bmN0aW9uIFJjKGEpe2lmKDAhPT0oMSZhKSlyZXR1cm4gRj0xNSwxO2lmKDAhPT0oMiZhKSlyZXR1cm4gRj0xNCwyO2lmKDAhPT0oNCZhKSlyZXR1cm4gRj0xMyw0O3ZhciBiPTI0JmE7aWYoMCE9PWIpcmV0dXJuIEY9MTIsYjtpZigwIT09KGEmMzIpKXJldHVybiBGPTExLDMyO2I9MTkyJmE7aWYoMCE9PWIpcmV0dXJuIEY9MTAsYjtpZigwIT09KGEmMjU2KSlyZXR1cm4gRj05LDI1NjtiPTM1ODQmYTtpZigwIT09YilyZXR1cm4gRj04LGI7aWYoMCE9PShhJjQwOTYpKXJldHVybiBGPTcsNDA5NjtiPTQxODYxMTImYTtpZigwIT09YilyZXR1cm4gRj02LGI7Yj02MjkxNDU2MCZhO2lmKDAhPT1iKXJldHVybiBGPTUsYjtpZihhJjY3MTA4ODY0KXJldHVybiBGPTQsNjcxMDg4NjQ7aWYoMCE9PShhJjEzNDIxNzcyOCkpcmV0dXJuIEY9MywxMzQyMTc3Mjg7Yj04MDUzMDYzNjgmYTtpZigwIT09YilyZXR1cm4gRj0yLGI7aWYoMCE9PSgxMDczNzQxODI0JmEpKXJldHVybiBGPTEsMTA3Mzc0MTgyNDtcbkY9ODtyZXR1cm4gYX1mdW5jdGlvbiBTYyhhKXtzd2l0Y2goYSl7Y2FzZSA5OTpyZXR1cm4gMTU7Y2FzZSA5ODpyZXR1cm4gMTA7Y2FzZSA5NzpjYXNlIDk2OnJldHVybiA4O2Nhc2UgOTU6cmV0dXJuIDI7ZGVmYXVsdDpyZXR1cm4gMH19ZnVuY3Rpb24gVGMoYSl7c3dpdGNoKGEpe2Nhc2UgMTU6Y2FzZSAxNDpyZXR1cm4gOTk7Y2FzZSAxMzpjYXNlIDEyOmNhc2UgMTE6Y2FzZSAxMDpyZXR1cm4gOTg7Y2FzZSA5OmNhc2UgODpjYXNlIDc6Y2FzZSA2OmNhc2UgNDpjYXNlIDU6cmV0dXJuIDk3O2Nhc2UgMzpjYXNlIDI6Y2FzZSAxOnJldHVybiA5NTtjYXNlIDA6cmV0dXJuIDkwO2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgzNTgsYSkpO319XG5mdW5jdGlvbiBVYyhhLGIpe3ZhciBjPWEucGVuZGluZ0xhbmVzO2lmKDA9PT1jKXJldHVybiBGPTA7dmFyIGQ9MCxlPTAsZj1hLmV4cGlyZWRMYW5lcyxnPWEuc3VzcGVuZGVkTGFuZXMsaD1hLnBpbmdlZExhbmVzO2lmKDAhPT1mKWQ9ZixlPUY9MTU7ZWxzZSBpZihmPWMmMTM0MjE3NzI3LDAhPT1mKXt2YXIgaz1mJn5nOzAhPT1rPyhkPVJjKGspLGU9Rik6KGgmPWYsMCE9PWgmJihkPVJjKGgpLGU9RikpfWVsc2UgZj1jJn5nLDAhPT1mPyhkPVJjKGYpLGU9Rik6MCE9PWgmJihkPVJjKGgpLGU9Rik7aWYoMD09PWQpcmV0dXJuIDA7ZD0zMS1WYyhkKTtkPWMmKCgwPmQ/MDoxPDxkKTw8MSktMTtpZigwIT09YiYmYiE9PWQmJjA9PT0oYiZnKSl7UmMoYik7aWYoZTw9RilyZXR1cm4gYjtGPWV9Yj1hLmVudGFuZ2xlZExhbmVzO2lmKDAhPT1iKWZvcihhPWEuZW50YW5nbGVtZW50cyxiJj1kOzA8YjspYz0zMS1WYyhiKSxlPTE8PGMsZHw9YVtjXSxiJj1+ZTtyZXR1cm4gZH1cbmZ1bmN0aW9uIFdjKGEpe2E9YS5wZW5kaW5nTGFuZXMmLTEwNzM3NDE4MjU7cmV0dXJuIDAhPT1hP2E6YSYxMDczNzQxODI0PzEwNzM3NDE4MjQ6MH1mdW5jdGlvbiBYYyhhLGIpe3N3aXRjaChhKXtjYXNlIDE1OnJldHVybiAxO2Nhc2UgMTQ6cmV0dXJuIDI7Y2FzZSAxMjpyZXR1cm4gYT1ZYygyNCZ+YiksMD09PWE/WGMoMTAsYik6YTtjYXNlIDEwOnJldHVybiBhPVljKDE5MiZ+YiksMD09PWE/WGMoOCxiKTphO2Nhc2UgODpyZXR1cm4gYT1ZYygzNTg0Jn5iKSwwPT09YSYmKGE9WWMoNDE4NjExMiZ+YiksMD09PWEmJihhPTUxMikpLGE7Y2FzZSAyOnJldHVybiBiPVljKDgwNTMwNjM2OCZ+YiksMD09PWImJihiPTI2ODQzNTQ1NiksYn10aHJvdyBFcnJvcih5KDM1OCxhKSk7fWZ1bmN0aW9uIFljKGEpe3JldHVybiBhJi1hfWZ1bmN0aW9uIFpjKGEpe2Zvcih2YXIgYj1bXSxjPTA7MzE+YztjKyspYi5wdXNoKGEpO3JldHVybiBifVxuZnVuY3Rpb24gJGMoYSxiLGMpe2EucGVuZGluZ0xhbmVzfD1iO3ZhciBkPWItMTthLnN1c3BlbmRlZExhbmVzJj1kO2EucGluZ2VkTGFuZXMmPWQ7YT1hLmV2ZW50VGltZXM7Yj0zMS1WYyhiKTthW2JdPWN9dmFyIFZjPU1hdGguY2x6MzI/TWF0aC5jbHozMjphZCxiZD1NYXRoLmxvZyxjZD1NYXRoLkxOMjtmdW5jdGlvbiBhZChhKXtyZXR1cm4gMD09PWE/MzI6MzEtKGJkKGEpL2NkfDApfDB9dmFyIGRkPXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksZWQ9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksZmQ9ITA7ZnVuY3Rpb24gZ2QoYSxiLGMsZCl7S2J8fEliKCk7dmFyIGU9aGQsZj1LYjtLYj0hMDt0cnl7SGIoZSxhLGIsYyxkKX1maW5hbGx5eyhLYj1mKXx8TWIoKX19ZnVuY3Rpb24gaWQoYSxiLGMsZCl7ZWQoZGQsaGQuYmluZChudWxsLGEsYixjLGQpKX1cbmZ1bmN0aW9uIGhkKGEsYixjLGQpe2lmKGZkKXt2YXIgZTtpZigoZT0wPT09KGImNCkpJiYwPGpjLmxlbmd0aCYmLTE8cWMuaW5kZXhPZihhKSlhPXJjKG51bGwsYSxiLGMsZCksamMucHVzaChhKTtlbHNle3ZhciBmPXljKGEsYixjLGQpO2lmKG51bGw9PT1mKWUmJnNjKGEsZCk7ZWxzZXtpZihlKXtpZigtMTxxYy5pbmRleE9mKGEpKXthPXJjKGYsYSxiLGMsZCk7amMucHVzaChhKTtyZXR1cm59aWYodWMoZixhLGIsYyxkKSlyZXR1cm47c2MoYSxkKX1qZChhLGIsZCxudWxsLGMpfX19fVxuZnVuY3Rpb24geWMoYSxiLGMsZCl7dmFyIGU9eGIoZCk7ZT13YyhlKTtpZihudWxsIT09ZSl7dmFyIGY9WmIoZSk7aWYobnVsbD09PWYpZT1udWxsO2Vsc2V7dmFyIGc9Zi50YWc7aWYoMTM9PT1nKXtlPSRiKGYpO2lmKG51bGwhPT1lKXJldHVybiBlO2U9bnVsbH1lbHNlIGlmKDM9PT1nKXtpZihmLnN0YXRlTm9kZS5oeWRyYXRlKXJldHVybiAzPT09Zi50YWc/Zi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpudWxsO2U9bnVsbH1lbHNlIGYhPT1lJiYoZT1udWxsKX19amQoYSxiLGQsZSxjKTtyZXR1cm4gbnVsbH12YXIga2Q9bnVsbCxsZD1udWxsLG1kPW51bGw7XG5mdW5jdGlvbiBuZCgpe2lmKG1kKXJldHVybiBtZDt2YXIgYSxiPWxkLGM9Yi5sZW5ndGgsZCxlPVwidmFsdWVcImluIGtkP2tkLnZhbHVlOmtkLnRleHRDb250ZW50LGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7cmV0dXJuIG1kPWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCl9ZnVuY3Rpb24gb2QoYSl7dmFyIGI9YS5rZXlDb2RlO1wiY2hhckNvZGVcImluIGE/KGE9YS5jaGFyQ29kZSwwPT09YSYmMTM9PT1iJiYoYT0xMykpOmE9YjsxMD09PWEmJihhPTEzKTtyZXR1cm4gMzI8PWF8fDEzPT09YT9hOjB9ZnVuY3Rpb24gcGQoKXtyZXR1cm4hMH1mdW5jdGlvbiBxZCgpe3JldHVybiExfVxuZnVuY3Rpb24gcmQoYSl7ZnVuY3Rpb24gYihiLGQsZSxmLGcpe3RoaXMuX3JlYWN0TmFtZT1iO3RoaXMuX3RhcmdldEluc3Q9ZTt0aGlzLnR5cGU9ZDt0aGlzLm5hdGl2ZUV2ZW50PWY7dGhpcy50YXJnZXQ9Zzt0aGlzLmN1cnJlbnRUYXJnZXQ9bnVsbDtmb3IodmFyIGMgaW4gYSlhLmhhc093blByb3BlcnR5KGMpJiYoYj1hW2NdLHRoaXNbY109Yj9iKGYpOmZbY10pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1mLmRlZmF1bHRQcmV2ZW50ZWQ/Zi5kZWZhdWx0UHJldmVudGVkOiExPT09Zi5yZXR1cm5WYWx1ZSk/cGQ6cWQ7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1xZDtyZXR1cm4gdGhpc31tKGIucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiZcbihhLnJldHVyblZhbHVlPSExKSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1wZCl9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEuc3RvcFByb3BhZ2F0aW9uP2Euc3RvcFByb3BhZ2F0aW9uKCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5jYW5jZWxCdWJibGUmJihhLmNhbmNlbEJ1YmJsZT0hMCksdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1wZCl9LHBlcnNpc3Q6ZnVuY3Rpb24oKXt9LGlzUGVyc2lzdGVudDpwZH0pO3JldHVybiBifVxudmFyIHNkPXtldmVudFBoYXNlOjAsYnViYmxlczowLGNhbmNlbGFibGU6MCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOjAsaXNUcnVzdGVkOjB9LHRkPXJkKHNkKSx1ZD1tKHt9LHNkLHt2aWV3OjAsZGV0YWlsOjB9KSx2ZD1yZCh1ZCksd2QseGQseWQsQWQ9bSh7fSx1ZCx7c2NyZWVuWDowLHNjcmVlblk6MCxjbGllbnRYOjAsY2xpZW50WTowLHBhZ2VYOjAscGFnZVk6MCxjdHJsS2V5OjAsc2hpZnRLZXk6MCxhbHRLZXk6MCxtZXRhS2V5OjAsZ2V0TW9kaWZpZXJTdGF0ZTp6ZCxidXR0b246MCxidXR0b25zOjAscmVsYXRlZFRhcmdldDpmdW5jdGlvbihhKXtyZXR1cm4gdm9pZCAwPT09YS5yZWxhdGVkVGFyZ2V0P2EuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudDphLnJlbGF0ZWRUYXJnZXR9LG1vdmVtZW50WDpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WFwiaW5cbmEpcmV0dXJuIGEubW92ZW1lbnRYO2EhPT15ZCYmKHlkJiZcIm1vdXNlbW92ZVwiPT09YS50eXBlPyh3ZD1hLnNjcmVlblgteWQuc2NyZWVuWCx4ZD1hLnNjcmVlblkteWQuc2NyZWVuWSk6eGQ9d2Q9MCx5ZD1hKTtyZXR1cm4gd2R9LG1vdmVtZW50WTpmdW5jdGlvbihhKXtyZXR1cm5cIm1vdmVtZW50WVwiaW4gYT9hLm1vdmVtZW50WTp4ZH19KSxCZD1yZChBZCksQ2Q9bSh7fSxBZCx7ZGF0YVRyYW5zZmVyOjB9KSxEZD1yZChDZCksRWQ9bSh7fSx1ZCx7cmVsYXRlZFRhcmdldDowfSksRmQ9cmQoRWQpLEdkPW0oe30sc2Qse2FuaW1hdGlvbk5hbWU6MCxlbGFwc2VkVGltZTowLHBzZXVkb0VsZW1lbnQ6MH0pLEhkPXJkKEdkKSxJZD1tKHt9LHNkLHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSksSmQ9cmQoSWQpLEtkPW0oe30sc2Qse2RhdGE6MH0pLExkPXJkKEtkKSxNZD17RXNjOlwiRXNjYXBlXCIsXG5TcGFjZWJhcjpcIiBcIixMZWZ0OlwiQXJyb3dMZWZ0XCIsVXA6XCJBcnJvd1VwXCIsUmlnaHQ6XCJBcnJvd1JpZ2h0XCIsRG93bjpcIkFycm93RG93blwiLERlbDpcIkRlbGV0ZVwiLFdpbjpcIk9TXCIsTWVudTpcIkNvbnRleHRNZW51XCIsQXBwczpcIkNvbnRleHRNZW51XCIsU2Nyb2xsOlwiU2Nyb2xsTG9ja1wiLE1velByaW50YWJsZUtleTpcIlVuaWRlbnRpZmllZFwifSxOZD17ODpcIkJhY2tzcGFjZVwiLDk6XCJUYWJcIiwxMjpcIkNsZWFyXCIsMTM6XCJFbnRlclwiLDE2OlwiU2hpZnRcIiwxNzpcIkNvbnRyb2xcIiwxODpcIkFsdFwiLDE5OlwiUGF1c2VcIiwyMDpcIkNhcHNMb2NrXCIsMjc6XCJFc2NhcGVcIiwzMjpcIiBcIiwzMzpcIlBhZ2VVcFwiLDM0OlwiUGFnZURvd25cIiwzNTpcIkVuZFwiLDM2OlwiSG9tZVwiLDM3OlwiQXJyb3dMZWZ0XCIsMzg6XCJBcnJvd1VwXCIsMzk6XCJBcnJvd1JpZ2h0XCIsNDA6XCJBcnJvd0Rvd25cIiw0NTpcIkluc2VydFwiLDQ2OlwiRGVsZXRlXCIsMTEyOlwiRjFcIiwxMTM6XCJGMlwiLDExNDpcIkYzXCIsMTE1OlwiRjRcIiwxMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIixcbjExOTpcIkY4XCIsMTIwOlwiRjlcIiwxMjE6XCJGMTBcIiwxMjI6XCJGMTFcIiwxMjM6XCJGMTJcIiwxNDQ6XCJOdW1Mb2NrXCIsMTQ1OlwiU2Nyb2xsTG9ja1wiLDIyNDpcIk1ldGFcIn0sT2Q9e0FsdDpcImFsdEtleVwiLENvbnRyb2w6XCJjdHJsS2V5XCIsTWV0YTpcIm1ldGFLZXlcIixTaGlmdDpcInNoaWZ0S2V5XCJ9O2Z1bmN0aW9uIFBkKGEpe3ZhciBiPXRoaXMubmF0aXZlRXZlbnQ7cmV0dXJuIGIuZ2V0TW9kaWZpZXJTdGF0ZT9iLmdldE1vZGlmaWVyU3RhdGUoYSk6KGE9T2RbYV0pPyEhYlthXTohMX1mdW5jdGlvbiB6ZCgpe3JldHVybiBQZH1cbnZhciBRZD1tKHt9LHVkLHtrZXk6ZnVuY3Rpb24oYSl7aWYoYS5rZXkpe3ZhciBiPU1kW2Eua2V5XXx8YS5rZXk7aWYoXCJVbmlkZW50aWZpZWRcIiE9PWIpcmV0dXJuIGJ9cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlPyhhPW9kKGEpLDEzPT09YT9cIkVudGVyXCI6U3RyaW5nLmZyb21DaGFyQ29kZShhKSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9OZFthLmtleUNvZGVdfHxcIlVuaWRlbnRpZmllZFwiOlwiXCJ9LGNvZGU6MCxsb2NhdGlvbjowLGN0cmxLZXk6MCxzaGlmdEtleTowLGFsdEtleTowLG1ldGFLZXk6MCxyZXBlYXQ6MCxsb2NhbGU6MCxnZXRNb2RpZmllclN0YXRlOnpkLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT9vZChhKTowfSxrZXlDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9LHdoaWNoOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP29kKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSksUmQ9cmQoUWQpLFNkPW0oe30sQWQse3BvaW50ZXJJZDowLHdpZHRoOjAsaGVpZ2h0OjAscHJlc3N1cmU6MCx0YW5nZW50aWFsUHJlc3N1cmU6MCx0aWx0WDowLHRpbHRZOjAsdHdpc3Q6MCxwb2ludGVyVHlwZTowLGlzUHJpbWFyeTowfSksVGQ9cmQoU2QpLFVkPW0oe30sdWQse3RvdWNoZXM6MCx0YXJnZXRUb3VjaGVzOjAsY2hhbmdlZFRvdWNoZXM6MCxhbHRLZXk6MCxtZXRhS2V5OjAsY3RybEtleTowLHNoaWZ0S2V5OjAsZ2V0TW9kaWZpZXJTdGF0ZTp6ZH0pLFZkPXJkKFVkKSxXZD1tKHt9LHNkLHtwcm9wZXJ0eU5hbWU6MCxlbGFwc2VkVGltZTowLHBzZXVkb0VsZW1lbnQ6MH0pLFhkPXJkKFdkKSxZZD1tKHt9LEFkLHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW4gYT8tYS53aGVlbERlbHRhWDowfSxcbmRlbHRhWTpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWVwiaW4gYT9hLmRlbHRhWTpcIndoZWVsRGVsdGFZXCJpbiBhPy1hLndoZWVsRGVsdGFZOlwid2hlZWxEZWx0YVwiaW4gYT8tYS53aGVlbERlbHRhOjB9LGRlbHRhWjowLGRlbHRhTW9kZTowfSksWmQ9cmQoWWQpLCRkPVs5LDEzLDI3LDMyXSxhZT1mYSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3csYmU9bnVsbDtmYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYoYmU9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTt2YXIgY2U9ZmEmJlwiVGV4dEV2ZW50XCJpbiB3aW5kb3cmJiFiZSxkZT1mYSYmKCFhZXx8YmUmJjg8YmUmJjExPj1iZSksZWU9U3RyaW5nLmZyb21DaGFyQ29kZSgzMiksZmU9ITE7XG5mdW5jdGlvbiBnZShhLGIpe3N3aXRjaChhKXtjYXNlIFwia2V5dXBcIjpyZXR1cm4tMSE9PSRkLmluZGV4T2YoYi5rZXlDb2RlKTtjYXNlIFwia2V5ZG93blwiOnJldHVybiAyMjkhPT1iLmtleUNvZGU7Y2FzZSBcImtleXByZXNzXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJmb2N1c291dFwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIGhlKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIGllPSExO2Z1bmN0aW9uIGplKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBoZShiKTtjYXNlIFwia2V5cHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7ZmU9ITA7cmV0dXJuIGVlO2Nhc2UgXCJ0ZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PWVlJiZmZT9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiBrZShhLGIpe2lmKGllKXJldHVyblwiY29tcG9zaXRpb25lbmRcIj09PWF8fCFhZSYmZ2UoYSxiKT8oYT1uZCgpLG1kPWxkPWtkPW51bGwsaWU9ITEsYSk6bnVsbDtzd2l0Y2goYSl7Y2FzZSBcInBhc3RlXCI6cmV0dXJuIG51bGw7Y2FzZSBcImtleXByZXNzXCI6aWYoIShiLmN0cmxLZXl8fGIuYWx0S2V5fHxiLm1ldGFLZXkpfHxiLmN0cmxLZXkmJmIuYWx0S2V5KXtpZihiLmNoYXImJjE8Yi5jaGFyLmxlbmd0aClyZXR1cm4gYi5jaGFyO2lmKGIud2hpY2gpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYi53aGljaCl9cmV0dXJuIG51bGw7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIGRlJiZcImtvXCIhPT1iLmxvY2FsZT9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciBsZT17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiBtZShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIWxlW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1mdW5jdGlvbiBuZShhLGIsYyxkKXtFYihkKTtiPW9lKGIsXCJvbkNoYW5nZVwiKTswPGIubGVuZ3RoJiYoYz1uZXcgdGQoXCJvbkNoYW5nZVwiLFwiY2hhbmdlXCIsbnVsbCxjLGQpLGEucHVzaCh7ZXZlbnQ6YyxsaXN0ZW5lcnM6Yn0pKX12YXIgcGU9bnVsbCxxZT1udWxsO2Z1bmN0aW9uIHJlKGEpe3NlKGEsMCl9ZnVuY3Rpb24gdGUoYSl7dmFyIGI9dWUoYSk7aWYoV2EoYikpcmV0dXJuIGF9XG5mdW5jdGlvbiB2ZShhLGIpe2lmKFwiY2hhbmdlXCI9PT1hKXJldHVybiBifXZhciB3ZT0hMTtpZihmYSl7dmFyIHhlO2lmKGZhKXt2YXIgeWU9XCJvbmlucHV0XCJpbiBkb2N1bWVudDtpZigheWUpe3ZhciB6ZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO3plLnNldEF0dHJpYnV0ZShcIm9uaW5wdXRcIixcInJldHVybjtcIik7eWU9XCJmdW5jdGlvblwiPT09dHlwZW9mIHplLm9uaW5wdXR9eGU9eWV9ZWxzZSB4ZT0hMTt3ZT14ZSYmKCFkb2N1bWVudC5kb2N1bWVudE1vZGV8fDk8ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKX1mdW5jdGlvbiBBZSgpe3BlJiYocGUuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsQmUpLHFlPXBlPW51bGwpfWZ1bmN0aW9uIEJlKGEpe2lmKFwidmFsdWVcIj09PWEucHJvcGVydHlOYW1lJiZ0ZShxZSkpe3ZhciBiPVtdO25lKGIscWUsYSx4YihhKSk7YT1yZTtpZihLYilhKGIpO2Vsc2V7S2I9ITA7dHJ5e0diKGEsYil9ZmluYWxseXtLYj0hMSxNYigpfX19fVxuZnVuY3Rpb24gQ2UoYSxiLGMpe1wiZm9jdXNpblwiPT09YT8oQWUoKSxwZT1iLHFlPWMscGUuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsQmUpKTpcImZvY3Vzb3V0XCI9PT1hJiZBZSgpfWZ1bmN0aW9uIERlKGEpe2lmKFwic2VsZWN0aW9uY2hhbmdlXCI9PT1hfHxcImtleXVwXCI9PT1hfHxcImtleWRvd25cIj09PWEpcmV0dXJuIHRlKHFlKX1mdW5jdGlvbiBFZShhLGIpe2lmKFwiY2xpY2tcIj09PWEpcmV0dXJuIHRlKGIpfWZ1bmN0aW9uIEZlKGEsYil7aWYoXCJpbnB1dFwiPT09YXx8XCJjaGFuZ2VcIj09PWEpcmV0dXJuIHRlKGIpfWZ1bmN0aW9uIEdlKGEsYil7cmV0dXJuIGE9PT1iJiYoMCE9PWF8fDEvYT09PTEvYil8fGEhPT1hJiZiIT09Yn12YXIgSGU9XCJmdW5jdGlvblwiPT09dHlwZW9mIE9iamVjdC5pcz9PYmplY3QuaXM6R2UsSWU9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbmZ1bmN0aW9uIEplKGEsYil7aWYoSGUoYSxiKSlyZXR1cm4hMDtpZihcIm9iamVjdFwiIT09dHlwZW9mIGF8fG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGJ8fG51bGw9PT1iKXJldHVybiExO3ZhciBjPU9iamVjdC5rZXlzKGEpLGQ9T2JqZWN0LmtleXMoYik7aWYoYy5sZW5ndGghPT1kLmxlbmd0aClyZXR1cm4hMTtmb3IoZD0wO2Q8Yy5sZW5ndGg7ZCsrKWlmKCFJZS5jYWxsKGIsY1tkXSl8fCFIZShhW2NbZF1dLGJbY1tkXV0pKXJldHVybiExO3JldHVybiEwfWZ1bmN0aW9uIEtlKGEpe2Zvcig7YSYmYS5maXJzdENoaWxkOylhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX1cbmZ1bmN0aW9uIExlKGEsYil7dmFyIGM9S2UoYSk7YT0wO2Zvcih2YXIgZDtjOyl7aWYoMz09PWMubm9kZVR5cGUpe2Q9YStjLnRleHRDb250ZW50Lmxlbmd0aDtpZihhPD1iJiZkPj1iKXJldHVybntub2RlOmMsb2Zmc2V0OmItYX07YT1kfWE6e2Zvcig7Yzspe2lmKGMubmV4dFNpYmxpbmcpe2M9Yy5uZXh0U2libGluZzticmVhayBhfWM9Yy5wYXJlbnROb2RlfWM9dm9pZCAwfWM9S2UoYyl9fWZ1bmN0aW9uIE1lKGEsYil7cmV0dXJuIGEmJmI/YT09PWI/ITA6YSYmMz09PWEubm9kZVR5cGU/ITE6YiYmMz09PWIubm9kZVR5cGU/TWUoYSxiLnBhcmVudE5vZGUpOlwiY29udGFpbnNcImluIGE/YS5jb250YWlucyhiKTphLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uPyEhKGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikmMTYpOiExOiExfVxuZnVuY3Rpb24gTmUoKXtmb3IodmFyIGE9d2luZG93LGI9WGEoKTtiIGluc3RhbmNlb2YgYS5IVE1MSUZyYW1lRWxlbWVudDspe3RyeXt2YXIgYz1cInN0cmluZ1wiPT09dHlwZW9mIGIuY29udGVudFdpbmRvdy5sb2NhdGlvbi5ocmVmfWNhdGNoKGQpe2M9ITF9aWYoYylhPWIuY29udGVudFdpbmRvdztlbHNlIGJyZWFrO2I9WGEoYS5kb2N1bWVudCl9cmV0dXJuIGJ9ZnVuY3Rpb24gT2UoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiBiJiYoXCJpbnB1dFwiPT09YiYmKFwidGV4dFwiPT09YS50eXBlfHxcInNlYXJjaFwiPT09YS50eXBlfHxcInRlbFwiPT09YS50eXBlfHxcInVybFwiPT09YS50eXBlfHxcInBhc3N3b3JkXCI9PT1hLnR5cGUpfHxcInRleHRhcmVhXCI9PT1ifHxcInRydWVcIj09PWEuY29udGVudEVkaXRhYmxlKX1cbnZhciBQZT1mYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLFFlPW51bGwsUmU9bnVsbCxTZT1udWxsLFRlPSExO1xuZnVuY3Rpb24gVWUoYSxiLGMpe3ZhciBkPWMud2luZG93PT09Yz9jLmRvY3VtZW50Ojk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50O1RlfHxudWxsPT1RZXx8UWUhPT1YYShkKXx8KGQ9UWUsXCJzZWxlY3Rpb25TdGFydFwiaW4gZCYmT2UoZCk/ZD17c3RhcnQ6ZC5zZWxlY3Rpb25TdGFydCxlbmQ6ZC5zZWxlY3Rpb25FbmR9OihkPShkLm93bmVyRG9jdW1lbnQmJmQub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8d2luZG93KS5nZXRTZWxlY3Rpb24oKSxkPXthbmNob3JOb2RlOmQuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6ZC5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmQuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmQuZm9jdXNPZmZzZXR9KSxTZSYmSmUoU2UsZCl8fChTZT1kLGQ9b2UoUmUsXCJvblNlbGVjdFwiKSwwPGQubGVuZ3RoJiYoYj1uZXcgdGQoXCJvblNlbGVjdFwiLFwic2VsZWN0XCIsbnVsbCxiLGMpLGEucHVzaCh7ZXZlbnQ6YixsaXN0ZW5lcnM6ZH0pLGIudGFyZ2V0PVFlKSkpfVxuUGMoXCJjYW5jZWwgY2FuY2VsIGNsaWNrIGNsaWNrIGNsb3NlIGNsb3NlIGNvbnRleHRtZW51IGNvbnRleHRNZW51IGNvcHkgY29weSBjdXQgY3V0IGF1eGNsaWNrIGF1eENsaWNrIGRibGNsaWNrIGRvdWJsZUNsaWNrIGRyYWdlbmQgZHJhZ0VuZCBkcmFnc3RhcnQgZHJhZ1N0YXJ0IGRyb3AgZHJvcCBmb2N1c2luIGZvY3VzIGZvY3Vzb3V0IGJsdXIgaW5wdXQgaW5wdXQgaW52YWxpZCBpbnZhbGlkIGtleWRvd24ga2V5RG93biBrZXlwcmVzcyBrZXlQcmVzcyBrZXl1cCBrZXlVcCBtb3VzZWRvd24gbW91c2VEb3duIG1vdXNldXAgbW91c2VVcCBwYXN0ZSBwYXN0ZSBwYXVzZSBwYXVzZSBwbGF5IHBsYXkgcG9pbnRlcmNhbmNlbCBwb2ludGVyQ2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJEb3duIHBvaW50ZXJ1cCBwb2ludGVyVXAgcmF0ZWNoYW5nZSByYXRlQ2hhbmdlIHJlc2V0IHJlc2V0IHNlZWtlZCBzZWVrZWQgc3VibWl0IHN1Ym1pdCB0b3VjaGNhbmNlbCB0b3VjaENhbmNlbCB0b3VjaGVuZCB0b3VjaEVuZCB0b3VjaHN0YXJ0IHRvdWNoU3RhcnQgdm9sdW1lY2hhbmdlIHZvbHVtZUNoYW5nZVwiLnNwbGl0KFwiIFwiKSxcbjApO1BjKFwiZHJhZyBkcmFnIGRyYWdlbnRlciBkcmFnRW50ZXIgZHJhZ2V4aXQgZHJhZ0V4aXQgZHJhZ2xlYXZlIGRyYWdMZWF2ZSBkcmFnb3ZlciBkcmFnT3ZlciBtb3VzZW1vdmUgbW91c2VNb3ZlIG1vdXNlb3V0IG1vdXNlT3V0IG1vdXNlb3ZlciBtb3VzZU92ZXIgcG9pbnRlcm1vdmUgcG9pbnRlck1vdmUgcG9pbnRlcm91dCBwb2ludGVyT3V0IHBvaW50ZXJvdmVyIHBvaW50ZXJPdmVyIHNjcm9sbCBzY3JvbGwgdG9nZ2xlIHRvZ2dsZSB0b3VjaG1vdmUgdG91Y2hNb3ZlIHdoZWVsIHdoZWVsXCIuc3BsaXQoXCIgXCIpLDEpO1BjKE9jLDIpO2Zvcih2YXIgVmU9XCJjaGFuZ2Ugc2VsZWN0aW9uY2hhbmdlIHRleHRJbnB1dCBjb21wb3NpdGlvbnN0YXJ0IGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9udXBkYXRlXCIuc3BsaXQoXCIgXCIpLFdlPTA7V2U8VmUubGVuZ3RoO1dlKyspTmMuc2V0KFZlW1dlXSwwKTtlYShcIm9uTW91c2VFbnRlclwiLFtcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl0pO1xuZWEoXCJvbk1vdXNlTGVhdmVcIixbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdKTtlYShcIm9uUG9pbnRlckVudGVyXCIsW1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl0pO2VhKFwib25Qb2ludGVyTGVhdmVcIixbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXSk7ZGEoXCJvbkNoYW5nZVwiLFwiY2hhbmdlIGNsaWNrIGZvY3VzaW4gZm9jdXNvdXQgaW5wdXQga2V5ZG93biBrZXl1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIikpO2RhKFwib25TZWxlY3RcIixcImZvY3Vzb3V0IGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXNpbiBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKSk7ZGEoXCJvbkJlZm9yZUlucHV0XCIsW1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdKTtkYShcIm9uQ29tcG9zaXRpb25FbmRcIixcImNvbXBvc2l0aW9uZW5kIGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTtcbmRhKFwib25Db21wb3NpdGlvblN0YXJ0XCIsXCJjb21wb3NpdGlvbnN0YXJ0IGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTtkYShcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixcImNvbXBvc2l0aW9udXBkYXRlIGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTt2YXIgWGU9XCJhYm9ydCBjYW5wbGF5IGNhbnBsYXl0aHJvdWdoIGR1cmF0aW9uY2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGxvYWRlZGRhdGEgbG9hZGVkbWV0YWRhdGEgbG9hZHN0YXJ0IHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlY2hhbmdlIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VzcGVuZCB0aW1ldXBkYXRlIHZvbHVtZWNoYW5nZSB3YWl0aW5nXCIuc3BsaXQoXCIgXCIpLFllPW5ldyBTZXQoXCJjYW5jZWwgY2xvc2UgaW52YWxpZCBsb2FkIHNjcm9sbCB0b2dnbGVcIi5zcGxpdChcIiBcIikuY29uY2F0KFhlKSk7XG5mdW5jdGlvbiBaZShhLGIsYyl7dmFyIGQ9YS50eXBlfHxcInVua25vd24tZXZlbnRcIjthLmN1cnJlbnRUYXJnZXQ9YztZYihkLGIsdm9pZCAwLGEpO2EuY3VycmVudFRhcmdldD1udWxsfVxuZnVuY3Rpb24gc2UoYSxiKXtiPTAhPT0oYiY0KTtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrKyl7dmFyIGQ9YVtjXSxlPWQuZXZlbnQ7ZD1kLmxpc3RlbmVyczthOnt2YXIgZj12b2lkIDA7aWYoYilmb3IodmFyIGc9ZC5sZW5ndGgtMTswPD1nO2ctLSl7dmFyIGg9ZFtnXSxrPWguaW5zdGFuY2UsbD1oLmN1cnJlbnRUYXJnZXQ7aD1oLmxpc3RlbmVyO2lmKGshPT1mJiZlLmlzUHJvcGFnYXRpb25TdG9wcGVkKCkpYnJlYWsgYTtaZShlLGgsbCk7Zj1rfWVsc2UgZm9yKGc9MDtnPGQubGVuZ3RoO2crKyl7aD1kW2ddO2s9aC5pbnN0YW5jZTtsPWguY3VycmVudFRhcmdldDtoPWgubGlzdGVuZXI7aWYoayE9PWYmJmUuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSlicmVhayBhO1plKGUsaCxsKTtmPWt9fX1pZihVYil0aHJvdyBhPVZiLFViPSExLFZiPW51bGwsYTt9XG5mdW5jdGlvbiBHKGEsYil7dmFyIGM9JGUoYiksZD1hK1wiX19idWJibGVcIjtjLmhhcyhkKXx8KGFmKGIsYSwyLCExKSxjLmFkZChkKSl9dmFyIGJmPVwiX3JlYWN0TGlzdGVuaW5nXCIrTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMik7ZnVuY3Rpb24gY2YoYSl7YVtiZl18fChhW2JmXT0hMCxiYS5mb3JFYWNoKGZ1bmN0aW9uKGIpe1llLmhhcyhiKXx8ZGYoYiwhMSxhLG51bGwpO2RmKGIsITAsYSxudWxsKX0pKX1cbmZ1bmN0aW9uIGRmKGEsYixjLGQpe3ZhciBlPTQ8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzRdP2FyZ3VtZW50c1s0XTowLGY9YztcInNlbGVjdGlvbmNoYW5nZVwiPT09YSYmOSE9PWMubm9kZVR5cGUmJihmPWMub3duZXJEb2N1bWVudCk7aWYobnVsbCE9PWQmJiFiJiZZZS5oYXMoYSkpe2lmKFwic2Nyb2xsXCIhPT1hKXJldHVybjtlfD0yO2Y9ZH12YXIgZz0kZShmKSxoPWErXCJfX1wiKyhiP1wiY2FwdHVyZVwiOlwiYnViYmxlXCIpO2cuaGFzKGgpfHwoYiYmKGV8PTQpLGFmKGYsYSxlLGIpLGcuYWRkKGgpKX1cbmZ1bmN0aW9uIGFmKGEsYixjLGQpe3ZhciBlPU5jLmdldChiKTtzd2l0Y2godm9pZCAwPT09ZT8yOmUpe2Nhc2UgMDplPWdkO2JyZWFrO2Nhc2UgMTplPWlkO2JyZWFrO2RlZmF1bHQ6ZT1oZH1jPWUuYmluZChudWxsLGIsYyxhKTtlPXZvaWQgMDshUGJ8fFwidG91Y2hzdGFydFwiIT09YiYmXCJ0b3VjaG1vdmVcIiE9PWImJlwid2hlZWxcIiE9PWJ8fChlPSEwKTtkP3ZvaWQgMCE9PWU/YS5hZGRFdmVudExpc3RlbmVyKGIsYyx7Y2FwdHVyZTohMCxwYXNzaXZlOmV9KTphLmFkZEV2ZW50TGlzdGVuZXIoYixjLCEwKTp2b2lkIDAhPT1lP2EuYWRkRXZlbnRMaXN0ZW5lcihiLGMse3Bhc3NpdmU6ZX0pOmEuYWRkRXZlbnRMaXN0ZW5lcihiLGMsITEpfVxuZnVuY3Rpb24gamQoYSxiLGMsZCxlKXt2YXIgZj1kO2lmKDA9PT0oYiYxKSYmMD09PShiJjIpJiZudWxsIT09ZClhOmZvcig7Oyl7aWYobnVsbD09PWQpcmV0dXJuO3ZhciBnPWQudGFnO2lmKDM9PT1nfHw0PT09Zyl7dmFyIGg9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztpZihoPT09ZXx8OD09PWgubm9kZVR5cGUmJmgucGFyZW50Tm9kZT09PWUpYnJlYWs7aWYoND09PWcpZm9yKGc9ZC5yZXR1cm47bnVsbCE9PWc7KXt2YXIgaz1nLnRhZztpZigzPT09a3x8ND09PWspaWYoaz1nLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLGs9PT1lfHw4PT09ay5ub2RlVHlwZSYmay5wYXJlbnROb2RlPT09ZSlyZXR1cm47Zz1nLnJldHVybn1mb3IoO251bGwhPT1oOyl7Zz13YyhoKTtpZihudWxsPT09ZylyZXR1cm47az1nLnRhZztpZig1PT09a3x8Nj09PWspe2Q9Zj1nO2NvbnRpbnVlIGF9aD1oLnBhcmVudE5vZGV9fWQ9ZC5yZXR1cm59TmIoZnVuY3Rpb24oKXt2YXIgZD1mLGU9eGIoYyksZz1bXTtcbmE6e3ZhciBoPU1jLmdldChhKTtpZih2b2lkIDAhPT1oKXt2YXIgaz10ZCx4PWE7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1vZChjKSlicmVhayBhO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6az1SZDticmVhaztjYXNlIFwiZm9jdXNpblwiOng9XCJmb2N1c1wiO2s9RmQ7YnJlYWs7Y2FzZSBcImZvY3Vzb3V0XCI6eD1cImJsdXJcIjtrPUZkO2JyZWFrO2Nhc2UgXCJiZWZvcmVibHVyXCI6Y2FzZSBcImFmdGVyYmx1clwiOms9RmQ7YnJlYWs7Y2FzZSBcImNsaWNrXCI6aWYoMj09PWMuYnV0dG9uKWJyZWFrIGE7Y2FzZSBcImF1eGNsaWNrXCI6Y2FzZSBcImRibGNsaWNrXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJtb3VzZW1vdmVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJtb3VzZW91dFwiOmNhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwiY29udGV4dG1lbnVcIjprPUJkO2JyZWFrO2Nhc2UgXCJkcmFnXCI6Y2FzZSBcImRyYWdlbmRcIjpjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdleGl0XCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmNhc2UgXCJkcmFnb3ZlclwiOmNhc2UgXCJkcmFnc3RhcnRcIjpjYXNlIFwiZHJvcFwiOms9XG5EZDticmVhaztjYXNlIFwidG91Y2hjYW5jZWxcIjpjYXNlIFwidG91Y2hlbmRcIjpjYXNlIFwidG91Y2htb3ZlXCI6Y2FzZSBcInRvdWNoc3RhcnRcIjprPVZkO2JyZWFrO2Nhc2UgSWM6Y2FzZSBKYzpjYXNlIEtjOms9SGQ7YnJlYWs7Y2FzZSBMYzprPVhkO2JyZWFrO2Nhc2UgXCJzY3JvbGxcIjprPXZkO2JyZWFrO2Nhc2UgXCJ3aGVlbFwiOms9WmQ7YnJlYWs7Y2FzZSBcImNvcHlcIjpjYXNlIFwiY3V0XCI6Y2FzZSBcInBhc3RlXCI6az1KZDticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcInBvaW50ZXJjYW5jZWxcIjpjYXNlIFwicG9pbnRlcmRvd25cIjpjYXNlIFwicG9pbnRlcm1vdmVcIjpjYXNlIFwicG9pbnRlcm91dFwiOmNhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVydXBcIjprPVRkfXZhciB3PTAhPT0oYiY0KSx6PSF3JiZcInNjcm9sbFwiPT09YSx1PXc/bnVsbCE9PWg/aCtcIkNhcHR1cmVcIjpudWxsOmg7dz1bXTtmb3IodmFyIHQ9ZCxxO251bGwhPT1cbnQ7KXtxPXQ7dmFyIHY9cS5zdGF0ZU5vZGU7NT09PXEudGFnJiZudWxsIT09diYmKHE9dixudWxsIT09dSYmKHY9T2IodCx1KSxudWxsIT12JiZ3LnB1c2goZWYodCx2LHEpKSkpO2lmKHopYnJlYWs7dD10LnJldHVybn0wPHcubGVuZ3RoJiYoaD1uZXcgayhoLHgsbnVsbCxjLGUpLGcucHVzaCh7ZXZlbnQ6aCxsaXN0ZW5lcnM6d30pKX19aWYoMD09PShiJjcpKXthOntoPVwibW91c2VvdmVyXCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hO2s9XCJtb3VzZW91dFwiPT09YXx8XCJwb2ludGVyb3V0XCI9PT1hO2lmKGgmJjA9PT0oYiYxNikmJih4PWMucmVsYXRlZFRhcmdldHx8Yy5mcm9tRWxlbWVudCkmJih3Yyh4KXx8eFtmZl0pKWJyZWFrIGE7aWYoa3x8aCl7aD1lLndpbmRvdz09PWU/ZTooaD1lLm93bmVyRG9jdW1lbnQpP2guZGVmYXVsdFZpZXd8fGgucGFyZW50V2luZG93OndpbmRvdztpZihrKXtpZih4PWMucmVsYXRlZFRhcmdldHx8Yy50b0VsZW1lbnQsaz1kLHg9eD93Yyh4KTpudWxsLG51bGwhPT1cbngmJih6PVpiKHgpLHghPT16fHw1IT09eC50YWcmJjYhPT14LnRhZykpeD1udWxsfWVsc2Ugaz1udWxsLHg9ZDtpZihrIT09eCl7dz1CZDt2PVwib25Nb3VzZUxlYXZlXCI7dT1cIm9uTW91c2VFbnRlclwiO3Q9XCJtb3VzZVwiO2lmKFwicG9pbnRlcm91dFwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSl3PVRkLHY9XCJvblBvaW50ZXJMZWF2ZVwiLHU9XCJvblBvaW50ZXJFbnRlclwiLHQ9XCJwb2ludGVyXCI7ej1udWxsPT1rP2g6dWUoayk7cT1udWxsPT14P2g6dWUoeCk7aD1uZXcgdyh2LHQrXCJsZWF2ZVwiLGssYyxlKTtoLnRhcmdldD16O2gucmVsYXRlZFRhcmdldD1xO3Y9bnVsbDt3YyhlKT09PWQmJih3PW5ldyB3KHUsdCtcImVudGVyXCIseCxjLGUpLHcudGFyZ2V0PXEsdy5yZWxhdGVkVGFyZ2V0PXosdj13KTt6PXY7aWYoayYmeCliOnt3PWs7dT14O3Q9MDtmb3IocT13O3E7cT1nZihxKSl0Kys7cT0wO2Zvcih2PXU7djt2PWdmKHYpKXErKztmb3IoOzA8dC1xOyl3PWdmKHcpLHQtLTtmb3IoOzA8cS10Oyl1PVxuZ2YodSkscS0tO2Zvcig7dC0tOyl7aWYodz09PXV8fG51bGwhPT11JiZ3PT09dS5hbHRlcm5hdGUpYnJlYWsgYjt3PWdmKHcpO3U9Z2YodSl9dz1udWxsfWVsc2Ugdz1udWxsO251bGwhPT1rJiZoZihnLGgsayx3LCExKTtudWxsIT09eCYmbnVsbCE9PXomJmhmKGcseix4LHcsITApfX19YTp7aD1kP3VlKGQpOndpbmRvdztrPWgubm9kZU5hbWUmJmgubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtpZihcInNlbGVjdFwiPT09a3x8XCJpbnB1dFwiPT09ayYmXCJmaWxlXCI9PT1oLnR5cGUpdmFyIEo9dmU7ZWxzZSBpZihtZShoKSlpZih3ZSlKPUZlO2Vsc2V7Sj1EZTt2YXIgSz1DZX1lbHNlKGs9aC5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWsudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWgudHlwZXx8XCJyYWRpb1wiPT09aC50eXBlKSYmKEo9RWUpO2lmKEomJihKPUooYSxkKSkpe25lKGcsSixjLGUpO2JyZWFrIGF9SyYmSyhhLGgsZCk7XCJmb2N1c291dFwiPT09YSYmKEs9aC5fd3JhcHBlclN0YXRlKSYmXG5LLmNvbnRyb2xsZWQmJlwibnVtYmVyXCI9PT1oLnR5cGUmJmJiKGgsXCJudW1iZXJcIixoLnZhbHVlKX1LPWQ/dWUoZCk6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNpblwiOmlmKG1lKEspfHxcInRydWVcIj09PUsuY29udGVudEVkaXRhYmxlKVFlPUssUmU9ZCxTZT1udWxsO2JyZWFrO2Nhc2UgXCJmb2N1c291dFwiOlNlPVJlPVFlPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOlRlPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcImRyYWdlbmRcIjpUZT0hMTtVZShnLGMsZSk7YnJlYWs7Y2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOmlmKFBlKWJyZWFrO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6VWUoZyxjLGUpfXZhciBRO2lmKGFlKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOnZhciBMPVwib25Db21wb3NpdGlvblN0YXJ0XCI7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpMPVwib25Db21wb3NpdGlvbkVuZFwiO2JyZWFrIGI7XG5jYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjpMPVwib25Db21wb3NpdGlvblVwZGF0ZVwiO2JyZWFrIGJ9TD12b2lkIDB9ZWxzZSBpZT9nZShhLGMpJiYoTD1cIm9uQ29tcG9zaXRpb25FbmRcIik6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihMPVwib25Db21wb3NpdGlvblN0YXJ0XCIpO0wmJihkZSYmXCJrb1wiIT09Yy5sb2NhbGUmJihpZXx8XCJvbkNvbXBvc2l0aW9uU3RhcnRcIiE9PUw/XCJvbkNvbXBvc2l0aW9uRW5kXCI9PT1MJiZpZSYmKFE9bmQoKSk6KGtkPWUsbGQ9XCJ2YWx1ZVwiaW4ga2Q/a2QudmFsdWU6a2QudGV4dENvbnRlbnQsaWU9ITApKSxLPW9lKGQsTCksMDxLLmxlbmd0aCYmKEw9bmV3IExkKEwsYSxudWxsLGMsZSksZy5wdXNoKHtldmVudDpMLGxpc3RlbmVyczpLfSksUT9MLmRhdGE9UTooUT1oZShjKSxudWxsIT09USYmKEwuZGF0YT1RKSkpKTtpZihRPWNlP2plKGEsYyk6a2UoYSxjKSlkPW9lKGQsXCJvbkJlZm9yZUlucHV0XCIpLDA8ZC5sZW5ndGgmJihlPW5ldyBMZChcIm9uQmVmb3JlSW5wdXRcIixcblwiYmVmb3JlaW5wdXRcIixudWxsLGMsZSksZy5wdXNoKHtldmVudDplLGxpc3RlbmVyczpkfSksZS5kYXRhPVEpfXNlKGcsYil9KX1mdW5jdGlvbiBlZihhLGIsYyl7cmV0dXJue2luc3RhbmNlOmEsbGlzdGVuZXI6YixjdXJyZW50VGFyZ2V0OmN9fWZ1bmN0aW9uIG9lKGEsYil7Zm9yKHZhciBjPWIrXCJDYXB0dXJlXCIsZD1bXTtudWxsIT09YTspe3ZhciBlPWEsZj1lLnN0YXRlTm9kZTs1PT09ZS50YWcmJm51bGwhPT1mJiYoZT1mLGY9T2IoYSxjKSxudWxsIT1mJiZkLnVuc2hpZnQoZWYoYSxmLGUpKSxmPU9iKGEsYiksbnVsbCE9ZiYmZC5wdXNoKGVmKGEsZixlKSkpO2E9YS5yZXR1cm59cmV0dXJuIGR9ZnVuY3Rpb24gZ2YoYSl7aWYobnVsbD09PWEpcmV0dXJuIG51bGw7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1cbmZ1bmN0aW9uIGhmKGEsYixjLGQsZSl7Zm9yKHZhciBmPWIuX3JlYWN0TmFtZSxnPVtdO251bGwhPT1jJiZjIT09ZDspe3ZhciBoPWMsaz1oLmFsdGVybmF0ZSxsPWguc3RhdGVOb2RlO2lmKG51bGwhPT1rJiZrPT09ZClicmVhazs1PT09aC50YWcmJm51bGwhPT1sJiYoaD1sLGU/KGs9T2IoYyxmKSxudWxsIT1rJiZnLnVuc2hpZnQoZWYoYyxrLGgpKSk6ZXx8KGs9T2IoYyxmKSxudWxsIT1rJiZnLnB1c2goZWYoYyxrLGgpKSkpO2M9Yy5yZXR1cm59MCE9PWcubGVuZ3RoJiZhLnB1c2goe2V2ZW50OmIsbGlzdGVuZXJzOmd9KX1mdW5jdGlvbiBqZigpe312YXIga2Y9bnVsbCxsZj1udWxsO2Z1bmN0aW9uIG1mKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6cmV0dXJuISFiLmF1dG9Gb2N1c31yZXR1cm4hMX1cbmZ1bmN0aW9uIG5mKGEsYil7cmV0dXJuXCJ0ZXh0YXJlYVwiPT09YXx8XCJvcHRpb25cIj09PWF8fFwibm9zY3JpcHRcIj09PWF8fFwic3RyaW5nXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJudW1iZXJcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbH12YXIgb2Y9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAscGY9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwO2Z1bmN0aW9uIHFmKGEpezE9PT1hLm5vZGVUeXBlP2EudGV4dENvbnRlbnQ9XCJcIjo5PT09YS5ub2RlVHlwZSYmKGE9YS5ib2R5LG51bGwhPWEmJihhLnRleHRDb250ZW50PVwiXCIpKX1cbmZ1bmN0aW9uIHJmKGEpe2Zvcig7bnVsbCE9YTthPWEubmV4dFNpYmxpbmcpe3ZhciBiPWEubm9kZVR5cGU7aWYoMT09PWJ8fDM9PT1iKWJyZWFrfXJldHVybiBhfWZ1bmN0aW9uIHNmKGEpe2E9YS5wcmV2aW91c1NpYmxpbmc7Zm9yKHZhciBiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoXCIkXCI9PT1jfHxcIiQhXCI9PT1jfHxcIiQ/XCI9PT1jKXtpZigwPT09YilyZXR1cm4gYTtiLS19ZWxzZVwiLyRcIj09PWMmJmIrK31hPWEucHJldmlvdXNTaWJsaW5nfXJldHVybiBudWxsfXZhciB0Zj0wO2Z1bmN0aW9uIHVmKGEpe3JldHVybnskJHR5cGVvZjpHYSx0b1N0cmluZzphLHZhbHVlT2Y6YX19dmFyIHZmPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLHdmPVwiX19yZWFjdEZpYmVyJFwiK3ZmLHhmPVwiX19yZWFjdFByb3BzJFwiK3ZmLGZmPVwiX19yZWFjdENvbnRhaW5lciRcIit2Zix5Zj1cIl9fcmVhY3RFdmVudHMkXCIrdmY7XG5mdW5jdGlvbiB3YyhhKXt2YXIgYj1hW3dmXTtpZihiKXJldHVybiBiO2Zvcih2YXIgYz1hLnBhcmVudE5vZGU7Yzspe2lmKGI9Y1tmZl18fGNbd2ZdKXtjPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1iLmNoaWxkfHxudWxsIT09YyYmbnVsbCE9PWMuY2hpbGQpZm9yKGE9c2YoYSk7bnVsbCE9PWE7KXtpZihjPWFbd2ZdKXJldHVybiBjO2E9c2YoYSl9cmV0dXJuIGJ9YT1jO2M9YS5wYXJlbnROb2RlfXJldHVybiBudWxsfWZ1bmN0aW9uIENiKGEpe2E9YVt3Zl18fGFbZmZdO3JldHVybiFhfHw1IT09YS50YWcmJjYhPT1hLnRhZyYmMTMhPT1hLnRhZyYmMyE9PWEudGFnP251bGw6YX1mdW5jdGlvbiB1ZShhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYS5zdGF0ZU5vZGU7dGhyb3cgRXJyb3IoeSgzMykpO31mdW5jdGlvbiBEYihhKXtyZXR1cm4gYVt4Zl18fG51bGx9XG5mdW5jdGlvbiAkZShhKXt2YXIgYj1hW3lmXTt2b2lkIDA9PT1iJiYoYj1hW3lmXT1uZXcgU2V0KTtyZXR1cm4gYn12YXIgemY9W10sQWY9LTE7ZnVuY3Rpb24gQmYoYSl7cmV0dXJue2N1cnJlbnQ6YX19ZnVuY3Rpb24gSChhKXswPkFmfHwoYS5jdXJyZW50PXpmW0FmXSx6ZltBZl09bnVsbCxBZi0tKX1mdW5jdGlvbiBJKGEsYil7QWYrKzt6ZltBZl09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBDZj17fSxNPUJmKENmKSxOPUJmKCExKSxEZj1DZjtcbmZ1bmN0aW9uIEVmKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gQ2Y7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gRmYoYSl7YT1hLmNoaWxkQ29udGV4dFR5cGVzO3JldHVybiBudWxsIT09YSYmdm9pZCAwIT09YX1mdW5jdGlvbiBHZigpe0goTik7SChNKX1mdW5jdGlvbiBIZihhLGIsYyl7aWYoTS5jdXJyZW50IT09Q2YpdGhyb3cgRXJyb3IoeSgxNjgpKTtJKE0sYik7SShOLGMpfVxuZnVuY3Rpb24gSWYoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2E9Yi5jaGlsZENvbnRleHRUeXBlcztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5nZXRDaGlsZENvbnRleHQpcmV0dXJuIGM7ZD1kLmdldENoaWxkQ29udGV4dCgpO2Zvcih2YXIgZSBpbiBkKWlmKCEoZSBpbiBhKSl0aHJvdyBFcnJvcih5KDEwOCxSYShiKXx8XCJVbmtub3duXCIsZSkpO3JldHVybiBtKHt9LGMsZCl9ZnVuY3Rpb24gSmYoYSl7YT0oYT1hLnN0YXRlTm9kZSkmJmEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fENmO0RmPU0uY3VycmVudDtJKE0sYSk7SShOLE4uY3VycmVudCk7cmV0dXJuITB9ZnVuY3Rpb24gS2YoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2lmKCFkKXRocm93IEVycm9yKHkoMTY5KSk7Yz8oYT1JZihhLGIsRGYpLGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ9YSxIKE4pLEgoTSksSShNLGEpKTpIKE4pO0koTixjKX1cbnZhciBMZj1udWxsLE1mPW51bGwsTmY9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksT2Y9ci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrLFBmPXIudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2ssUWY9ci51bnN0YWJsZV9zaG91bGRZaWVsZCxSZj1yLnVuc3RhYmxlX3JlcXVlc3RQYWludCxTZj1yLnVuc3RhYmxlX25vdyxUZj1yLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsLFVmPXIudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHksVmY9ci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxXZj1yLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LFhmPXIudW5zdGFibGVfTG93UHJpb3JpdHksWWY9ci51bnN0YWJsZV9JZGxlUHJpb3JpdHksWmY9e30sJGY9dm9pZCAwIT09UmY/UmY6ZnVuY3Rpb24oKXt9LGFnPW51bGwsYmc9bnVsbCxjZz0hMSxkZz1TZigpLE89MUU0PmRnP1NmOmZ1bmN0aW9uKCl7cmV0dXJuIFNmKCktZGd9O1xuZnVuY3Rpb24gZWcoKXtzd2l0Y2goVGYoKSl7Y2FzZSBVZjpyZXR1cm4gOTk7Y2FzZSBWZjpyZXR1cm4gOTg7Y2FzZSBXZjpyZXR1cm4gOTc7Y2FzZSBYZjpyZXR1cm4gOTY7Y2FzZSBZZjpyZXR1cm4gOTU7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDMzMikpO319ZnVuY3Rpb24gZmcoYSl7c3dpdGNoKGEpe2Nhc2UgOTk6cmV0dXJuIFVmO2Nhc2UgOTg6cmV0dXJuIFZmO2Nhc2UgOTc6cmV0dXJuIFdmO2Nhc2UgOTY6cmV0dXJuIFhmO2Nhc2UgOTU6cmV0dXJuIFlmO2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgzMzIpKTt9fWZ1bmN0aW9uIGdnKGEsYil7YT1mZyhhKTtyZXR1cm4gTmYoYSxiKX1mdW5jdGlvbiBoZyhhLGIsYyl7YT1mZyhhKTtyZXR1cm4gT2YoYSxiLGMpfWZ1bmN0aW9uIGlnKCl7aWYobnVsbCE9PWJnKXt2YXIgYT1iZztiZz1udWxsO1BmKGEpfWpnKCl9XG5mdW5jdGlvbiBqZygpe2lmKCFjZyYmbnVsbCE9PWFnKXtjZz0hMDt2YXIgYT0wO3RyeXt2YXIgYj1hZztnZyg5OSxmdW5jdGlvbigpe2Zvcig7YTxiLmxlbmd0aDthKyspe3ZhciBjPWJbYV07ZG8gYz1jKCEwKTt3aGlsZShudWxsIT09Yyl9fSk7YWc9bnVsbH1jYXRjaChjKXt0aHJvdyBudWxsIT09YWcmJihhZz1hZy5zbGljZShhKzEpKSxPZihVZixpZyksYzt9ZmluYWxseXtjZz0hMX19fXZhciBrZz1yYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZztmdW5jdGlvbiBsZyhhLGIpe2lmKGEmJmEuZGVmYXVsdFByb3BzKXtiPW0oe30sYik7YT1hLmRlZmF1bHRQcm9wcztmb3IodmFyIGMgaW4gYSl2b2lkIDA9PT1iW2NdJiYoYltjXT1hW2NdKTtyZXR1cm4gYn1yZXR1cm4gYn12YXIgbWc9QmYobnVsbCksbmc9bnVsbCxvZz1udWxsLHBnPW51bGw7ZnVuY3Rpb24gcWcoKXtwZz1vZz1uZz1udWxsfVxuZnVuY3Rpb24gcmcoYSl7dmFyIGI9bWcuY3VycmVudDtIKG1nKTthLnR5cGUuX2NvbnRleHQuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIHNnKGEsYil7Zm9yKDtudWxsIT09YTspe3ZhciBjPWEuYWx0ZXJuYXRlO2lmKChhLmNoaWxkTGFuZXMmYik9PT1iKWlmKG51bGw9PT1jfHwoYy5jaGlsZExhbmVzJmIpPT09YilicmVhaztlbHNlIGMuY2hpbGRMYW5lc3w9YjtlbHNlIGEuY2hpbGRMYW5lc3w9YixudWxsIT09YyYmKGMuY2hpbGRMYW5lc3w9Yik7YT1hLnJldHVybn19ZnVuY3Rpb24gdGcoYSxiKXtuZz1hO3BnPW9nPW51bGw7YT1hLmRlcGVuZGVuY2llcztudWxsIT09YSYmbnVsbCE9PWEuZmlyc3RDb250ZXh0JiYoMCE9PShhLmxhbmVzJmIpJiYodWc9ITApLGEuZmlyc3RDb250ZXh0PW51bGwpfVxuZnVuY3Rpb24gdmcoYSxiKXtpZihwZyE9PWEmJiExIT09YiYmMCE9PWIpe2lmKFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MTA3Mzc0MTgyMz09PWIpcGc9YSxiPTEwNzM3NDE4MjM7Yj17Y29udGV4dDphLG9ic2VydmVkQml0czpiLG5leHQ6bnVsbH07aWYobnVsbD09PW9nKXtpZihudWxsPT09bmcpdGhyb3cgRXJyb3IoeSgzMDgpKTtvZz1iO25nLmRlcGVuZGVuY2llcz17bGFuZXM6MCxmaXJzdENvbnRleHQ6YixyZXNwb25kZXJzOm51bGx9fWVsc2Ugb2c9b2cubmV4dD1ifXJldHVybiBhLl9jdXJyZW50VmFsdWV9dmFyIHdnPSExO2Z1bmN0aW9uIHhnKGEpe2EudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLm1lbW9pemVkU3RhdGUsZmlyc3RCYXNlVXBkYXRlOm51bGwsbGFzdEJhc2VVcGRhdGU6bnVsbCxzaGFyZWQ6e3BlbmRpbmc6bnVsbH0sZWZmZWN0czpudWxsfX1cbmZ1bmN0aW9uIHlnKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9PT1hJiYoYi51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEuYmFzZVN0YXRlLGZpcnN0QmFzZVVwZGF0ZTphLmZpcnN0QmFzZVVwZGF0ZSxsYXN0QmFzZVVwZGF0ZTphLmxhc3RCYXNlVXBkYXRlLHNoYXJlZDphLnNoYXJlZCxlZmZlY3RzOmEuZWZmZWN0c30pfWZ1bmN0aW9uIHpnKGEsYil7cmV0dXJue2V2ZW50VGltZTphLGxhbmU6Yix0YWc6MCxwYXlsb2FkOm51bGwsY2FsbGJhY2s6bnVsbCxuZXh0Om51bGx9fWZ1bmN0aW9uIEFnKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1hKXthPWEuc2hhcmVkO3ZhciBjPWEucGVuZGluZztudWxsPT09Yz9iLm5leHQ9YjooYi5uZXh0PWMubmV4dCxjLm5leHQ9Yik7YS5wZW5kaW5nPWJ9fVxuZnVuY3Rpb24gQmcoYSxiKXt2YXIgYz1hLnVwZGF0ZVF1ZXVlLGQ9YS5hbHRlcm5hdGU7aWYobnVsbCE9PWQmJihkPWQudXBkYXRlUXVldWUsYz09PWQpKXt2YXIgZT1udWxsLGY9bnVsbDtjPWMuZmlyc3RCYXNlVXBkYXRlO2lmKG51bGwhPT1jKXtkb3t2YXIgZz17ZXZlbnRUaW1lOmMuZXZlbnRUaW1lLGxhbmU6Yy5sYW5lLHRhZzpjLnRhZyxwYXlsb2FkOmMucGF5bG9hZCxjYWxsYmFjazpjLmNhbGxiYWNrLG5leHQ6bnVsbH07bnVsbD09PWY/ZT1mPWc6Zj1mLm5leHQ9ZztjPWMubmV4dH13aGlsZShudWxsIT09Yyk7bnVsbD09PWY/ZT1mPWI6Zj1mLm5leHQ9Yn1lbHNlIGU9Zj1iO2M9e2Jhc2VTdGF0ZTpkLmJhc2VTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6ZSxsYXN0QmFzZVVwZGF0ZTpmLHNoYXJlZDpkLnNoYXJlZCxlZmZlY3RzOmQuZWZmZWN0c307YS51cGRhdGVRdWV1ZT1jO3JldHVybn1hPWMubGFzdEJhc2VVcGRhdGU7bnVsbD09PWE/Yy5maXJzdEJhc2VVcGRhdGU9YjphLm5leHQ9XG5iO2MubGFzdEJhc2VVcGRhdGU9Yn1cbmZ1bmN0aW9uIENnKGEsYixjLGQpe3ZhciBlPWEudXBkYXRlUXVldWU7d2c9ITE7dmFyIGY9ZS5maXJzdEJhc2VVcGRhdGUsZz1lLmxhc3RCYXNlVXBkYXRlLGg9ZS5zaGFyZWQucGVuZGluZztpZihudWxsIT09aCl7ZS5zaGFyZWQucGVuZGluZz1udWxsO3ZhciBrPWgsbD1rLm5leHQ7ay5uZXh0PW51bGw7bnVsbD09PWc/Zj1sOmcubmV4dD1sO2c9azt2YXIgbj1hLmFsdGVybmF0ZTtpZihudWxsIT09bil7bj1uLnVwZGF0ZVF1ZXVlO3ZhciBBPW4ubGFzdEJhc2VVcGRhdGU7QSE9PWcmJihudWxsPT09QT9uLmZpcnN0QmFzZVVwZGF0ZT1sOkEubmV4dD1sLG4ubGFzdEJhc2VVcGRhdGU9ayl9fWlmKG51bGwhPT1mKXtBPWUuYmFzZVN0YXRlO2c9MDtuPWw9az1udWxsO2Rve2g9Zi5sYW5lO3ZhciBwPWYuZXZlbnRUaW1lO2lmKChkJmgpPT09aCl7bnVsbCE9PW4mJihuPW4ubmV4dD17ZXZlbnRUaW1lOnAsbGFuZTowLHRhZzpmLnRhZyxwYXlsb2FkOmYucGF5bG9hZCxjYWxsYmFjazpmLmNhbGxiYWNrLFxubmV4dDpudWxsfSk7YTp7dmFyIEM9YSx4PWY7aD1iO3A9Yztzd2l0Y2goeC50YWcpe2Nhc2UgMTpDPXgucGF5bG9hZDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgQyl7QT1DLmNhbGwocCxBLGgpO2JyZWFrIGF9QT1DO2JyZWFrIGE7Y2FzZSAzOkMuZmxhZ3M9Qy5mbGFncyYtNDA5N3w2NDtjYXNlIDA6Qz14LnBheWxvYWQ7aD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgQz9DLmNhbGwocCxBLGgpOkM7aWYobnVsbD09PWh8fHZvaWQgMD09PWgpYnJlYWsgYTtBPW0oe30sQSxoKTticmVhayBhO2Nhc2UgMjp3Zz0hMH19bnVsbCE9PWYuY2FsbGJhY2smJihhLmZsYWdzfD0zMixoPWUuZWZmZWN0cyxudWxsPT09aD9lLmVmZmVjdHM9W2ZdOmgucHVzaChmKSl9ZWxzZSBwPXtldmVudFRpbWU6cCxsYW5lOmgsdGFnOmYudGFnLHBheWxvYWQ6Zi5wYXlsb2FkLGNhbGxiYWNrOmYuY2FsbGJhY2ssbmV4dDpudWxsfSxudWxsPT09bj8obD1uPXAsaz1BKTpuPW4ubmV4dD1wLGd8PWg7Zj1mLm5leHQ7aWYobnVsbD09PVxuZilpZihoPWUuc2hhcmVkLnBlbmRpbmcsbnVsbD09PWgpYnJlYWs7ZWxzZSBmPWgubmV4dCxoLm5leHQ9bnVsbCxlLmxhc3RCYXNlVXBkYXRlPWgsZS5zaGFyZWQucGVuZGluZz1udWxsfXdoaWxlKDEpO251bGw9PT1uJiYoaz1BKTtlLmJhc2VTdGF0ZT1rO2UuZmlyc3RCYXNlVXBkYXRlPWw7ZS5sYXN0QmFzZVVwZGF0ZT1uO0RnfD1nO2EubGFuZXM9ZzthLm1lbW9pemVkU3RhdGU9QX19ZnVuY3Rpb24gRWcoYSxiLGMpe2E9Yi5lZmZlY3RzO2IuZWZmZWN0cz1udWxsO2lmKG51bGwhPT1hKWZvcihiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBkPWFbYl0sZT1kLmNhbGxiYWNrO2lmKG51bGwhPT1lKXtkLmNhbGxiYWNrPW51bGw7ZD1jO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlKXRocm93IEVycm9yKHkoMTkxLGUpKTtlLmNhbGwoZCl9fX12YXIgRmc9KG5ldyBhYS5Db21wb25lbnQpLnJlZnM7XG5mdW5jdGlvbiBHZyhhLGIsYyxkKXtiPWEubWVtb2l6ZWRTdGF0ZTtjPWMoZCxiKTtjPW51bGw9PT1jfHx2b2lkIDA9PT1jP2I6bSh7fSxiLGMpO2EubWVtb2l6ZWRTdGF0ZT1jOzA9PT1hLmxhbmVzJiYoYS51cGRhdGVRdWV1ZS5iYXNlU3RhdGU9Yyl9XG52YXIgS2c9e2lzTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4oYT1hLl9yZWFjdEludGVybmFscyk/WmIoYSk9PT1hOiExfSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGQ9SGcoKSxlPUlnKGEpLGY9emcoZCxlKTtmLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGYuY2FsbGJhY2s9Yyk7QWcoYSxmKTtKZyhhLGUsZCl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGQ9SGcoKSxlPUlnKGEpLGY9emcoZCxlKTtmLnRhZz0xO2YucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZi5jYWxsYmFjaz1jKTtBZyhhLGYpO0pnKGEsZSxkKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsczt2YXIgYz1IZygpLGQ9SWcoYSksZT16ZyhjLGQpO2UudGFnPTI7dm9pZCAwIT09YiYmbnVsbCE9PWImJihlLmNhbGxiYWNrPVxuYik7QWcoYSxlKTtKZyhhLGQsYyl9fTtmdW5jdGlvbiBMZyhhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFKZShjLGQpfHwhSmUoZSxmKTohMH1cbmZ1bmN0aW9uIE1nKGEsYixjKXt2YXIgZD0hMSxlPUNmO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPXZnKGYpOihlPUZmKGIpP0RmOk0uY3VycmVudCxkPWIuY29udGV4dFR5cGVzLGY9KGQ9bnVsbCE9PWQmJnZvaWQgMCE9PWQpP0VmKGEsZSk6Q2YpO2I9bmV3IGIoYyxmKTthLm1lbW9pemVkU3RhdGU9bnVsbCE9PWIuc3RhdGUmJnZvaWQgMCE9PWIuc3RhdGU/Yi5zdGF0ZTpudWxsO2IudXBkYXRlcj1LZzthLnN0YXRlTm9kZT1iO2IuX3JlYWN0SW50ZXJuYWxzPWE7ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1mKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIE5nKGEsYixjLGQpe2E9Yi5zdGF0ZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO2Iuc3RhdGUhPT1hJiZLZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGIsYi5zdGF0ZSxudWxsKX1cbmZ1bmN0aW9uIE9nKGEsYixjLGQpe3ZhciBlPWEuc3RhdGVOb2RlO2UucHJvcHM9YztlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtlLnJlZnM9Rmc7eGcoYSk7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2UuY29udGV4dD12ZyhmKTooZj1GZihiKT9EZjpNLmN1cnJlbnQsZS5jb250ZXh0PUVmKGEsZikpO0NnKGEsYyxlLGQpO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2Y9Yi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJihHZyhhLGIsZixjKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50fHxcbihiPWUuc3RhdGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50JiZlLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLGIhPT1lLnN0YXRlJiZLZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGUsZS5zdGF0ZSxudWxsKSxDZyhhLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50RGlkTW91bnQmJihhLmZsYWdzfD00KX12YXIgUGc9QXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uIFFnKGEsYixjKXthPWMucmVmO2lmKG51bGwhPT1hJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmXCJvYmplY3RcIiE9PXR5cGVvZiBhKXtpZihjLl9vd25lcil7Yz1jLl9vd25lcjtpZihjKXtpZigxIT09Yy50YWcpdGhyb3cgRXJyb3IoeSgzMDkpKTt2YXIgZD1jLnN0YXRlTm9kZX1pZighZCl0aHJvdyBFcnJvcih5KDE0NyxhKSk7dmFyIGU9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnJlZiYmYi5yZWYuX3N0cmluZ1JlZj09PWUpcmV0dXJuIGIucmVmO2I9ZnVuY3Rpb24oYSl7dmFyIGI9ZC5yZWZzO2I9PT1GZyYmKGI9ZC5yZWZzPXt9KTtudWxsPT09YT9kZWxldGUgYltlXTpiW2VdPWF9O2IuX3N0cmluZ1JlZj1lO3JldHVybiBifWlmKFwic3RyaW5nXCIhPT10eXBlb2YgYSl0aHJvdyBFcnJvcih5KDI4NCkpO2lmKCFjLl9vd25lcil0aHJvdyBFcnJvcih5KDI5MCxhKSk7fXJldHVybiBhfVxuZnVuY3Rpb24gUmcoYSxiKXtpZihcInRleHRhcmVhXCIhPT1hLnR5cGUpdGhyb3cgRXJyb3IoeSgzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIpKTt9XG5mdW5jdGlvbiBTZyhhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5sYXN0RWZmZWN0O251bGwhPT1kPyhkLm5leHRFZmZlY3Q9YyxiLmxhc3RFZmZlY3Q9Yyk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YztjLm5leHRFZmZlY3Q9bnVsbDtjLmZsYWdzPTh9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiKXthPVRnKGEsYik7YS5pbmRleD0wO2Euc2libGluZz1udWxsO3JldHVybiBhfWZ1bmN0aW9uIGYoYixjLGQpe2IuaW5kZXg9ZDtpZighYSlyZXR1cm4gYztkPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1kKXJldHVybiBkPWQuaW5kZXgsZDxjPyhiLmZsYWdzPTIsXG5jKTpkO2IuZmxhZ3M9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZmxhZ3M9Mik7cmV0dXJuIGJ9ZnVuY3Rpb24gaChhLGIsYyxkKXtpZihudWxsPT09Ynx8NiE9PWIudGFnKXJldHVybiBiPVVnKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIGsoYSxiLGMsZCl7aWYobnVsbCE9PWImJmIuZWxlbWVudFR5cGU9PT1jLnR5cGUpcmV0dXJuIGQ9ZShiLGMucHJvcHMpLGQucmVmPVFnKGEsYixjKSxkLnJldHVybj1hLGQ7ZD1WZyhjLnR5cGUsYy5rZXksYy5wcm9wcyxudWxsLGEubW9kZSxkKTtkLnJlZj1RZyhhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBsKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09Yy5pbXBsZW1lbnRhdGlvbilyZXR1cm4gYj1cbldnKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBuKGEsYixjLGQsZil7aWYobnVsbD09PWJ8fDchPT1iLnRhZylyZXR1cm4gYj1YZyhjLGEubW9kZSxkLGYpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIEEoYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYnx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPVVnKFwiXCIrYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIHNhOnJldHVybiBjPVZnKGIudHlwZSxiLmtleSxiLnByb3BzLG51bGwsYS5tb2RlLGMpLGMucmVmPVFnKGEsbnVsbCxiKSxjLnJldHVybj1hLGM7Y2FzZSB0YTpyZXR1cm4gYj1XZyhiLGEubW9kZSxjKSxiLnJldHVybj1hLGJ9aWYoUGcoYil8fExhKGIpKXJldHVybiBiPVhnKGIsXG5hLm1vZGUsYyxudWxsKSxiLnJldHVybj1hLGI7UmcoYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBwKGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6aChhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIHNhOnJldHVybiBjLmtleT09PWU/Yy50eXBlPT09dWE/bihhLGIsYy5wcm9wcy5jaGlsZHJlbixkLGUpOmsoYSxiLGMsZCk6bnVsbDtjYXNlIHRhOnJldHVybiBjLmtleT09PWU/bChhLGIsYyxkKTpudWxsfWlmKFBnKGMpfHxMYShjKSlyZXR1cm4gbnVsbCE9PWU/bnVsbDpuKGEsYixjLGQsbnVsbCk7UmcoYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBDKGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9YS5nZXQoYyl8fFxubnVsbCxoKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2Ugc2E6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGQudHlwZT09PXVhP24oYixhLGQucHJvcHMuY2hpbGRyZW4sZSxkLmtleSk6ayhiLGEsZCxlKTtjYXNlIHRhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxsKGIsYSxkLGUpfWlmKFBnKGQpfHxMYShkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxuKGIsYSxkLGUsbnVsbCk7UmcoYixkKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB4KGUsZyxoLGspe2Zvcih2YXIgbD1udWxsLHQ9bnVsbCx1PWcsej1nPTAscT1udWxsO251bGwhPT11JiZ6PGgubGVuZ3RoO3orKyl7dS5pbmRleD56PyhxPXUsdT1udWxsKTpxPXUuc2libGluZzt2YXIgbj1wKGUsdSxoW3pdLGspO2lmKG51bGw9PT1uKXtudWxsPT09dSYmKHU9cSk7YnJlYWt9YSYmdSYmbnVsbD09PVxubi5hbHRlcm5hdGUmJmIoZSx1KTtnPWYobixnLHopO251bGw9PT10P2w9bjp0LnNpYmxpbmc9bjt0PW47dT1xfWlmKHo9PT1oLmxlbmd0aClyZXR1cm4gYyhlLHUpLGw7aWYobnVsbD09PXUpe2Zvcig7ejxoLmxlbmd0aDt6KyspdT1BKGUsaFt6XSxrKSxudWxsIT09dSYmKGc9Zih1LGcseiksbnVsbD09PXQ/bD11OnQuc2libGluZz11LHQ9dSk7cmV0dXJuIGx9Zm9yKHU9ZChlLHUpO3o8aC5sZW5ndGg7eisrKXE9Qyh1LGUseixoW3pdLGspLG51bGwhPT1xJiYoYSYmbnVsbCE9PXEuYWx0ZXJuYXRlJiZ1LmRlbGV0ZShudWxsPT09cS5rZXk/ejpxLmtleSksZz1mKHEsZyx6KSxudWxsPT09dD9sPXE6dC5zaWJsaW5nPXEsdD1xKTthJiZ1LmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfWZ1bmN0aW9uIHcoZSxnLGgsayl7dmFyIGw9TGEoaCk7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGwpdGhyb3cgRXJyb3IoeSgxNTApKTtoPWwuY2FsbChoKTtpZihudWxsPT1cbmgpdGhyb3cgRXJyb3IoeSgxNTEpKTtmb3IodmFyIHQ9bD1udWxsLHU9Zyx6PWc9MCxxPW51bGwsbj1oLm5leHQoKTtudWxsIT09dSYmIW4uZG9uZTt6Kyssbj1oLm5leHQoKSl7dS5pbmRleD56PyhxPXUsdT1udWxsKTpxPXUuc2libGluZzt2YXIgdz1wKGUsdSxuLnZhbHVlLGspO2lmKG51bGw9PT13KXtudWxsPT09dSYmKHU9cSk7YnJlYWt9YSYmdSYmbnVsbD09PXcuYWx0ZXJuYXRlJiZiKGUsdSk7Zz1mKHcsZyx6KTtudWxsPT09dD9sPXc6dC5zaWJsaW5nPXc7dD13O3U9cX1pZihuLmRvbmUpcmV0dXJuIGMoZSx1KSxsO2lmKG51bGw9PT11KXtmb3IoOyFuLmRvbmU7eisrLG49aC5uZXh0KCkpbj1BKGUsbi52YWx1ZSxrKSxudWxsIT09biYmKGc9ZihuLGcseiksbnVsbD09PXQ/bD1uOnQuc2libGluZz1uLHQ9bik7cmV0dXJuIGx9Zm9yKHU9ZChlLHUpOyFuLmRvbmU7eisrLG49aC5uZXh0KCkpbj1DKHUsZSx6LG4udmFsdWUsayksbnVsbCE9PW4mJihhJiZudWxsIT09bi5hbHRlcm5hdGUmJlxudS5kZWxldGUobnVsbD09PW4ua2V5P3o6bi5rZXkpLGc9ZihuLGcseiksbnVsbD09PXQ/bD1uOnQuc2libGluZz1uLHQ9bik7YSYmdS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1yZXR1cm4gZnVuY3Rpb24oYSxkLGYsaCl7dmFyIGs9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09dWEmJm51bGw9PT1mLmtleTtrJiYoZj1mLnByb3BzLmNoaWxkcmVuKTt2YXIgbD1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mO2lmKGwpc3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2Ugc2E6YTp7bD1mLmtleTtmb3Ioaz1kO251bGwhPT1rOyl7aWYoay5rZXk9PT1sKXtzd2l0Y2goay50YWcpe2Nhc2UgNzppZihmLnR5cGU9PT11YSl7YyhhLGsuc2libGluZyk7ZD1lKGssZi5wcm9wcy5jaGlsZHJlbik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1icmVhaztkZWZhdWx0OmlmKGsuZWxlbWVudFR5cGU9PT1mLnR5cGUpe2MoYSxrLnNpYmxpbmcpO1xuZD1lKGssZi5wcm9wcyk7ZC5yZWY9UWcoYSxrLGYpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9fWMoYSxrKTticmVha31lbHNlIGIoYSxrKTtrPWsuc2libGluZ31mLnR5cGU9PT11YT8oZD1YZyhmLnByb3BzLmNoaWxkcmVuLGEubW9kZSxoLGYua2V5KSxkLnJldHVybj1hLGE9ZCk6KGg9VmcoZi50eXBlLGYua2V5LGYucHJvcHMsbnVsbCxhLm1vZGUsaCksaC5yZWY9UWcoYSxkLGYpLGgucmV0dXJuPWEsYT1oKX1yZXR1cm4gZyhhKTtjYXNlIHRhOmE6e2ZvcihrPWYua2V5O251bGwhPT1kOyl7aWYoZC5rZXk9PT1rKWlmKDQ9PT1kLnRhZyYmZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbz09PWYuY29udGFpbmVySW5mbyYmZC5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb249PT1mLmltcGxlbWVudGF0aW9uKXtjKGEsZC5zaWJsaW5nKTtkPWUoZCxmLmNoaWxkcmVufHxbXSk7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPWQuc2libGluZ31kPVxuV2coZixhLm1vZGUsaCk7ZC5yZXR1cm49YTthPWR9cmV0dXJuIGcoYSl9aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBmfHxcIm51bWJlclwiPT09dHlwZW9mIGYpcmV0dXJuIGY9XCJcIitmLG51bGwhPT1kJiY2PT09ZC50YWc/KGMoYSxkLnNpYmxpbmcpLGQ9ZShkLGYpLGQucmV0dXJuPWEsYT1kKTooYyhhLGQpLGQ9VWcoZixhLm1vZGUsaCksZC5yZXR1cm49YSxhPWQpLGcoYSk7aWYoUGcoZikpcmV0dXJuIHgoYSxkLGYsaCk7aWYoTGEoZikpcmV0dXJuIHcoYSxkLGYsaCk7bCYmUmcoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYmJiFrKXN3aXRjaChhLnRhZyl7Y2FzZSAxOmNhc2UgMjI6Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTp0aHJvdyBFcnJvcih5KDE1MixSYShhLnR5cGUpfHxcIkNvbXBvbmVudFwiKSk7fXJldHVybiBjKGEsZCl9fXZhciBZZz1TZyghMCksWmc9U2coITEpLCRnPXt9LGFoPUJmKCRnKSxiaD1CZigkZyksY2g9QmYoJGcpO1xuZnVuY3Rpb24gZGgoYSl7aWYoYT09PSRnKXRocm93IEVycm9yKHkoMTc0KSk7cmV0dXJuIGF9ZnVuY3Rpb24gZWgoYSxiKXtJKGNoLGIpO0koYmgsYSk7SShhaCwkZyk7YT1iLm5vZGVUeXBlO3N3aXRjaChhKXtjYXNlIDk6Y2FzZSAxMTpiPShiPWIuZG9jdW1lbnRFbGVtZW50KT9iLm5hbWVzcGFjZVVSSTptYihudWxsLFwiXCIpO2JyZWFrO2RlZmF1bHQ6YT04PT09YT9iLnBhcmVudE5vZGU6YixiPWEubmFtZXNwYWNlVVJJfHxudWxsLGE9YS50YWdOYW1lLGI9bWIoYixhKX1IKGFoKTtJKGFoLGIpfWZ1bmN0aW9uIGZoKCl7SChhaCk7SChiaCk7SChjaCl9ZnVuY3Rpb24gZ2goYSl7ZGgoY2guY3VycmVudCk7dmFyIGI9ZGgoYWguY3VycmVudCk7dmFyIGM9bWIoYixhLnR5cGUpO2IhPT1jJiYoSShiaCxhKSxJKGFoLGMpKX1mdW5jdGlvbiBoaChhKXtiaC5jdXJyZW50PT09YSYmKEgoYWgpLEgoYmgpKX12YXIgUD1CZigwKTtcbmZ1bmN0aW9uIGloKGEpe2Zvcih2YXIgYj1hO251bGwhPT1iOyl7aWYoMTM9PT1iLnRhZyl7dmFyIGM9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1jJiYoYz1jLmRlaHlkcmF0ZWQsbnVsbD09PWN8fFwiJD9cIj09PWMuZGF0YXx8XCIkIVwiPT09Yy5kYXRhKSlyZXR1cm4gYn1lbHNlIGlmKDE5PT09Yi50YWcmJnZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5yZXZlYWxPcmRlcil7aWYoMCE9PShiLmZsYWdzJjY0KSlyZXR1cm4gYn1lbHNlIGlmKG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9cmV0dXJuIG51bGx9dmFyIGpoPW51bGwsa2g9bnVsbCxsaD0hMTtcbmZ1bmN0aW9uIG1oKGEsYil7dmFyIGM9bmgoNSxudWxsLG51bGwsMCk7Yy5lbGVtZW50VHlwZT1cIkRFTEVURURcIjtjLnR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjLnJldHVybj1hO2MuZmxhZ3M9ODtudWxsIT09YS5sYXN0RWZmZWN0PyhhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGEubGFzdEVmZmVjdD1jKTphLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1jfWZ1bmN0aW9uIG9oKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDY6cmV0dXJuIGI9XCJcIj09PWEucGVuZGluZ1Byb3BzfHwzIT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgMTM6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBwaChhKXtpZihsaCl7dmFyIGI9a2g7aWYoYil7dmFyIGM9YjtpZighb2goYSxiKSl7Yj1yZihjLm5leHRTaWJsaW5nKTtpZighYnx8IW9oKGEsYikpe2EuZmxhZ3M9YS5mbGFncyYtMTAyNXwyO2xoPSExO2poPWE7cmV0dXJufW1oKGpoLGMpfWpoPWE7a2g9cmYoYi5maXJzdENoaWxkKX1lbHNlIGEuZmxhZ3M9YS5mbGFncyYtMTAyNXwyLGxoPSExLGpoPWF9fWZ1bmN0aW9uIHFoKGEpe2ZvcihhPWEucmV0dXJuO251bGwhPT1hJiY1IT09YS50YWcmJjMhPT1hLnRhZyYmMTMhPT1hLnRhZzspYT1hLnJldHVybjtqaD1hfVxuZnVuY3Rpb24gcmgoYSl7aWYoYSE9PWpoKXJldHVybiExO2lmKCFsaClyZXR1cm4gcWgoYSksbGg9ITAsITE7dmFyIGI9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiFuZihiLGEubWVtb2l6ZWRQcm9wcykpZm9yKGI9a2g7YjspbWgoYSxiKSxiPXJmKGIubmV4dFNpYmxpbmcpO3FoKGEpO2lmKDEzPT09YS50YWcpe2E9YS5tZW1vaXplZFN0YXRlO2E9bnVsbCE9PWE/YS5kZWh5ZHJhdGVkOm51bGw7aWYoIWEpdGhyb3cgRXJyb3IoeSgzMTcpKTthOnthPWEubmV4dFNpYmxpbmc7Zm9yKGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihcIi8kXCI9PT1jKXtpZigwPT09Yil7a2g9cmYoYS5uZXh0U2libGluZyk7YnJlYWsgYX1iLS19ZWxzZVwiJFwiIT09YyYmXCIkIVwiIT09YyYmXCIkP1wiIT09Y3x8YisrfWE9YS5uZXh0U2libGluZ31raD1udWxsfX1lbHNlIGtoPWpoP3JmKGEuc3RhdGVOb2RlLm5leHRTaWJsaW5nKTpudWxsO3JldHVybiEwfVxuZnVuY3Rpb24gc2goKXtraD1qaD1udWxsO2xoPSExfXZhciB0aD1bXTtmdW5jdGlvbiB1aCgpe2Zvcih2YXIgYT0wO2E8dGgubGVuZ3RoO2ErKyl0aFthXS5fd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeT1udWxsO3RoLmxlbmd0aD0wfXZhciB2aD1yYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLHdoPXJhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLHhoPTAsUj1udWxsLFM9bnVsbCxUPW51bGwseWg9ITEsemg9ITE7ZnVuY3Rpb24gQWgoKXt0aHJvdyBFcnJvcih5KDMyMSkpO31mdW5jdGlvbiBCaChhLGIpe2lmKG51bGw9PT1iKXJldHVybiExO2Zvcih2YXIgYz0wO2M8Yi5sZW5ndGgmJmM8YS5sZW5ndGg7YysrKWlmKCFIZShhW2NdLGJbY10pKXJldHVybiExO3JldHVybiEwfVxuZnVuY3Rpb24gQ2goYSxiLGMsZCxlLGYpe3hoPWY7Uj1iO2IubWVtb2l6ZWRTdGF0ZT1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtiLmxhbmVzPTA7dmguY3VycmVudD1udWxsPT09YXx8bnVsbD09PWEubWVtb2l6ZWRTdGF0ZT9EaDpFaDthPWMoZCxlKTtpZih6aCl7Zj0wO2Rve3poPSExO2lmKCEoMjU+ZikpdGhyb3cgRXJyb3IoeSgzMDEpKTtmKz0xO1Q9Uz1udWxsO2IudXBkYXRlUXVldWU9bnVsbDt2aC5jdXJyZW50PUZoO2E9YyhkLGUpfXdoaWxlKHpoKX12aC5jdXJyZW50PUdoO2I9bnVsbCE9PVMmJm51bGwhPT1TLm5leHQ7eGg9MDtUPVM9Uj1udWxsO3loPSExO2lmKGIpdGhyb3cgRXJyb3IoeSgzMDApKTtyZXR1cm4gYX1mdW5jdGlvbiBIaCgpe3ZhciBhPXttZW1vaXplZFN0YXRlOm51bGwsYmFzZVN0YXRlOm51bGwsYmFzZVF1ZXVlOm51bGwscXVldWU6bnVsbCxuZXh0Om51bGx9O251bGw9PT1UP1IubWVtb2l6ZWRTdGF0ZT1UPWE6VD1ULm5leHQ9YTtyZXR1cm4gVH1cbmZ1bmN0aW9uIEloKCl7aWYobnVsbD09PVMpe3ZhciBhPVIuYWx0ZXJuYXRlO2E9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGx9ZWxzZSBhPVMubmV4dDt2YXIgYj1udWxsPT09VD9SLm1lbW9pemVkU3RhdGU6VC5uZXh0O2lmKG51bGwhPT1iKVQ9YixTPWE7ZWxzZXtpZihudWxsPT09YSl0aHJvdyBFcnJvcih5KDMxMCkpO1M9YTthPXttZW1vaXplZFN0YXRlOlMubWVtb2l6ZWRTdGF0ZSxiYXNlU3RhdGU6Uy5iYXNlU3RhdGUsYmFzZVF1ZXVlOlMuYmFzZVF1ZXVlLHF1ZXVlOlMucXVldWUsbmV4dDpudWxsfTtudWxsPT09VD9SLm1lbW9pemVkU3RhdGU9VD1hOlQ9VC5uZXh0PWF9cmV0dXJuIFR9ZnVuY3Rpb24gSmgoYSxiKXtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmJ9XG5mdW5jdGlvbiBLaChhKXt2YXIgYj1JaCgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcih5KDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPVMsZT1kLmJhc2VRdWV1ZSxmPWMucGVuZGluZztpZihudWxsIT09Zil7aWYobnVsbCE9PWUpe3ZhciBnPWUubmV4dDtlLm5leHQ9Zi5uZXh0O2YubmV4dD1nfWQuYmFzZVF1ZXVlPWU9ZjtjLnBlbmRpbmc9bnVsbH1pZihudWxsIT09ZSl7ZT1lLm5leHQ7ZD1kLmJhc2VTdGF0ZTt2YXIgaD1nPWY9bnVsbCxrPWU7ZG97dmFyIGw9ay5sYW5lO2lmKCh4aCZsKT09PWwpbnVsbCE9PWgmJihoPWgubmV4dD17bGFuZTowLGFjdGlvbjprLmFjdGlvbixlYWdlclJlZHVjZXI6ay5lYWdlclJlZHVjZXIsZWFnZXJTdGF0ZTprLmVhZ2VyU3RhdGUsbmV4dDpudWxsfSksZD1rLmVhZ2VyUmVkdWNlcj09PWE/ay5lYWdlclN0YXRlOmEoZCxrLmFjdGlvbik7ZWxzZXt2YXIgbj17bGFuZTpsLGFjdGlvbjprLmFjdGlvbixlYWdlclJlZHVjZXI6ay5lYWdlclJlZHVjZXIsXG5lYWdlclN0YXRlOmsuZWFnZXJTdGF0ZSxuZXh0Om51bGx9O251bGw9PT1oPyhnPWg9bixmPWQpOmg9aC5uZXh0PW47Ui5sYW5lc3w9bDtEZ3w9bH1rPWsubmV4dH13aGlsZShudWxsIT09ayYmayE9PWUpO251bGw9PT1oP2Y9ZDpoLm5leHQ9ZztIZShkLGIubWVtb2l6ZWRTdGF0ZSl8fCh1Zz0hMCk7Yi5tZW1vaXplZFN0YXRlPWQ7Yi5iYXNlU3RhdGU9ZjtiLmJhc2VRdWV1ZT1oO2MubGFzdFJlbmRlcmVkU3RhdGU9ZH1yZXR1cm5bYi5tZW1vaXplZFN0YXRlLGMuZGlzcGF0Y2hdfVxuZnVuY3Rpb24gTGgoYSl7dmFyIGI9SWgoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IoeSgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1jLmRpc3BhdGNoLGU9Yy5wZW5kaW5nLGY9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1lKXtjLnBlbmRpbmc9bnVsbDt2YXIgZz1lPWUubmV4dDtkbyBmPWEoZixnLmFjdGlvbiksZz1nLm5leHQ7d2hpbGUoZyE9PWUpO0hlKGYsYi5tZW1vaXplZFN0YXRlKXx8KHVnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZjtudWxsPT09Yi5iYXNlUXVldWUmJihiLmJhc2VTdGF0ZT1mKTtjLmxhc3RSZW5kZXJlZFN0YXRlPWZ9cmV0dXJuW2YsZF19XG5mdW5jdGlvbiBNaChhLGIsYyl7dmFyIGQ9Yi5fZ2V0VmVyc2lvbjtkPWQoYi5fc291cmNlKTt2YXIgZT1iLl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5O2lmKG51bGwhPT1lKWE9ZT09PWQ7ZWxzZSBpZihhPWEubXV0YWJsZVJlYWRMYW5lcyxhPSh4aCZhKT09PWEpYi5fd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeT1kLHRoLnB1c2goYik7aWYoYSlyZXR1cm4gYyhiLl9zb3VyY2UpO3RoLnB1c2goYik7dGhyb3cgRXJyb3IoeSgzNTApKTt9XG5mdW5jdGlvbiBOaChhLGIsYyxkKXt2YXIgZT1VO2lmKG51bGw9PT1lKXRocm93IEVycm9yKHkoMzQ5KSk7dmFyIGY9Yi5fZ2V0VmVyc2lvbixnPWYoYi5fc291cmNlKSxoPXZoLmN1cnJlbnQsaz1oLnVzZVN0YXRlKGZ1bmN0aW9uKCl7cmV0dXJuIE1oKGUsYixjKX0pLGw9a1sxXSxuPWtbMF07az1UO3ZhciBBPWEubWVtb2l6ZWRTdGF0ZSxwPUEucmVmcyxDPXAuZ2V0U25hcHNob3QseD1BLnNvdXJjZTtBPUEuc3Vic2NyaWJlO3ZhciB3PVI7YS5tZW1vaXplZFN0YXRlPXtyZWZzOnAsc291cmNlOmIsc3Vic2NyaWJlOmR9O2gudXNlRWZmZWN0KGZ1bmN0aW9uKCl7cC5nZXRTbmFwc2hvdD1jO3Auc2V0U25hcHNob3Q9bDt2YXIgYT1mKGIuX3NvdXJjZSk7aWYoIUhlKGcsYSkpe2E9YyhiLl9zb3VyY2UpO0hlKG4sYSl8fChsKGEpLGE9SWcodyksZS5tdXRhYmxlUmVhZExhbmVzfD1hJmUucGVuZGluZ0xhbmVzKTthPWUubXV0YWJsZVJlYWRMYW5lcztlLmVudGFuZ2xlZExhbmVzfD1hO2Zvcih2YXIgZD1cbmUuZW50YW5nbGVtZW50cyxoPWE7MDxoOyl7dmFyIGs9MzEtVmMoaCksdj0xPDxrO2Rba118PWE7aCY9fnZ9fX0sW2MsYixkXSk7aC51c2VFZmZlY3QoZnVuY3Rpb24oKXtyZXR1cm4gZChiLl9zb3VyY2UsZnVuY3Rpb24oKXt2YXIgYT1wLmdldFNuYXBzaG90LGM9cC5zZXRTbmFwc2hvdDt0cnl7YyhhKGIuX3NvdXJjZSkpO3ZhciBkPUlnKHcpO2UubXV0YWJsZVJlYWRMYW5lc3w9ZCZlLnBlbmRpbmdMYW5lc31jYXRjaChxKXtjKGZ1bmN0aW9uKCl7dGhyb3cgcTt9KX19KX0sW2IsZF0pO0hlKEMsYykmJkhlKHgsYikmJkhlKEEsZCl8fChhPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOkpoLGxhc3RSZW5kZXJlZFN0YXRlOm59LGEuZGlzcGF0Y2g9bD1PaC5iaW5kKG51bGwsUixhKSxrLnF1ZXVlPWEsay5iYXNlUXVldWU9bnVsbCxuPU1oKGUsYixjKSxrLm1lbW9pemVkU3RhdGU9ay5iYXNlU3RhdGU9bik7cmV0dXJuIG59XG5mdW5jdGlvbiBQaChhLGIsYyl7dmFyIGQ9SWgoKTtyZXR1cm4gTmgoZCxhLGIsYyl9ZnVuY3Rpb24gUWgoYSl7dmFyIGI9SGgoKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSYmKGE9YSgpKTtiLm1lbW9pemVkU3RhdGU9Yi5iYXNlU3RhdGU9YTthPWIucXVldWU9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6SmgsbGFzdFJlbmRlcmVkU3RhdGU6YX07YT1hLmRpc3BhdGNoPU9oLmJpbmQobnVsbCxSLGEpO3JldHVybltiLm1lbW9pemVkU3RhdGUsYV19XG5mdW5jdGlvbiBSaChhLGIsYyxkKXthPXt0YWc6YSxjcmVhdGU6YixkZXN0cm95OmMsZGVwczpkLG5leHQ6bnVsbH07Yj1SLnVwZGF0ZVF1ZXVlO251bGw9PT1iPyhiPXtsYXN0RWZmZWN0Om51bGx9LFIudXBkYXRlUXVldWU9YixiLmxhc3RFZmZlY3Q9YS5uZXh0PWEpOihjPWIubGFzdEVmZmVjdCxudWxsPT09Yz9iLmxhc3RFZmZlY3Q9YS5uZXh0PWE6KGQ9Yy5uZXh0LGMubmV4dD1hLGEubmV4dD1kLGIubGFzdEVmZmVjdD1hKSk7cmV0dXJuIGF9ZnVuY3Rpb24gU2goYSl7dmFyIGI9SGgoKTthPXtjdXJyZW50OmF9O3JldHVybiBiLm1lbW9pemVkU3RhdGU9YX1mdW5jdGlvbiBUaCgpe3JldHVybiBJaCgpLm1lbW9pemVkU3RhdGV9ZnVuY3Rpb24gVWgoYSxiLGMsZCl7dmFyIGU9SGgoKTtSLmZsYWdzfD1hO2UubWVtb2l6ZWRTdGF0ZT1SaCgxfGIsYyx2b2lkIDAsdm9pZCAwPT09ZD9udWxsOmQpfVxuZnVuY3Rpb24gVmgoYSxiLGMsZCl7dmFyIGU9SWgoKTtkPXZvaWQgMD09PWQ/bnVsbDpkO3ZhciBmPXZvaWQgMDtpZihudWxsIT09Uyl7dmFyIGc9Uy5tZW1vaXplZFN0YXRlO2Y9Zy5kZXN0cm95O2lmKG51bGwhPT1kJiZCaChkLGcuZGVwcykpe1JoKGIsYyxmLGQpO3JldHVybn19Ui5mbGFnc3w9YTtlLm1lbW9pemVkU3RhdGU9UmgoMXxiLGMsZixkKX1mdW5jdGlvbiBXaChhLGIpe3JldHVybiBVaCg1MTYsNCxhLGIpfWZ1bmN0aW9uIFhoKGEsYil7cmV0dXJuIFZoKDUxNiw0LGEsYil9ZnVuY3Rpb24gWWgoYSxiKXtyZXR1cm4gVmgoNCwyLGEsYil9ZnVuY3Rpb24gWmgoYSxiKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYilyZXR1cm4gYT1hKCksYihhKSxmdW5jdGlvbigpe2IobnVsbCl9O2lmKG51bGwhPT1iJiZ2b2lkIDAhPT1iKXJldHVybiBhPWEoKSxiLmN1cnJlbnQ9YSxmdW5jdGlvbigpe2IuY3VycmVudD1udWxsfX1cbmZ1bmN0aW9uICRoKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gVmgoNCwyLFpoLmJpbmQobnVsbCxiLGEpLGMpfWZ1bmN0aW9uIGFpKCl7fWZ1bmN0aW9uIGJpKGEsYil7dmFyIGM9SWgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJkJoKGIsZFsxXSkpcmV0dXJuIGRbMF07Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfWZ1bmN0aW9uIGNpKGEsYil7dmFyIGM9SWgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJkJoKGIsZFsxXSkpcmV0dXJuIGRbMF07YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfVxuZnVuY3Rpb24gZGkoYSxiKXt2YXIgYz1lZygpO2dnKDk4PmM/OTg6YyxmdW5jdGlvbigpe2EoITApfSk7Z2coOTc8Yz85NzpjLGZ1bmN0aW9uKCl7dmFyIGM9d2gudHJhbnNpdGlvbjt3aC50cmFuc2l0aW9uPTE7dHJ5e2EoITEpLGIoKX1maW5hbGx5e3doLnRyYW5zaXRpb249Y319KX1cbmZ1bmN0aW9uIE9oKGEsYixjKXt2YXIgZD1IZygpLGU9SWcoYSksZj17bGFuZTplLGFjdGlvbjpjLGVhZ2VyUmVkdWNlcjpudWxsLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9LGc9Yi5wZW5kaW5nO251bGw9PT1nP2YubmV4dD1mOihmLm5leHQ9Zy5uZXh0LGcubmV4dD1mKTtiLnBlbmRpbmc9ZjtnPWEuYWx0ZXJuYXRlO2lmKGE9PT1SfHxudWxsIT09ZyYmZz09PVIpemg9eWg9ITA7ZWxzZXtpZigwPT09YS5sYW5lcyYmKG51bGw9PT1nfHwwPT09Zy5sYW5lcykmJihnPWIubGFzdFJlbmRlcmVkUmVkdWNlcixudWxsIT09ZykpdHJ5e3ZhciBoPWIubGFzdFJlbmRlcmVkU3RhdGUsaz1nKGgsYyk7Zi5lYWdlclJlZHVjZXI9ZztmLmVhZ2VyU3RhdGU9aztpZihIZShrLGgpKXJldHVybn1jYXRjaChsKXt9ZmluYWxseXt9SmcoYSxlLGQpfX1cbnZhciBHaD17cmVhZENvbnRleHQ6dmcsdXNlQ2FsbGJhY2s6QWgsdXNlQ29udGV4dDpBaCx1c2VFZmZlY3Q6QWgsdXNlSW1wZXJhdGl2ZUhhbmRsZTpBaCx1c2VMYXlvdXRFZmZlY3Q6QWgsdXNlTWVtbzpBaCx1c2VSZWR1Y2VyOkFoLHVzZVJlZjpBaCx1c2VTdGF0ZTpBaCx1c2VEZWJ1Z1ZhbHVlOkFoLHVzZURlZmVycmVkVmFsdWU6QWgsdXNlVHJhbnNpdGlvbjpBaCx1c2VNdXRhYmxlU291cmNlOkFoLHVzZU9wYXF1ZUlkZW50aWZpZXI6QWgsdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxEaD17cmVhZENvbnRleHQ6dmcsdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oYSxiKXtIaCgpLm1lbW9pemVkU3RhdGU9W2Esdm9pZCAwPT09Yj9udWxsOmJdO3JldHVybiBhfSx1c2VDb250ZXh0OnZnLHVzZUVmZmVjdDpXaCx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gVWgoNCwyLFpoLmJpbmQobnVsbCxcbmIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBVaCg0LDIsYSxiKX0sdXNlTWVtbzpmdW5jdGlvbihhLGIpe3ZhciBjPUhoKCk7Yj12b2lkIDA9PT1iP251bGw6YjthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPUhoKCk7Yj12b2lkIDAhPT1jP2MoYik6YjtkLm1lbW9pemVkU3RhdGU9ZC5iYXNlU3RhdGU9YjthPWQucXVldWU9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6YSxsYXN0UmVuZGVyZWRTdGF0ZTpifTthPWEuZGlzcGF0Y2g9T2guYmluZChudWxsLFIsYSk7cmV0dXJuW2QubWVtb2l6ZWRTdGF0ZSxhXX0sdXNlUmVmOlNoLHVzZVN0YXRlOlFoLHVzZURlYnVnVmFsdWU6YWksdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhKXt2YXIgYj1RaChhKSxjPWJbMF0sZD1iWzFdO1doKGZ1bmN0aW9uKCl7dmFyIGI9d2gudHJhbnNpdGlvbjtcbndoLnRyYW5zaXRpb249MTt0cnl7ZChhKX1maW5hbGx5e3doLnRyYW5zaXRpb249Yn19LFthXSk7cmV0dXJuIGN9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1RaCghMSksYj1hWzBdO2E9ZGkuYmluZChudWxsLGFbMV0pO1NoKGEpO3JldHVyblthLGJdfSx1c2VNdXRhYmxlU291cmNlOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1IaCgpO2QubWVtb2l6ZWRTdGF0ZT17cmVmczp7Z2V0U25hcHNob3Q6YixzZXRTbmFwc2hvdDpudWxsfSxzb3VyY2U6YSxzdWJzY3JpYmU6Y307cmV0dXJuIE5oKGQsYSxiLGMpfSx1c2VPcGFxdWVJZGVudGlmaWVyOmZ1bmN0aW9uKCl7aWYobGgpe3ZhciBhPSExLGI9dWYoZnVuY3Rpb24oKXthfHwoYT0hMCxjKFwicjpcIisodGYrKykudG9TdHJpbmcoMzYpKSk7dGhyb3cgRXJyb3IoeSgzNTUpKTt9KSxjPVFoKGIpWzFdOzA9PT0oUi5tb2RlJjIpJiYoUi5mbGFnc3w9NTE2LFJoKDUsZnVuY3Rpb24oKXtjKFwicjpcIisodGYrKykudG9TdHJpbmcoMzYpKX0sXG52b2lkIDAsbnVsbCkpO3JldHVybiBifWI9XCJyOlwiKyh0ZisrKS50b1N0cmluZygzNik7UWgoYik7cmV0dXJuIGJ9LHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sRWg9e3JlYWRDb250ZXh0OnZnLHVzZUNhbGxiYWNrOmJpLHVzZUNvbnRleHQ6dmcsdXNlRWZmZWN0OlhoLHVzZUltcGVyYXRpdmVIYW5kbGU6JGgsdXNlTGF5b3V0RWZmZWN0OlloLHVzZU1lbW86Y2ksdXNlUmVkdWNlcjpLaCx1c2VSZWY6VGgsdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gS2goSmgpfSx1c2VEZWJ1Z1ZhbHVlOmFpLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSl7dmFyIGI9S2goSmgpLGM9YlswXSxkPWJbMV07WGgoZnVuY3Rpb24oKXt2YXIgYj13aC50cmFuc2l0aW9uO3doLnRyYW5zaXRpb249MTt0cnl7ZChhKX1maW5hbGx5e3doLnRyYW5zaXRpb249Yn19LFthXSk7cmV0dXJuIGN9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1LaChKaClbMF07cmV0dXJuW1RoKCkuY3VycmVudCxcbmFdfSx1c2VNdXRhYmxlU291cmNlOlBoLHVzZU9wYXF1ZUlkZW50aWZpZXI6ZnVuY3Rpb24oKXtyZXR1cm4gS2goSmgpWzBdfSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LEZoPXtyZWFkQ29udGV4dDp2Zyx1c2VDYWxsYmFjazpiaSx1c2VDb250ZXh0OnZnLHVzZUVmZmVjdDpYaCx1c2VJbXBlcmF0aXZlSGFuZGxlOiRoLHVzZUxheW91dEVmZmVjdDpZaCx1c2VNZW1vOmNpLHVzZVJlZHVjZXI6TGgsdXNlUmVmOlRoLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIExoKEpoKX0sdXNlRGVidWdWYWx1ZTphaSx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEpe3ZhciBiPUxoKEpoKSxjPWJbMF0sZD1iWzFdO1hoKGZ1bmN0aW9uKCl7dmFyIGI9d2gudHJhbnNpdGlvbjt3aC50cmFuc2l0aW9uPTE7dHJ5e2QoYSl9ZmluYWxseXt3aC50cmFuc2l0aW9uPWJ9fSxbYV0pO3JldHVybiBjfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9TGgoSmgpWzBdO3JldHVybltUaCgpLmN1cnJlbnQsXG5hXX0sdXNlTXV0YWJsZVNvdXJjZTpQaCx1c2VPcGFxdWVJZGVudGlmaWVyOmZ1bmN0aW9uKCl7cmV0dXJuIExoKEpoKVswXX0sdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxlaT1yYS5SZWFjdEN1cnJlbnRPd25lcix1Zz0hMTtmdW5jdGlvbiBmaShhLGIsYyxkKXtiLmNoaWxkPW51bGw9PT1hP1pnKGIsbnVsbCxjLGQpOllnKGIsYS5jaGlsZCxjLGQpfWZ1bmN0aW9uIGdpKGEsYixjLGQsZSl7Yz1jLnJlbmRlcjt2YXIgZj1iLnJlZjt0ZyhiLGUpO2Q9Q2goYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhdWcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmZsYWdzJj0tNTE3LGEubGFuZXMmPX5lLGhpKGEsYixlKTtiLmZsYWdzfD0xO2ZpKGEsYixkLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gaWkoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hKXt2YXIgZz1jLnR5cGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJiFqaShnKSYmdm9pZCAwPT09Zy5kZWZhdWx0UHJvcHMmJm51bGw9PT1jLmNvbXBhcmUmJnZvaWQgMD09PWMuZGVmYXVsdFByb3BzKXJldHVybiBiLnRhZz0xNSxiLnR5cGU9ZyxraShhLGIsZyxkLGUsZik7YT1WZyhjLnR5cGUsbnVsbCxkLGIsYi5tb2RlLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1nPWEuY2hpbGQ7aWYoMD09PShlJmYpJiYoZT1nLm1lbW9pemVkUHJvcHMsYz1jLmNvbXBhcmUsYz1udWxsIT09Yz9jOkplLGMoZSxkKSYmYS5yZWY9PT1iLnJlZikpcmV0dXJuIGhpKGEsYixmKTtiLmZsYWdzfD0xO2E9VGcoZyxkKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9XG5mdW5jdGlvbiBraShhLGIsYyxkLGUsZil7aWYobnVsbCE9PWEmJkplKGEubWVtb2l6ZWRQcm9wcyxkKSYmYS5yZWY9PT1iLnJlZilpZih1Zz0hMSwwIT09KGYmZSkpMCE9PShhLmZsYWdzJjE2Mzg0KSYmKHVnPSEwKTtlbHNlIHJldHVybiBiLmxhbmVzPWEubGFuZXMsaGkoYSxiLGYpO3JldHVybiBsaShhLGIsYyxkLGYpfVxuZnVuY3Rpb24gbWkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5jaGlsZHJlbixmPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsO2lmKFwiaGlkZGVuXCI9PT1kLm1vZGV8fFwidW5zdGFibGUtZGVmZXItd2l0aG91dC1oaWRpbmdcIj09PWQubW9kZSlpZigwPT09KGIubW9kZSY0KSliLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczowfSxuaShiLGMpO2Vsc2UgaWYoMCE9PShjJjEwNzM3NDE4MjQpKWIubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOjB9LG5pKGIsbnVsbCE9PWY/Zi5iYXNlTGFuZXM6Yyk7ZWxzZSByZXR1cm4gYT1udWxsIT09Zj9mLmJhc2VMYW5lc3xjOmMsYi5sYW5lcz1iLmNoaWxkTGFuZXM9MTA3Mzc0MTgyNCxiLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczphfSxuaShiLGEpLG51bGw7ZWxzZSBudWxsIT09Zj8oZD1mLmJhc2VMYW5lc3xjLGIubWVtb2l6ZWRTdGF0ZT1udWxsKTpkPWMsbmkoYixkKTtmaShhLGIsZSxjKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIG9pKGEsYil7dmFyIGM9Yi5yZWY7aWYobnVsbD09PWEmJm51bGwhPT1jfHxudWxsIT09YSYmYS5yZWYhPT1jKWIuZmxhZ3N8PTEyOH1mdW5jdGlvbiBsaShhLGIsYyxkLGUpe3ZhciBmPUZmKGMpP0RmOk0uY3VycmVudDtmPUVmKGIsZik7dGcoYixlKTtjPUNoKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXVnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5mbGFncyY9LTUxNyxhLmxhbmVzJj1+ZSxoaShhLGIsZSk7Yi5mbGFnc3w9MTtmaShhLGIsYyxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIHBpKGEsYixjLGQsZSl7aWYoRmYoYykpe3ZhciBmPSEwO0pmKGIpfWVsc2UgZj0hMTt0ZyhiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSludWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKSxNZyhiLGMsZCksT2coYixjLGQsZSksZD0hMDtlbHNlIGlmKG51bGw9PT1hKXt2YXIgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcztnLnByb3BzPWg7dmFyIGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9dmcobCk6KGw9RmYoYyk/RGY6TS5jdXJyZW50LGw9RWYoYixsKSk7dmFyIG49Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMsQT1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygbnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGU7QXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlxuXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxrIT09bCkmJk5nKGIsZyxkLGwpO3dnPSExO3ZhciBwPWIubWVtb2l6ZWRTdGF0ZTtnLnN0YXRlPXA7Q2coYixkLGcsZSk7az1iLm1lbW9pemVkU3RhdGU7aCE9PWR8fHAhPT1rfHxOLmN1cnJlbnR8fHdnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbiYmKEdnKGIsYyxuLGQpLGs9Yi5tZW1vaXplZFN0YXRlKSwoaD13Z3x8TGcoYixjLGgsZCxwLGssbCkpPyhBfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnR8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnQmJmcuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PVxudHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00KSk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5mbGFnc3w9NCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWspLGcucHJvcHM9ZCxnLnN0YXRlPWssZy5jb250ZXh0PWwsZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00KSxkPSExKX1lbHNle2c9Yi5zdGF0ZU5vZGU7eWcoYSxiKTtoPWIubWVtb2l6ZWRQcm9wcztsPWIudHlwZT09PWIuZWxlbWVudFR5cGU/aDpsZyhiLnR5cGUsaCk7Zy5wcm9wcz1sO0E9Yi5wZW5kaW5nUHJvcHM7cD1nLmNvbnRleHQ7az1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWs/az12ZyhrKTooaz1GZihjKT9EZjpNLmN1cnJlbnQsaz1FZihiLGspKTt2YXIgQz1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczsobj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgQ3x8XG5cImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PUF8fHAhPT1rKSYmTmcoYixnLGQsayk7d2c9ITE7cD1iLm1lbW9pemVkU3RhdGU7Zy5zdGF0ZT1wO0NnKGIsZCxnLGUpO3ZhciB4PWIubWVtb2l6ZWRTdGF0ZTtoIT09QXx8cCE9PXh8fE4uY3VycmVudHx8d2c/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBDJiYoR2coYixjLEMsZCkseD1iLm1lbW9pemVkU3RhdGUpLChsPXdnfHxMZyhiLGMsbCxkLHAseCxrKSk/KG58fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlfHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5jb21wb25lbnRXaWxsVXBkYXRlKGQsXG54LGspLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlKGQseCxrKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlJiYoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUmJihiLmZsYWdzfD0yNTYpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZwPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnA9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD0yNTYpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT14KSxnLnByb3BzPWQsZy5zdGF0ZT14LGcuY29udGV4dD1rLGQ9bCk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8XG5oPT09YS5tZW1vaXplZFByb3BzJiZwPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnA9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD0yNTYpLGQ9ITEpfXJldHVybiBxaShhLGIsYyxkLGYsZSl9XG5mdW5jdGlvbiBxaShhLGIsYyxkLGUsZil7b2koYSxiKTt2YXIgZz0wIT09KGIuZmxhZ3MmNjQpO2lmKCFkJiYhZylyZXR1cm4gZSYmS2YoYixjLCExKSxoaShhLGIsZik7ZD1iLnN0YXRlTm9kZTtlaS5jdXJyZW50PWI7dmFyIGg9ZyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yP251bGw6ZC5yZW5kZXIoKTtiLmZsYWdzfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPVlnKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9WWcoYixudWxsLGgsZikpOmZpKGEsYixoLGYpO2IubWVtb2l6ZWRTdGF0ZT1kLnN0YXRlO2UmJktmKGIsYywhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gcmkoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9IZihhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZIZihhLGIuY29udGV4dCwhMSk7ZWgoYSxiLmNvbnRhaW5lckluZm8pfVxudmFyIHNpPXtkZWh5ZHJhdGVkOm51bGwscmV0cnlMYW5lOjB9O1xuZnVuY3Rpb24gdGkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9UC5jdXJyZW50LGY9ITEsZzsoZz0wIT09KGIuZmxhZ3MmNjQpKXx8KGc9bnVsbCE9PWEmJm51bGw9PT1hLm1lbW9pemVkU3RhdGU/ITE6MCE9PShlJjIpKTtnPyhmPSEwLGIuZmxhZ3MmPS02NSk6bnVsbCE9PWEmJm51bGw9PT1hLm1lbW9pemVkU3RhdGV8fHZvaWQgMD09PWQuZmFsbGJhY2t8fCEwPT09ZC51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFja3x8KGV8PTEpO0koUCxlJjEpO2lmKG51bGw9PT1hKXt2b2lkIDAhPT1kLmZhbGxiYWNrJiZwaChiKTthPWQuY2hpbGRyZW47ZT1kLmZhbGxiYWNrO2lmKGYpcmV0dXJuIGE9dWkoYixhLGUsYyksYi5jaGlsZC5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6Y30sYi5tZW1vaXplZFN0YXRlPXNpLGE7aWYoXCJudW1iZXJcIj09PXR5cGVvZiBkLnVuc3RhYmxlX2V4cGVjdGVkTG9hZFRpbWUpcmV0dXJuIGE9dWkoYixhLGUsYyksYi5jaGlsZC5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6Y30sXG5iLm1lbW9pemVkU3RhdGU9c2ksYi5sYW5lcz0zMzU1NDQzMixhO2M9dmkoe21vZGU6XCJ2aXNpYmxlXCIsY2hpbGRyZW46YX0sYi5tb2RlLGMsbnVsbCk7Yy5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1jfWlmKG51bGwhPT1hLm1lbW9pemVkU3RhdGUpe2lmKGYpcmV0dXJuIGQ9d2koYSxiLGQuY2hpbGRyZW4sZC5mYWxsYmFjayxjKSxmPWIuY2hpbGQsZT1hLmNoaWxkLm1lbW9pemVkU3RhdGUsZi5tZW1vaXplZFN0YXRlPW51bGw9PT1lP3tiYXNlTGFuZXM6Y306e2Jhc2VMYW5lczplLmJhc2VMYW5lc3xjfSxmLmNoaWxkTGFuZXM9YS5jaGlsZExhbmVzJn5jLGIubWVtb2l6ZWRTdGF0ZT1zaSxkO2M9eGkoYSxiLGQuY2hpbGRyZW4sYyk7Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGN9aWYoZilyZXR1cm4gZD13aShhLGIsZC5jaGlsZHJlbixkLmZhbGxiYWNrLGMpLGY9Yi5jaGlsZCxlPWEuY2hpbGQubWVtb2l6ZWRTdGF0ZSxmLm1lbW9pemVkU3RhdGU9bnVsbD09PWU/e2Jhc2VMYW5lczpjfTpcbntiYXNlTGFuZXM6ZS5iYXNlTGFuZXN8Y30sZi5jaGlsZExhbmVzPWEuY2hpbGRMYW5lcyZ+YyxiLm1lbW9pemVkU3RhdGU9c2ksZDtjPXhpKGEsYixkLmNoaWxkcmVuLGMpO2IubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBjfWZ1bmN0aW9uIHVpKGEsYixjLGQpe3ZhciBlPWEubW9kZSxmPWEuY2hpbGQ7Yj17bW9kZTpcImhpZGRlblwiLGNoaWxkcmVuOmJ9OzA9PT0oZSYyKSYmbnVsbCE9PWY/KGYuY2hpbGRMYW5lcz0wLGYucGVuZGluZ1Byb3BzPWIpOmY9dmkoYixlLDAsbnVsbCk7Yz1YZyhjLGUsZCxudWxsKTtmLnJldHVybj1hO2MucmV0dXJuPWE7Zi5zaWJsaW5nPWM7YS5jaGlsZD1mO3JldHVybiBjfVxuZnVuY3Rpb24geGkoYSxiLGMsZCl7dmFyIGU9YS5jaGlsZDthPWUuc2libGluZztjPVRnKGUse21vZGU6XCJ2aXNpYmxlXCIsY2hpbGRyZW46Y30pOzA9PT0oYi5tb2RlJjIpJiYoYy5sYW5lcz1kKTtjLnJldHVybj1iO2Muc2libGluZz1udWxsO251bGwhPT1hJiYoYS5uZXh0RWZmZWN0PW51bGwsYS5mbGFncz04LGIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWEpO3JldHVybiBiLmNoaWxkPWN9XG5mdW5jdGlvbiB3aShhLGIsYyxkLGUpe3ZhciBmPWIubW9kZSxnPWEuY2hpbGQ7YT1nLnNpYmxpbmc7dmFyIGg9e21vZGU6XCJoaWRkZW5cIixjaGlsZHJlbjpjfTswPT09KGYmMikmJmIuY2hpbGQhPT1nPyhjPWIuY2hpbGQsYy5jaGlsZExhbmVzPTAsYy5wZW5kaW5nUHJvcHM9aCxnPWMubGFzdEVmZmVjdCxudWxsIT09Zz8oYi5maXJzdEVmZmVjdD1jLmZpcnN0RWZmZWN0LGIubGFzdEVmZmVjdD1nLGcubmV4dEVmZmVjdD1udWxsKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1udWxsKTpjPVRnKGcsaCk7bnVsbCE9PWE/ZD1UZyhhLGQpOihkPVhnKGQsZixlLG51bGwpLGQuZmxhZ3N8PTIpO2QucmV0dXJuPWI7Yy5yZXR1cm49YjtjLnNpYmxpbmc9ZDtiLmNoaWxkPWM7cmV0dXJuIGR9ZnVuY3Rpb24geWkoYSxiKXthLmxhbmVzfD1iO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiYoYy5sYW5lc3w9Yik7c2coYS5yZXR1cm4sYil9XG5mdW5jdGlvbiB6aShhLGIsYyxkLGUsZil7dmFyIGc9YS5tZW1vaXplZFN0YXRlO251bGw9PT1nP2EubWVtb2l6ZWRTdGF0ZT17aXNCYWNrd2FyZHM6YixyZW5kZXJpbmc6bnVsbCxyZW5kZXJpbmdTdGFydFRpbWU6MCxsYXN0OmQsdGFpbDpjLHRhaWxNb2RlOmUsbGFzdEVmZmVjdDpmfTooZy5pc0JhY2t3YXJkcz1iLGcucmVuZGVyaW5nPW51bGwsZy5yZW5kZXJpbmdTdGFydFRpbWU9MCxnLmxhc3Q9ZCxnLnRhaWw9YyxnLnRhaWxNb2RlPWUsZy5sYXN0RWZmZWN0PWYpfVxuZnVuY3Rpb24gQWkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5yZXZlYWxPcmRlcixmPWQudGFpbDtmaShhLGIsZC5jaGlsZHJlbixjKTtkPVAuY3VycmVudDtpZigwIT09KGQmMikpZD1kJjF8MixiLmZsYWdzfD02NDtlbHNle2lmKG51bGwhPT1hJiYwIT09KGEuZmxhZ3MmNjQpKWE6Zm9yKGE9Yi5jaGlsZDtudWxsIT09YTspe2lmKDEzPT09YS50YWcpbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSYmeWkoYSxjKTtlbHNlIGlmKDE5PT09YS50YWcpeWkoYSxjKTtlbHNlIGlmKG51bGwhPT1hLmNoaWxkKXthLmNoaWxkLnJldHVybj1hO2E9YS5jaGlsZDtjb250aW51ZX1pZihhPT09YilicmVhayBhO2Zvcig7bnVsbD09PWEuc2libGluZzspe2lmKG51bGw9PT1hLnJldHVybnx8YS5yZXR1cm49PT1iKWJyZWFrIGE7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2E9YS5zaWJsaW5nfWQmPTF9SShQLGQpO2lmKDA9PT0oYi5tb2RlJjIpKWIubWVtb2l6ZWRTdGF0ZT1cbm51bGw7ZWxzZSBzd2l0Y2goZSl7Y2FzZSBcImZvcndhcmRzXCI6Yz1iLmNoaWxkO2ZvcihlPW51bGw7bnVsbCE9PWM7KWE9Yy5hbHRlcm5hdGUsbnVsbCE9PWEmJm51bGw9PT1paChhKSYmKGU9YyksYz1jLnNpYmxpbmc7Yz1lO251bGw9PT1jPyhlPWIuY2hpbGQsYi5jaGlsZD1udWxsKTooZT1jLnNpYmxpbmcsYy5zaWJsaW5nPW51bGwpO3ppKGIsITEsZSxjLGYsYi5sYXN0RWZmZWN0KTticmVhaztjYXNlIFwiYmFja3dhcmRzXCI6Yz1udWxsO2U9Yi5jaGlsZDtmb3IoYi5jaGlsZD1udWxsO251bGwhPT1lOyl7YT1lLmFsdGVybmF0ZTtpZihudWxsIT09YSYmbnVsbD09PWloKGEpKXtiLmNoaWxkPWU7YnJlYWt9YT1lLnNpYmxpbmc7ZS5zaWJsaW5nPWM7Yz1lO2U9YX16aShiLCEwLGMsbnVsbCxmLGIubGFzdEVmZmVjdCk7YnJlYWs7Y2FzZSBcInRvZ2V0aGVyXCI6emkoYiwhMSxudWxsLG51bGwsdm9pZCAwLGIubGFzdEVmZmVjdCk7YnJlYWs7ZGVmYXVsdDpiLm1lbW9pemVkU3RhdGU9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGhpKGEsYixjKXtudWxsIT09YSYmKGIuZGVwZW5kZW5jaWVzPWEuZGVwZW5kZW5jaWVzKTtEZ3w9Yi5sYW5lcztpZigwIT09KGMmYi5jaGlsZExhbmVzKSl7aWYobnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkKXRocm93IEVycm9yKHkoMTUzKSk7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDtjPVRnKGEsYS5wZW5kaW5nUHJvcHMpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz1UZyhhLGEucGVuZGluZ1Byb3BzKSxjLnJldHVybj1iO2Muc2libGluZz1udWxsfXJldHVybiBiLmNoaWxkfXJldHVybiBudWxsfXZhciBCaSxDaSxEaSxFaTtcbkJpPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPWIuY2hpbGQ7bnVsbCE9PWM7KXtpZig1PT09Yy50YWd8fDY9PT1jLnRhZylhLmFwcGVuZENoaWxkKGMuc3RhdGVOb2RlKTtlbHNlIGlmKDQhPT1jLnRhZyYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1iKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fTtDaT1mdW5jdGlvbigpe307XG5EaT1mdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1hLm1lbW9pemVkUHJvcHM7aWYoZSE9PWQpe2E9Yi5zdGF0ZU5vZGU7ZGgoYWguY3VycmVudCk7dmFyIGY9bnVsbDtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6ZT1ZYShhLGUpO2Q9WWEoYSxkKTtmPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjplPWViKGEsZSk7ZD1lYihhLGQpO2Y9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmU9bSh7fSxlLHt2YWx1ZTp2b2lkIDB9KTtkPW0oe30sZCx7dmFsdWU6dm9pZCAwfSk7Zj1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjplPWdiKGEsZSk7ZD1nYihhLGQpO2Y9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoYS5vbmNsaWNrPWpmKX12YihjLGQpO3ZhciBnO2M9bnVsbDtmb3IobCBpbiBlKWlmKCFkLmhhc093blByb3BlcnR5KGwpJiZlLmhhc093blByb3BlcnR5KGwpJiZudWxsIT1lW2xdKWlmKFwic3R5bGVcIj09PVxubCl7dmFyIGg9ZVtsXTtmb3IoZyBpbiBoKWguaGFzT3duUHJvcGVydHkoZykmJihjfHwoYz17fSksY1tnXT1cIlwiKX1lbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09bCYmXCJjaGlsZHJlblwiIT09bCYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWwmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1sJiZcImF1dG9Gb2N1c1wiIT09bCYmKGNhLmhhc093blByb3BlcnR5KGwpP2Z8fChmPVtdKTooZj1mfHxbXSkucHVzaChsLG51bGwpKTtmb3IobCBpbiBkKXt2YXIgaz1kW2xdO2g9bnVsbCE9ZT9lW2xdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGwpJiZrIT09aCYmKG51bGwhPWt8fG51bGwhPWgpKWlmKFwic3R5bGVcIj09PWwpaWYoaCl7Zm9yKGcgaW4gaCkhaC5oYXNPd25Qcm9wZXJ0eShnKXx8ayYmay5oYXNPd25Qcm9wZXJ0eShnKXx8KGN8fChjPXt9KSxjW2ddPVwiXCIpO2ZvcihnIGluIGspay5oYXNPd25Qcm9wZXJ0eShnKSYmaFtnXSE9PWtbZ10mJihjfHxcbihjPXt9KSxjW2ddPWtbZ10pfWVsc2UgY3x8KGZ8fChmPVtdKSxmLnB1c2gobCxjKSksYz1rO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1sPyhrPWs/ay5fX2h0bWw6dm9pZCAwLGg9aD9oLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmaCE9PWsmJihmPWZ8fFtdKS5wdXNoKGwsaykpOlwiY2hpbGRyZW5cIj09PWw/XCJzdHJpbmdcIiE9PXR5cGVvZiBrJiZcIm51bWJlclwiIT09dHlwZW9mIGt8fChmPWZ8fFtdKS5wdXNoKGwsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09bCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWwmJihjYS5oYXNPd25Qcm9wZXJ0eShsKT8obnVsbCE9ayYmXCJvblNjcm9sbFwiPT09bCYmRyhcInNjcm9sbFwiLGEpLGZ8fGg9PT1rfHwoZj1bXSkpOlwib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWsmJmsuJCR0eXBlb2Y9PT1HYT9rLnRvU3RyaW5nKCk6KGY9Znx8W10pLnB1c2gobCxrKSl9YyYmKGY9Znx8W10pLnB1c2goXCJzdHlsZVwiLFxuYyk7dmFyIGw9ZjtpZihiLnVwZGF0ZVF1ZXVlPWwpYi5mbGFnc3w9NH19O0VpPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiYoYi5mbGFnc3w9NCl9O2Z1bmN0aW9uIEZpKGEsYil7aWYoIWxoKXN3aXRjaChhLnRhaWxNb2RlKXtjYXNlIFwiaGlkZGVuXCI6Yj1hLnRhaWw7Zm9yKHZhciBjPW51bGw7bnVsbCE9PWI7KW51bGwhPT1iLmFsdGVybmF0ZSYmKGM9YiksYj1iLnNpYmxpbmc7bnVsbD09PWM/YS50YWlsPW51bGw6Yy5zaWJsaW5nPW51bGw7YnJlYWs7Y2FzZSBcImNvbGxhcHNlZFwiOmM9YS50YWlsO2Zvcih2YXIgZD1udWxsO251bGwhPT1jOyludWxsIT09Yy5hbHRlcm5hdGUmJihkPWMpLGM9Yy5zaWJsaW5nO251bGw9PT1kP2J8fG51bGw9PT1hLnRhaWw/YS50YWlsPW51bGw6YS50YWlsLnNpYmxpbmc9bnVsbDpkLnNpYmxpbmc9bnVsbH19XG5mdW5jdGlvbiBHaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHM7c3dpdGNoKGIudGFnKXtjYXNlIDI6Y2FzZSAxNjpjYXNlIDE1OmNhc2UgMDpjYXNlIDExOmNhc2UgNzpjYXNlIDg6Y2FzZSAxMjpjYXNlIDk6Y2FzZSAxNDpyZXR1cm4gbnVsbDtjYXNlIDE6cmV0dXJuIEZmKGIudHlwZSkmJkdmKCksbnVsbDtjYXNlIDM6ZmgoKTtIKE4pO0goTSk7dWgoKTtkPWIuc3RhdGVOb2RlO2QucGVuZGluZ0NvbnRleHQmJihkLmNvbnRleHQ9ZC5wZW5kaW5nQ29udGV4dCxkLnBlbmRpbmdDb250ZXh0PW51bGwpO2lmKG51bGw9PT1hfHxudWxsPT09YS5jaGlsZClyaChiKT9iLmZsYWdzfD00OmQuaHlkcmF0ZXx8KGIuZmxhZ3N8PTI1Nik7Q2koYik7cmV0dXJuIG51bGw7Y2FzZSA1OmhoKGIpO3ZhciBlPWRoKGNoLmN1cnJlbnQpO2M9Yi50eXBlO2lmKG51bGwhPT1hJiZudWxsIT1iLnN0YXRlTm9kZSlEaShhLGIsYyxkLGUpLGEucmVmIT09Yi5yZWYmJihiLmZsYWdzfD0xMjgpO2Vsc2V7aWYoIWQpe2lmKG51bGw9PT1cbmIuc3RhdGVOb2RlKXRocm93IEVycm9yKHkoMTY2KSk7cmV0dXJuIG51bGx9YT1kaChhaC5jdXJyZW50KTtpZihyaChiKSl7ZD1iLnN0YXRlTm9kZTtjPWIudHlwZTt2YXIgZj1iLm1lbW9pemVkUHJvcHM7ZFt3Zl09YjtkW3hmXT1mO3N3aXRjaChjKXtjYXNlIFwiZGlhbG9nXCI6RyhcImNhbmNlbFwiLGQpO0coXCJjbG9zZVwiLGQpO2JyZWFrO2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RyhcImxvYWRcIixkKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoYT0wO2E8WGUubGVuZ3RoO2ErKylHKFhlW2FdLGQpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpHKFwiZXJyb3JcIixkKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpHKFwiZXJyb3JcIixkKTtHKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RyhcInRvZ2dsZVwiLGQpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOlphKGQsZik7RyhcImludmFsaWRcIixkKTticmVhaztjYXNlIFwic2VsZWN0XCI6ZC5fd3JhcHBlclN0YXRlPVxue3dhc011bHRpcGxlOiEhZi5tdWx0aXBsZX07RyhcImludmFsaWRcIixkKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpoYihkLGYpLEcoXCJpbnZhbGlkXCIsZCl9dmIoYyxmKTthPW51bGw7Zm9yKHZhciBnIGluIGYpZi5oYXNPd25Qcm9wZXJ0eShnKSYmKGU9ZltnXSxcImNoaWxkcmVuXCI9PT1nP1wic3RyaW5nXCI9PT10eXBlb2YgZT9kLnRleHRDb250ZW50IT09ZSYmKGE9W1wiY2hpbGRyZW5cIixlXSk6XCJudW1iZXJcIj09PXR5cGVvZiBlJiZkLnRleHRDb250ZW50IT09XCJcIitlJiYoYT1bXCJjaGlsZHJlblwiLFwiXCIrZV0pOmNhLmhhc093blByb3BlcnR5KGcpJiZudWxsIT1lJiZcIm9uU2Nyb2xsXCI9PT1nJiZHKFwic2Nyb2xsXCIsZCkpO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpWYShkKTtjYihkLGYsITApO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZhKGQpO2piKGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5vbkNsaWNrJiYoZC5vbmNsaWNrPVxuamYpfWQ9YTtiLnVwZGF0ZVF1ZXVlPWQ7bnVsbCE9PWQmJihiLmZsYWdzfD00KX1lbHNle2c9OT09PWUubm9kZVR5cGU/ZTplLm93bmVyRG9jdW1lbnQ7YT09PWtiLmh0bWwmJihhPWxiKGMpKTthPT09a2IuaHRtbD9cInNjcmlwdFwiPT09Yz8oYT1nLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYS5pbm5lckhUTUw9XCI8c2NyaXB0PlxceDNjL3NjcmlwdD5cIixhPWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKSk6XCJzdHJpbmdcIj09PXR5cGVvZiBkLmlzP2E9Zy5jcmVhdGVFbGVtZW50KGMse2lzOmQuaXN9KTooYT1nLmNyZWF0ZUVsZW1lbnQoYyksXCJzZWxlY3RcIj09PWMmJihnPWEsZC5tdWx0aXBsZT9nLm11bHRpcGxlPSEwOmQuc2l6ZSYmKGcuc2l6ZT1kLnNpemUpKSk6YT1nLmNyZWF0ZUVsZW1lbnROUyhhLGMpO2Fbd2ZdPWI7YVt4Zl09ZDtCaShhLGIsITEsITEpO2Iuc3RhdGVOb2RlPWE7Zz13YihjLGQpO3N3aXRjaChjKXtjYXNlIFwiZGlhbG9nXCI6RyhcImNhbmNlbFwiLGEpO0coXCJjbG9zZVwiLGEpO1xuZT1kO2JyZWFrO2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RyhcImxvYWRcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGU9MDtlPFhlLmxlbmd0aDtlKyspRyhYZVtlXSxhKTtlPWQ7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkcoXCJlcnJvclwiLGEpO2U9ZDticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpHKFwiZXJyb3JcIixhKTtHKFwibG9hZFwiLGEpO2U9ZDticmVhaztjYXNlIFwiZGV0YWlsc1wiOkcoXCJ0b2dnbGVcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcImlucHV0XCI6WmEoYSxkKTtlPVlhKGEsZCk7RyhcImludmFsaWRcIixhKTticmVhaztjYXNlIFwib3B0aW9uXCI6ZT1lYihhLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLl93cmFwcGVyU3RhdGU9e3dhc011bHRpcGxlOiEhZC5tdWx0aXBsZX07ZT1tKHt9LGQse3ZhbHVlOnZvaWQgMH0pO0coXCJpbnZhbGlkXCIsYSk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aGIoYSxkKTtlPVxuZ2IoYSxkKTtHKFwiaW52YWxpZFwiLGEpO2JyZWFrO2RlZmF1bHQ6ZT1kfXZiKGMsZSk7dmFyIGg9ZTtmb3IoZiBpbiBoKWlmKGguaGFzT3duUHJvcGVydHkoZikpe3ZhciBrPWhbZl07XCJzdHlsZVwiPT09Zj90YihhLGspOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWY/KGs9az9rLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmb2IoYSxrKSk6XCJjaGlsZHJlblwiPT09Zj9cInN0cmluZ1wiPT09dHlwZW9mIGs/KFwidGV4dGFyZWFcIiE9PWN8fFwiXCIhPT1rKSYmcGIoYSxrKTpcIm51bWJlclwiPT09dHlwZW9mIGsmJnBiKGEsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09ZiYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWYmJlwiYXV0b0ZvY3VzXCIhPT1mJiYoY2EuaGFzT3duUHJvcGVydHkoZik/bnVsbCE9ayYmXCJvblNjcm9sbFwiPT09ZiYmRyhcInNjcm9sbFwiLGEpOm51bGwhPWsmJnFhKGEsZixrLGcpKX1zd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6VmEoYSk7Y2IoYSxkLCExKTtcbmJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZhKGEpO2piKGEpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpudWxsIT1kLnZhbHVlJiZhLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJcIitTYShkLnZhbHVlKSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEubXVsdGlwbGU9ISFkLm11bHRpcGxlO2Y9ZC52YWx1ZTtudWxsIT1mP2ZiKGEsISFkLm11bHRpcGxlLGYsITEpOm51bGwhPWQuZGVmYXVsdFZhbHVlJiZmYihhLCEhZC5tdWx0aXBsZSxkLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5vbkNsaWNrJiYoYS5vbmNsaWNrPWpmKX1tZihjLGQpJiYoYi5mbGFnc3w9NCl9bnVsbCE9PWIucmVmJiYoYi5mbGFnc3w9MTI4KX1yZXR1cm4gbnVsbDtjYXNlIDY6aWYoYSYmbnVsbCE9Yi5zdGF0ZU5vZGUpRWkoYSxiLGEubWVtb2l6ZWRQcm9wcyxkKTtlbHNle2lmKFwic3RyaW5nXCIhPT10eXBlb2YgZCYmbnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHkoMTY2KSk7XG5jPWRoKGNoLmN1cnJlbnQpO2RoKGFoLmN1cnJlbnQpO3JoKGIpPyhkPWIuc3RhdGVOb2RlLGM9Yi5tZW1vaXplZFByb3BzLGRbd2ZdPWIsZC5ub2RlVmFsdWUhPT1jJiYoYi5mbGFnc3w9NCkpOihkPSg5PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZCksZFt3Zl09YixiLnN0YXRlTm9kZT1kKX1yZXR1cm4gbnVsbDtjYXNlIDEzOkgoUCk7ZD1iLm1lbW9pemVkU3RhdGU7aWYoMCE9PShiLmZsYWdzJjY0KSlyZXR1cm4gYi5sYW5lcz1jLGI7ZD1udWxsIT09ZDtjPSExO251bGw9PT1hP3ZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5mYWxsYmFjayYmcmgoYik6Yz1udWxsIT09YS5tZW1vaXplZFN0YXRlO2lmKGQmJiFjJiYwIT09KGIubW9kZSYyKSlpZihudWxsPT09YSYmITAhPT1iLm1lbW9pemVkUHJvcHMudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2t8fDAhPT0oUC5jdXJyZW50JjEpKTA9PT1WJiYoVj0zKTtlbHNle2lmKDA9PT1WfHwzPT09VilWPVxuNDtudWxsPT09VXx8MD09PShEZyYxMzQyMTc3MjcpJiYwPT09KEhpJjEzNDIxNzcyNyl8fElpKFUsVyl9aWYoZHx8YyliLmZsYWdzfD00O3JldHVybiBudWxsO2Nhc2UgNDpyZXR1cm4gZmgoKSxDaShiKSxudWxsPT09YSYmY2YoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksbnVsbDtjYXNlIDEwOnJldHVybiByZyhiKSxudWxsO2Nhc2UgMTc6cmV0dXJuIEZmKGIudHlwZSkmJkdmKCksbnVsbDtjYXNlIDE5OkgoUCk7ZD1iLm1lbW9pemVkU3RhdGU7aWYobnVsbD09PWQpcmV0dXJuIG51bGw7Zj0wIT09KGIuZmxhZ3MmNjQpO2c9ZC5yZW5kZXJpbmc7aWYobnVsbD09PWcpaWYoZilGaShkLCExKTtlbHNle2lmKDAhPT1WfHxudWxsIT09YSYmMCE9PShhLmZsYWdzJjY0KSlmb3IoYT1iLmNoaWxkO251bGwhPT1hOyl7Zz1paChhKTtpZihudWxsIT09Zyl7Yi5mbGFnc3w9NjQ7RmkoZCwhMSk7Zj1nLnVwZGF0ZVF1ZXVlO251bGwhPT1mJiYoYi51cGRhdGVRdWV1ZT1mLGIuZmxhZ3N8PTQpO1xubnVsbD09PWQubGFzdEVmZmVjdCYmKGIuZmlyc3RFZmZlY3Q9bnVsbCk7Yi5sYXN0RWZmZWN0PWQubGFzdEVmZmVjdDtkPWM7Zm9yKGM9Yi5jaGlsZDtudWxsIT09YzspZj1jLGE9ZCxmLmZsYWdzJj0yLGYubmV4dEVmZmVjdD1udWxsLGYuZmlyc3RFZmZlY3Q9bnVsbCxmLmxhc3RFZmZlY3Q9bnVsbCxnPWYuYWx0ZXJuYXRlLG51bGw9PT1nPyhmLmNoaWxkTGFuZXM9MCxmLmxhbmVzPWEsZi5jaGlsZD1udWxsLGYubWVtb2l6ZWRQcm9wcz1udWxsLGYubWVtb2l6ZWRTdGF0ZT1udWxsLGYudXBkYXRlUXVldWU9bnVsbCxmLmRlcGVuZGVuY2llcz1udWxsLGYuc3RhdGVOb2RlPW51bGwpOihmLmNoaWxkTGFuZXM9Zy5jaGlsZExhbmVzLGYubGFuZXM9Zy5sYW5lcyxmLmNoaWxkPWcuY2hpbGQsZi5tZW1vaXplZFByb3BzPWcubWVtb2l6ZWRQcm9wcyxmLm1lbW9pemVkU3RhdGU9Zy5tZW1vaXplZFN0YXRlLGYudXBkYXRlUXVldWU9Zy51cGRhdGVRdWV1ZSxmLnR5cGU9Zy50eXBlLGE9Zy5kZXBlbmRlbmNpZXMsXG5mLmRlcGVuZGVuY2llcz1udWxsPT09YT9udWxsOntsYW5lczphLmxhbmVzLGZpcnN0Q29udGV4dDphLmZpcnN0Q29udGV4dH0pLGM9Yy5zaWJsaW5nO0koUCxQLmN1cnJlbnQmMXwyKTtyZXR1cm4gYi5jaGlsZH1hPWEuc2libGluZ31udWxsIT09ZC50YWlsJiZPKCk+SmkmJihiLmZsYWdzfD02NCxmPSEwLEZpKGQsITEpLGIubGFuZXM9MzM1NTQ0MzIpfWVsc2V7aWYoIWYpaWYoYT1paChnKSxudWxsIT09YSl7aWYoYi5mbGFnc3w9NjQsZj0hMCxjPWEudXBkYXRlUXVldWUsbnVsbCE9PWMmJihiLnVwZGF0ZVF1ZXVlPWMsYi5mbGFnc3w9NCksRmkoZCwhMCksbnVsbD09PWQudGFpbCYmXCJoaWRkZW5cIj09PWQudGFpbE1vZGUmJiFnLmFsdGVybmF0ZSYmIWxoKXJldHVybiBiPWIubGFzdEVmZmVjdD1kLmxhc3RFZmZlY3QsbnVsbCE9PWImJihiLm5leHRFZmZlY3Q9bnVsbCksbnVsbH1lbHNlIDIqTygpLWQucmVuZGVyaW5nU3RhcnRUaW1lPkppJiYxMDczNzQxODI0IT09YyYmKGIuZmxhZ3N8PVxuNjQsZj0hMCxGaShkLCExKSxiLmxhbmVzPTMzNTU0NDMyKTtkLmlzQmFja3dhcmRzPyhnLnNpYmxpbmc9Yi5jaGlsZCxiLmNoaWxkPWcpOihjPWQubGFzdCxudWxsIT09Yz9jLnNpYmxpbmc9ZzpiLmNoaWxkPWcsZC5sYXN0PWcpfXJldHVybiBudWxsIT09ZC50YWlsPyhjPWQudGFpbCxkLnJlbmRlcmluZz1jLGQudGFpbD1jLnNpYmxpbmcsZC5sYXN0RWZmZWN0PWIubGFzdEVmZmVjdCxkLnJlbmRlcmluZ1N0YXJ0VGltZT1PKCksYy5zaWJsaW5nPW51bGwsYj1QLmN1cnJlbnQsSShQLGY/YiYxfDI6YiYxKSxjKTpudWxsO2Nhc2UgMjM6Y2FzZSAyNDpyZXR1cm4gS2koKSxudWxsIT09YSYmbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSE9PShudWxsIT09Yi5tZW1vaXplZFN0YXRlKSYmXCJ1bnN0YWJsZS1kZWZlci13aXRob3V0LWhpZGluZ1wiIT09ZC5tb2RlJiYoYi5mbGFnc3w9NCksbnVsbH10aHJvdyBFcnJvcih5KDE1NixiLnRhZykpO31cbmZ1bmN0aW9uIExpKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSAxOkZmKGEudHlwZSkmJkdmKCk7dmFyIGI9YS5mbGFncztyZXR1cm4gYiY0MDk2PyhhLmZsYWdzPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDM6ZmgoKTtIKE4pO0goTSk7dWgoKTtiPWEuZmxhZ3M7aWYoMCE9PShiJjY0KSl0aHJvdyBFcnJvcih5KDI4NSkpO2EuZmxhZ3M9YiYtNDA5N3w2NDtyZXR1cm4gYTtjYXNlIDU6cmV0dXJuIGhoKGEpLG51bGw7Y2FzZSAxMzpyZXR1cm4gSChQKSxiPWEuZmxhZ3MsYiY0MDk2PyhhLmZsYWdzPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDE5OnJldHVybiBIKFApLG51bGw7Y2FzZSA0OnJldHVybiBmaCgpLG51bGw7Y2FzZSAxMDpyZXR1cm4gcmcoYSksbnVsbDtjYXNlIDIzOmNhc2UgMjQ6cmV0dXJuIEtpKCksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIE1pKGEsYil7dHJ5e3ZhciBjPVwiXCIsZD1iO2RvIGMrPVFhKGQpLGQ9ZC5yZXR1cm47d2hpbGUoZCk7dmFyIGU9Y31jYXRjaChmKXtlPVwiXFxuRXJyb3IgZ2VuZXJhdGluZyBzdGFjazogXCIrZi5tZXNzYWdlK1wiXFxuXCIrZi5zdGFja31yZXR1cm57dmFsdWU6YSxzb3VyY2U6YixzdGFjazplfX1mdW5jdGlvbiBOaShhLGIpe3RyeXtjb25zb2xlLmVycm9yKGIudmFsdWUpfWNhdGNoKGMpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXt0aHJvdyBjO30pfX12YXIgT2k9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXA7ZnVuY3Rpb24gUGkoYSxiLGMpe2M9emcoLTEsYyk7Yy50YWc9MztjLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIGQ9Yi52YWx1ZTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7UWl8fChRaT0hMCxSaT1kKTtOaShhLGIpfTtyZXR1cm4gY31cbmZ1bmN0aW9uIFNpKGEsYixjKXtjPXpnKC0xLGMpO2MudGFnPTM7dmFyIGQ9YS50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7dmFyIGU9Yi52YWx1ZTtjLnBheWxvYWQ9ZnVuY3Rpb24oKXtOaShhLGIpO3JldHVybiBkKGUpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiIT09dHlwZW9mIGQmJihudWxsPT09VGk/VGk9bmV3IFNldChbdGhpc10pOlRpLmFkZCh0aGlzKSxOaShhLGIpKTt2YXIgYz1iLnN0YWNrO3RoaXMuY29tcG9uZW50RGlkQ2F0Y2goYi52YWx1ZSx7Y29tcG9uZW50U3RhY2s6bnVsbCE9PWM/YzpcIlwifSl9KTtyZXR1cm4gY312YXIgVWk9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtTZXQ/V2Vha1NldDpTZXQ7XG5mdW5jdGlvbiBWaShhKXt2YXIgYj1hLnJlZjtpZihudWxsIT09YilpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYil0cnl7YihudWxsKX1jYXRjaChjKXtXaShhLGMpfWVsc2UgYi5jdXJyZW50PW51bGx9ZnVuY3Rpb24gWGkoYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpyZXR1cm47Y2FzZSAxOmlmKGIuZmxhZ3MmMjU2JiZudWxsIT09YSl7dmFyIGM9YS5tZW1vaXplZFByb3BzLGQ9YS5tZW1vaXplZFN0YXRlO2E9Yi5zdGF0ZU5vZGU7Yj1hLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKGIuZWxlbWVudFR5cGU9PT1iLnR5cGU/YzpsZyhiLnR5cGUsYyksZCk7YS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1ifXJldHVybjtjYXNlIDM6Yi5mbGFncyYyNTYmJnFmKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO3JldHVybjtjYXNlIDU6Y2FzZSA2OmNhc2UgNDpjYXNlIDE3OnJldHVybn10aHJvdyBFcnJvcih5KDE2MykpO31cbmZ1bmN0aW9uIFlpKGEsYixjKXtzd2l0Y2goYy50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpiPWMudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7YT1iPWIubmV4dDtkb3tpZigzPT09KGEudGFnJjMpKXt2YXIgZD1hLmNyZWF0ZTthLmRlc3Ryb3k9ZCgpfWE9YS5uZXh0fXdoaWxlKGEhPT1iKX1iPWMudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7YT1iPWIubmV4dDtkb3t2YXIgZT1hO2Q9ZS5uZXh0O2U9ZS50YWc7MCE9PShlJjQpJiYwIT09KGUmMSkmJihaaShjLGEpLCRpKGMsYSkpO2E9ZH13aGlsZShhIT09Yil9cmV0dXJuO2Nhc2UgMTphPWMuc3RhdGVOb2RlO2MuZmxhZ3MmNCYmKG51bGw9PT1iP2EuY29tcG9uZW50RGlkTW91bnQoKTooZD1jLmVsZW1lbnRUeXBlPT09Yy50eXBlP2IubWVtb2l6ZWRQcm9wczpsZyhjLnR5cGUsYi5tZW1vaXplZFByb3BzKSxhLmNvbXBvbmVudERpZFVwZGF0ZShkLFxuYi5tZW1vaXplZFN0YXRlLGEuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUpKSk7Yj1jLnVwZGF0ZVF1ZXVlO251bGwhPT1iJiZFZyhjLGIsYSk7cmV0dXJuO2Nhc2UgMzpiPWMudXBkYXRlUXVldWU7aWYobnVsbCE9PWIpe2E9bnVsbDtpZihudWxsIT09Yy5jaGlsZClzd2l0Y2goYy5jaGlsZC50YWcpe2Nhc2UgNTphPWMuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTphPWMuY2hpbGQuc3RhdGVOb2RlfUVnKGMsYixhKX1yZXR1cm47Y2FzZSA1OmE9Yy5zdGF0ZU5vZGU7bnVsbD09PWImJmMuZmxhZ3MmNCYmbWYoYy50eXBlLGMubWVtb2l6ZWRQcm9wcykmJmEuZm9jdXMoKTtyZXR1cm47Y2FzZSA2OnJldHVybjtjYXNlIDQ6cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6bnVsbD09PWMubWVtb2l6ZWRTdGF0ZSYmKGM9Yy5hbHRlcm5hdGUsbnVsbCE9PWMmJihjPWMubWVtb2l6ZWRTdGF0ZSxudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGwhPT1jJiZDYyhjKSkpKTtcbnJldHVybjtjYXNlIDE5OmNhc2UgMTc6Y2FzZSAyMDpjYXNlIDIxOmNhc2UgMjM6Y2FzZSAyNDpyZXR1cm59dGhyb3cgRXJyb3IoeSgxNjMpKTt9XG5mdW5jdGlvbiBhaihhLGIpe2Zvcih2YXIgYz1hOzspe2lmKDU9PT1jLnRhZyl7dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoYilkPWQuc3R5bGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuc2V0UHJvcGVydHk/ZC5zZXRQcm9wZXJ0eShcImRpc3BsYXlcIixcIm5vbmVcIixcImltcG9ydGFudFwiKTpkLmRpc3BsYXk9XCJub25lXCI7ZWxzZXtkPWMuc3RhdGVOb2RlO3ZhciBlPWMubWVtb2l6ZWRQcm9wcy5zdHlsZTtlPXZvaWQgMCE9PWUmJm51bGwhPT1lJiZlLmhhc093blByb3BlcnR5KFwiZGlzcGxheVwiKT9lLmRpc3BsYXk6bnVsbDtkLnN0eWxlLmRpc3BsYXk9c2IoXCJkaXNwbGF5XCIsZSl9fWVsc2UgaWYoNj09PWMudGFnKWMuc3RhdGVOb2RlLm5vZGVWYWx1ZT1iP1wiXCI6Yy5tZW1vaXplZFByb3BzO2Vsc2UgaWYoKDIzIT09Yy50YWcmJjI0IT09Yy50YWd8fG51bGw9PT1jLm1lbW9pemVkU3RhdGV8fGM9PT1hKSYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1cbmEpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWEpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319XG5mdW5jdGlvbiBiaihhLGIpe2lmKE1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgTWYub25Db21taXRGaWJlclVubW91bnQpdHJ5e01mLm9uQ29tbWl0RmliZXJVbm1vdW50KExmLGIpfWNhdGNoKGYpe31zd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpjYXNlIDIyOmE9Yi51cGRhdGVRdWV1ZTtpZihudWxsIT09YSYmKGE9YS5sYXN0RWZmZWN0LG51bGwhPT1hKSl7dmFyIGM9YT1hLm5leHQ7ZG97dmFyIGQ9YyxlPWQuZGVzdHJveTtkPWQudGFnO2lmKHZvaWQgMCE9PWUpaWYoMCE9PShkJjQpKVppKGIsYyk7ZWxzZXtkPWI7dHJ5e2UoKX1jYXRjaChmKXtXaShkLGYpfX1jPWMubmV4dH13aGlsZShjIT09YSl9YnJlYWs7Y2FzZSAxOlZpKGIpO2E9Yi5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuY29tcG9uZW50V2lsbFVubW91bnQpdHJ5e2EucHJvcHM9Yi5tZW1vaXplZFByb3BzLGEuc3RhdGU9Yi5tZW1vaXplZFN0YXRlLGEuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChmKXtXaShiLFxuZil9YnJlYWs7Y2FzZSA1OlZpKGIpO2JyZWFrO2Nhc2UgNDpjaihhLGIpfX1mdW5jdGlvbiBkaihhKXthLmFsdGVybmF0ZT1udWxsO2EuY2hpbGQ9bnVsbDthLmRlcGVuZGVuY2llcz1udWxsO2EuZmlyc3RFZmZlY3Q9bnVsbDthLmxhc3RFZmZlY3Q9bnVsbDthLm1lbW9pemVkUHJvcHM9bnVsbDthLm1lbW9pemVkU3RhdGU9bnVsbDthLnBlbmRpbmdQcm9wcz1udWxsO2EucmV0dXJuPW51bGw7YS51cGRhdGVRdWV1ZT1udWxsfWZ1bmN0aW9uIGVqKGEpe3JldHVybiA1PT09YS50YWd8fDM9PT1hLnRhZ3x8ND09PWEudGFnfVxuZnVuY3Rpb24gZmooYSl7YTp7Zm9yKHZhciBiPWEucmV0dXJuO251bGwhPT1iOyl7aWYoZWooYikpYnJlYWsgYTtiPWIucmV0dXJufXRocm93IEVycm9yKHkoMTYwKSk7fXZhciBjPWI7Yj1jLnN0YXRlTm9kZTtzd2l0Y2goYy50YWcpe2Nhc2UgNTp2YXIgZD0hMTticmVhaztjYXNlIDM6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztjYXNlIDQ6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHkoMTYxKSk7fWMuZmxhZ3MmMTYmJihwYihiLFwiXCIpLGMuZmxhZ3MmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxlaihjLnJldHVybikpe2M9bnVsbDticmVhayBhfWM9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWcmJjE4IT09Yy50YWc7KXtpZihjLmZsYWdzJjIpY29udGludWUgYjtpZihudWxsPT09XG5jLmNoaWxkfHw0PT09Yy50YWcpY29udGludWUgYjtlbHNlIGMuY2hpbGQucmV0dXJuPWMsYz1jLmNoaWxkfWlmKCEoYy5mbGFncyYyKSl7Yz1jLnN0YXRlTm9kZTticmVhayBhfX1kP2dqKGEsYyxiKTpoaihhLGMsYil9XG5mdW5jdGlvbiBnaihhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj84PT09Yy5ub2RlVHlwZT9jLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGEsYik6Yy5pbnNlcnRCZWZvcmUoYSxiKTooOD09PWMubm9kZVR5cGU/KGI9Yy5wYXJlbnROb2RlLGIuaW5zZXJ0QmVmb3JlKGEsYykpOihiPWMsYi5hcHBlbmRDaGlsZChhKSksYz1jLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCE9PWMmJnZvaWQgMCE9PWN8fG51bGwhPT1iLm9uY2xpY2t8fChiLm9uY2xpY2s9amYpKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoZ2ooYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOylnaihhLGIsYyksYT1hLnNpYmxpbmd9XG5mdW5jdGlvbiBoaihhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj9jLmluc2VydEJlZm9yZShhLGIpOmMuYXBwZW5kQ2hpbGQoYSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKGhqKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspaGooYSxiLGMpLGE9YS5zaWJsaW5nfVxuZnVuY3Rpb24gY2ooYSxiKXtmb3IodmFyIGM9YixkPSExLGUsZjs7KXtpZighZCl7ZD1jLnJldHVybjthOmZvcig7Oyl7aWYobnVsbD09PWQpdGhyb3cgRXJyb3IoeSgxNjApKTtlPWQuc3RhdGVOb2RlO3N3aXRjaChkLnRhZyl7Y2FzZSA1OmY9ITE7YnJlYWsgYTtjYXNlIDM6ZT1lLmNvbnRhaW5lckluZm87Zj0hMDticmVhayBhO2Nhc2UgNDplPWUuY29udGFpbmVySW5mbztmPSEwO2JyZWFrIGF9ZD1kLnJldHVybn1kPSEwfWlmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKXthOmZvcih2YXIgZz1hLGg9YyxrPWg7OylpZihiaihnLGspLG51bGwhPT1rLmNoaWxkJiY0IT09ay50YWcpay5jaGlsZC5yZXR1cm49ayxrPWsuY2hpbGQ7ZWxzZXtpZihrPT09aClicmVhayBhO2Zvcig7bnVsbD09PWsuc2libGluZzspe2lmKG51bGw9PT1rLnJldHVybnx8ay5yZXR1cm49PT1oKWJyZWFrIGE7az1rLnJldHVybn1rLnNpYmxpbmcucmV0dXJuPWsucmV0dXJuO2s9ay5zaWJsaW5nfWY/KGc9ZSxoPWMuc3RhdGVOb2RlLFxuOD09PWcubm9kZVR5cGU/Zy5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGgpOmcucmVtb3ZlQ2hpbGQoaCkpOmUucmVtb3ZlQ2hpbGQoYy5zdGF0ZU5vZGUpfWVsc2UgaWYoND09PWMudGFnKXtpZihudWxsIT09Yy5jaGlsZCl7ZT1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Y9ITA7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9fWVsc2UgaWYoYmooYSxjKSxudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm47ND09PWMudGFnJiYoZD0hMSl9Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319XG5mdW5jdGlvbiBpaihhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmNhc2UgMjI6dmFyIGM9Yi51cGRhdGVRdWV1ZTtjPW51bGwhPT1jP2MubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1jKXt2YXIgZD1jPWMubmV4dDtkbyAzPT09KGQudGFnJjMpJiYoYT1kLmRlc3Ryb3ksZC5kZXN0cm95PXZvaWQgMCx2b2lkIDAhPT1hJiZhKCkpLGQ9ZC5uZXh0O3doaWxlKGQhPT1jKX1yZXR1cm47Y2FzZSAxOnJldHVybjtjYXNlIDU6Yz1iLnN0YXRlTm9kZTtpZihudWxsIT1jKXtkPWIubWVtb2l6ZWRQcm9wczt2YXIgZT1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6ZDthPWIudHlwZTt2YXIgZj1iLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9bnVsbDtpZihudWxsIT09Zil7Y1t4Zl09ZDtcImlucHV0XCI9PT1hJiZcInJhZGlvXCI9PT1kLnR5cGUmJm51bGwhPWQubmFtZSYmJGEoYyxkKTt3YihhLGUpO2I9d2IoYSxkKTtmb3IoZT0wO2U8Zi5sZW5ndGg7ZSs9XG4yKXt2YXIgZz1mW2VdLGg9ZltlKzFdO1wic3R5bGVcIj09PWc/dGIoYyxoKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1nP29iKGMsaCk6XCJjaGlsZHJlblwiPT09Zz9wYihjLGgpOnFhKGMsZyxoLGIpfXN3aXRjaChhKXtjYXNlIFwiaW5wdXRcIjphYihjLGQpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmliKGMsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmE9Yy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlLGMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWQubXVsdGlwbGUsZj1kLnZhbHVlLG51bGwhPWY/ZmIoYywhIWQubXVsdGlwbGUsZiwhMSk6YSE9PSEhZC5tdWx0aXBsZSYmKG51bGwhPWQuZGVmYXVsdFZhbHVlP2ZiKGMsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLCEwKTpmYihjLCEhZC5tdWx0aXBsZSxkLm11bHRpcGxlP1tdOlwiXCIsITEpKX19fXJldHVybjtjYXNlIDY6aWYobnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHkoMTYyKSk7Yi5zdGF0ZU5vZGUubm9kZVZhbHVlPVxuYi5tZW1vaXplZFByb3BzO3JldHVybjtjYXNlIDM6Yz1iLnN0YXRlTm9kZTtjLmh5ZHJhdGUmJihjLmh5ZHJhdGU9ITEsQ2MoYy5jb250YWluZXJJbmZvKSk7cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSYmKGpqPU8oKSxhaihiLmNoaWxkLCEwKSk7a2ooYik7cmV0dXJuO2Nhc2UgMTk6a2ooYik7cmV0dXJuO2Nhc2UgMTc6cmV0dXJuO2Nhc2UgMjM6Y2FzZSAyNDphaihiLG51bGwhPT1iLm1lbW9pemVkU3RhdGUpO3JldHVybn10aHJvdyBFcnJvcih5KDE2MykpO31mdW5jdGlvbiBraihhKXt2YXIgYj1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iKXthLnVwZGF0ZVF1ZXVlPW51bGw7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbD09PWMmJihjPWEuc3RhdGVOb2RlPW5ldyBVaSk7Yi5mb3JFYWNoKGZ1bmN0aW9uKGIpe3ZhciBkPWxqLmJpbmQobnVsbCxhLGIpO2MuaGFzKGIpfHwoYy5hZGQoYiksYi50aGVuKGQsZCkpfSl9fVxuZnVuY3Rpb24gbWooYSxiKXtyZXR1cm4gbnVsbCE9PWEmJihhPWEubWVtb2l6ZWRTdGF0ZSxudWxsPT09YXx8bnVsbCE9PWEuZGVoeWRyYXRlZCk/KGI9Yi5tZW1vaXplZFN0YXRlLG51bGwhPT1iJiZudWxsPT09Yi5kZWh5ZHJhdGVkKTohMX12YXIgbmo9TWF0aC5jZWlsLG9qPXJhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIscGo9cmEuUmVhY3RDdXJyZW50T3duZXIsWD0wLFU9bnVsbCxZPW51bGwsVz0wLHFqPTAscmo9QmYoMCksVj0wLHNqPW51bGwsdGo9MCxEZz0wLEhpPTAsdWo9MCx2aj1udWxsLGpqPTAsSmk9SW5maW5pdHk7ZnVuY3Rpb24gd2ooKXtKaT1PKCkrNTAwfXZhciBaPW51bGwsUWk9ITEsUmk9bnVsbCxUaT1udWxsLHhqPSExLHlqPW51bGwsemo9OTAsQWo9W10sQmo9W10sQ2o9bnVsbCxEaj0wLEVqPW51bGwsRmo9LTEsR2o9MCxIaj0wLElqPW51bGwsSmo9ITE7ZnVuY3Rpb24gSGcoKXtyZXR1cm4gMCE9PShYJjQ4KT9PKCk6LTEhPT1Gaj9GajpGaj1PKCl9XG5mdW5jdGlvbiBJZyhhKXthPWEubW9kZTtpZigwPT09KGEmMikpcmV0dXJuIDE7aWYoMD09PShhJjQpKXJldHVybiA5OT09PWVnKCk/MToyOzA9PT1HaiYmKEdqPXRqKTtpZigwIT09a2cudHJhbnNpdGlvbil7MCE9PUhqJiYoSGo9bnVsbCE9PXZqP3ZqLnBlbmRpbmdMYW5lczowKTthPUdqO3ZhciBiPTQxODYxMTImfkhqO2ImPS1iOzA9PT1iJiYoYT00MTg2MTEyJn5hLGI9YSYtYSwwPT09YiYmKGI9ODE5MikpO3JldHVybiBifWE9ZWcoKTswIT09KFgmNCkmJjk4PT09YT9hPVhjKDEyLEdqKTooYT1TYyhhKSxhPVhjKGEsR2opKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIEpnKGEsYixjKXtpZig1MDxEail0aHJvdyBEaj0wLEVqPW51bGwsRXJyb3IoeSgxODUpKTthPUtqKGEsYik7aWYobnVsbD09PWEpcmV0dXJuIG51bGw7JGMoYSxiLGMpO2E9PT1VJiYoSGl8PWIsND09PVYmJklpKGEsVykpO3ZhciBkPWVnKCk7MT09PWI/MCE9PShYJjgpJiYwPT09KFgmNDgpP0xqKGEpOihNaihhLGMpLDA9PT1YJiYod2ooKSxpZygpKSk6KDA9PT0oWCY0KXx8OTghPT1kJiY5OSE9PWR8fChudWxsPT09Q2o/Q2o9bmV3IFNldChbYV0pOkNqLmFkZChhKSksTWooYSxjKSk7dmo9YX1mdW5jdGlvbiBLaihhLGIpe2EubGFuZXN8PWI7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJihjLmxhbmVzfD1iKTtjPWE7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWE7KWEuY2hpbGRMYW5lc3w9YixjPWEuYWx0ZXJuYXRlLG51bGwhPT1jJiYoYy5jaGlsZExhbmVzfD1iKSxjPWEsYT1hLnJldHVybjtyZXR1cm4gMz09PWMudGFnP2Muc3RhdGVOb2RlOm51bGx9XG5mdW5jdGlvbiBNaihhLGIpe2Zvcih2YXIgYz1hLmNhbGxiYWNrTm9kZSxkPWEuc3VzcGVuZGVkTGFuZXMsZT1hLnBpbmdlZExhbmVzLGY9YS5leHBpcmF0aW9uVGltZXMsZz1hLnBlbmRpbmdMYW5lczswPGc7KXt2YXIgaD0zMS1WYyhnKSxrPTE8PGgsbD1mW2hdO2lmKC0xPT09bCl7aWYoMD09PShrJmQpfHwwIT09KGsmZSkpe2w9YjtSYyhrKTt2YXIgbj1GO2ZbaF09MTA8PW4/bCsyNTA6Njw9bj9sKzVFMzotMX19ZWxzZSBsPD1iJiYoYS5leHBpcmVkTGFuZXN8PWspO2cmPX5rfWQ9VWMoYSxhPT09VT9XOjApO2I9RjtpZigwPT09ZCludWxsIT09YyYmKGMhPT1aZiYmUGYoYyksYS5jYWxsYmFja05vZGU9bnVsbCxhLmNhbGxiYWNrUHJpb3JpdHk9MCk7ZWxzZXtpZihudWxsIT09Yyl7aWYoYS5jYWxsYmFja1ByaW9yaXR5PT09YilyZXR1cm47YyE9PVpmJiZQZihjKX0xNT09PWI/KGM9TGouYmluZChudWxsLGEpLG51bGw9PT1hZz8oYWc9W2NdLGJnPU9mKFVmLGpnKSk6YWcucHVzaChjKSxcbmM9WmYpOjE0PT09Yj9jPWhnKDk5LExqLmJpbmQobnVsbCxhKSk6KGM9VGMoYiksYz1oZyhjLE5qLmJpbmQobnVsbCxhKSkpO2EuY2FsbGJhY2tQcmlvcml0eT1iO2EuY2FsbGJhY2tOb2RlPWN9fVxuZnVuY3Rpb24gTmooYSl7Rmo9LTE7SGo9R2o9MDtpZigwIT09KFgmNDgpKXRocm93IEVycm9yKHkoMzI3KSk7dmFyIGI9YS5jYWxsYmFja05vZGU7aWYoT2ooKSYmYS5jYWxsYmFja05vZGUhPT1iKXJldHVybiBudWxsO3ZhciBjPVVjKGEsYT09PVU/VzowKTtpZigwPT09YylyZXR1cm4gbnVsbDt2YXIgZD1jO3ZhciBlPVg7WHw9MTY7dmFyIGY9UGooKTtpZihVIT09YXx8VyE9PWQpd2ooKSxRaihhLGQpO2RvIHRyeXtSaigpO2JyZWFrfWNhdGNoKGgpe1NqKGEsaCl9d2hpbGUoMSk7cWcoKTtvai5jdXJyZW50PWY7WD1lO251bGwhPT1ZP2Q9MDooVT1udWxsLFc9MCxkPVYpO2lmKDAhPT0odGomSGkpKVFqKGEsMCk7ZWxzZSBpZigwIT09ZCl7Mj09PWQmJihYfD02NCxhLmh5ZHJhdGUmJihhLmh5ZHJhdGU9ITEscWYoYS5jb250YWluZXJJbmZvKSksYz1XYyhhKSwwIT09YyYmKGQ9VGooYSxjKSkpO2lmKDE9PT1kKXRocm93IGI9c2osUWooYSwwKSxJaShhLGMpLE1qKGEsTygpKSxiO2EuZmluaXNoZWRXb3JrPVxuYS5jdXJyZW50LmFsdGVybmF0ZTthLmZpbmlzaGVkTGFuZXM9Yztzd2l0Y2goZCl7Y2FzZSAwOmNhc2UgMTp0aHJvdyBFcnJvcih5KDM0NSkpO2Nhc2UgMjpVaihhKTticmVhaztjYXNlIDM6SWkoYSxjKTtpZigoYyY2MjkxNDU2MCk9PT1jJiYoZD1qais1MDAtTygpLDEwPGQpKXtpZigwIT09VWMoYSwwKSlicmVhaztlPWEuc3VzcGVuZGVkTGFuZXM7aWYoKGUmYykhPT1jKXtIZygpO2EucGluZ2VkTGFuZXN8PWEuc3VzcGVuZGVkTGFuZXMmZTticmVha31hLnRpbWVvdXRIYW5kbGU9b2YoVWouYmluZChudWxsLGEpLGQpO2JyZWFrfVVqKGEpO2JyZWFrO2Nhc2UgNDpJaShhLGMpO2lmKChjJjQxODYxMTIpPT09YylicmVhaztkPWEuZXZlbnRUaW1lcztmb3IoZT0tMTswPGM7KXt2YXIgZz0zMS1WYyhjKTtmPTE8PGc7Zz1kW2ddO2c+ZSYmKGU9Zyk7YyY9fmZ9Yz1lO2M9TygpLWM7Yz0oMTIwPmM/MTIwOjQ4MD5jPzQ4MDoxMDgwPmM/MTA4MDoxOTIwPmM/MTkyMDozRTM+Yz8zRTM6NDMyMD5cbmM/NDMyMDoxOTYwKm5qKGMvMTk2MCkpLWM7aWYoMTA8Yyl7YS50aW1lb3V0SGFuZGxlPW9mKFVqLmJpbmQobnVsbCxhKSxjKTticmVha31VaihhKTticmVhaztjYXNlIDU6VWooYSk7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDMyOSkpO319TWooYSxPKCkpO3JldHVybiBhLmNhbGxiYWNrTm9kZT09PWI/TmouYmluZChudWxsLGEpOm51bGx9ZnVuY3Rpb24gSWkoYSxiKXtiJj1+dWo7YiY9fkhpO2Euc3VzcGVuZGVkTGFuZXN8PWI7YS5waW5nZWRMYW5lcyY9fmI7Zm9yKGE9YS5leHBpcmF0aW9uVGltZXM7MDxiOyl7dmFyIGM9MzEtVmMoYiksZD0xPDxjO2FbY109LTE7YiY9fmR9fVxuZnVuY3Rpb24gTGooYSl7aWYoMCE9PShYJjQ4KSl0aHJvdyBFcnJvcih5KDMyNykpO09qKCk7aWYoYT09PVUmJjAhPT0oYS5leHBpcmVkTGFuZXMmVykpe3ZhciBiPVc7dmFyIGM9VGooYSxiKTswIT09KHRqJkhpKSYmKGI9VWMoYSxiKSxjPVRqKGEsYikpfWVsc2UgYj1VYyhhLDApLGM9VGooYSxiKTswIT09YS50YWcmJjI9PT1jJiYoWHw9NjQsYS5oeWRyYXRlJiYoYS5oeWRyYXRlPSExLHFmKGEuY29udGFpbmVySW5mbykpLGI9V2MoYSksMCE9PWImJihjPVRqKGEsYikpKTtpZigxPT09Yyl0aHJvdyBjPXNqLFFqKGEsMCksSWkoYSxiKSxNaihhLE8oKSksYzthLmZpbmlzaGVkV29yaz1hLmN1cnJlbnQuYWx0ZXJuYXRlO2EuZmluaXNoZWRMYW5lcz1iO1VqKGEpO01qKGEsTygpKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIFZqKCl7aWYobnVsbCE9PUNqKXt2YXIgYT1DajtDaj1udWxsO2EuZm9yRWFjaChmdW5jdGlvbihhKXthLmV4cGlyZWRMYW5lc3w9MjQmYS5wZW5kaW5nTGFuZXM7TWooYSxPKCkpfSl9aWcoKX1mdW5jdGlvbiBXaihhLGIpe3ZhciBjPVg7WHw9MTt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtYPWMsMD09PVgmJih3aigpLGlnKCkpfX1mdW5jdGlvbiBYaihhLGIpe3ZhciBjPVg7WCY9LTI7WHw9ODt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtYPWMsMD09PVgmJih3aigpLGlnKCkpfX1mdW5jdGlvbiBuaShhLGIpe0kocmoscWopO3FqfD1iO3RqfD1ifWZ1bmN0aW9uIEtpKCl7cWo9cmouY3VycmVudDtIKHJqKX1cbmZ1bmN0aW9uIFFqKGEsYil7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkTGFuZXM9MDt2YXIgYz1hLnRpbWVvdXRIYW5kbGU7LTEhPT1jJiYoYS50aW1lb3V0SGFuZGxlPS0xLHBmKGMpKTtpZihudWxsIT09WSlmb3IoYz1ZLnJldHVybjtudWxsIT09Yzspe3ZhciBkPWM7c3dpdGNoKGQudGFnKXtjYXNlIDE6ZD1kLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7bnVsbCE9PWQmJnZvaWQgMCE9PWQmJkdmKCk7YnJlYWs7Y2FzZSAzOmZoKCk7SChOKTtIKE0pO3VoKCk7YnJlYWs7Y2FzZSA1OmhoKGQpO2JyZWFrO2Nhc2UgNDpmaCgpO2JyZWFrO2Nhc2UgMTM6SChQKTticmVhaztjYXNlIDE5OkgoUCk7YnJlYWs7Y2FzZSAxMDpyZyhkKTticmVhaztjYXNlIDIzOmNhc2UgMjQ6S2koKX1jPWMucmV0dXJufVU9YTtZPVRnKGEuY3VycmVudCxudWxsKTtXPXFqPXRqPWI7Vj0wO3NqPW51bGw7dWo9SGk9RGc9MH1cbmZ1bmN0aW9uIFNqKGEsYil7ZG97dmFyIGM9WTt0cnl7cWcoKTt2aC5jdXJyZW50PUdoO2lmKHloKXtmb3IodmFyIGQ9Ui5tZW1vaXplZFN0YXRlO251bGwhPT1kOyl7dmFyIGU9ZC5xdWV1ZTtudWxsIT09ZSYmKGUucGVuZGluZz1udWxsKTtkPWQubmV4dH15aD0hMX14aD0wO1Q9Uz1SPW51bGw7emg9ITE7cGouY3VycmVudD1udWxsO2lmKG51bGw9PT1jfHxudWxsPT09Yy5yZXR1cm4pe1Y9MTtzaj1iO1k9bnVsbDticmVha31hOnt2YXIgZj1hLGc9Yy5yZXR1cm4saD1jLGs9YjtiPVc7aC5mbGFnc3w9MjA0ODtoLmZpcnN0RWZmZWN0PWgubGFzdEVmZmVjdD1udWxsO2lmKG51bGwhPT1rJiZcIm9iamVjdFwiPT09dHlwZW9mIGsmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBrLnRoZW4pe3ZhciBsPWs7aWYoMD09PShoLm1vZGUmMikpe3ZhciBuPWguYWx0ZXJuYXRlO24/KGgudXBkYXRlUXVldWU9bi51cGRhdGVRdWV1ZSxoLm1lbW9pemVkU3RhdGU9bi5tZW1vaXplZFN0YXRlLGgubGFuZXM9bi5sYW5lcyk6XG4oaC51cGRhdGVRdWV1ZT1udWxsLGgubWVtb2l6ZWRTdGF0ZT1udWxsKX12YXIgQT0wIT09KFAuY3VycmVudCYxKSxwPWc7ZG97dmFyIEM7aWYoQz0xMz09PXAudGFnKXt2YXIgeD1wLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PXgpQz1udWxsIT09eC5kZWh5ZHJhdGVkPyEwOiExO2Vsc2V7dmFyIHc9cC5tZW1vaXplZFByb3BzO0M9dm9pZCAwPT09dy5mYWxsYmFjaz8hMTohMCE9PXcudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2s/ITA6QT8hMTohMH19aWYoQyl7dmFyIHo9cC51cGRhdGVRdWV1ZTtpZihudWxsPT09eil7dmFyIHU9bmV3IFNldDt1LmFkZChsKTtwLnVwZGF0ZVF1ZXVlPXV9ZWxzZSB6LmFkZChsKTtpZigwPT09KHAubW9kZSYyKSl7cC5mbGFnc3w9NjQ7aC5mbGFnc3w9MTYzODQ7aC5mbGFncyY9LTI5ODE7aWYoMT09PWgudGFnKWlmKG51bGw9PT1oLmFsdGVybmF0ZSloLnRhZz0xNztlbHNle3ZhciB0PXpnKC0xLDEpO3QudGFnPTI7QWcoaCx0KX1oLmxhbmVzfD0xO2JyZWFrIGF9az1cbnZvaWQgMDtoPWI7dmFyIHE9Zi5waW5nQ2FjaGU7bnVsbD09PXE/KHE9Zi5waW5nQ2FjaGU9bmV3IE9pLGs9bmV3IFNldCxxLnNldChsLGspKTooaz1xLmdldChsKSx2b2lkIDA9PT1rJiYoaz1uZXcgU2V0LHEuc2V0KGwsaykpKTtpZighay5oYXMoaCkpe2suYWRkKGgpO3ZhciB2PVlqLmJpbmQobnVsbCxmLGwsaCk7bC50aGVuKHYsdil9cC5mbGFnc3w9NDA5NjtwLmxhbmVzPWI7YnJlYWsgYX1wPXAucmV0dXJufXdoaWxlKG51bGwhPT1wKTtrPUVycm9yKChSYShoLnR5cGUpfHxcIkEgUmVhY3QgY29tcG9uZW50XCIpK1wiIHN1c3BlbmRlZCB3aGlsZSByZW5kZXJpbmcsIGJ1dCBubyBmYWxsYmFjayBVSSB3YXMgc3BlY2lmaWVkLlxcblxcbkFkZCBhIDxTdXNwZW5zZSBmYWxsYmFjaz0uLi4+IGNvbXBvbmVudCBoaWdoZXIgaW4gdGhlIHRyZWUgdG8gcHJvdmlkZSBhIGxvYWRpbmcgaW5kaWNhdG9yIG9yIHBsYWNlaG9sZGVyIHRvIGRpc3BsYXkuXCIpfTUhPT1WJiYoVj0yKTtrPU1pKGssaCk7cD1cbmc7ZG97c3dpdGNoKHAudGFnKXtjYXNlIDM6Zj1rO3AuZmxhZ3N8PTQwOTY7YiY9LWI7cC5sYW5lc3w9Yjt2YXIgSj1QaShwLGYsYik7QmcocCxKKTticmVhayBhO2Nhc2UgMTpmPWs7dmFyIEs9cC50eXBlLFE9cC5zdGF0ZU5vZGU7aWYoMD09PShwLmZsYWdzJjY0KSYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBLLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8bnVsbCE9PVEmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBRLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVRpfHwhVGkuaGFzKFEpKSkpe3AuZmxhZ3N8PTQwOTY7YiY9LWI7cC5sYW5lc3w9Yjt2YXIgTD1TaShwLGYsYik7QmcocCxMKTticmVhayBhfX1wPXAucmV0dXJufXdoaWxlKG51bGwhPT1wKX1aaihjKX1jYXRjaCh2YSl7Yj12YTtZPT09YyYmbnVsbCE9PWMmJihZPWM9Yy5yZXR1cm4pO2NvbnRpbnVlfWJyZWFrfXdoaWxlKDEpfVxuZnVuY3Rpb24gUGooKXt2YXIgYT1vai5jdXJyZW50O29qLmN1cnJlbnQ9R2g7cmV0dXJuIG51bGw9PT1hP0doOmF9ZnVuY3Rpb24gVGooYSxiKXt2YXIgYz1YO1h8PTE2O3ZhciBkPVBqKCk7VT09PWEmJlc9PT1ifHxRaihhLGIpO2RvIHRyeXthaygpO2JyZWFrfWNhdGNoKGUpe1NqKGEsZSl9d2hpbGUoMSk7cWcoKTtYPWM7b2ouY3VycmVudD1kO2lmKG51bGwhPT1ZKXRocm93IEVycm9yKHkoMjYxKSk7VT1udWxsO1c9MDtyZXR1cm4gVn1mdW5jdGlvbiBhaygpe2Zvcig7bnVsbCE9PVk7KWJrKFkpfWZ1bmN0aW9uIFJqKCl7Zm9yKDtudWxsIT09WSYmIVFmKCk7KWJrKFkpfWZ1bmN0aW9uIGJrKGEpe3ZhciBiPWNrKGEuYWx0ZXJuYXRlLGEscWopO2EubWVtb2l6ZWRQcm9wcz1hLnBlbmRpbmdQcm9wcztudWxsPT09Yj9aaihhKTpZPWI7cGouY3VycmVudD1udWxsfVxuZnVuY3Rpb24gWmooYSl7dmFyIGI9YTtkb3t2YXIgYz1iLmFsdGVybmF0ZTthPWIucmV0dXJuO2lmKDA9PT0oYi5mbGFncyYyMDQ4KSl7Yz1HaShjLGIscWopO2lmKG51bGwhPT1jKXtZPWM7cmV0dXJufWM9YjtpZigyNCE9PWMudGFnJiYyMyE9PWMudGFnfHxudWxsPT09Yy5tZW1vaXplZFN0YXRlfHwwIT09KHFqJjEwNzM3NDE4MjQpfHwwPT09KGMubW9kZSY0KSl7Zm9yKHZhciBkPTAsZT1jLmNoaWxkO251bGwhPT1lOylkfD1lLmxhbmVzfGUuY2hpbGRMYW5lcyxlPWUuc2libGluZztjLmNoaWxkTGFuZXM9ZH1udWxsIT09YSYmMD09PShhLmZsYWdzJjIwNDgpJiYobnVsbD09PWEuZmlyc3RFZmZlY3QmJihhLmZpcnN0RWZmZWN0PWIuZmlyc3RFZmZlY3QpLG51bGwhPT1iLmxhc3RFZmZlY3QmJihudWxsIT09YS5sYXN0RWZmZWN0JiYoYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9Yi5maXJzdEVmZmVjdCksYS5sYXN0RWZmZWN0PWIubGFzdEVmZmVjdCksMTxiLmZsYWdzJiYobnVsbCE9PVxuYS5sYXN0RWZmZWN0P2EubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWI6YS5maXJzdEVmZmVjdD1iLGEubGFzdEVmZmVjdD1iKSl9ZWxzZXtjPUxpKGIpO2lmKG51bGwhPT1jKXtjLmZsYWdzJj0yMDQ3O1k9YztyZXR1cm59bnVsbCE9PWEmJihhLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1udWxsLGEuZmxhZ3N8PTIwNDgpfWI9Yi5zaWJsaW5nO2lmKG51bGwhPT1iKXtZPWI7cmV0dXJufVk9Yj1hfXdoaWxlKG51bGwhPT1iKTswPT09ViYmKFY9NSl9ZnVuY3Rpb24gVWooYSl7dmFyIGI9ZWcoKTtnZyg5OSxkay5iaW5kKG51bGwsYSxiKSk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBkayhhLGIpe2RvIE9qKCk7d2hpbGUobnVsbCE9PXlqKTtpZigwIT09KFgmNDgpKXRocm93IEVycm9yKHkoMzI3KSk7dmFyIGM9YS5maW5pc2hlZFdvcms7aWYobnVsbD09PWMpcmV0dXJuIG51bGw7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkTGFuZXM9MDtpZihjPT09YS5jdXJyZW50KXRocm93IEVycm9yKHkoMTc3KSk7YS5jYWxsYmFja05vZGU9bnVsbDt2YXIgZD1jLmxhbmVzfGMuY2hpbGRMYW5lcyxlPWQsZj1hLnBlbmRpbmdMYW5lcyZ+ZTthLnBlbmRpbmdMYW5lcz1lO2Euc3VzcGVuZGVkTGFuZXM9MDthLnBpbmdlZExhbmVzPTA7YS5leHBpcmVkTGFuZXMmPWU7YS5tdXRhYmxlUmVhZExhbmVzJj1lO2EuZW50YW5nbGVkTGFuZXMmPWU7ZT1hLmVudGFuZ2xlbWVudHM7Zm9yKHZhciBnPWEuZXZlbnRUaW1lcyxoPWEuZXhwaXJhdGlvblRpbWVzOzA8Zjspe3ZhciBrPTMxLVZjKGYpLGw9MTw8aztlW2tdPTA7Z1trXT0tMTtoW2tdPS0xO2YmPX5sfW51bGwhPT1cbkNqJiYwPT09KGQmMjQpJiZDai5oYXMoYSkmJkNqLmRlbGV0ZShhKTthPT09VSYmKFk9VT1udWxsLFc9MCk7MTxjLmZsYWdzP251bGwhPT1jLmxhc3RFZmZlY3Q/KGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsZD1jLmZpcnN0RWZmZWN0KTpkPWM6ZD1jLmZpcnN0RWZmZWN0O2lmKG51bGwhPT1kKXtlPVg7WHw9MzI7cGouY3VycmVudD1udWxsO2tmPWZkO2c9TmUoKTtpZihPZShnKSl7aWYoXCJzZWxlY3Rpb25TdGFydFwiaW4gZyloPXtzdGFydDpnLnNlbGVjdGlvblN0YXJ0LGVuZDpnLnNlbGVjdGlvbkVuZH07ZWxzZSBhOmlmKGg9KGg9Zy5vd25lckRvY3VtZW50KSYmaC5kZWZhdWx0Vmlld3x8d2luZG93LChsPWguZ2V0U2VsZWN0aW9uJiZoLmdldFNlbGVjdGlvbigpKSYmMCE9PWwucmFuZ2VDb3VudCl7aD1sLmFuY2hvck5vZGU7Zj1sLmFuY2hvck9mZnNldDtrPWwuZm9jdXNOb2RlO2w9bC5mb2N1c09mZnNldDt0cnl7aC5ub2RlVHlwZSxrLm5vZGVUeXBlfWNhdGNoKHZhKXtoPW51bGw7XG5icmVhayBhfXZhciBuPTAsQT0tMSxwPS0xLEM9MCx4PTAsdz1nLHo9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciB1Ozspe3chPT1ofHwwIT09ZiYmMyE9PXcubm9kZVR5cGV8fChBPW4rZik7dyE9PWt8fDAhPT1sJiYzIT09dy5ub2RlVHlwZXx8KHA9bitsKTszPT09dy5ub2RlVHlwZSYmKG4rPXcubm9kZVZhbHVlLmxlbmd0aCk7aWYobnVsbD09PSh1PXcuZmlyc3RDaGlsZCkpYnJlYWs7ej13O3c9dX1mb3IoOzspe2lmKHc9PT1nKWJyZWFrIGI7ej09PWgmJisrQz09PWYmJihBPW4pO3o9PT1rJiYrK3g9PT1sJiYocD1uKTtpZihudWxsIT09KHU9dy5uZXh0U2libGluZykpYnJlYWs7dz16O3o9dy5wYXJlbnROb2RlfXc9dX1oPS0xPT09QXx8LTE9PT1wP251bGw6e3N0YXJ0OkEsZW5kOnB9fWVsc2UgaD1udWxsO2g9aHx8e3N0YXJ0OjAsZW5kOjB9fWVsc2UgaD1udWxsO2xmPXtmb2N1c2VkRWxlbTpnLHNlbGVjdGlvblJhbmdlOmh9O2ZkPSExO0lqPW51bGw7Smo9ITE7Wj1kO2RvIHRyeXtlaygpfWNhdGNoKHZhKXtpZihudWxsPT09XG5aKXRocm93IEVycm9yKHkoMzMwKSk7V2koWix2YSk7Wj1aLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVopO0lqPW51bGw7Wj1kO2RvIHRyeXtmb3IoZz1hO251bGwhPT1aOyl7dmFyIHQ9Wi5mbGFnczt0JjE2JiZwYihaLnN0YXRlTm9kZSxcIlwiKTtpZih0JjEyOCl7dmFyIHE9Wi5hbHRlcm5hdGU7aWYobnVsbCE9PXEpe3ZhciB2PXEucmVmO251bGwhPT12JiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHY/dihudWxsKTp2LmN1cnJlbnQ9bnVsbCl9fXN3aXRjaCh0JjEwMzgpe2Nhc2UgMjpmaihaKTtaLmZsYWdzJj0tMzticmVhaztjYXNlIDY6ZmooWik7Wi5mbGFncyY9LTM7aWooWi5hbHRlcm5hdGUsWik7YnJlYWs7Y2FzZSAxMDI0OlouZmxhZ3MmPS0xMDI1O2JyZWFrO2Nhc2UgMTAyODpaLmZsYWdzJj0tMTAyNTtpaihaLmFsdGVybmF0ZSxaKTticmVhaztjYXNlIDQ6aWooWi5hbHRlcm5hdGUsWik7YnJlYWs7Y2FzZSA4Omg9WjtjaihnLGgpO3ZhciBKPWguYWx0ZXJuYXRlO2RqKGgpO251bGwhPT1cbkomJmRqKEopfVo9Wi5uZXh0RWZmZWN0fX1jYXRjaCh2YSl7aWYobnVsbD09PVopdGhyb3cgRXJyb3IoeSgzMzApKTtXaShaLHZhKTtaPVoubmV4dEVmZmVjdH13aGlsZShudWxsIT09Wik7dj1sZjtxPU5lKCk7dD12LmZvY3VzZWRFbGVtO2c9di5zZWxlY3Rpb25SYW5nZTtpZihxIT09dCYmdCYmdC5vd25lckRvY3VtZW50JiZNZSh0Lm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LHQpKXtudWxsIT09ZyYmT2UodCkmJihxPWcuc3RhcnQsdj1nLmVuZCx2b2lkIDA9PT12JiYodj1xKSxcInNlbGVjdGlvblN0YXJ0XCJpbiB0Pyh0LnNlbGVjdGlvblN0YXJ0PXEsdC5zZWxlY3Rpb25FbmQ9TWF0aC5taW4odix0LnZhbHVlLmxlbmd0aCkpOih2PShxPXQub3duZXJEb2N1bWVudHx8ZG9jdW1lbnQpJiZxLmRlZmF1bHRWaWV3fHx3aW5kb3csdi5nZXRTZWxlY3Rpb24mJih2PXYuZ2V0U2VsZWN0aW9uKCksaD10LnRleHRDb250ZW50Lmxlbmd0aCxKPU1hdGgubWluKGcuc3RhcnQsaCksZz12b2lkIDA9PT1cbmcuZW5kP0o6TWF0aC5taW4oZy5lbmQsaCksIXYuZXh0ZW5kJiZKPmcmJihoPWcsZz1KLEo9aCksaD1MZSh0LEopLGY9TGUodCxnKSxoJiZmJiYoMSE9PXYucmFuZ2VDb3VudHx8di5hbmNob3JOb2RlIT09aC5ub2RlfHx2LmFuY2hvck9mZnNldCE9PWgub2Zmc2V0fHx2LmZvY3VzTm9kZSE9PWYubm9kZXx8di5mb2N1c09mZnNldCE9PWYub2Zmc2V0KSYmKHE9cS5jcmVhdGVSYW5nZSgpLHEuc2V0U3RhcnQoaC5ub2RlLGgub2Zmc2V0KSx2LnJlbW92ZUFsbFJhbmdlcygpLEo+Zz8odi5hZGRSYW5nZShxKSx2LmV4dGVuZChmLm5vZGUsZi5vZmZzZXQpKToocS5zZXRFbmQoZi5ub2RlLGYub2Zmc2V0KSx2LmFkZFJhbmdlKHEpKSkpKSk7cT1bXTtmb3Iodj10O3Y9di5wYXJlbnROb2RlOykxPT09di5ub2RlVHlwZSYmcS5wdXNoKHtlbGVtZW50OnYsbGVmdDp2LnNjcm9sbExlZnQsdG9wOnYuc2Nyb2xsVG9wfSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIHQuZm9jdXMmJnQuZm9jdXMoKTtmb3IodD1cbjA7dDxxLmxlbmd0aDt0Kyspdj1xW3RdLHYuZWxlbWVudC5zY3JvbGxMZWZ0PXYubGVmdCx2LmVsZW1lbnQuc2Nyb2xsVG9wPXYudG9wfWZkPSEha2Y7bGY9a2Y9bnVsbDthLmN1cnJlbnQ9YztaPWQ7ZG8gdHJ5e2Zvcih0PWE7bnVsbCE9PVo7KXt2YXIgSz1aLmZsYWdzO0smMzYmJllpKHQsWi5hbHRlcm5hdGUsWik7aWYoSyYxMjgpe3E9dm9pZCAwO3ZhciBRPVoucmVmO2lmKG51bGwhPT1RKXt2YXIgTD1aLnN0YXRlTm9kZTtzd2l0Y2goWi50YWcpe2Nhc2UgNTpxPUw7YnJlYWs7ZGVmYXVsdDpxPUx9XCJmdW5jdGlvblwiPT09dHlwZW9mIFE/UShxKTpRLmN1cnJlbnQ9cX19Wj1aLm5leHRFZmZlY3R9fWNhdGNoKHZhKXtpZihudWxsPT09Wil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKFosdmEpO1o9Wi5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1aKTtaPW51bGw7JGYoKTtYPWV9ZWxzZSBhLmN1cnJlbnQ9YztpZih4ail4aj0hMSx5aj1hLHpqPWI7ZWxzZSBmb3IoWj1kO251bGwhPT1aOyliPVxuWi5uZXh0RWZmZWN0LFoubmV4dEVmZmVjdD1udWxsLFouZmxhZ3MmOCYmKEs9WixLLnNpYmxpbmc9bnVsbCxLLnN0YXRlTm9kZT1udWxsKSxaPWI7ZD1hLnBlbmRpbmdMYW5lczswPT09ZCYmKFRpPW51bGwpOzE9PT1kP2E9PT1Faj9EaisrOihEaj0wLEVqPWEpOkRqPTA7Yz1jLnN0YXRlTm9kZTtpZihNZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIE1mLm9uQ29tbWl0RmliZXJSb290KXRyeXtNZi5vbkNvbW1pdEZpYmVyUm9vdChMZixjLHZvaWQgMCw2ND09PShjLmN1cnJlbnQuZmxhZ3MmNjQpKX1jYXRjaCh2YSl7fU1qKGEsTygpKTtpZihRaSl0aHJvdyBRaT0hMSxhPVJpLFJpPW51bGwsYTtpZigwIT09KFgmOCkpcmV0dXJuIG51bGw7aWcoKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGVrKCl7Zm9yKDtudWxsIT09Wjspe3ZhciBhPVouYWx0ZXJuYXRlO0pqfHxudWxsPT09SWp8fCgwIT09KFouZmxhZ3MmOCk/ZGMoWixJaikmJihKaj0hMCk6MTM9PT1aLnRhZyYmbWooYSxaKSYmZGMoWixJaikmJihKaj0hMCkpO3ZhciBiPVouZmxhZ3M7MCE9PShiJjI1NikmJlhpKGEsWik7MD09PShiJjUxMil8fHhqfHwoeGo9ITAsaGcoOTcsZnVuY3Rpb24oKXtPaigpO3JldHVybiBudWxsfSkpO1o9Wi5uZXh0RWZmZWN0fX1mdW5jdGlvbiBPaigpe2lmKDkwIT09emope3ZhciBhPTk3PHpqPzk3OnpqO3pqPTkwO3JldHVybiBnZyhhLGZrKX1yZXR1cm4hMX1mdW5jdGlvbiAkaShhLGIpe0FqLnB1c2goYixhKTt4anx8KHhqPSEwLGhnKDk3LGZ1bmN0aW9uKCl7T2ooKTtyZXR1cm4gbnVsbH0pKX1mdW5jdGlvbiBaaShhLGIpe0JqLnB1c2goYixhKTt4anx8KHhqPSEwLGhnKDk3LGZ1bmN0aW9uKCl7T2ooKTtyZXR1cm4gbnVsbH0pKX1cbmZ1bmN0aW9uIGZrKCl7aWYobnVsbD09PXlqKXJldHVybiExO3ZhciBhPXlqO3lqPW51bGw7aWYoMCE9PShYJjQ4KSl0aHJvdyBFcnJvcih5KDMzMSkpO3ZhciBiPVg7WHw9MzI7dmFyIGM9Qmo7Qmo9W107Zm9yKHZhciBkPTA7ZDxjLmxlbmd0aDtkKz0yKXt2YXIgZT1jW2RdLGY9Y1tkKzFdLGc9ZS5kZXN0cm95O2UuZGVzdHJveT12b2lkIDA7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcpdHJ5e2coKX1jYXRjaChrKXtpZihudWxsPT09Zil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKGYsayl9fWM9QWo7QWo9W107Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrPTIpe2U9Y1tkXTtmPWNbZCsxXTt0cnl7dmFyIGg9ZS5jcmVhdGU7ZS5kZXN0cm95PWgoKX1jYXRjaChrKXtpZihudWxsPT09Zil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKGYsayl9fWZvcihoPWEuY3VycmVudC5maXJzdEVmZmVjdDtudWxsIT09aDspYT1oLm5leHRFZmZlY3QsaC5uZXh0RWZmZWN0PW51bGwsaC5mbGFncyY4JiYoaC5zaWJsaW5nPVxubnVsbCxoLnN0YXRlTm9kZT1udWxsKSxoPWE7WD1iO2lnKCk7cmV0dXJuITB9ZnVuY3Rpb24gZ2soYSxiLGMpe2I9TWkoYyxiKTtiPVBpKGEsYiwxKTtBZyhhLGIpO2I9SGcoKTthPUtqKGEsMSk7bnVsbCE9PWEmJigkYyhhLDEsYiksTWooYSxiKSl9XG5mdW5jdGlvbiBXaShhLGIpe2lmKDM9PT1hLnRhZylnayhhLGEsYik7ZWxzZSBmb3IodmFyIGM9YS5yZXR1cm47bnVsbCE9PWM7KXtpZigzPT09Yy50YWcpe2drKGMsYSxiKTticmVha31lbHNlIGlmKDE9PT1jLnRhZyl7dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGMudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVRpfHwhVGkuaGFzKGQpKSl7YT1NaShiLGEpO3ZhciBlPVNpKGMsYSwxKTtBZyhjLGUpO2U9SGcoKTtjPUtqKGMsMSk7aWYobnVsbCE9PWMpJGMoYywxLGUpLE1qKGMsZSk7ZWxzZSBpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1UaXx8IVRpLmhhcyhkKSkpdHJ5e2QuY29tcG9uZW50RGlkQ2F0Y2goYixhKX1jYXRjaChmKXt9YnJlYWt9fWM9Yy5yZXR1cm59fVxuZnVuY3Rpb24gWWooYSxiLGMpe3ZhciBkPWEucGluZ0NhY2hlO251bGwhPT1kJiZkLmRlbGV0ZShiKTtiPUhnKCk7YS5waW5nZWRMYW5lc3w9YS5zdXNwZW5kZWRMYW5lcyZjO1U9PT1hJiYoVyZjKT09PWMmJig0PT09Vnx8Mz09PVYmJihXJjYyOTE0NTYwKT09PVcmJjUwMD5PKCktamo/UWooYSwwKTp1anw9Yyk7TWooYSxiKX1mdW5jdGlvbiBsaihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO251bGwhPT1jJiZjLmRlbGV0ZShiKTtiPTA7MD09PWImJihiPWEubW9kZSwwPT09KGImMik/Yj0xOjA9PT0oYiY0KT9iPTk5PT09ZWcoKT8xOjI6KDA9PT1HaiYmKEdqPXRqKSxiPVljKDYyOTE0NTYwJn5HaiksMD09PWImJihiPTQxOTQzMDQpKSk7Yz1IZygpO2E9S2ooYSxiKTtudWxsIT09YSYmKCRjKGEsYixjKSxNaihhLGMpKX12YXIgY2s7XG5jaz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9Yi5sYW5lcztpZihudWxsIT09YSlpZihhLm1lbW9pemVkUHJvcHMhPT1iLnBlbmRpbmdQcm9wc3x8Ti5jdXJyZW50KXVnPSEwO2Vsc2UgaWYoMCE9PShjJmQpKXVnPTAhPT0oYS5mbGFncyYxNjM4NCk/ITA6ITE7ZWxzZXt1Zz0hMTtzd2l0Y2goYi50YWcpe2Nhc2UgMzpyaShiKTtzaCgpO2JyZWFrO2Nhc2UgNTpnaChiKTticmVhaztjYXNlIDE6RmYoYi50eXBlKSYmSmYoYik7YnJlYWs7Y2FzZSA0OmVoKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7YnJlYWs7Y2FzZSAxMDpkPWIubWVtb2l6ZWRQcm9wcy52YWx1ZTt2YXIgZT1iLnR5cGUuX2NvbnRleHQ7SShtZyxlLl9jdXJyZW50VmFsdWUpO2UuX2N1cnJlbnRWYWx1ZT1kO2JyZWFrO2Nhc2UgMTM6aWYobnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSl7aWYoMCE9PShjJmIuY2hpbGQuY2hpbGRMYW5lcykpcmV0dXJuIHRpKGEsYixjKTtJKFAsUC5jdXJyZW50JjEpO2I9aGkoYSxiLGMpO3JldHVybiBudWxsIT09XG5iP2Iuc2libGluZzpudWxsfUkoUCxQLmN1cnJlbnQmMSk7YnJlYWs7Y2FzZSAxOTpkPTAhPT0oYyZiLmNoaWxkTGFuZXMpO2lmKDAhPT0oYS5mbGFncyY2NCkpe2lmKGQpcmV0dXJuIEFpKGEsYixjKTtiLmZsYWdzfD02NH1lPWIubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZSYmKGUucmVuZGVyaW5nPW51bGwsZS50YWlsPW51bGwsZS5sYXN0RWZmZWN0PW51bGwpO0koUCxQLmN1cnJlbnQpO2lmKGQpYnJlYWs7ZWxzZSByZXR1cm4gbnVsbDtjYXNlIDIzOmNhc2UgMjQ6cmV0dXJuIGIubGFuZXM9MCxtaShhLGIsYyl9cmV0dXJuIGhpKGEsYixjKX1lbHNlIHVnPSExO2IubGFuZXM9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjpkPWIudHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKTthPWIucGVuZGluZ1Byb3BzO2U9RWYoYixNLmN1cnJlbnQpO3RnKGIsYyk7ZT1DaChudWxsLGIsZCxhLGUsYyk7Yi5mbGFnc3w9MTtpZihcIm9iamVjdFwiPT09XG50eXBlb2YgZSYmbnVsbCE9PWUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLnJlbmRlciYmdm9pZCAwPT09ZS4kJHR5cGVvZil7Yi50YWc9MTtiLm1lbW9pemVkU3RhdGU9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7aWYoRmYoZCkpe3ZhciBmPSEwO0pmKGIpfWVsc2UgZj0hMTtiLm1lbW9pemVkU3RhdGU9bnVsbCE9PWUuc3RhdGUmJnZvaWQgMCE9PWUuc3RhdGU/ZS5zdGF0ZTpudWxsO3hnKGIpO3ZhciBnPWQuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiZHZyhiLGQsZyxhKTtlLnVwZGF0ZXI9S2c7Yi5zdGF0ZU5vZGU9ZTtlLl9yZWFjdEludGVybmFscz1iO09nKGIsZCxhLGMpO2I9cWkobnVsbCxiLGQsITAsZixjKX1lbHNlIGIudGFnPTAsZmkobnVsbCxiLGUsYyksYj1iLmNoaWxkO3JldHVybiBiO2Nhc2UgMTY6ZT1iLmVsZW1lbnRUeXBlO2E6e251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZmxhZ3N8PTIpO1xuYT1iLnBlbmRpbmdQcm9wcztmPWUuX2luaXQ7ZT1mKGUuX3BheWxvYWQpO2IudHlwZT1lO2Y9Yi50YWc9aGsoZSk7YT1sZyhlLGEpO3N3aXRjaChmKXtjYXNlIDA6Yj1saShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxOmI9cGkobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTE6Yj1naShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxNDpiPWlpKG51bGwsYixlLGxnKGUudHlwZSxhKSxkLGMpO2JyZWFrIGF9dGhyb3cgRXJyb3IoeSgzMDYsZSxcIlwiKSk7fXJldHVybiBiO2Nhc2UgMDpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxsaShhLGIsZCxlLGMpO2Nhc2UgMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxwaShhLGIsZCxlLGMpO2Nhc2UgMzpyaShiKTtkPWIudXBkYXRlUXVldWU7aWYobnVsbD09PWF8fG51bGw9PT1kKXRocm93IEVycm9yKHkoMjgyKSk7XG5kPWIucGVuZGluZ1Byb3BzO2U9Yi5tZW1vaXplZFN0YXRlO2U9bnVsbCE9PWU/ZS5lbGVtZW50Om51bGw7eWcoYSxiKTtDZyhiLGQsbnVsbCxjKTtkPWIubWVtb2l6ZWRTdGF0ZS5lbGVtZW50O2lmKGQ9PT1lKXNoKCksYj1oaShhLGIsYyk7ZWxzZXtlPWIuc3RhdGVOb2RlO2lmKGY9ZS5oeWRyYXRlKWtoPXJmKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8uZmlyc3RDaGlsZCksamg9YixmPWxoPSEwO2lmKGYpe2E9ZS5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhO2lmKG51bGwhPWEpZm9yKGU9MDtlPGEubGVuZ3RoO2UrPTIpZj1hW2VdLGYuX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnk9YVtlKzFdLHRoLnB1c2goZik7Yz1aZyhiLG51bGwsZCxjKTtmb3IoYi5jaGlsZD1jO2M7KWMuZmxhZ3M9Yy5mbGFncyYtM3wxMDI0LGM9Yy5zaWJsaW5nfWVsc2UgZmkoYSxiLGQsYyksc2goKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBnaChiKSxudWxsPT09YSYmXG5waChiKSxkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGY9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOm51bGwsZz1lLmNoaWxkcmVuLG5mKGQsZSk/Zz1udWxsOm51bGwhPT1mJiZuZihkLGYpJiYoYi5mbGFnc3w9MTYpLG9pKGEsYiksZmkoYSxiLGcsYyksYi5jaGlsZDtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZwaChiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIHRpKGEsYixjKTtjYXNlIDQ6cmV0dXJuIGVoKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPVlnKGIsbnVsbCxkLGMpOmZpKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxnaShhLGIsZCxlLGMpO2Nhc2UgNzpyZXR1cm4gZmkoYSxiLGIucGVuZGluZ1Byb3BzLGMpLGIuY2hpbGQ7Y2FzZSA4OnJldHVybiBmaShhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sXG5jKSxiLmNoaWxkO2Nhc2UgMTI6cmV0dXJuIGZpKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTA6YTp7ZD1iLnR5cGUuX2NvbnRleHQ7ZT1iLnBlbmRpbmdQcm9wcztnPWIubWVtb2l6ZWRQcm9wcztmPWUudmFsdWU7dmFyIGg9Yi50eXBlLl9jb250ZXh0O0kobWcsaC5fY3VycmVudFZhbHVlKTtoLl9jdXJyZW50VmFsdWU9ZjtpZihudWxsIT09ZylpZihoPWcudmFsdWUsZj1IZShoLGYpPzA6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLl9jYWxjdWxhdGVDaGFuZ2VkQml0cz9kLl9jYWxjdWxhdGVDaGFuZ2VkQml0cyhoLGYpOjEwNzM3NDE4MjMpfDAsMD09PWYpe2lmKGcuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiYhTi5jdXJyZW50KXtiPWhpKGEsYixjKTticmVhayBhfX1lbHNlIGZvcihoPWIuY2hpbGQsbnVsbCE9PWgmJihoLnJldHVybj1iKTtudWxsIT09aDspe3ZhciBrPWguZGVwZW5kZW5jaWVzO2lmKG51bGwhPT1rKXtnPWguY2hpbGQ7Zm9yKHZhciBsPVxuay5maXJzdENvbnRleHQ7bnVsbCE9PWw7KXtpZihsLmNvbnRleHQ9PT1kJiYwIT09KGwub2JzZXJ2ZWRCaXRzJmYpKXsxPT09aC50YWcmJihsPXpnKC0xLGMmLWMpLGwudGFnPTIsQWcoaCxsKSk7aC5sYW5lc3w9YztsPWguYWx0ZXJuYXRlO251bGwhPT1sJiYobC5sYW5lc3w9Yyk7c2coaC5yZXR1cm4sYyk7ay5sYW5lc3w9YzticmVha31sPWwubmV4dH19ZWxzZSBnPTEwPT09aC50YWc/aC50eXBlPT09Yi50eXBlP251bGw6aC5jaGlsZDpoLmNoaWxkO2lmKG51bGwhPT1nKWcucmV0dXJuPWg7ZWxzZSBmb3IoZz1oO251bGwhPT1nOyl7aWYoZz09PWIpe2c9bnVsbDticmVha31oPWcuc2libGluZztpZihudWxsIT09aCl7aC5yZXR1cm49Zy5yZXR1cm47Zz1oO2JyZWFrfWc9Zy5yZXR1cm59aD1nfWZpKGEsYixlLmNoaWxkcmVuLGMpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDk6cmV0dXJuIGU9Yi50eXBlLGY9Yi5wZW5kaW5nUHJvcHMsZD1mLmNoaWxkcmVuLHRnKGIsYyksZT12ZyhlLFxuZi51bnN0YWJsZV9vYnNlcnZlZEJpdHMpLGQ9ZChlKSxiLmZsYWdzfD0xLGZpKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxNDpyZXR1cm4gZT1iLnR5cGUsZj1sZyhlLGIucGVuZGluZ1Byb3BzKSxmPWxnKGUudHlwZSxmKSxpaShhLGIsZSxmLGQsYyk7Y2FzZSAxNTpyZXR1cm4ga2koYSxiLGIudHlwZSxiLnBlbmRpbmdQcm9wcyxkLGMpO2Nhc2UgMTc6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmxnKGQsZSksbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5mbGFnc3w9MiksYi50YWc9MSxGZihkKT8oYT0hMCxKZihiKSk6YT0hMSx0ZyhiLGMpLE1nKGIsZCxlKSxPZyhiLGQsZSxjKSxxaShudWxsLGIsZCwhMCxhLGMpO2Nhc2UgMTk6cmV0dXJuIEFpKGEsYixjKTtjYXNlIDIzOnJldHVybiBtaShhLGIsYyk7Y2FzZSAyNDpyZXR1cm4gbWkoYSxiLGMpfXRocm93IEVycm9yKHkoMTU2LGIudGFnKSk7XG59O2Z1bmN0aW9uIGlrKGEsYixjLGQpe3RoaXMudGFnPWE7dGhpcy5rZXk9Yzt0aGlzLnNpYmxpbmc9dGhpcy5jaGlsZD10aGlzLnJldHVybj10aGlzLnN0YXRlTm9kZT10aGlzLnR5cGU9dGhpcy5lbGVtZW50VHlwZT1udWxsO3RoaXMuaW5kZXg9MDt0aGlzLnJlZj1udWxsO3RoaXMucGVuZGluZ1Byb3BzPWI7dGhpcy5kZXBlbmRlbmNpZXM9dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGw7dGhpcy5tb2RlPWQ7dGhpcy5mbGFncz0wO3RoaXMubGFzdEVmZmVjdD10aGlzLmZpcnN0RWZmZWN0PXRoaXMubmV4dEVmZmVjdD1udWxsO3RoaXMuY2hpbGRMYW5lcz10aGlzLmxhbmVzPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1mdW5jdGlvbiBuaChhLGIsYyxkKXtyZXR1cm4gbmV3IGlrKGEsYixjLGQpfWZ1bmN0aW9uIGppKGEpe2E9YS5wcm90b3R5cGU7cmV0dXJuISghYXx8IWEuaXNSZWFjdENvbXBvbmVudCl9XG5mdW5jdGlvbiBoayhhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gamkoYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PUFhKXJldHVybiAxMTtpZihhPT09RGEpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gVGcoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1uaChhLnRhZyxiLGEua2V5LGEubW9kZSksYy5lbGVtZW50VHlwZT1hLmVsZW1lbnRUeXBlLGMudHlwZT1hLnR5cGUsYy5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGUsYy5hbHRlcm5hdGU9YSxhLmFsdGVybmF0ZT1jKTooYy5wZW5kaW5nUHJvcHM9YixjLnR5cGU9YS50eXBlLGMuZmxhZ3M9MCxjLm5leHRFZmZlY3Q9bnVsbCxjLmZpcnN0RWZmZWN0PW51bGwsYy5sYXN0RWZmZWN0PW51bGwpO2MuY2hpbGRMYW5lcz1hLmNoaWxkTGFuZXM7Yy5sYW5lcz1hLmxhbmVzO2MuY2hpbGQ9YS5jaGlsZDtjLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzO2MubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGU7Yy51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlO2I9YS5kZXBlbmRlbmNpZXM7Yy5kZXBlbmRlbmNpZXM9bnVsbD09PWI/bnVsbDp7bGFuZXM6Yi5sYW5lcyxmaXJzdENvbnRleHQ6Yi5maXJzdENvbnRleHR9O1xuYy5zaWJsaW5nPWEuc2libGluZztjLmluZGV4PWEuaW5kZXg7Yy5yZWY9YS5yZWY7cmV0dXJuIGN9XG5mdW5jdGlvbiBWZyhhLGIsYyxkLGUsZil7dmFyIGc9MjtkPWE7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpamkoYSkmJihnPTEpO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKWc9NTtlbHNlIGE6c3dpdGNoKGEpe2Nhc2UgdWE6cmV0dXJuIFhnKGMuY2hpbGRyZW4sZSxmLGIpO2Nhc2UgSGE6Zz04O2V8PTE2O2JyZWFrO2Nhc2Ugd2E6Zz04O2V8PTE7YnJlYWs7Y2FzZSB4YTpyZXR1cm4gYT1uaCgxMixjLGIsZXw4KSxhLmVsZW1lbnRUeXBlPXhhLGEudHlwZT14YSxhLmxhbmVzPWYsYTtjYXNlIEJhOnJldHVybiBhPW5oKDEzLGMsYixlKSxhLnR5cGU9QmEsYS5lbGVtZW50VHlwZT1CYSxhLmxhbmVzPWYsYTtjYXNlIENhOnJldHVybiBhPW5oKDE5LGMsYixlKSxhLmVsZW1lbnRUeXBlPUNhLGEubGFuZXM9ZixhO2Nhc2UgSWE6cmV0dXJuIHZpKGMsZSxmLGIpO2Nhc2UgSmE6cmV0dXJuIGE9bmgoMjQsYyxiLGUpLGEuZWxlbWVudFR5cGU9SmEsYS5sYW5lcz1mLGE7ZGVmYXVsdDppZihcIm9iamVjdFwiPT09XG50eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgeWE6Zz0xMDticmVhayBhO2Nhc2UgemE6Zz05O2JyZWFrIGE7Y2FzZSBBYTpnPTExO2JyZWFrIGE7Y2FzZSBEYTpnPTE0O2JyZWFrIGE7Y2FzZSBFYTpnPTE2O2Q9bnVsbDticmVhayBhO2Nhc2UgRmE6Zz0yMjticmVhayBhfXRocm93IEVycm9yKHkoMTMwLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKSk7fWI9bmgoZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IubGFuZXM9ZjtyZXR1cm4gYn1mdW5jdGlvbiBYZyhhLGIsYyxkKXthPW5oKDcsYSxkLGIpO2EubGFuZXM9YztyZXR1cm4gYX1mdW5jdGlvbiB2aShhLGIsYyxkKXthPW5oKDIzLGEsZCxiKTthLmVsZW1lbnRUeXBlPUlhO2EubGFuZXM9YztyZXR1cm4gYX1mdW5jdGlvbiBVZyhhLGIsYyl7YT1uaCg2LGEsbnVsbCxiKTthLmxhbmVzPWM7cmV0dXJuIGF9XG5mdW5jdGlvbiBXZyhhLGIsYyl7Yj1uaCg0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5sYW5lcz1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGprKGEsYixjKXt0aGlzLnRhZz1iO3RoaXMuY29udGFpbmVySW5mbz1hO3RoaXMuZmluaXNoZWRXb3JrPXRoaXMucGluZ0NhY2hlPXRoaXMuY3VycmVudD10aGlzLnBlbmRpbmdDaGlsZHJlbj1udWxsO3RoaXMudGltZW91dEhhbmRsZT0tMTt0aGlzLnBlbmRpbmdDb250ZXh0PXRoaXMuY29udGV4dD1udWxsO3RoaXMuaHlkcmF0ZT1jO3RoaXMuY2FsbGJhY2tOb2RlPW51bGw7dGhpcy5jYWxsYmFja1ByaW9yaXR5PTA7dGhpcy5ldmVudFRpbWVzPVpjKDApO3RoaXMuZXhwaXJhdGlvblRpbWVzPVpjKC0xKTt0aGlzLmVudGFuZ2xlZExhbmVzPXRoaXMuZmluaXNoZWRMYW5lcz10aGlzLm11dGFibGVSZWFkTGFuZXM9dGhpcy5leHBpcmVkTGFuZXM9dGhpcy5waW5nZWRMYW5lcz10aGlzLnN1c3BlbmRlZExhbmVzPXRoaXMucGVuZGluZ0xhbmVzPTA7dGhpcy5lbnRhbmdsZW1lbnRzPVpjKDApO3RoaXMubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YT1udWxsfVxuZnVuY3Rpb24ga2soYSxiLGMpe3ZhciBkPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpudWxsO3JldHVybnskJHR5cGVvZjp0YSxrZXk6bnVsbD09ZD9udWxsOlwiXCIrZCxjaGlsZHJlbjphLGNvbnRhaW5lckluZm86YixpbXBsZW1lbnRhdGlvbjpjfX1cbmZ1bmN0aW9uIGxrKGEsYixjLGQpe3ZhciBlPWIuY3VycmVudCxmPUhnKCksZz1JZyhlKTthOmlmKGMpe2M9Yy5fcmVhY3RJbnRlcm5hbHM7Yjp7aWYoWmIoYykhPT1jfHwxIT09Yy50YWcpdGhyb3cgRXJyb3IoeSgxNzApKTt2YXIgaD1jO2Rve3N3aXRjaChoLnRhZyl7Y2FzZSAzOmg9aC5zdGF0ZU5vZGUuY29udGV4dDticmVhayBiO2Nhc2UgMTppZihGZihoLnR5cGUpKXtoPWguc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGJ9fWg9aC5yZXR1cm59d2hpbGUobnVsbCE9PWgpO3Rocm93IEVycm9yKHkoMTcxKSk7fWlmKDE9PT1jLnRhZyl7dmFyIGs9Yy50eXBlO2lmKEZmKGspKXtjPUlmKGMsayxoKTticmVhayBhfX1jPWh9ZWxzZSBjPUNmO251bGw9PT1iLmNvbnRleHQ/Yi5jb250ZXh0PWM6Yi5wZW5kaW5nQ29udGV4dD1jO2I9emcoZixnKTtiLnBheWxvYWQ9e2VsZW1lbnQ6YX07ZD12b2lkIDA9PT1kP251bGw6ZDtudWxsIT09XG5kJiYoYi5jYWxsYmFjaz1kKTtBZyhlLGIpO0pnKGUsZyxmKTtyZXR1cm4gZ31mdW5jdGlvbiBtayhhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGU7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fWZ1bmN0aW9uIG5rKGEsYil7YT1hLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWEmJm51bGwhPT1hLmRlaHlkcmF0ZWQpe3ZhciBjPWEucmV0cnlMYW5lO2EucmV0cnlMYW5lPTAhPT1jJiZjPGI/YzpifX1mdW5jdGlvbiBvayhhLGIpe25rKGEsYik7KGE9YS5hbHRlcm5hdGUpJiZuayhhLGIpfWZ1bmN0aW9uIHBrKCl7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBxayhhLGIsYyl7dmFyIGQ9bnVsbCE9YyYmbnVsbCE9Yy5oeWRyYXRpb25PcHRpb25zJiZjLmh5ZHJhdGlvbk9wdGlvbnMubXV0YWJsZVNvdXJjZXN8fG51bGw7Yz1uZXcgamsoYSxiLG51bGwhPWMmJiEwPT09Yy5oeWRyYXRlKTtiPW5oKDMsbnVsbCxudWxsLDI9PT1iPzc6MT09PWI/MzowKTtjLmN1cnJlbnQ9YjtiLnN0YXRlTm9kZT1jO3hnKGIpO2FbZmZdPWMuY3VycmVudDtjZig4PT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YSk7aWYoZClmb3IoYT0wO2E8ZC5sZW5ndGg7YSsrKXtiPWRbYV07dmFyIGU9Yi5fZ2V0VmVyc2lvbjtlPWUoYi5fc291cmNlKTtudWxsPT1jLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE/Yy5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhPVtiLGVdOmMubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YS5wdXNoKGIsZSl9dGhpcy5faW50ZXJuYWxSb290PWN9XG5xay5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEpe2xrKGEsdGhpcy5faW50ZXJuYWxSb290LG51bGwsbnVsbCl9O3FrLnByb3RvdHlwZS51bm1vdW50PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5faW50ZXJuYWxSb290LGI9YS5jb250YWluZXJJbmZvO2xrKG51bGwsYSxudWxsLGZ1bmN0aW9uKCl7YltmZl09bnVsbH0pfTtmdW5jdGlvbiByayhhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSYmKDghPT1hLm5vZGVUeXBlfHxcIiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSBcIiE9PWEubm9kZVZhbHVlKSl9XG5mdW5jdGlvbiBzayhhLGIpe2J8fChiPWE/OT09PWEubm9kZVR5cGU/YS5kb2N1bWVudEVsZW1lbnQ6YS5maXJzdENoaWxkOm51bGwsYj0hKCFifHwxIT09Yi5ub2RlVHlwZXx8IWIuaGFzQXR0cmlidXRlKFwiZGF0YS1yZWFjdHJvb3RcIikpKTtpZighYilmb3IodmFyIGM7Yz1hLmxhc3RDaGlsZDspYS5yZW1vdmVDaGlsZChjKTtyZXR1cm4gbmV3IHFrKGEsMCxiP3toeWRyYXRlOiEwfTp2b2lkIDApfVxuZnVuY3Rpb24gdGsoYSxiLGMsZCxlKXt2YXIgZj1jLl9yZWFjdFJvb3RDb250YWluZXI7aWYoZil7dmFyIGc9Zi5faW50ZXJuYWxSb290O2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaD1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1tayhnKTtoLmNhbGwoYSl9fWxrKGIsZyxhLGUpfWVsc2V7Zj1jLl9yZWFjdFJvb3RDb250YWluZXI9c2soYyxkKTtnPWYuX2ludGVybmFsUm9vdDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGs9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9bWsoZyk7ay5jYWxsKGEpfX1YaihmdW5jdGlvbigpe2xrKGIsZyxhLGUpfSl9cmV0dXJuIG1rKGcpfWVjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPUhnKCk7SmcoYSw0LGIpO29rKGEsNCl9fTtmYz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1IZygpO0pnKGEsNjcxMDg4NjQsYik7b2soYSw2NzEwODg2NCl9fTtcbmdjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPUhnKCksYz1JZyhhKTtKZyhhLGMsYik7b2soYSxjKX19O2hjPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGIoKX07XG55Yj1mdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOmFiKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1jLnBhcmVudE5vZGU7Yz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1EYihkKTtpZighZSl0aHJvdyBFcnJvcih5KDkwKSk7V2EoZCk7YWIoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmliKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZmYihhLCEhYy5tdWx0aXBsZSxiLCExKX19O0diPVdqO1xuSGI9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1YO1h8PTQ7dHJ5e3JldHVybiBnZyg5OCxhLmJpbmQobnVsbCxiLGMsZCxlKSl9ZmluYWxseXtYPWYsMD09PVgmJih3aigpLGlnKCkpfX07SWI9ZnVuY3Rpb24oKXswPT09KFgmNDkpJiYoVmooKSxPaigpKX07SmI9ZnVuY3Rpb24oYSxiKXt2YXIgYz1YO1h8PTI7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7WD1jLDA9PT1YJiYod2ooKSxpZygpKX19O2Z1bmN0aW9uIHVrKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7aWYoIXJrKGIpKXRocm93IEVycm9yKHkoMjAwKSk7cmV0dXJuIGtrKGEsYixudWxsLGMpfXZhciB2az17RXZlbnRzOltDYix1ZSxEYixFYixGYixPaix7Y3VycmVudDohMX1dfSx3az17ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6d2MsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNy4wLjJcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9O1xudmFyIHhrPXtidW5kbGVUeXBlOndrLmJ1bmRsZVR5cGUsdmVyc2lvbjp3ay52ZXJzaW9uLHJlbmRlcmVyUGFja2FnZU5hbWU6d2sucmVuZGVyZXJQYWNrYWdlTmFtZSxyZW5kZXJlckNvbmZpZzp3ay5yZW5kZXJlckNvbmZpZyxvdmVycmlkZUhvb2tTdGF0ZTpudWxsLG92ZXJyaWRlSG9va1N0YXRlRGVsZXRlUGF0aDpudWxsLG92ZXJyaWRlSG9va1N0YXRlUmVuYW1lUGF0aDpudWxsLG92ZXJyaWRlUHJvcHM6bnVsbCxvdmVycmlkZVByb3BzRGVsZXRlUGF0aDpudWxsLG92ZXJyaWRlUHJvcHNSZW5hbWVQYXRoOm51bGwsc2V0U3VzcGVuc2VIYW5kbGVyOm51bGwsc2NoZWR1bGVVcGRhdGU6bnVsbCxjdXJyZW50RGlzcGF0Y2hlclJlZjpyYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9Y2MoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOndrLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlfHxcbnBrLGZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaDpudWxsLHNjaGVkdWxlUmVmcmVzaDpudWxsLHNjaGVkdWxlUm9vdDpudWxsLHNldFJlZnJlc2hIYW5kbGVyOm51bGwsZ2V0Q3VycmVudEZpYmVyOm51bGx9O2lmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXt2YXIgeWs9X19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fO2lmKCF5ay5pc0Rpc2FibGVkJiZ5ay5zdXBwb3J0c0ZpYmVyKXRyeXtMZj15ay5pbmplY3QoeGspLE1mPXlrfWNhdGNoKGEpe319ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD12aztleHBvcnRzLmNyZWF0ZVBvcnRhbD11aztcbmV4cG9ydHMuZmluZERPTU5vZGU9ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFscztpZih2b2lkIDA9PT1iKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5yZW5kZXIpdGhyb3cgRXJyb3IoeSgxODgpKTt0aHJvdyBFcnJvcih5KDI2OCxPYmplY3Qua2V5cyhhKSkpO31hPWNjKGIpO2E9bnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZTtyZXR1cm4gYX07ZXhwb3J0cy5mbHVzaFN5bmM9ZnVuY3Rpb24oYSxiKXt2YXIgYz1YO2lmKDAhPT0oYyY0OCkpcmV0dXJuIGEoYik7WHw9MTt0cnl7aWYoYSlyZXR1cm4gZ2coOTksYS5iaW5kKG51bGwsYikpfWZpbmFsbHl7WD1jLGlnKCl9fTtleHBvcnRzLmh5ZHJhdGU9ZnVuY3Rpb24oYSxiLGMpe2lmKCFyayhiKSl0aHJvdyBFcnJvcih5KDIwMCkpO3JldHVybiB0ayhudWxsLGEsYiwhMCxjKX07XG5leHBvcnRzLnJlbmRlcj1mdW5jdGlvbihhLGIsYyl7aWYoIXJrKGIpKXRocm93IEVycm9yKHkoMjAwKSk7cmV0dXJuIHRrKG51bGwsYSxiLCExLGMpfTtleHBvcnRzLnVubW91bnRDb21wb25lbnRBdE5vZGU9ZnVuY3Rpb24oYSl7aWYoIXJrKGEpKXRocm93IEVycm9yKHkoNDApKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhYaihmdW5jdGlvbigpe3RrKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGw7YVtmZl09bnVsbH0pfSksITApOiExfTtleHBvcnRzLnVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzPVdqO2V4cG9ydHMudW5zdGFibGVfY3JlYXRlUG9ydGFsPWZ1bmN0aW9uKGEsYil7cmV0dXJuIHVrKGEsYiwyPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbCl9O1xuZXhwb3J0cy51bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyxkKXtpZighcmsoYykpdGhyb3cgRXJyb3IoeSgyMDApKTtpZihudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFscyl0aHJvdyBFcnJvcih5KDM4KSk7cmV0dXJuIHRrKGEsYixjLCExLGQpfTtleHBvcnRzLnZlcnNpb249XCIxNy4wLjJcIjtcbiIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY2hlY2tEQ0UoKSB7XG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbiAgaWYgKFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gPT09ICd1bmRlZmluZWQnIHx8XG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTcuMC4yXG4gKiByZWFjdC5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4ndXNlIHN0cmljdCc7dmFyIGw9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj02MDEwMyxwPTYwMTA2O2V4cG9ydHMuRnJhZ21lbnQ9NjAxMDc7ZXhwb3J0cy5TdHJpY3RNb2RlPTYwMTA4O2V4cG9ydHMuUHJvZmlsZXI9NjAxMTQ7dmFyIHE9NjAxMDkscj02MDExMCx0PTYwMTEyO2V4cG9ydHMuU3VzcGVuc2U9NjAxMTM7dmFyIHU9NjAxMTUsdj02MDExNjtcbmlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3Ipe3ZhciB3PVN5bWJvbC5mb3I7bj13KFwicmVhY3QuZWxlbWVudFwiKTtwPXcoXCJyZWFjdC5wb3J0YWxcIik7ZXhwb3J0cy5GcmFnbWVudD13KFwicmVhY3QuZnJhZ21lbnRcIik7ZXhwb3J0cy5TdHJpY3RNb2RlPXcoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTtleHBvcnRzLlByb2ZpbGVyPXcoXCJyZWFjdC5wcm9maWxlclwiKTtxPXcoXCJyZWFjdC5wcm92aWRlclwiKTtyPXcoXCJyZWFjdC5jb250ZXh0XCIpO3Q9dyhcInJlYWN0LmZvcndhcmRfcmVmXCIpO2V4cG9ydHMuU3VzcGVuc2U9dyhcInJlYWN0LnN1c3BlbnNlXCIpO3U9dyhcInJlYWN0Lm1lbW9cIik7dj13KFwicmVhY3QubGF6eVwiKX12YXIgeD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7XG5mdW5jdGlvbiB5KGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT14JiZhW3hdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9ZnVuY3Rpb24geihhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn1cbnZhciBBPXtpc01vdW50ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oKXt9fSxCPXt9O2Z1bmN0aW9uIEMoYSxiLGMpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9Qjt0aGlzLnVwZGF0ZXI9Y3x8QX1DLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PXt9O0MucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKGEsYil7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmbnVsbCE9YSl0aHJvdyBFcnJvcih6KDg1KSk7dGhpcy51cGRhdGVyLmVucXVldWVTZXRTdGF0ZSh0aGlzLGEsYixcInNldFN0YXRlXCIpfTtDLnByb3RvdHlwZS5mb3JjZVVwZGF0ZT1mdW5jdGlvbihhKXt0aGlzLnVwZGF0ZXIuZW5xdWV1ZUZvcmNlVXBkYXRlKHRoaXMsYSxcImZvcmNlVXBkYXRlXCIpfTtcbmZ1bmN0aW9uIEQoKXt9RC5wcm90b3R5cGU9Qy5wcm90b3R5cGU7ZnVuY3Rpb24gRShhLGIsYyl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1CO3RoaXMudXBkYXRlcj1jfHxBfXZhciBGPUUucHJvdG90eXBlPW5ldyBEO0YuY29uc3RydWN0b3I9RTtsKEYsQy5wcm90b3R5cGUpO0YuaXNQdXJlUmVhY3RDb21wb25lbnQ9ITA7dmFyIEc9e2N1cnJlbnQ6bnVsbH0sSD1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LEk9e2tleTohMCxyZWY6ITAsX19zZWxmOiEwLF9fc291cmNlOiEwfTtcbmZ1bmN0aW9uIEooYSxiLGMpe3ZhciBlLGQ9e30saz1udWxsLGg9bnVsbDtpZihudWxsIT1iKWZvcihlIGluIHZvaWQgMCE9PWIucmVmJiYoaD1iLnJlZiksdm9pZCAwIT09Yi5rZXkmJihrPVwiXCIrYi5rZXkpLGIpSC5jYWxsKGIsZSkmJiFJLmhhc093blByb3BlcnR5KGUpJiYoZFtlXT1iW2VdKTt2YXIgZz1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWcpZC5jaGlsZHJlbj1jO2Vsc2UgaWYoMTxnKXtmb3IodmFyIGY9QXJyYXkoZyksbT0wO208ZzttKyspZlttXT1hcmd1bWVudHNbbSsyXTtkLmNoaWxkcmVuPWZ9aWYoYSYmYS5kZWZhdWx0UHJvcHMpZm9yKGUgaW4gZz1hLmRlZmF1bHRQcm9wcyxnKXZvaWQgMD09PWRbZV0mJihkW2VdPWdbZV0pO3JldHVybnskJHR5cGVvZjpuLHR5cGU6YSxrZXk6ayxyZWY6aCxwcm9wczpkLF9vd25lcjpHLmN1cnJlbnR9fVxuZnVuY3Rpb24gSyhhLGIpe3JldHVybnskJHR5cGVvZjpuLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn19ZnVuY3Rpb24gTChhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09bn1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiK2EucmVwbGFjZSgvWz06XS9nLGZ1bmN0aW9uKGEpe3JldHVybiBiW2FdfSl9dmFyIE09L1xcLysvZztmdW5jdGlvbiBOKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKFwiXCIrYS5rZXkpOmIudG9TdHJpbmcoMzYpfVxuZnVuY3Rpb24gTyhhLGIsYyxlLGQpe3ZhciBrPXR5cGVvZiBhO2lmKFwidW5kZWZpbmVkXCI9PT1rfHxcImJvb2xlYW5cIj09PWspYT1udWxsO3ZhciBoPSExO2lmKG51bGw9PT1hKWg9ITA7ZWxzZSBzd2l0Y2goayl7Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJudW1iZXJcIjpoPSEwO2JyZWFrO2Nhc2UgXCJvYmplY3RcIjpzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBuOmNhc2UgcDpoPSEwfX1pZihoKXJldHVybiBoPWEsZD1kKGgpLGE9XCJcIj09PWU/XCIuXCIrTihoLDApOmUsQXJyYXkuaXNBcnJheShkKT8oYz1cIlwiLG51bGwhPWEmJihjPWEucmVwbGFjZShNLFwiJCYvXCIpK1wiL1wiKSxPKGQsYixjLFwiXCIsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KSk6bnVsbCE9ZCYmKEwoZCkmJihkPUsoZCxjKyghZC5rZXl8fGgmJmgua2V5PT09ZC5rZXk/XCJcIjooXCJcIitkLmtleSkucmVwbGFjZShNLFwiJCYvXCIpK1wiL1wiKSthKSksYi5wdXNoKGQpKSwxO2g9MDtlPVwiXCI9PT1lP1wiLlwiOmUrXCI6XCI7aWYoQXJyYXkuaXNBcnJheShhKSlmb3IodmFyIGc9XG4wO2c8YS5sZW5ndGg7ZysrKXtrPWFbZ107dmFyIGY9ZStOKGssZyk7aCs9TyhrLGIsYyxmLGQpfWVsc2UgaWYoZj15KGEpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmKWZvcihhPWYuY2FsbChhKSxnPTA7IShrPWEubmV4dCgpKS5kb25lOylrPWsudmFsdWUsZj1lK04oayxnKyspLGgrPU8oayxiLGMsZixkKTtlbHNlIGlmKFwib2JqZWN0XCI9PT1rKXRocm93IGI9XCJcIithLEVycm9yKHooMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PWI/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6YikpO3JldHVybiBofWZ1bmN0aW9uIFAoYSxiLGMpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGU9W10sZD0wO08oYSxlLFwiXCIsXCJcIixmdW5jdGlvbihhKXtyZXR1cm4gYi5jYWxsKGMsYSxkKyspfSk7cmV0dXJuIGV9XG5mdW5jdGlvbiBRKGEpe2lmKC0xPT09YS5fc3RhdHVzKXt2YXIgYj1hLl9yZXN1bHQ7Yj1iKCk7YS5fc3RhdHVzPTA7YS5fcmVzdWx0PWI7Yi50aGVuKGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihiPWIuZGVmYXVsdCxhLl9zdGF0dXM9MSxhLl9yZXN1bHQ9Yil9LGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihhLl9zdGF0dXM9MixhLl9yZXN1bHQ9Yil9KX1pZigxPT09YS5fc3RhdHVzKXJldHVybiBhLl9yZXN1bHQ7dGhyb3cgYS5fcmVzdWx0O312YXIgUj17Y3VycmVudDpudWxsfTtmdW5jdGlvbiBTKCl7dmFyIGE9Ui5jdXJyZW50O2lmKG51bGw9PT1hKXRocm93IEVycm9yKHooMzIxKSk7cmV0dXJuIGF9dmFyIFQ9e1JlYWN0Q3VycmVudERpc3BhdGNoZXI6UixSZWFjdEN1cnJlbnRCYXRjaENvbmZpZzp7dHJhbnNpdGlvbjowfSxSZWFjdEN1cnJlbnRPd25lcjpHLElzU29tZVJlbmRlcmVyQWN0aW5nOntjdXJyZW50OiExfSxhc3NpZ246bH07XG5leHBvcnRzLkNoaWxkcmVuPXttYXA6UCxmb3JFYWNoOmZ1bmN0aW9uKGEsYixjKXtQKGEsZnVuY3Rpb24oKXtiLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sYyl9LGNvdW50OmZ1bmN0aW9uKGEpe3ZhciBiPTA7UChhLGZ1bmN0aW9uKCl7YisrfSk7cmV0dXJuIGJ9LHRvQXJyYXk6ZnVuY3Rpb24oYSl7cmV0dXJuIFAoYSxmdW5jdGlvbihhKXtyZXR1cm4gYX0pfHxbXX0sb25seTpmdW5jdGlvbihhKXtpZighTChhKSl0aHJvdyBFcnJvcih6KDE0MykpO3JldHVybiBhfX07ZXhwb3J0cy5Db21wb25lbnQ9QztleHBvcnRzLlB1cmVDb21wb25lbnQ9RTtleHBvcnRzLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEPVQ7XG5leHBvcnRzLmNsb25lRWxlbWVudD1mdW5jdGlvbihhLGIsYyl7aWYobnVsbD09PWF8fHZvaWQgMD09PWEpdGhyb3cgRXJyb3IoeigyNjcsYSkpO3ZhciBlPWwoe30sYS5wcm9wcyksZD1hLmtleSxrPWEucmVmLGg9YS5fb3duZXI7aWYobnVsbCE9Yil7dm9pZCAwIT09Yi5yZWYmJihrPWIucmVmLGg9Ry5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGQ9XCJcIitiLmtleSk7aWYoYS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzKXZhciBnPWEudHlwZS5kZWZhdWx0UHJvcHM7Zm9yKGYgaW4gYilILmNhbGwoYixmKSYmIUkuaGFzT3duUHJvcGVydHkoZikmJihlW2ZdPXZvaWQgMD09PWJbZl0mJnZvaWQgMCE9PWc/Z1tmXTpiW2ZdKX12YXIgZj1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWYpZS5jaGlsZHJlbj1jO2Vsc2UgaWYoMTxmKXtnPUFycmF5KGYpO2Zvcih2YXIgbT0wO208ZjttKyspZ1ttXT1hcmd1bWVudHNbbSsyXTtlLmNoaWxkcmVuPWd9cmV0dXJueyQkdHlwZW9mOm4sdHlwZTphLnR5cGUsXG5rZXk6ZCxyZWY6ayxwcm9wczplLF9vd25lcjpofX07ZXhwb3J0cy5jcmVhdGVDb250ZXh0PWZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9bnVsbCk7YT17JCR0eXBlb2Y6cixfY2FsY3VsYXRlQ2hhbmdlZEJpdHM6YixfY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfdGhyZWFkQ291bnQ6MCxQcm92aWRlcjpudWxsLENvbnN1bWVyOm51bGx9O2EuUHJvdmlkZXI9eyQkdHlwZW9mOnEsX2NvbnRleHQ6YX07cmV0dXJuIGEuQ29uc3VtZXI9YX07ZXhwb3J0cy5jcmVhdGVFbGVtZW50PUo7ZXhwb3J0cy5jcmVhdGVGYWN0b3J5PWZ1bmN0aW9uKGEpe3ZhciBiPUouYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifTtleHBvcnRzLmNyZWF0ZVJlZj1mdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fTtleHBvcnRzLmZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOnQscmVuZGVyOmF9fTtleHBvcnRzLmlzVmFsaWRFbGVtZW50PUw7XG5leHBvcnRzLmxhenk9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOnYsX3BheWxvYWQ6e19zdGF0dXM6LTEsX3Jlc3VsdDphfSxfaW5pdDpRfX07ZXhwb3J0cy5tZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJueyQkdHlwZW9mOnUsdHlwZTphLGNvbXBhcmU6dm9pZCAwPT09Yj9udWxsOmJ9fTtleHBvcnRzLnVzZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VDYWxsYmFjayhhLGIpfTtleHBvcnRzLnVzZUNvbnRleHQ9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZUNvbnRleHQoYSxiKX07ZXhwb3J0cy51c2VEZWJ1Z1ZhbHVlPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVzZUVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlRWZmZWN0KGEsYil9O2V4cG9ydHMudXNlSW1wZXJhdGl2ZUhhbmRsZT1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIFMoKS51c2VJbXBlcmF0aXZlSGFuZGxlKGEsYixjKX07XG5leHBvcnRzLnVzZUxheW91dEVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlTGF5b3V0RWZmZWN0KGEsYil9O2V4cG9ydHMudXNlTWVtbz1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlTWVtbyhhLGIpfTtleHBvcnRzLnVzZVJlZHVjZXI9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBTKCkudXNlUmVkdWNlcihhLGIsYyl9O2V4cG9ydHMudXNlUmVmPWZ1bmN0aW9uKGEpe3JldHVybiBTKCkudXNlUmVmKGEpfTtleHBvcnRzLnVzZVN0YXRlPWZ1bmN0aW9uKGEpe3JldHVybiBTKCkudXNlU3RhdGUoYSl9O2V4cG9ydHMudmVyc2lvbj1cIjE3LjAuMlwiO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjAuMjAuMlxuICogc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbid1c2Ugc3RyaWN0Jzt2YXIgZixnLGgsaztpZihcIm9iamVjdFwiPT09dHlwZW9mIHBlcmZvcm1hbmNlJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgcGVyZm9ybWFuY2Uubm93KXt2YXIgbD1wZXJmb3JtYW5jZTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBsLm5vdygpfX1lbHNle3ZhciBwPURhdGUscT1wLm5vdygpO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIHAubm93KCktcX19XG5pZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJmdW5jdGlvblwiIT09dHlwZW9mIE1lc3NhZ2VDaGFubmVsKXt2YXIgdD1udWxsLHU9bnVsbCx3PWZ1bmN0aW9uKCl7aWYobnVsbCE9PXQpdHJ5e3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7dCghMCxhKTt0PW51bGx9Y2F0Y2goYil7dGhyb3cgc2V0VGltZW91dCh3LDApLGI7fX07Zj1mdW5jdGlvbihhKXtudWxsIT09dD9zZXRUaW1lb3V0KGYsMCxhKToodD1hLHNldFRpbWVvdXQodywwKSl9O2c9ZnVuY3Rpb24oYSxiKXt1PXNldFRpbWVvdXQoYSxiKX07aD1mdW5jdGlvbigpe2NsZWFyVGltZW91dCh1KX07ZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZD1mdW5jdGlvbigpe3JldHVybiExfTtrPWV4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oKXt9fWVsc2V7dmFyIHg9d2luZG93LnNldFRpbWVvdXQseT13aW5kb3cuY2xlYXJUaW1lb3V0O2lmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgY29uc29sZSl7dmFyIHo9XG53aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWU7XCJmdW5jdGlvblwiIT09dHlwZW9mIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUmJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IHJlcXVlc3RBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9yZWFjdGpzLm9yZy9saW5rL3JlYWN0LXBvbHlmaWxsc1wiKTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgeiYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgY2FuY2VsQW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vcmVhY3Rqcy5vcmcvbGluay9yZWFjdC1wb2x5ZmlsbHNcIil9dmFyIEE9ITEsQj1udWxsLEM9LTEsRD01LEU9MDtleHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7cmV0dXJuIGV4cG9ydHMudW5zdGFibGVfbm93KCk+PVxuRX07az1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbihhKXswPmF8fDEyNTxhP2NvbnNvbGUuZXJyb3IoXCJmb3JjZUZyYW1lUmF0ZSB0YWtlcyBhIHBvc2l0aXZlIGludCBiZXR3ZWVuIDAgYW5kIDEyNSwgZm9yY2luZyBmcmFtZSByYXRlcyBoaWdoZXIgdGhhbiAxMjUgZnBzIGlzIG5vdCBzdXBwb3J0ZWRcIik6RD0wPGE/TWF0aC5mbG9vcigxRTMvYSk6NX07dmFyIEY9bmV3IE1lc3NhZ2VDaGFubmVsLEc9Ri5wb3J0MjtGLnBvcnQxLm9ubWVzc2FnZT1mdW5jdGlvbigpe2lmKG51bGwhPT1CKXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO0U9YStEO3RyeXtCKCEwLGEpP0cucG9zdE1lc3NhZ2UobnVsbCk6KEE9ITEsQj1udWxsKX1jYXRjaChiKXt0aHJvdyBHLnBvc3RNZXNzYWdlKG51bGwpLGI7fX1lbHNlIEE9ITF9O2Y9ZnVuY3Rpb24oYSl7Qj1hO0F8fChBPSEwLEcucG9zdE1lc3NhZ2UobnVsbCkpfTtnPWZ1bmN0aW9uKGEsYil7Qz1cbngoZnVuY3Rpb24oKXthKGV4cG9ydHMudW5zdGFibGVfbm93KCkpfSxiKX07aD1mdW5jdGlvbigpe3koQyk7Qz0tMX19ZnVuY3Rpb24gSChhLGIpe3ZhciBjPWEubGVuZ3RoO2EucHVzaChiKTthOmZvcig7Oyl7dmFyIGQ9Yy0xPj4+MSxlPWFbZF07aWYodm9pZCAwIT09ZSYmMDxJKGUsYikpYVtkXT1iLGFbY109ZSxjPWQ7ZWxzZSBicmVhayBhfX1mdW5jdGlvbiBKKGEpe2E9YVswXTtyZXR1cm4gdm9pZCAwPT09YT9udWxsOmF9XG5mdW5jdGlvbiBLKGEpe3ZhciBiPWFbMF07aWYodm9pZCAwIT09Yil7dmFyIGM9YS5wb3AoKTtpZihjIT09Yil7YVswXT1jO2E6Zm9yKHZhciBkPTAsZT1hLmxlbmd0aDtkPGU7KXt2YXIgbT0yKihkKzEpLTEsbj1hW21dLHY9bSsxLHI9YVt2XTtpZih2b2lkIDAhPT1uJiYwPkkobixjKSl2b2lkIDAhPT1yJiYwPkkocixuKT8oYVtkXT1yLGFbdl09YyxkPXYpOihhW2RdPW4sYVttXT1jLGQ9bSk7ZWxzZSBpZih2b2lkIDAhPT1yJiYwPkkocixjKSlhW2RdPXIsYVt2XT1jLGQ9djtlbHNlIGJyZWFrIGF9fXJldHVybiBifXJldHVybiBudWxsfWZ1bmN0aW9uIEkoYSxiKXt2YXIgYz1hLnNvcnRJbmRleC1iLnNvcnRJbmRleDtyZXR1cm4gMCE9PWM/YzphLmlkLWIuaWR9dmFyIEw9W10sTT1bXSxOPTEsTz1udWxsLFA9MyxRPSExLFI9ITEsUz0hMTtcbmZ1bmN0aW9uIFQoYSl7Zm9yKHZhciBiPUooTSk7bnVsbCE9PWI7KXtpZihudWxsPT09Yi5jYWxsYmFjaylLKE0pO2Vsc2UgaWYoYi5zdGFydFRpbWU8PWEpSyhNKSxiLnNvcnRJbmRleD1iLmV4cGlyYXRpb25UaW1lLEgoTCxiKTtlbHNlIGJyZWFrO2I9SihNKX19ZnVuY3Rpb24gVShhKXtTPSExO1QoYSk7aWYoIVIpaWYobnVsbCE9PUooTCkpUj0hMCxmKFYpO2Vsc2V7dmFyIGI9SihNKTtudWxsIT09YiYmZyhVLGIuc3RhcnRUaW1lLWEpfX1cbmZ1bmN0aW9uIFYoYSxiKXtSPSExO1MmJihTPSExLGgoKSk7UT0hMDt2YXIgYz1QO3RyeXtUKGIpO2ZvcihPPUooTCk7bnVsbCE9PU8mJighKE8uZXhwaXJhdGlvblRpbWU+Yil8fGEmJiFleHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkKCkpOyl7dmFyIGQ9Ty5jYWxsYmFjaztpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7Ty5jYWxsYmFjaz1udWxsO1A9Ty5wcmlvcml0eUxldmVsO3ZhciBlPWQoTy5leHBpcmF0aW9uVGltZTw9Yik7Yj1leHBvcnRzLnVuc3RhYmxlX25vdygpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlP08uY2FsbGJhY2s9ZTpPPT09SihMKSYmSyhMKTtUKGIpfWVsc2UgSyhMKTtPPUooTCl9aWYobnVsbCE9PU8pdmFyIG09ITA7ZWxzZXt2YXIgbj1KKE0pO251bGwhPT1uJiZnKFUsbi5zdGFydFRpbWUtYik7bT0hMX1yZXR1cm4gbX1maW5hbGx5e089bnVsbCxQPWMsUT0hMX19dmFyIFc9aztleHBvcnRzLnVuc3RhYmxlX0lkbGVQcmlvcml0eT01O1xuZXhwb3J0cy51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eT0xO2V4cG9ydHMudW5zdGFibGVfTG93UHJpb3JpdHk9NDtleHBvcnRzLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5PTM7ZXhwb3J0cy51bnN0YWJsZV9Qcm9maWxpbmc9bnVsbDtleHBvcnRzLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5PTI7ZXhwb3J0cy51bnN0YWJsZV9jYW5jZWxDYWxsYmFjaz1mdW5jdGlvbihhKXthLmNhbGxiYWNrPW51bGx9O2V4cG9ydHMudW5zdGFibGVfY29udGludWVFeGVjdXRpb249ZnVuY3Rpb24oKXtSfHxRfHwoUj0hMCxmKFYpKX07ZXhwb3J0cy51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbD1mdW5jdGlvbigpe3JldHVybiBQfTtleHBvcnRzLnVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIEooTCl9O1xuZXhwb3J0cy51bnN0YWJsZV9uZXh0PWZ1bmN0aW9uKGEpe3N3aXRjaChQKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzp2YXIgYj0zO2JyZWFrO2RlZmF1bHQ6Yj1QfXZhciBjPVA7UD1iO3RyeXtyZXR1cm4gYSgpfWZpbmFsbHl7UD1jfX07ZXhwb3J0cy51bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbj1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9yZXF1ZXN0UGFpbnQ9VztleHBvcnRzLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eT1mdW5jdGlvbihhLGIpe3N3aXRjaChhKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzpjYXNlIDQ6Y2FzZSA1OmJyZWFrO2RlZmF1bHQ6YT0zfXZhciBjPVA7UD1hO3RyeXtyZXR1cm4gYigpfWZpbmFsbHl7UD1jfX07XG5leHBvcnRzLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWV4cG9ydHMudW5zdGFibGVfbm93KCk7XCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yz8oYz1jLmRlbGF5LGM9XCJudW1iZXJcIj09PXR5cGVvZiBjJiYwPGM/ZCtjOmQpOmM9ZDtzd2l0Y2goYSl7Y2FzZSAxOnZhciBlPS0xO2JyZWFrO2Nhc2UgMjplPTI1MDticmVhaztjYXNlIDU6ZT0xMDczNzQxODIzO2JyZWFrO2Nhc2UgNDplPTFFNDticmVhaztkZWZhdWx0OmU9NUUzfWU9YytlO2E9e2lkOk4rKyxjYWxsYmFjazpiLHByaW9yaXR5TGV2ZWw6YSxzdGFydFRpbWU6YyxleHBpcmF0aW9uVGltZTplLHNvcnRJbmRleDotMX07Yz5kPyhhLnNvcnRJbmRleD1jLEgoTSxhKSxudWxsPT09SihMKSYmYT09PUooTSkmJihTP2goKTpTPSEwLGcoVSxjLWQpKSk6KGEuc29ydEluZGV4PWUsSChMLGEpLFJ8fFF8fChSPSEwLGYoVikpKTtyZXR1cm4gYX07XG5leHBvcnRzLnVuc3RhYmxlX3dyYXBDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj1QO3JldHVybiBmdW5jdGlvbigpe3ZhciBjPVA7UD1iO3RyeXtyZXR1cm4gYS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZmluYWxseXtQPWN9fX07XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcblxuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cblxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG5cbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpOyAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cblxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG5cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG5cbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG5cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuXG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cblxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG5cbiAgY3NzICs9IG9iai5jc3M7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdClcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyY1xuXHRpZiAoIXNjcmlwdFVybCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0aWYoc2NyaXB0cy5sZW5ndGgpIHNjcmlwdFVybCA9IHNjcmlwdHNbc2NyaXB0cy5sZW5ndGggLSAxXS5zcmNcblx0fVxufVxuLy8gV2hlbiBzdXBwb3J0aW5nIGJyb3dzZXJzIHdoZXJlIGFuIGF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQucHVibGljUGF0aCBtYW51YWxseSB2aWEgY29uZmlndXJhdGlvblxuLy8gb3IgcGFzcyBhbiBlbXB0eSBzdHJpbmcgKFwiXCIpIGFuZCBzZXQgdGhlIF9fd2VicGFja19wdWJsaWNfcGF0aF9fIHZhcmlhYmxlIGZyb20geW91ciBjb2RlIHRvIHVzZSB5b3VyIG93biBsb2dpYy5cbmlmICghc2NyaXB0VXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJBdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbnNjcmlwdFVybCA9IHNjcmlwdFVybC5yZXBsYWNlKC8jLiokLywgXCJcIikucmVwbGFjZSgvXFw/LiokLywgXCJcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIi9cIik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBzY3JpcHRVcmw7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5cbi8qKlxyXG4gKiBBY3Rpb25zIHJlcHJlc2VudCB0aGUgdHlwZSBvZiBjaGFuZ2UgdG8gYSBsb2NhdGlvbiB2YWx1ZS5cclxuICpcclxuICogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vcmVtaXgtcnVuL2hpc3RvcnkvdHJlZS9tYWluL2RvY3MvYXBpLXJlZmVyZW5jZS5tZCNhY3Rpb25cclxuICovXG52YXIgQWN0aW9uO1xuXG4oZnVuY3Rpb24gKEFjdGlvbikge1xuICAvKipcclxuICAgKiBBIFBPUCBpbmRpY2F0ZXMgYSBjaGFuZ2UgdG8gYW4gYXJiaXRyYXJ5IGluZGV4IGluIHRoZSBoaXN0b3J5IHN0YWNrLCBzdWNoXHJcbiAgICogYXMgYSBiYWNrIG9yIGZvcndhcmQgbmF2aWdhdGlvbi4gSXQgZG9lcyBub3QgZGVzY3JpYmUgdGhlIGRpcmVjdGlvbiBvZiB0aGVcclxuICAgKiBuYXZpZ2F0aW9uLCBvbmx5IHRoYXQgdGhlIGN1cnJlbnQgaW5kZXggY2hhbmdlZC5cclxuICAgKlxyXG4gICAqIE5vdGU6IFRoaXMgaXMgdGhlIGRlZmF1bHQgYWN0aW9uIGZvciBuZXdseSBjcmVhdGVkIGhpc3Rvcnkgb2JqZWN0cy5cclxuICAgKi9cbiAgQWN0aW9uW1wiUG9wXCJdID0gXCJQT1BcIjtcbiAgLyoqXHJcbiAgICogQSBQVVNIIGluZGljYXRlcyBhIG5ldyBlbnRyeSBiZWluZyBhZGRlZCB0byB0aGUgaGlzdG9yeSBzdGFjaywgc3VjaCBhcyB3aGVuXHJcbiAgICogYSBsaW5rIGlzIGNsaWNrZWQgYW5kIGEgbmV3IHBhZ2UgbG9hZHMuIFdoZW4gdGhpcyBoYXBwZW5zLCBhbGwgc3Vic2VxdWVudFxyXG4gICAqIGVudHJpZXMgaW4gdGhlIHN0YWNrIGFyZSBsb3N0LlxyXG4gICAqL1xuXG4gIEFjdGlvbltcIlB1c2hcIl0gPSBcIlBVU0hcIjtcbiAgLyoqXHJcbiAgICogQSBSRVBMQUNFIGluZGljYXRlcyB0aGUgZW50cnkgYXQgdGhlIGN1cnJlbnQgaW5kZXggaW4gdGhlIGhpc3Rvcnkgc3RhY2tcclxuICAgKiBiZWluZyByZXBsYWNlZCBieSBhIG5ldyBvbmUuXHJcbiAgICovXG5cbiAgQWN0aW9uW1wiUmVwbGFjZVwiXSA9IFwiUkVQTEFDRVwiO1xufSkoQWN0aW9uIHx8IChBY3Rpb24gPSB7fSkpO1xuXG52YXIgcmVhZE9ubHkgPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBmdW5jdGlvbiAob2JqKSB7XG4gIHJldHVybiBPYmplY3QuZnJlZXplKG9iaik7XG59IDogZnVuY3Rpb24gKG9iaikge1xuICByZXR1cm4gb2JqO1xufTtcblxuZnVuY3Rpb24gd2FybmluZyhjb25kLCBtZXNzYWdlKSB7XG4gIGlmICghY29uZCkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJykgY29uc29sZS53YXJuKG1lc3NhZ2UpO1xuXG4gICAgdHJ5IHtcbiAgICAgIC8vIFdlbGNvbWUgdG8gZGVidWdnaW5nIGhpc3RvcnkhXG4gICAgICAvL1xuICAgICAgLy8gVGhpcyBlcnJvciBpcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB5b3UgY2FuIG1vcmUgZWFzaWx5XG4gICAgICAvLyBmaW5kIHRoZSBzb3VyY2UgZm9yIGEgd2FybmluZyB0aGF0IGFwcGVhcnMgaW4gdGhlIGNvbnNvbGUgYnlcbiAgICAgIC8vIGVuYWJsaW5nIFwicGF1c2Ugb24gZXhjZXB0aW9uc1wiIGluIHlvdXIgSmF2YVNjcmlwdCBkZWJ1Z2dlci5cbiAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWVtcHR5XG4gICAgfSBjYXRjaCAoZSkge31cbiAgfVxufVxuXG52YXIgQmVmb3JlVW5sb2FkRXZlbnRUeXBlID0gJ2JlZm9yZXVubG9hZCc7XG52YXIgSGFzaENoYW5nZUV2ZW50VHlwZSA9ICdoYXNoY2hhbmdlJztcbnZhciBQb3BTdGF0ZUV2ZW50VHlwZSA9ICdwb3BzdGF0ZSc7XG4vKipcclxuICogQnJvd3NlciBoaXN0b3J5IHN0b3JlcyB0aGUgbG9jYXRpb24gaW4gcmVndWxhciBVUkxzLiBUaGlzIGlzIHRoZSBzdGFuZGFyZCBmb3JcclxuICogbW9zdCB3ZWIgYXBwcywgYnV0IGl0IHJlcXVpcmVzIHNvbWUgY29uZmlndXJhdGlvbiBvbiB0aGUgc2VydmVyIHRvIGVuc3VyZSB5b3VcclxuICogc2VydmUgdGhlIHNhbWUgYXBwIGF0IG11bHRpcGxlIFVSTHMuXHJcbiAqXHJcbiAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3JlbWl4LXJ1bi9oaXN0b3J5L3RyZWUvbWFpbi9kb2NzL2FwaS1yZWZlcmVuY2UubWQjY3JlYXRlYnJvd3Nlcmhpc3RvcnlcclxuICovXG5cbmZ1bmN0aW9uIGNyZWF0ZUJyb3dzZXJIaXN0b3J5KG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuXG4gIHZhciBfb3B0aW9ucyA9IG9wdGlvbnMsXG4gICAgICBfb3B0aW9ucyR3aW5kb3cgPSBfb3B0aW9ucy53aW5kb3csXG4gICAgICB3aW5kb3cgPSBfb3B0aW9ucyR3aW5kb3cgPT09IHZvaWQgMCA/IGRvY3VtZW50LmRlZmF1bHRWaWV3IDogX29wdGlvbnMkd2luZG93O1xuICB2YXIgZ2xvYmFsSGlzdG9yeSA9IHdpbmRvdy5oaXN0b3J5O1xuXG4gIGZ1bmN0aW9uIGdldEluZGV4QW5kTG9jYXRpb24oKSB7XG4gICAgdmFyIF93aW5kb3ckbG9jYXRpb24gPSB3aW5kb3cubG9jYXRpb24sXG4gICAgICAgIHBhdGhuYW1lID0gX3dpbmRvdyRsb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgICAgc2VhcmNoID0gX3dpbmRvdyRsb2NhdGlvbi5zZWFyY2gsXG4gICAgICAgIGhhc2ggPSBfd2luZG93JGxvY2F0aW9uLmhhc2g7XG4gICAgdmFyIHN0YXRlID0gZ2xvYmFsSGlzdG9yeS5zdGF0ZSB8fCB7fTtcbiAgICByZXR1cm4gW3N0YXRlLmlkeCwgcmVhZE9ubHkoe1xuICAgICAgcGF0aG5hbWU6IHBhdGhuYW1lLFxuICAgICAgc2VhcmNoOiBzZWFyY2gsXG4gICAgICBoYXNoOiBoYXNoLFxuICAgICAgc3RhdGU6IHN0YXRlLnVzciB8fCBudWxsLFxuICAgICAga2V5OiBzdGF0ZS5rZXkgfHwgJ2RlZmF1bHQnXG4gICAgfSldO1xuICB9XG5cbiAgdmFyIGJsb2NrZWRQb3BUeCA9IG51bGw7XG5cbiAgZnVuY3Rpb24gaGFuZGxlUG9wKCkge1xuICAgIGlmIChibG9ja2VkUG9wVHgpIHtcbiAgICAgIGJsb2NrZXJzLmNhbGwoYmxvY2tlZFBvcFR4KTtcbiAgICAgIGJsb2NrZWRQb3BUeCA9IG51bGw7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBuZXh0QWN0aW9uID0gQWN0aW9uLlBvcDtcblxuICAgICAgdmFyIF9nZXRJbmRleEFuZExvY2F0aW9uID0gZ2V0SW5kZXhBbmRMb2NhdGlvbigpLFxuICAgICAgICAgIG5leHRJbmRleCA9IF9nZXRJbmRleEFuZExvY2F0aW9uWzBdLFxuICAgICAgICAgIG5leHRMb2NhdGlvbiA9IF9nZXRJbmRleEFuZExvY2F0aW9uWzFdO1xuXG4gICAgICBpZiAoYmxvY2tlcnMubGVuZ3RoKSB7XG4gICAgICAgIGlmIChuZXh0SW5kZXggIT0gbnVsbCkge1xuICAgICAgICAgIHZhciBkZWx0YSA9IGluZGV4IC0gbmV4dEluZGV4O1xuXG4gICAgICAgICAgaWYgKGRlbHRhKSB7XG4gICAgICAgICAgICAvLyBSZXZlcnQgdGhlIFBPUFxuICAgICAgICAgICAgYmxvY2tlZFBvcFR4ID0ge1xuICAgICAgICAgICAgICBhY3Rpb246IG5leHRBY3Rpb24sXG4gICAgICAgICAgICAgIGxvY2F0aW9uOiBuZXh0TG9jYXRpb24sXG4gICAgICAgICAgICAgIHJldHJ5OiBmdW5jdGlvbiByZXRyeSgpIHtcbiAgICAgICAgICAgICAgICBnbyhkZWx0YSAqIC0xKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGdvKGRlbHRhKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gVHJ5aW5nIHRvIFBPUCB0byBhIGxvY2F0aW9uIHdpdGggbm8gaW5kZXguIFdlIGRpZCBub3QgY3JlYXRlXG4gICAgICAgICAgLy8gdGhpcyBsb2NhdGlvbiwgc28gd2UgY2FuJ3QgZWZmZWN0aXZlbHkgYmxvY2sgdGhlIG5hdmlnYXRpb24uXG4gICAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgLy8gVE9ETzogV3JpdGUgdXAgYSBkb2MgdGhhdCBleHBsYWlucyBvdXIgYmxvY2tpbmcgc3RyYXRlZ3kgaW5cbiAgICAgICAgICAvLyBkZXRhaWwgYW5kIGxpbmsgdG8gaXQgaGVyZSBzbyBwZW9wbGUgY2FuIHVuZGVyc3RhbmQgYmV0dGVyIHdoYXRcbiAgICAgICAgICAvLyBpcyBnb2luZyBvbiBhbmQgaG93IHRvIGF2b2lkIGl0LlxuICAgICAgICAgIFwiWW91IGFyZSB0cnlpbmcgdG8gYmxvY2sgYSBQT1AgbmF2aWdhdGlvbiB0byBhIGxvY2F0aW9uIHRoYXQgd2FzIG5vdCBcIiArIFwiY3JlYXRlZCBieSB0aGUgaGlzdG9yeSBsaWJyYXJ5LiBUaGUgYmxvY2sgd2lsbCBmYWlsIHNpbGVudGx5IGluIFwiICsgXCJwcm9kdWN0aW9uLCBidXQgaW4gZ2VuZXJhbCB5b3Ugc2hvdWxkIGRvIGFsbCBuYXZpZ2F0aW9uIHdpdGggdGhlIFwiICsgXCJoaXN0b3J5IGxpYnJhcnkgKGluc3RlYWQgb2YgdXNpbmcgd2luZG93Lmhpc3RvcnkucHVzaFN0YXRlIGRpcmVjdGx5KSBcIiArIFwidG8gYXZvaWQgdGhpcyBzaXR1YXRpb24uXCIpIDogdm9pZCAwO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBhcHBseVR4KG5leHRBY3Rpb24pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFBvcFN0YXRlRXZlbnRUeXBlLCBoYW5kbGVQb3ApO1xuICB2YXIgYWN0aW9uID0gQWN0aW9uLlBvcDtcblxuICB2YXIgX2dldEluZGV4QW5kTG9jYXRpb24yID0gZ2V0SW5kZXhBbmRMb2NhdGlvbigpLFxuICAgICAgaW5kZXggPSBfZ2V0SW5kZXhBbmRMb2NhdGlvbjJbMF0sXG4gICAgICBsb2NhdGlvbiA9IF9nZXRJbmRleEFuZExvY2F0aW9uMlsxXTtcblxuICB2YXIgbGlzdGVuZXJzID0gY3JlYXRlRXZlbnRzKCk7XG4gIHZhciBibG9ja2VycyA9IGNyZWF0ZUV2ZW50cygpO1xuXG4gIGlmIChpbmRleCA9PSBudWxsKSB7XG4gICAgaW5kZXggPSAwO1xuICAgIGdsb2JhbEhpc3RvcnkucmVwbGFjZVN0YXRlKF9leHRlbmRzKHt9LCBnbG9iYWxIaXN0b3J5LnN0YXRlLCB7XG4gICAgICBpZHg6IGluZGV4XG4gICAgfSksICcnKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUhyZWYodG8pIHtcbiAgICByZXR1cm4gdHlwZW9mIHRvID09PSAnc3RyaW5nJyA/IHRvIDogY3JlYXRlUGF0aCh0byk7XG4gIH0gLy8gc3RhdGUgZGVmYXVsdHMgdG8gYG51bGxgIGJlY2F1c2UgYHdpbmRvdy5oaXN0b3J5LnN0YXRlYCBkb2VzXG5cblxuICBmdW5jdGlvbiBnZXROZXh0TG9jYXRpb24odG8sIHN0YXRlKSB7XG4gICAgaWYgKHN0YXRlID09PSB2b2lkIDApIHtcbiAgICAgIHN0YXRlID0gbnVsbDtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVhZE9ubHkoX2V4dGVuZHMoe1xuICAgICAgcGF0aG5hbWU6IGxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgaGFzaDogJycsXG4gICAgICBzZWFyY2g6ICcnXG4gICAgfSwgdHlwZW9mIHRvID09PSAnc3RyaW5nJyA/IHBhcnNlUGF0aCh0bykgOiB0bywge1xuICAgICAgc3RhdGU6IHN0YXRlLFxuICAgICAga2V5OiBjcmVhdGVLZXkoKVxuICAgIH0pKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldEhpc3RvcnlTdGF0ZUFuZFVybChuZXh0TG9jYXRpb24sIGluZGV4KSB7XG4gICAgcmV0dXJuIFt7XG4gICAgICB1c3I6IG5leHRMb2NhdGlvbi5zdGF0ZSxcbiAgICAgIGtleTogbmV4dExvY2F0aW9uLmtleSxcbiAgICAgIGlkeDogaW5kZXhcbiAgICB9LCBjcmVhdGVIcmVmKG5leHRMb2NhdGlvbildO1xuICB9XG5cbiAgZnVuY3Rpb24gYWxsb3dUeChhY3Rpb24sIGxvY2F0aW9uLCByZXRyeSkge1xuICAgIHJldHVybiAhYmxvY2tlcnMubGVuZ3RoIHx8IChibG9ja2Vycy5jYWxsKHtcbiAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgcmV0cnk6IHJldHJ5XG4gICAgfSksIGZhbHNlKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGFwcGx5VHgobmV4dEFjdGlvbikge1xuICAgIGFjdGlvbiA9IG5leHRBY3Rpb247XG5cbiAgICB2YXIgX2dldEluZGV4QW5kTG9jYXRpb24zID0gZ2V0SW5kZXhBbmRMb2NhdGlvbigpO1xuXG4gICAgaW5kZXggPSBfZ2V0SW5kZXhBbmRMb2NhdGlvbjNbMF07XG4gICAgbG9jYXRpb24gPSBfZ2V0SW5kZXhBbmRMb2NhdGlvbjNbMV07XG4gICAgbGlzdGVuZXJzLmNhbGwoe1xuICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHB1c2godG8sIHN0YXRlKSB7XG4gICAgdmFyIG5leHRBY3Rpb24gPSBBY3Rpb24uUHVzaDtcbiAgICB2YXIgbmV4dExvY2F0aW9uID0gZ2V0TmV4dExvY2F0aW9uKHRvLCBzdGF0ZSk7XG5cbiAgICBmdW5jdGlvbiByZXRyeSgpIHtcbiAgICAgIHB1c2godG8sIHN0YXRlKTtcbiAgICB9XG5cbiAgICBpZiAoYWxsb3dUeChuZXh0QWN0aW9uLCBuZXh0TG9jYXRpb24sIHJldHJ5KSkge1xuICAgICAgdmFyIF9nZXRIaXN0b3J5U3RhdGVBbmRVciA9IGdldEhpc3RvcnlTdGF0ZUFuZFVybChuZXh0TG9jYXRpb24sIGluZGV4ICsgMSksXG4gICAgICAgICAgaGlzdG9yeVN0YXRlID0gX2dldEhpc3RvcnlTdGF0ZUFuZFVyWzBdLFxuICAgICAgICAgIHVybCA9IF9nZXRIaXN0b3J5U3RhdGVBbmRVclsxXTsgLy8gVE9ETzogU3VwcG9ydCBmb3JjZWQgcmVsb2FkaW5nXG4gICAgICAvLyB0cnkuLi5jYXRjaCBiZWNhdXNlIGlPUyBsaW1pdHMgdXMgdG8gMTAwIHB1c2hTdGF0ZSBjYWxscyA6L1xuXG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGdsb2JhbEhpc3RvcnkucHVzaFN0YXRlKGhpc3RvcnlTdGF0ZSwgJycsIHVybCk7XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAvLyBUaGV5IGFyZSBnb2luZyB0byBsb3NlIHN0YXRlIGhlcmUsIGJ1dCB0aGVyZSBpcyBubyByZWFsXG4gICAgICAgIC8vIHdheSB0byB3YXJuIHRoZW0gYWJvdXQgaXQgc2luY2UgdGhlIHBhZ2Ugd2lsbCByZWZyZXNoLi4uXG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5hc3NpZ24odXJsKTtcbiAgICAgIH1cblxuICAgICAgYXBwbHlUeChuZXh0QWN0aW9uKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByZXBsYWNlKHRvLCBzdGF0ZSkge1xuICAgIHZhciBuZXh0QWN0aW9uID0gQWN0aW9uLlJlcGxhY2U7XG4gICAgdmFyIG5leHRMb2NhdGlvbiA9IGdldE5leHRMb2NhdGlvbih0bywgc3RhdGUpO1xuXG4gICAgZnVuY3Rpb24gcmV0cnkoKSB7XG4gICAgICByZXBsYWNlKHRvLCBzdGF0ZSk7XG4gICAgfVxuXG4gICAgaWYgKGFsbG93VHgobmV4dEFjdGlvbiwgbmV4dExvY2F0aW9uLCByZXRyeSkpIHtcbiAgICAgIHZhciBfZ2V0SGlzdG9yeVN0YXRlQW5kVXIyID0gZ2V0SGlzdG9yeVN0YXRlQW5kVXJsKG5leHRMb2NhdGlvbiwgaW5kZXgpLFxuICAgICAgICAgIGhpc3RvcnlTdGF0ZSA9IF9nZXRIaXN0b3J5U3RhdGVBbmRVcjJbMF0sXG4gICAgICAgICAgdXJsID0gX2dldEhpc3RvcnlTdGF0ZUFuZFVyMlsxXTsgLy8gVE9ETzogU3VwcG9ydCBmb3JjZWQgcmVsb2FkaW5nXG5cblxuICAgICAgZ2xvYmFsSGlzdG9yeS5yZXBsYWNlU3RhdGUoaGlzdG9yeVN0YXRlLCAnJywgdXJsKTtcbiAgICAgIGFwcGx5VHgobmV4dEFjdGlvbik7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gZ28oZGVsdGEpIHtcbiAgICBnbG9iYWxIaXN0b3J5LmdvKGRlbHRhKTtcbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGdldCBhY3Rpb24oKSB7XG4gICAgICByZXR1cm4gYWN0aW9uO1xuICAgIH0sXG5cbiAgICBnZXQgbG9jYXRpb24oKSB7XG4gICAgICByZXR1cm4gbG9jYXRpb247XG4gICAgfSxcblxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBiYWNrOiBmdW5jdGlvbiBiYWNrKCkge1xuICAgICAgZ28oLTEpO1xuICAgIH0sXG4gICAgZm9yd2FyZDogZnVuY3Rpb24gZm9yd2FyZCgpIHtcbiAgICAgIGdvKDEpO1xuICAgIH0sXG4gICAgbGlzdGVuOiBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICAgIHJldHVybiBsaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gICAgfSxcbiAgICBibG9jazogZnVuY3Rpb24gYmxvY2soYmxvY2tlcikge1xuICAgICAgdmFyIHVuYmxvY2sgPSBibG9ja2Vycy5wdXNoKGJsb2NrZXIpO1xuXG4gICAgICBpZiAoYmxvY2tlcnMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKEJlZm9yZVVubG9hZEV2ZW50VHlwZSwgcHJvbXB0QmVmb3JlVW5sb2FkKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdW5ibG9jaygpOyAvLyBSZW1vdmUgdGhlIGJlZm9yZXVubG9hZCBsaXN0ZW5lciBzbyB0aGUgZG9jdW1lbnQgbWF5XG4gICAgICAgIC8vIHN0aWxsIGJlIHNhbHZhZ2VhYmxlIGluIHRoZSBwYWdlaGlkZSBldmVudC5cbiAgICAgICAgLy8gU2VlIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvI3VubG9hZGluZy1kb2N1bWVudHNcblxuICAgICAgICBpZiAoIWJsb2NrZXJzLmxlbmd0aCkge1xuICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKEJlZm9yZVVubG9hZEV2ZW50VHlwZSwgcHJvbXB0QmVmb3JlVW5sb2FkKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBoaXN0b3J5O1xufVxuLyoqXHJcbiAqIEhhc2ggaGlzdG9yeSBzdG9yZXMgdGhlIGxvY2F0aW9uIGluIHdpbmRvdy5sb2NhdGlvbi5oYXNoLiBUaGlzIG1ha2VzIGl0IGlkZWFsXHJcbiAqIGZvciBzaXR1YXRpb25zIHdoZXJlIHlvdSBkb24ndCB3YW50IHRvIHNlbmQgdGhlIGxvY2F0aW9uIHRvIHRoZSBzZXJ2ZXIgZm9yXHJcbiAqIHNvbWUgcmVhc29uLCBlaXRoZXIgYmVjYXVzZSB5b3UgZG8gY2Fubm90IGNvbmZpZ3VyZSBpdCBvciB0aGUgVVJMIHNwYWNlIGlzXHJcbiAqIHJlc2VydmVkIGZvciBzb21ldGhpbmcgZWxzZS5cclxuICpcclxuICogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vcmVtaXgtcnVuL2hpc3RvcnkvdHJlZS9tYWluL2RvY3MvYXBpLXJlZmVyZW5jZS5tZCNjcmVhdGVoYXNoaGlzdG9yeVxyXG4gKi9cblxuZnVuY3Rpb24gY3JlYXRlSGFzaEhpc3Rvcnkob3B0aW9ucykge1xuICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG5cbiAgdmFyIF9vcHRpb25zMiA9IG9wdGlvbnMsXG4gICAgICBfb3B0aW9uczIkd2luZG93ID0gX29wdGlvbnMyLndpbmRvdyxcbiAgICAgIHdpbmRvdyA9IF9vcHRpb25zMiR3aW5kb3cgPT09IHZvaWQgMCA/IGRvY3VtZW50LmRlZmF1bHRWaWV3IDogX29wdGlvbnMyJHdpbmRvdztcbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcblxuICBmdW5jdGlvbiBnZXRJbmRleEFuZExvY2F0aW9uKCkge1xuICAgIHZhciBfcGFyc2VQYXRoID0gcGFyc2VQYXRoKHdpbmRvdy5sb2NhdGlvbi5oYXNoLnN1YnN0cigxKSksXG4gICAgICAgIF9wYXJzZVBhdGgkcGF0aG5hbWUgPSBfcGFyc2VQYXRoLnBhdGhuYW1lLFxuICAgICAgICBwYXRobmFtZSA9IF9wYXJzZVBhdGgkcGF0aG5hbWUgPT09IHZvaWQgMCA/ICcvJyA6IF9wYXJzZVBhdGgkcGF0aG5hbWUsXG4gICAgICAgIF9wYXJzZVBhdGgkc2VhcmNoID0gX3BhcnNlUGF0aC5zZWFyY2gsXG4gICAgICAgIHNlYXJjaCA9IF9wYXJzZVBhdGgkc2VhcmNoID09PSB2b2lkIDAgPyAnJyA6IF9wYXJzZVBhdGgkc2VhcmNoLFxuICAgICAgICBfcGFyc2VQYXRoJGhhc2ggPSBfcGFyc2VQYXRoLmhhc2gsXG4gICAgICAgIGhhc2ggPSBfcGFyc2VQYXRoJGhhc2ggPT09IHZvaWQgMCA/ICcnIDogX3BhcnNlUGF0aCRoYXNoO1xuXG4gICAgdmFyIHN0YXRlID0gZ2xvYmFsSGlzdG9yeS5zdGF0ZSB8fCB7fTtcbiAgICByZXR1cm4gW3N0YXRlLmlkeCwgcmVhZE9ubHkoe1xuICAgICAgcGF0aG5hbWU6IHBhdGhuYW1lLFxuICAgICAgc2VhcmNoOiBzZWFyY2gsXG4gICAgICBoYXNoOiBoYXNoLFxuICAgICAgc3RhdGU6IHN0YXRlLnVzciB8fCBudWxsLFxuICAgICAga2V5OiBzdGF0ZS5rZXkgfHwgJ2RlZmF1bHQnXG4gICAgfSldO1xuICB9XG5cbiAgdmFyIGJsb2NrZWRQb3BUeCA9IG51bGw7XG5cbiAgZnVuY3Rpb24gaGFuZGxlUG9wKCkge1xuICAgIGlmIChibG9ja2VkUG9wVHgpIHtcbiAgICAgIGJsb2NrZXJzLmNhbGwoYmxvY2tlZFBvcFR4KTtcbiAgICAgIGJsb2NrZWRQb3BUeCA9IG51bGw7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBuZXh0QWN0aW9uID0gQWN0aW9uLlBvcDtcblxuICAgICAgdmFyIF9nZXRJbmRleEFuZExvY2F0aW9uNCA9IGdldEluZGV4QW5kTG9jYXRpb24oKSxcbiAgICAgICAgICBuZXh0SW5kZXggPSBfZ2V0SW5kZXhBbmRMb2NhdGlvbjRbMF0sXG4gICAgICAgICAgbmV4dExvY2F0aW9uID0gX2dldEluZGV4QW5kTG9jYXRpb240WzFdO1xuXG4gICAgICBpZiAoYmxvY2tlcnMubGVuZ3RoKSB7XG4gICAgICAgIGlmIChuZXh0SW5kZXggIT0gbnVsbCkge1xuICAgICAgICAgIHZhciBkZWx0YSA9IGluZGV4IC0gbmV4dEluZGV4O1xuXG4gICAgICAgICAgaWYgKGRlbHRhKSB7XG4gICAgICAgICAgICAvLyBSZXZlcnQgdGhlIFBPUFxuICAgICAgICAgICAgYmxvY2tlZFBvcFR4ID0ge1xuICAgICAgICAgICAgICBhY3Rpb246IG5leHRBY3Rpb24sXG4gICAgICAgICAgICAgIGxvY2F0aW9uOiBuZXh0TG9jYXRpb24sXG4gICAgICAgICAgICAgIHJldHJ5OiBmdW5jdGlvbiByZXRyeSgpIHtcbiAgICAgICAgICAgICAgICBnbyhkZWx0YSAqIC0xKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGdvKGRlbHRhKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gVHJ5aW5nIHRvIFBPUCB0byBhIGxvY2F0aW9uIHdpdGggbm8gaW5kZXguIFdlIGRpZCBub3QgY3JlYXRlXG4gICAgICAgICAgLy8gdGhpcyBsb2NhdGlvbiwgc28gd2UgY2FuJ3QgZWZmZWN0aXZlbHkgYmxvY2sgdGhlIG5hdmlnYXRpb24uXG4gICAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgLy8gVE9ETzogV3JpdGUgdXAgYSBkb2MgdGhhdCBleHBsYWlucyBvdXIgYmxvY2tpbmcgc3RyYXRlZ3kgaW5cbiAgICAgICAgICAvLyBkZXRhaWwgYW5kIGxpbmsgdG8gaXQgaGVyZSBzbyBwZW9wbGUgY2FuIHVuZGVyc3RhbmQgYmV0dGVyXG4gICAgICAgICAgLy8gd2hhdCBpcyBnb2luZyBvbiBhbmQgaG93IHRvIGF2b2lkIGl0LlxuICAgICAgICAgIFwiWW91IGFyZSB0cnlpbmcgdG8gYmxvY2sgYSBQT1AgbmF2aWdhdGlvbiB0byBhIGxvY2F0aW9uIHRoYXQgd2FzIG5vdCBcIiArIFwiY3JlYXRlZCBieSB0aGUgaGlzdG9yeSBsaWJyYXJ5LiBUaGUgYmxvY2sgd2lsbCBmYWlsIHNpbGVudGx5IGluIFwiICsgXCJwcm9kdWN0aW9uLCBidXQgaW4gZ2VuZXJhbCB5b3Ugc2hvdWxkIGRvIGFsbCBuYXZpZ2F0aW9uIHdpdGggdGhlIFwiICsgXCJoaXN0b3J5IGxpYnJhcnkgKGluc3RlYWQgb2YgdXNpbmcgd2luZG93Lmhpc3RvcnkucHVzaFN0YXRlIGRpcmVjdGx5KSBcIiArIFwidG8gYXZvaWQgdGhpcyBzaXR1YXRpb24uXCIpIDogdm9pZCAwO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBhcHBseVR4KG5leHRBY3Rpb24pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFBvcFN0YXRlRXZlbnRUeXBlLCBoYW5kbGVQb3ApOyAvLyBwb3BzdGF0ZSBkb2VzIG5vdCBmaXJlIG9uIGhhc2hjaGFuZ2UgaW4gSUUgMTEgYW5kIG9sZCAodHJpZGVudCkgRWRnZVxuICAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kZS9kb2NzL1dlYi9BUEkvV2luZG93L3BvcHN0YXRlX2V2ZW50XG5cbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50VHlwZSwgZnVuY3Rpb24gKCkge1xuICAgIHZhciBfZ2V0SW5kZXhBbmRMb2NhdGlvbjUgPSBnZXRJbmRleEFuZExvY2F0aW9uKCksXG4gICAgICAgIG5leHRMb2NhdGlvbiA9IF9nZXRJbmRleEFuZExvY2F0aW9uNVsxXTsgLy8gSWdub3JlIGV4dHJhbmVvdXMgaGFzaGNoYW5nZSBldmVudHMuXG5cblxuICAgIGlmIChjcmVhdGVQYXRoKG5leHRMb2NhdGlvbikgIT09IGNyZWF0ZVBhdGgobG9jYXRpb24pKSB7XG4gICAgICBoYW5kbGVQb3AoKTtcbiAgICB9XG4gIH0pO1xuICB2YXIgYWN0aW9uID0gQWN0aW9uLlBvcDtcblxuICB2YXIgX2dldEluZGV4QW5kTG9jYXRpb242ID0gZ2V0SW5kZXhBbmRMb2NhdGlvbigpLFxuICAgICAgaW5kZXggPSBfZ2V0SW5kZXhBbmRMb2NhdGlvbjZbMF0sXG4gICAgICBsb2NhdGlvbiA9IF9nZXRJbmRleEFuZExvY2F0aW9uNlsxXTtcblxuICB2YXIgbGlzdGVuZXJzID0gY3JlYXRlRXZlbnRzKCk7XG4gIHZhciBibG9ja2VycyA9IGNyZWF0ZUV2ZW50cygpO1xuXG4gIGlmIChpbmRleCA9PSBudWxsKSB7XG4gICAgaW5kZXggPSAwO1xuICAgIGdsb2JhbEhpc3RvcnkucmVwbGFjZVN0YXRlKF9leHRlbmRzKHt9LCBnbG9iYWxIaXN0b3J5LnN0YXRlLCB7XG4gICAgICBpZHg6IGluZGV4XG4gICAgfSksICcnKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldEJhc2VIcmVmKCkge1xuICAgIHZhciBiYXNlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYmFzZScpO1xuICAgIHZhciBocmVmID0gJyc7XG5cbiAgICBpZiAoYmFzZSAmJiBiYXNlLmdldEF0dHJpYnV0ZSgnaHJlZicpKSB7XG4gICAgICB2YXIgdXJsID0gd2luZG93LmxvY2F0aW9uLmhyZWY7XG4gICAgICB2YXIgaGFzaEluZGV4ID0gdXJsLmluZGV4T2YoJyMnKTtcbiAgICAgIGhyZWYgPSBoYXNoSW5kZXggPT09IC0xID8gdXJsIDogdXJsLnNsaWNlKDAsIGhhc2hJbmRleCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGhyZWY7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVIcmVmKHRvKSB7XG4gICAgcmV0dXJuIGdldEJhc2VIcmVmKCkgKyAnIycgKyAodHlwZW9mIHRvID09PSAnc3RyaW5nJyA/IHRvIDogY3JlYXRlUGF0aCh0bykpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0TmV4dExvY2F0aW9uKHRvLCBzdGF0ZSkge1xuICAgIGlmIChzdGF0ZSA9PT0gdm9pZCAwKSB7XG4gICAgICBzdGF0ZSA9IG51bGw7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlYWRPbmx5KF9leHRlbmRzKHtcbiAgICAgIHBhdGhuYW1lOiBsb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgIGhhc2g6ICcnLFxuICAgICAgc2VhcmNoOiAnJ1xuICAgIH0sIHR5cGVvZiB0byA9PT0gJ3N0cmluZycgPyBwYXJzZVBhdGgodG8pIDogdG8sIHtcbiAgICAgIHN0YXRlOiBzdGF0ZSxcbiAgICAgIGtleTogY3JlYXRlS2V5KClcbiAgICB9KSk7XG4gIH1cblxuICBmdW5jdGlvbiBnZXRIaXN0b3J5U3RhdGVBbmRVcmwobmV4dExvY2F0aW9uLCBpbmRleCkge1xuICAgIHJldHVybiBbe1xuICAgICAgdXNyOiBuZXh0TG9jYXRpb24uc3RhdGUsXG4gICAgICBrZXk6IG5leHRMb2NhdGlvbi5rZXksXG4gICAgICBpZHg6IGluZGV4XG4gICAgfSwgY3JlYXRlSHJlZihuZXh0TG9jYXRpb24pXTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGFsbG93VHgoYWN0aW9uLCBsb2NhdGlvbiwgcmV0cnkpIHtcbiAgICByZXR1cm4gIWJsb2NrZXJzLmxlbmd0aCB8fCAoYmxvY2tlcnMuY2FsbCh7XG4gICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgIHJldHJ5OiByZXRyeVxuICAgIH0pLCBmYWxzZSk7XG4gIH1cblxuICBmdW5jdGlvbiBhcHBseVR4KG5leHRBY3Rpb24pIHtcbiAgICBhY3Rpb24gPSBuZXh0QWN0aW9uO1xuXG4gICAgdmFyIF9nZXRJbmRleEFuZExvY2F0aW9uNyA9IGdldEluZGV4QW5kTG9jYXRpb24oKTtcblxuICAgIGluZGV4ID0gX2dldEluZGV4QW5kTG9jYXRpb243WzBdO1xuICAgIGxvY2F0aW9uID0gX2dldEluZGV4QW5kTG9jYXRpb243WzFdO1xuICAgIGxpc3RlbmVycy5jYWxsKHtcbiAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBwdXNoKHRvLCBzdGF0ZSkge1xuICAgIHZhciBuZXh0QWN0aW9uID0gQWN0aW9uLlB1c2g7XG4gICAgdmFyIG5leHRMb2NhdGlvbiA9IGdldE5leHRMb2NhdGlvbih0bywgc3RhdGUpO1xuXG4gICAgZnVuY3Rpb24gcmV0cnkoKSB7XG4gICAgICBwdXNoKHRvLCBzdGF0ZSk7XG4gICAgfVxuXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhuZXh0TG9jYXRpb24ucGF0aG5hbWUuY2hhckF0KDApID09PSAnLycsIFwiUmVsYXRpdmUgcGF0aG5hbWVzIGFyZSBub3Qgc3VwcG9ydGVkIGluIGhhc2ggaGlzdG9yeS5wdXNoKFwiICsgSlNPTi5zdHJpbmdpZnkodG8pICsgXCIpXCIpIDogdm9pZCAwO1xuXG4gICAgaWYgKGFsbG93VHgobmV4dEFjdGlvbiwgbmV4dExvY2F0aW9uLCByZXRyeSkpIHtcbiAgICAgIHZhciBfZ2V0SGlzdG9yeVN0YXRlQW5kVXIzID0gZ2V0SGlzdG9yeVN0YXRlQW5kVXJsKG5leHRMb2NhdGlvbiwgaW5kZXggKyAxKSxcbiAgICAgICAgICBoaXN0b3J5U3RhdGUgPSBfZ2V0SGlzdG9yeVN0YXRlQW5kVXIzWzBdLFxuICAgICAgICAgIHVybCA9IF9nZXRIaXN0b3J5U3RhdGVBbmRVcjNbMV07IC8vIFRPRE86IFN1cHBvcnQgZm9yY2VkIHJlbG9hZGluZ1xuICAgICAgLy8gdHJ5Li4uY2F0Y2ggYmVjYXVzZSBpT1MgbGltaXRzIHVzIHRvIDEwMCBwdXNoU3RhdGUgY2FsbHMgOi9cblxuXG4gICAgICB0cnkge1xuICAgICAgICBnbG9iYWxIaXN0b3J5LnB1c2hTdGF0ZShoaXN0b3J5U3RhdGUsICcnLCB1cmwpO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgLy8gVGhleSBhcmUgZ29pbmcgdG8gbG9zZSBzdGF0ZSBoZXJlLCBidXQgdGhlcmUgaXMgbm8gcmVhbFxuICAgICAgICAvLyB3YXkgdG8gd2FybiB0aGVtIGFib3V0IGl0IHNpbmNlIHRoZSBwYWdlIHdpbGwgcmVmcmVzaC4uLlxuICAgICAgICB3aW5kb3cubG9jYXRpb24uYXNzaWduKHVybCk7XG4gICAgICB9XG5cbiAgICAgIGFwcGx5VHgobmV4dEFjdGlvbik7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZSh0bywgc3RhdGUpIHtcbiAgICB2YXIgbmV4dEFjdGlvbiA9IEFjdGlvbi5SZXBsYWNlO1xuICAgIHZhciBuZXh0TG9jYXRpb24gPSBnZXROZXh0TG9jYXRpb24odG8sIHN0YXRlKTtcblxuICAgIGZ1bmN0aW9uIHJldHJ5KCkge1xuICAgICAgcmVwbGFjZSh0bywgc3RhdGUpO1xuICAgIH1cblxuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcobmV4dExvY2F0aW9uLnBhdGhuYW1lLmNoYXJBdCgwKSA9PT0gJy8nLCBcIlJlbGF0aXZlIHBhdGhuYW1lcyBhcmUgbm90IHN1cHBvcnRlZCBpbiBoYXNoIGhpc3RvcnkucmVwbGFjZShcIiArIEpTT04uc3RyaW5naWZ5KHRvKSArIFwiKVwiKSA6IHZvaWQgMDtcblxuICAgIGlmIChhbGxvd1R4KG5leHRBY3Rpb24sIG5leHRMb2NhdGlvbiwgcmV0cnkpKSB7XG4gICAgICB2YXIgX2dldEhpc3RvcnlTdGF0ZUFuZFVyNCA9IGdldEhpc3RvcnlTdGF0ZUFuZFVybChuZXh0TG9jYXRpb24sIGluZGV4KSxcbiAgICAgICAgICBoaXN0b3J5U3RhdGUgPSBfZ2V0SGlzdG9yeVN0YXRlQW5kVXI0WzBdLFxuICAgICAgICAgIHVybCA9IF9nZXRIaXN0b3J5U3RhdGVBbmRVcjRbMV07IC8vIFRPRE86IFN1cHBvcnQgZm9yY2VkIHJlbG9hZGluZ1xuXG5cbiAgICAgIGdsb2JhbEhpc3RvcnkucmVwbGFjZVN0YXRlKGhpc3RvcnlTdGF0ZSwgJycsIHVybCk7XG4gICAgICBhcHBseVR4KG5leHRBY3Rpb24pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGdvKGRlbHRhKSB7XG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhkZWx0YSk7XG4gIH1cblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBnZXQgYWN0aW9uKCkge1xuICAgICAgcmV0dXJuIGFjdGlvbjtcbiAgICB9LFxuXG4gICAgZ2V0IGxvY2F0aW9uKCkge1xuICAgICAgcmV0dXJuIGxvY2F0aW9uO1xuICAgIH0sXG5cbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgYmFjazogZnVuY3Rpb24gYmFjaygpIHtcbiAgICAgIGdvKC0xKTtcbiAgICB9LFxuICAgIGZvcndhcmQ6IGZ1bmN0aW9uIGZvcndhcmQoKSB7XG4gICAgICBnbygxKTtcbiAgICB9LFxuICAgIGxpc3RlbjogZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgICByZXR1cm4gbGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuICAgIH0sXG4gICAgYmxvY2s6IGZ1bmN0aW9uIGJsb2NrKGJsb2NrZXIpIHtcbiAgICAgIHZhciB1bmJsb2NrID0gYmxvY2tlcnMucHVzaChibG9ja2VyKTtcblxuICAgICAgaWYgKGJsb2NrZXJzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihCZWZvcmVVbmxvYWRFdmVudFR5cGUsIHByb21wdEJlZm9yZVVubG9hZCk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHVuYmxvY2soKTsgLy8gUmVtb3ZlIHRoZSBiZWZvcmV1bmxvYWQgbGlzdGVuZXIgc28gdGhlIGRvY3VtZW50IG1heVxuICAgICAgICAvLyBzdGlsbCBiZSBzYWx2YWdlYWJsZSBpbiB0aGUgcGFnZWhpZGUgZXZlbnQuXG4gICAgICAgIC8vIFNlZSBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnLyN1bmxvYWRpbmctZG9jdW1lbnRzXG5cbiAgICAgICAgaWYgKCFibG9ja2Vycy5sZW5ndGgpIHtcbiAgICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihCZWZvcmVVbmxvYWRFdmVudFR5cGUsIHByb21wdEJlZm9yZVVubG9hZCk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfVxuICB9O1xuICByZXR1cm4gaGlzdG9yeTtcbn1cbi8qKlxyXG4gKiBNZW1vcnkgaGlzdG9yeSBzdG9yZXMgdGhlIGN1cnJlbnQgbG9jYXRpb24gaW4gbWVtb3J5LiBJdCBpcyBkZXNpZ25lZCBmb3IgdXNlXHJcbiAqIGluIHN0YXRlZnVsIG5vbi1icm93c2VyIGVudmlyb25tZW50cyBsaWtlIHRlc3RzIGFuZCBSZWFjdCBOYXRpdmUuXHJcbiAqXHJcbiAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3JlbWl4LXJ1bi9oaXN0b3J5L3RyZWUvbWFpbi9kb2NzL2FwaS1yZWZlcmVuY2UubWQjY3JlYXRlbWVtb3J5aGlzdG9yeVxyXG4gKi9cblxuZnVuY3Rpb24gY3JlYXRlTWVtb3J5SGlzdG9yeShvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cblxuICB2YXIgX29wdGlvbnMzID0gb3B0aW9ucyxcbiAgICAgIF9vcHRpb25zMyRpbml0aWFsRW50ciA9IF9vcHRpb25zMy5pbml0aWFsRW50cmllcyxcbiAgICAgIGluaXRpYWxFbnRyaWVzID0gX29wdGlvbnMzJGluaXRpYWxFbnRyID09PSB2b2lkIDAgPyBbJy8nXSA6IF9vcHRpb25zMyRpbml0aWFsRW50cixcbiAgICAgIGluaXRpYWxJbmRleCA9IF9vcHRpb25zMy5pbml0aWFsSW5kZXg7XG4gIHZhciBlbnRyaWVzID0gaW5pdGlhbEVudHJpZXMubWFwKGZ1bmN0aW9uIChlbnRyeSkge1xuICAgIHZhciBsb2NhdGlvbiA9IHJlYWRPbmx5KF9leHRlbmRzKHtcbiAgICAgIHBhdGhuYW1lOiAnLycsXG4gICAgICBzZWFyY2g6ICcnLFxuICAgICAgaGFzaDogJycsXG4gICAgICBzdGF0ZTogbnVsbCxcbiAgICAgIGtleTogY3JlYXRlS2V5KClcbiAgICB9LCB0eXBlb2YgZW50cnkgPT09ICdzdHJpbmcnID8gcGFyc2VQYXRoKGVudHJ5KSA6IGVudHJ5KSk7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhsb2NhdGlvbi5wYXRobmFtZS5jaGFyQXQoMCkgPT09ICcvJywgXCJSZWxhdGl2ZSBwYXRobmFtZXMgYXJlIG5vdCBzdXBwb3J0ZWQgaW4gY3JlYXRlTWVtb3J5SGlzdG9yeSh7IGluaXRpYWxFbnRyaWVzIH0pIChpbnZhbGlkIGVudHJ5OiBcIiArIEpTT04uc3RyaW5naWZ5KGVudHJ5KSArIFwiKVwiKSA6IHZvaWQgMDtcbiAgICByZXR1cm4gbG9jYXRpb247XG4gIH0pO1xuICB2YXIgaW5kZXggPSBjbGFtcChpbml0aWFsSW5kZXggPT0gbnVsbCA/IGVudHJpZXMubGVuZ3RoIC0gMSA6IGluaXRpYWxJbmRleCwgMCwgZW50cmllcy5sZW5ndGggLSAxKTtcbiAgdmFyIGFjdGlvbiA9IEFjdGlvbi5Qb3A7XG4gIHZhciBsb2NhdGlvbiA9IGVudHJpZXNbaW5kZXhdO1xuICB2YXIgbGlzdGVuZXJzID0gY3JlYXRlRXZlbnRzKCk7XG4gIHZhciBibG9ja2VycyA9IGNyZWF0ZUV2ZW50cygpO1xuXG4gIGZ1bmN0aW9uIGNyZWF0ZUhyZWYodG8pIHtcbiAgICByZXR1cm4gdHlwZW9mIHRvID09PSAnc3RyaW5nJyA/IHRvIDogY3JlYXRlUGF0aCh0byk7XG4gIH1cblxuICBmdW5jdGlvbiBnZXROZXh0TG9jYXRpb24odG8sIHN0YXRlKSB7XG4gICAgaWYgKHN0YXRlID09PSB2b2lkIDApIHtcbiAgICAgIHN0YXRlID0gbnVsbDtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVhZE9ubHkoX2V4dGVuZHMoe1xuICAgICAgcGF0aG5hbWU6IGxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgc2VhcmNoOiAnJyxcbiAgICAgIGhhc2g6ICcnXG4gICAgfSwgdHlwZW9mIHRvID09PSAnc3RyaW5nJyA/IHBhcnNlUGF0aCh0bykgOiB0bywge1xuICAgICAgc3RhdGU6IHN0YXRlLFxuICAgICAga2V5OiBjcmVhdGVLZXkoKVxuICAgIH0pKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGFsbG93VHgoYWN0aW9uLCBsb2NhdGlvbiwgcmV0cnkpIHtcbiAgICByZXR1cm4gIWJsb2NrZXJzLmxlbmd0aCB8fCAoYmxvY2tlcnMuY2FsbCh7XG4gICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgIHJldHJ5OiByZXRyeVxuICAgIH0pLCBmYWxzZSk7XG4gIH1cblxuICBmdW5jdGlvbiBhcHBseVR4KG5leHRBY3Rpb24sIG5leHRMb2NhdGlvbikge1xuICAgIGFjdGlvbiA9IG5leHRBY3Rpb247XG4gICAgbG9jYXRpb24gPSBuZXh0TG9jYXRpb247XG4gICAgbGlzdGVuZXJzLmNhbGwoe1xuICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHB1c2godG8sIHN0YXRlKSB7XG4gICAgdmFyIG5leHRBY3Rpb24gPSBBY3Rpb24uUHVzaDtcbiAgICB2YXIgbmV4dExvY2F0aW9uID0gZ2V0TmV4dExvY2F0aW9uKHRvLCBzdGF0ZSk7XG5cbiAgICBmdW5jdGlvbiByZXRyeSgpIHtcbiAgICAgIHB1c2godG8sIHN0YXRlKTtcbiAgICB9XG5cbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGxvY2F0aW9uLnBhdGhuYW1lLmNoYXJBdCgwKSA9PT0gJy8nLCBcIlJlbGF0aXZlIHBhdGhuYW1lcyBhcmUgbm90IHN1cHBvcnRlZCBpbiBtZW1vcnkgaGlzdG9yeS5wdXNoKFwiICsgSlNPTi5zdHJpbmdpZnkodG8pICsgXCIpXCIpIDogdm9pZCAwO1xuXG4gICAgaWYgKGFsbG93VHgobmV4dEFjdGlvbiwgbmV4dExvY2F0aW9uLCByZXRyeSkpIHtcbiAgICAgIGluZGV4ICs9IDE7XG4gICAgICBlbnRyaWVzLnNwbGljZShpbmRleCwgZW50cmllcy5sZW5ndGgsIG5leHRMb2NhdGlvbik7XG4gICAgICBhcHBseVR4KG5leHRBY3Rpb24sIG5leHRMb2NhdGlvbik7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZSh0bywgc3RhdGUpIHtcbiAgICB2YXIgbmV4dEFjdGlvbiA9IEFjdGlvbi5SZXBsYWNlO1xuICAgIHZhciBuZXh0TG9jYXRpb24gPSBnZXROZXh0TG9jYXRpb24odG8sIHN0YXRlKTtcblxuICAgIGZ1bmN0aW9uIHJldHJ5KCkge1xuICAgICAgcmVwbGFjZSh0bywgc3RhdGUpO1xuICAgIH1cblxuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcobG9jYXRpb24ucGF0aG5hbWUuY2hhckF0KDApID09PSAnLycsIFwiUmVsYXRpdmUgcGF0aG5hbWVzIGFyZSBub3Qgc3VwcG9ydGVkIGluIG1lbW9yeSBoaXN0b3J5LnJlcGxhY2UoXCIgKyBKU09OLnN0cmluZ2lmeSh0bykgKyBcIilcIikgOiB2b2lkIDA7XG5cbiAgICBpZiAoYWxsb3dUeChuZXh0QWN0aW9uLCBuZXh0TG9jYXRpb24sIHJldHJ5KSkge1xuICAgICAgZW50cmllc1tpbmRleF0gPSBuZXh0TG9jYXRpb247XG4gICAgICBhcHBseVR4KG5leHRBY3Rpb24sIG5leHRMb2NhdGlvbik7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gZ28oZGVsdGEpIHtcbiAgICB2YXIgbmV4dEluZGV4ID0gY2xhbXAoaW5kZXggKyBkZWx0YSwgMCwgZW50cmllcy5sZW5ndGggLSAxKTtcbiAgICB2YXIgbmV4dEFjdGlvbiA9IEFjdGlvbi5Qb3A7XG4gICAgdmFyIG5leHRMb2NhdGlvbiA9IGVudHJpZXNbbmV4dEluZGV4XTtcblxuICAgIGZ1bmN0aW9uIHJldHJ5KCkge1xuICAgICAgZ28oZGVsdGEpO1xuICAgIH1cblxuICAgIGlmIChhbGxvd1R4KG5leHRBY3Rpb24sIG5leHRMb2NhdGlvbiwgcmV0cnkpKSB7XG4gICAgICBpbmRleCA9IG5leHRJbmRleDtcbiAgICAgIGFwcGx5VHgobmV4dEFjdGlvbiwgbmV4dExvY2F0aW9uKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBnZXQgaW5kZXgoKSB7XG4gICAgICByZXR1cm4gaW5kZXg7XG4gICAgfSxcblxuICAgIGdldCBhY3Rpb24oKSB7XG4gICAgICByZXR1cm4gYWN0aW9uO1xuICAgIH0sXG5cbiAgICBnZXQgbG9jYXRpb24oKSB7XG4gICAgICByZXR1cm4gbG9jYXRpb247XG4gICAgfSxcblxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBiYWNrOiBmdW5jdGlvbiBiYWNrKCkge1xuICAgICAgZ28oLTEpO1xuICAgIH0sXG4gICAgZm9yd2FyZDogZnVuY3Rpb24gZm9yd2FyZCgpIHtcbiAgICAgIGdvKDEpO1xuICAgIH0sXG4gICAgbGlzdGVuOiBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICAgIHJldHVybiBsaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gICAgfSxcbiAgICBibG9jazogZnVuY3Rpb24gYmxvY2soYmxvY2tlcikge1xuICAgICAgcmV0dXJuIGJsb2NrZXJzLnB1c2goYmxvY2tlcik7XG4gICAgfVxuICB9O1xuICByZXR1cm4gaGlzdG9yeTtcbn0gLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFVUSUxTXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG5mdW5jdGlvbiBjbGFtcChuLCBsb3dlckJvdW5kLCB1cHBlckJvdW5kKSB7XG4gIHJldHVybiBNYXRoLm1pbihNYXRoLm1heChuLCBsb3dlckJvdW5kKSwgdXBwZXJCb3VuZCk7XG59XG5cbmZ1bmN0aW9uIHByb21wdEJlZm9yZVVubG9hZChldmVudCkge1xuICAvLyBDYW5jZWwgdGhlIGV2ZW50LlxuICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOyAvLyBDaHJvbWUgKGFuZCBsZWdhY3kgSUUpIHJlcXVpcmVzIHJldHVyblZhbHVlIHRvIGJlIHNldC5cblxuICBldmVudC5yZXR1cm5WYWx1ZSA9ICcnO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVFdmVudHMoKSB7XG4gIHZhciBoYW5kbGVycyA9IFtdO1xuICByZXR1cm4ge1xuICAgIGdldCBsZW5ndGgoKSB7XG4gICAgICByZXR1cm4gaGFuZGxlcnMubGVuZ3RoO1xuICAgIH0sXG5cbiAgICBwdXNoOiBmdW5jdGlvbiBwdXNoKGZuKSB7XG4gICAgICBoYW5kbGVycy5wdXNoKGZuKTtcbiAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGhhbmRsZXJzID0gaGFuZGxlcnMuZmlsdGVyKGZ1bmN0aW9uIChoYW5kbGVyKSB7XG4gICAgICAgICAgcmV0dXJuIGhhbmRsZXIgIT09IGZuO1xuICAgICAgICB9KTtcbiAgICAgIH07XG4gICAgfSxcbiAgICBjYWxsOiBmdW5jdGlvbiBjYWxsKGFyZykge1xuICAgICAgaGFuZGxlcnMuZm9yRWFjaChmdW5jdGlvbiAoZm4pIHtcbiAgICAgICAgcmV0dXJuIGZuICYmIGZuKGFyZyk7XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUtleSgpIHtcbiAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCA4KTtcbn1cbi8qKlxyXG4gKiBDcmVhdGVzIGEgc3RyaW5nIFVSTCBwYXRoIGZyb20gdGhlIGdpdmVuIHBhdGhuYW1lLCBzZWFyY2gsIGFuZCBoYXNoIGNvbXBvbmVudHMuXHJcbiAqXHJcbiAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3JlbWl4LXJ1bi9oaXN0b3J5L3RyZWUvbWFpbi9kb2NzL2FwaS1yZWZlcmVuY2UubWQjY3JlYXRlcGF0aFxyXG4gKi9cblxuXG5mdW5jdGlvbiBjcmVhdGVQYXRoKF9yZWYpIHtcbiAgdmFyIF9yZWYkcGF0aG5hbWUgPSBfcmVmLnBhdGhuYW1lLFxuICAgICAgcGF0aG5hbWUgPSBfcmVmJHBhdGhuYW1lID09PSB2b2lkIDAgPyAnLycgOiBfcmVmJHBhdGhuYW1lLFxuICAgICAgX3JlZiRzZWFyY2ggPSBfcmVmLnNlYXJjaCxcbiAgICAgIHNlYXJjaCA9IF9yZWYkc2VhcmNoID09PSB2b2lkIDAgPyAnJyA6IF9yZWYkc2VhcmNoLFxuICAgICAgX3JlZiRoYXNoID0gX3JlZi5oYXNoLFxuICAgICAgaGFzaCA9IF9yZWYkaGFzaCA9PT0gdm9pZCAwID8gJycgOiBfcmVmJGhhc2g7XG4gIGlmIChzZWFyY2ggJiYgc2VhcmNoICE9PSAnPycpIHBhdGhuYW1lICs9IHNlYXJjaC5jaGFyQXQoMCkgPT09ICc/JyA/IHNlYXJjaCA6ICc/JyArIHNlYXJjaDtcbiAgaWYgKGhhc2ggJiYgaGFzaCAhPT0gJyMnKSBwYXRobmFtZSArPSBoYXNoLmNoYXJBdCgwKSA9PT0gJyMnID8gaGFzaCA6ICcjJyArIGhhc2g7XG4gIHJldHVybiBwYXRobmFtZTtcbn1cbi8qKlxyXG4gKiBQYXJzZXMgYSBzdHJpbmcgVVJMIHBhdGggaW50byBpdHMgc2VwYXJhdGUgcGF0aG5hbWUsIHNlYXJjaCwgYW5kIGhhc2ggY29tcG9uZW50cy5cclxuICpcclxuICogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vcmVtaXgtcnVuL2hpc3RvcnkvdHJlZS9tYWluL2RvY3MvYXBpLXJlZmVyZW5jZS5tZCNwYXJzZXBhdGhcclxuICovXG5cbmZ1bmN0aW9uIHBhcnNlUGF0aChwYXRoKSB7XG4gIHZhciBwYXJzZWRQYXRoID0ge307XG5cbiAgaWYgKHBhdGgpIHtcbiAgICB2YXIgaGFzaEluZGV4ID0gcGF0aC5pbmRleE9mKCcjJyk7XG5cbiAgICBpZiAoaGFzaEluZGV4ID49IDApIHtcbiAgICAgIHBhcnNlZFBhdGguaGFzaCA9IHBhdGguc3Vic3RyKGhhc2hJbmRleCk7XG4gICAgICBwYXRoID0gcGF0aC5zdWJzdHIoMCwgaGFzaEluZGV4KTtcbiAgICB9XG5cbiAgICB2YXIgc2VhcmNoSW5kZXggPSBwYXRoLmluZGV4T2YoJz8nKTtcblxuICAgIGlmIChzZWFyY2hJbmRleCA+PSAwKSB7XG4gICAgICBwYXJzZWRQYXRoLnNlYXJjaCA9IHBhdGguc3Vic3RyKHNlYXJjaEluZGV4KTtcbiAgICAgIHBhdGggPSBwYXRoLnN1YnN0cigwLCBzZWFyY2hJbmRleCk7XG4gICAgfVxuXG4gICAgaWYgKHBhdGgpIHtcbiAgICAgIHBhcnNlZFBhdGgucGF0aG5hbWUgPSBwYXRoO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBwYXJzZWRQYXRoO1xufVxuXG5leHBvcnQgeyBBY3Rpb24sIGNyZWF0ZUJyb3dzZXJIaXN0b3J5LCBjcmVhdGVIYXNoSGlzdG9yeSwgY3JlYXRlTWVtb3J5SGlzdG9yeSwgY3JlYXRlUGF0aCwgcGFyc2VQYXRoIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9leHRlbmRzKCkge1xuICBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gPyBPYmplY3QuYXNzaWduLmJpbmQoKSA6IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcblxuICAgICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0O1xuICB9O1xuICByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn0iLCIvKipcbiAqIFJlYWN0IFJvdXRlciB2Ni4zLjBcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIFJlbWl4IFNvZnR3YXJlIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UubWQgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAbGljZW5zZSBNSVRcbiAqL1xuaW1wb3J0IHsgcGFyc2VQYXRoLCBjcmVhdGVNZW1vcnlIaXN0b3J5LCBBY3Rpb24gfSBmcm9tICdoaXN0b3J5JztcbmV4cG9ydCB7IEFjdGlvbiBhcyBOYXZpZ2F0aW9uVHlwZSwgY3JlYXRlUGF0aCwgcGFyc2VQYXRoIH0gZnJvbSAnaGlzdG9yeSc7XG5pbXBvcnQgeyBjcmVhdGVDb250ZXh0LCB1c2VDb250ZXh0LCB1c2VNZW1vLCB1c2VSZWYsIHVzZUVmZmVjdCwgdXNlQ2FsbGJhY2ssIGNyZWF0ZUVsZW1lbnQsIHVzZVN0YXRlLCB1c2VMYXlvdXRFZmZlY3QsIENoaWxkcmVuLCBpc1ZhbGlkRWxlbWVudCwgRnJhZ21lbnQgfSBmcm9tICdyZWFjdCc7XG5cbmNvbnN0IE5hdmlnYXRpb25Db250ZXh0ID0gLyojX19QVVJFX18qL2NyZWF0ZUNvbnRleHQobnVsbCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgTmF2aWdhdGlvbkNvbnRleHQuZGlzcGxheU5hbWUgPSBcIk5hdmlnYXRpb25cIjtcbn1cblxuY29uc3QgTG9jYXRpb25Db250ZXh0ID0gLyojX19QVVJFX18qL2NyZWF0ZUNvbnRleHQobnVsbCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgTG9jYXRpb25Db250ZXh0LmRpc3BsYXlOYW1lID0gXCJMb2NhdGlvblwiO1xufVxuXG5jb25zdCBSb3V0ZUNvbnRleHQgPSAvKiNfX1BVUkVfXyovY3JlYXRlQ29udGV4dCh7XG4gIG91dGxldDogbnVsbCxcbiAgbWF0Y2hlczogW11cbn0pO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFJvdXRlQ29udGV4dC5kaXNwbGF5TmFtZSA9IFwiUm91dGVcIjtcbn1cblxuZnVuY3Rpb24gaW52YXJpYW50KGNvbmQsIG1lc3NhZ2UpIHtcbiAgaWYgKCFjb25kKSB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG59XG5mdW5jdGlvbiB3YXJuaW5nKGNvbmQsIG1lc3NhZ2UpIHtcbiAgaWYgKCFjb25kKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICBpZiAodHlwZW9mIGNvbnNvbGUgIT09IFwidW5kZWZpbmVkXCIpIGNvbnNvbGUud2FybihtZXNzYWdlKTtcblxuICAgIHRyeSB7XG4gICAgICAvLyBXZWxjb21lIHRvIGRlYnVnZ2luZyBSZWFjdCBSb3V0ZXIhXG4gICAgICAvL1xuICAgICAgLy8gVGhpcyBlcnJvciBpcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB5b3UgY2FuIG1vcmUgZWFzaWx5XG4gICAgICAvLyBmaW5kIHRoZSBzb3VyY2UgZm9yIGEgd2FybmluZyB0aGF0IGFwcGVhcnMgaW4gdGhlIGNvbnNvbGUgYnlcbiAgICAgIC8vIGVuYWJsaW5nIFwicGF1c2Ugb24gZXhjZXB0aW9uc1wiIGluIHlvdXIgSmF2YVNjcmlwdCBkZWJ1Z2dlci5cbiAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWVtcHR5XG4gICAgfSBjYXRjaCAoZSkge31cbiAgfVxufVxuY29uc3QgYWxyZWFkeVdhcm5lZCA9IHt9O1xuZnVuY3Rpb24gd2FybmluZ09uY2Uoa2V5LCBjb25kLCBtZXNzYWdlKSB7XG4gIGlmICghY29uZCAmJiAhYWxyZWFkeVdhcm5lZFtrZXldKSB7XG4gICAgYWxyZWFkeVdhcm5lZFtrZXldID0gdHJ1ZTtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGZhbHNlLCBtZXNzYWdlKSA6IHZvaWQgMDtcbiAgfVxufVxuXG4vKipcbiAqIFJldHVybnMgYSBwYXRoIHdpdGggcGFyYW1zIGludGVycG9sYXRlZC5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3Ryb3V0ZXIuY29tL2RvY3MvZW4vdjYvYXBpI2dlbmVyYXRlcGF0aFxuICovXG5mdW5jdGlvbiBnZW5lcmF0ZVBhdGgocGF0aCwgcGFyYW1zKSB7XG4gIGlmIChwYXJhbXMgPT09IHZvaWQgMCkge1xuICAgIHBhcmFtcyA9IHt9O1xuICB9XG5cbiAgcmV0dXJuIHBhdGgucmVwbGFjZSgvOihcXHcrKS9nLCAoXywga2V5KSA9PiB7XG4gICAgIShwYXJhbXNba2V5XSAhPSBudWxsKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJNaXNzaW5nIFxcXCI6XCIgKyBrZXkgKyBcIlxcXCIgcGFyYW1cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIHJldHVybiBwYXJhbXNba2V5XTtcbiAgfSkucmVwbGFjZSgvXFwvKlxcKiQvLCBfID0+IHBhcmFtc1tcIipcIl0gPT0gbnVsbCA/IFwiXCIgOiBwYXJhbXNbXCIqXCJdLnJlcGxhY2UoL15cXC8qLywgXCIvXCIpKTtcbn1cbi8qKlxuICogQSBSb3V0ZU1hdGNoIGNvbnRhaW5zIGluZm8gYWJvdXQgaG93IGEgcm91dGUgbWF0Y2hlZCBhIFVSTC5cbiAqL1xuXG4vKipcbiAqIE1hdGNoZXMgdGhlIGdpdmVuIHJvdXRlcyB0byBhIGxvY2F0aW9uIGFuZCByZXR1cm5zIHRoZSBtYXRjaCBkYXRhLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjbWF0Y2hyb3V0ZXNcbiAqL1xuZnVuY3Rpb24gbWF0Y2hSb3V0ZXMocm91dGVzLCBsb2NhdGlvbkFyZywgYmFzZW5hbWUpIHtcbiAgaWYgKGJhc2VuYW1lID09PSB2b2lkIDApIHtcbiAgICBiYXNlbmFtZSA9IFwiL1wiO1xuICB9XG5cbiAgbGV0IGxvY2F0aW9uID0gdHlwZW9mIGxvY2F0aW9uQXJnID09PSBcInN0cmluZ1wiID8gcGFyc2VQYXRoKGxvY2F0aW9uQXJnKSA6IGxvY2F0aW9uQXJnO1xuICBsZXQgcGF0aG5hbWUgPSBzdHJpcEJhc2VuYW1lKGxvY2F0aW9uLnBhdGhuYW1lIHx8IFwiL1wiLCBiYXNlbmFtZSk7XG5cbiAgaWYgKHBhdGhuYW1lID09IG51bGwpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGxldCBicmFuY2hlcyA9IGZsYXR0ZW5Sb3V0ZXMocm91dGVzKTtcbiAgcmFua1JvdXRlQnJhbmNoZXMoYnJhbmNoZXMpO1xuICBsZXQgbWF0Y2hlcyA9IG51bGw7XG5cbiAgZm9yIChsZXQgaSA9IDA7IG1hdGNoZXMgPT0gbnVsbCAmJiBpIDwgYnJhbmNoZXMubGVuZ3RoOyArK2kpIHtcbiAgICBtYXRjaGVzID0gbWF0Y2hSb3V0ZUJyYW5jaChicmFuY2hlc1tpXSwgcGF0aG5hbWUpO1xuICB9XG5cbiAgcmV0dXJuIG1hdGNoZXM7XG59XG5cbmZ1bmN0aW9uIGZsYXR0ZW5Sb3V0ZXMocm91dGVzLCBicmFuY2hlcywgcGFyZW50c01ldGEsIHBhcmVudFBhdGgpIHtcbiAgaWYgKGJyYW5jaGVzID09PSB2b2lkIDApIHtcbiAgICBicmFuY2hlcyA9IFtdO1xuICB9XG5cbiAgaWYgKHBhcmVudHNNZXRhID09PSB2b2lkIDApIHtcbiAgICBwYXJlbnRzTWV0YSA9IFtdO1xuICB9XG5cbiAgaWYgKHBhcmVudFBhdGggPT09IHZvaWQgMCkge1xuICAgIHBhcmVudFBhdGggPSBcIlwiO1xuICB9XG5cbiAgcm91dGVzLmZvckVhY2goKHJvdXRlLCBpbmRleCkgPT4ge1xuICAgIGxldCBtZXRhID0ge1xuICAgICAgcmVsYXRpdmVQYXRoOiByb3V0ZS5wYXRoIHx8IFwiXCIsXG4gICAgICBjYXNlU2Vuc2l0aXZlOiByb3V0ZS5jYXNlU2Vuc2l0aXZlID09PSB0cnVlLFxuICAgICAgY2hpbGRyZW5JbmRleDogaW5kZXgsXG4gICAgICByb3V0ZVxuICAgIH07XG5cbiAgICBpZiAobWV0YS5yZWxhdGl2ZVBhdGguc3RhcnRzV2l0aChcIi9cIikpIHtcbiAgICAgICFtZXRhLnJlbGF0aXZlUGF0aC5zdGFydHNXaXRoKHBhcmVudFBhdGgpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIkFic29sdXRlIHJvdXRlIHBhdGggXFxcIlwiICsgbWV0YS5yZWxhdGl2ZVBhdGggKyBcIlxcXCIgbmVzdGVkIHVuZGVyIHBhdGggXCIgKyAoXCJcXFwiXCIgKyBwYXJlbnRQYXRoICsgXCJcXFwiIGlzIG5vdCB2YWxpZC4gQW4gYWJzb2x1dGUgY2hpbGQgcm91dGUgcGF0aCBcIikgKyBcIm11c3Qgc3RhcnQgd2l0aCB0aGUgY29tYmluZWQgcGF0aCBvZiBhbGwgaXRzIHBhcmVudCByb3V0ZXMuXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIG1ldGEucmVsYXRpdmVQYXRoID0gbWV0YS5yZWxhdGl2ZVBhdGguc2xpY2UocGFyZW50UGF0aC5sZW5ndGgpO1xuICAgIH1cblxuICAgIGxldCBwYXRoID0gam9pblBhdGhzKFtwYXJlbnRQYXRoLCBtZXRhLnJlbGF0aXZlUGF0aF0pO1xuICAgIGxldCByb3V0ZXNNZXRhID0gcGFyZW50c01ldGEuY29uY2F0KG1ldGEpOyAvLyBBZGQgdGhlIGNoaWxkcmVuIGJlZm9yZSBhZGRpbmcgdGhpcyByb3V0ZSB0byB0aGUgYXJyYXkgc28gd2UgdHJhdmVyc2UgdGhlXG4gICAgLy8gcm91dGUgdHJlZSBkZXB0aC1maXJzdCBhbmQgY2hpbGQgcm91dGVzIGFwcGVhciBiZWZvcmUgdGhlaXIgcGFyZW50cyBpblxuICAgIC8vIHRoZSBcImZsYXR0ZW5lZFwiIHZlcnNpb24uXG5cbiAgICBpZiAocm91dGUuY2hpbGRyZW4gJiYgcm91dGUuY2hpbGRyZW4ubGVuZ3RoID4gMCkge1xuICAgICAgIShyb3V0ZS5pbmRleCAhPT0gdHJ1ZSkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiSW5kZXggcm91dGVzIG11c3Qgbm90IGhhdmUgY2hpbGQgcm91dGVzLiBQbGVhc2UgcmVtb3ZlIFwiICsgKFwiYWxsIGNoaWxkIHJvdXRlcyBmcm9tIHJvdXRlIHBhdGggXFxcIlwiICsgcGF0aCArIFwiXFxcIi5cIikpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIGZsYXR0ZW5Sb3V0ZXMocm91dGUuY2hpbGRyZW4sIGJyYW5jaGVzLCByb3V0ZXNNZXRhLCBwYXRoKTtcbiAgICB9IC8vIFJvdXRlcyB3aXRob3V0IGEgcGF0aCBzaG91bGRuJ3QgZXZlciBtYXRjaCBieSB0aGVtc2VsdmVzIHVubGVzcyB0aGV5IGFyZVxuICAgIC8vIGluZGV4IHJvdXRlcywgc28gZG9uJ3QgYWRkIHRoZW0gdG8gdGhlIGxpc3Qgb2YgcG9zc2libGUgYnJhbmNoZXMuXG5cblxuICAgIGlmIChyb3V0ZS5wYXRoID09IG51bGwgJiYgIXJvdXRlLmluZGV4KSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgYnJhbmNoZXMucHVzaCh7XG4gICAgICBwYXRoLFxuICAgICAgc2NvcmU6IGNvbXB1dGVTY29yZShwYXRoLCByb3V0ZS5pbmRleCksXG4gICAgICByb3V0ZXNNZXRhXG4gICAgfSk7XG4gIH0pO1xuICByZXR1cm4gYnJhbmNoZXM7XG59XG5cbmZ1bmN0aW9uIHJhbmtSb3V0ZUJyYW5jaGVzKGJyYW5jaGVzKSB7XG4gIGJyYW5jaGVzLnNvcnQoKGEsIGIpID0+IGEuc2NvcmUgIT09IGIuc2NvcmUgPyBiLnNjb3JlIC0gYS5zY29yZSAvLyBIaWdoZXIgc2NvcmUgZmlyc3RcbiAgOiBjb21wYXJlSW5kZXhlcyhhLnJvdXRlc01ldGEubWFwKG1ldGEgPT4gbWV0YS5jaGlsZHJlbkluZGV4KSwgYi5yb3V0ZXNNZXRhLm1hcChtZXRhID0+IG1ldGEuY2hpbGRyZW5JbmRleCkpKTtcbn1cblxuY29uc3QgcGFyYW1SZSA9IC9eOlxcdyskLztcbmNvbnN0IGR5bmFtaWNTZWdtZW50VmFsdWUgPSAzO1xuY29uc3QgaW5kZXhSb3V0ZVZhbHVlID0gMjtcbmNvbnN0IGVtcHR5U2VnbWVudFZhbHVlID0gMTtcbmNvbnN0IHN0YXRpY1NlZ21lbnRWYWx1ZSA9IDEwO1xuY29uc3Qgc3BsYXRQZW5hbHR5ID0gLTI7XG5cbmNvbnN0IGlzU3BsYXQgPSBzID0+IHMgPT09IFwiKlwiO1xuXG5mdW5jdGlvbiBjb21wdXRlU2NvcmUocGF0aCwgaW5kZXgpIHtcbiAgbGV0IHNlZ21lbnRzID0gcGF0aC5zcGxpdChcIi9cIik7XG4gIGxldCBpbml0aWFsU2NvcmUgPSBzZWdtZW50cy5sZW5ndGg7XG5cbiAgaWYgKHNlZ21lbnRzLnNvbWUoaXNTcGxhdCkpIHtcbiAgICBpbml0aWFsU2NvcmUgKz0gc3BsYXRQZW5hbHR5O1xuICB9XG5cbiAgaWYgKGluZGV4KSB7XG4gICAgaW5pdGlhbFNjb3JlICs9IGluZGV4Um91dGVWYWx1ZTtcbiAgfVxuXG4gIHJldHVybiBzZWdtZW50cy5maWx0ZXIocyA9PiAhaXNTcGxhdChzKSkucmVkdWNlKChzY29yZSwgc2VnbWVudCkgPT4gc2NvcmUgKyAocGFyYW1SZS50ZXN0KHNlZ21lbnQpID8gZHluYW1pY1NlZ21lbnRWYWx1ZSA6IHNlZ21lbnQgPT09IFwiXCIgPyBlbXB0eVNlZ21lbnRWYWx1ZSA6IHN0YXRpY1NlZ21lbnRWYWx1ZSksIGluaXRpYWxTY29yZSk7XG59XG5cbmZ1bmN0aW9uIGNvbXBhcmVJbmRleGVzKGEsIGIpIHtcbiAgbGV0IHNpYmxpbmdzID0gYS5sZW5ndGggPT09IGIubGVuZ3RoICYmIGEuc2xpY2UoMCwgLTEpLmV2ZXJ5KChuLCBpKSA9PiBuID09PSBiW2ldKTtcbiAgcmV0dXJuIHNpYmxpbmdzID8gLy8gSWYgdHdvIHJvdXRlcyBhcmUgc2libGluZ3MsIHdlIHNob3VsZCB0cnkgdG8gbWF0Y2ggdGhlIGVhcmxpZXIgc2libGluZ1xuICAvLyBmaXJzdC4gVGhpcyBhbGxvd3MgcGVvcGxlIHRvIGhhdmUgZmluZS1ncmFpbmVkIGNvbnRyb2wgb3ZlciB0aGUgbWF0Y2hpbmdcbiAgLy8gYmVoYXZpb3IgYnkgc2ltcGx5IHB1dHRpbmcgcm91dGVzIHdpdGggaWRlbnRpY2FsIHBhdGhzIGluIHRoZSBvcmRlciB0aGV5XG4gIC8vIHdhbnQgdGhlbSB0cmllZC5cbiAgYVthLmxlbmd0aCAtIDFdIC0gYltiLmxlbmd0aCAtIDFdIDogLy8gT3RoZXJ3aXNlLCBpdCBkb2Vzbid0IHJlYWxseSBtYWtlIHNlbnNlIHRvIHJhbmsgbm9uLXNpYmxpbmdzIGJ5IGluZGV4LFxuICAvLyBzbyB0aGV5IHNvcnQgZXF1YWxseS5cbiAgMDtcbn1cblxuZnVuY3Rpb24gbWF0Y2hSb3V0ZUJyYW5jaChicmFuY2gsIHBhdGhuYW1lKSB7XG4gIGxldCB7XG4gICAgcm91dGVzTWV0YVxuICB9ID0gYnJhbmNoO1xuICBsZXQgbWF0Y2hlZFBhcmFtcyA9IHt9O1xuICBsZXQgbWF0Y2hlZFBhdGhuYW1lID0gXCIvXCI7XG4gIGxldCBtYXRjaGVzID0gW107XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCByb3V0ZXNNZXRhLmxlbmd0aDsgKytpKSB7XG4gICAgbGV0IG1ldGEgPSByb3V0ZXNNZXRhW2ldO1xuICAgIGxldCBlbmQgPSBpID09PSByb3V0ZXNNZXRhLmxlbmd0aCAtIDE7XG4gICAgbGV0IHJlbWFpbmluZ1BhdGhuYW1lID0gbWF0Y2hlZFBhdGhuYW1lID09PSBcIi9cIiA/IHBhdGhuYW1lIDogcGF0aG5hbWUuc2xpY2UobWF0Y2hlZFBhdGhuYW1lLmxlbmd0aCkgfHwgXCIvXCI7XG4gICAgbGV0IG1hdGNoID0gbWF0Y2hQYXRoKHtcbiAgICAgIHBhdGg6IG1ldGEucmVsYXRpdmVQYXRoLFxuICAgICAgY2FzZVNlbnNpdGl2ZTogbWV0YS5jYXNlU2Vuc2l0aXZlLFxuICAgICAgZW5kXG4gICAgfSwgcmVtYWluaW5nUGF0aG5hbWUpO1xuICAgIGlmICghbWF0Y2gpIHJldHVybiBudWxsO1xuICAgIE9iamVjdC5hc3NpZ24obWF0Y2hlZFBhcmFtcywgbWF0Y2gucGFyYW1zKTtcbiAgICBsZXQgcm91dGUgPSBtZXRhLnJvdXRlO1xuICAgIG1hdGNoZXMucHVzaCh7XG4gICAgICBwYXJhbXM6IG1hdGNoZWRQYXJhbXMsXG4gICAgICBwYXRobmFtZTogam9pblBhdGhzKFttYXRjaGVkUGF0aG5hbWUsIG1hdGNoLnBhdGhuYW1lXSksXG4gICAgICBwYXRobmFtZUJhc2U6IG5vcm1hbGl6ZVBhdGhuYW1lKGpvaW5QYXRocyhbbWF0Y2hlZFBhdGhuYW1lLCBtYXRjaC5wYXRobmFtZUJhc2VdKSksXG4gICAgICByb3V0ZVxuICAgIH0pO1xuXG4gICAgaWYgKG1hdGNoLnBhdGhuYW1lQmFzZSAhPT0gXCIvXCIpIHtcbiAgICAgIG1hdGNoZWRQYXRobmFtZSA9IGpvaW5QYXRocyhbbWF0Y2hlZFBhdGhuYW1lLCBtYXRjaC5wYXRobmFtZUJhc2VdKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbWF0Y2hlcztcbn1cbi8qKlxuICogQSBQYXRoUGF0dGVybiBpcyB1c2VkIHRvIG1hdGNoIG9uIHNvbWUgcG9ydGlvbiBvZiBhIFVSTCBwYXRobmFtZS5cbiAqL1xuXG5cbi8qKlxuICogUGVyZm9ybXMgcGF0dGVybiBtYXRjaGluZyBvbiBhIFVSTCBwYXRobmFtZSBhbmQgcmV0dXJucyBpbmZvcm1hdGlvbiBhYm91dFxuICogdGhlIG1hdGNoLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjbWF0Y2hwYXRoXG4gKi9cbmZ1bmN0aW9uIG1hdGNoUGF0aChwYXR0ZXJuLCBwYXRobmFtZSkge1xuICBpZiAodHlwZW9mIHBhdHRlcm4gPT09IFwic3RyaW5nXCIpIHtcbiAgICBwYXR0ZXJuID0ge1xuICAgICAgcGF0aDogcGF0dGVybixcbiAgICAgIGNhc2VTZW5zaXRpdmU6IGZhbHNlLFxuICAgICAgZW5kOiB0cnVlXG4gICAgfTtcbiAgfVxuXG4gIGxldCBbbWF0Y2hlciwgcGFyYW1OYW1lc10gPSBjb21waWxlUGF0aChwYXR0ZXJuLnBhdGgsIHBhdHRlcm4uY2FzZVNlbnNpdGl2ZSwgcGF0dGVybi5lbmQpO1xuICBsZXQgbWF0Y2ggPSBwYXRobmFtZS5tYXRjaChtYXRjaGVyKTtcbiAgaWYgKCFtYXRjaCkgcmV0dXJuIG51bGw7XG4gIGxldCBtYXRjaGVkUGF0aG5hbWUgPSBtYXRjaFswXTtcbiAgbGV0IHBhdGhuYW1lQmFzZSA9IG1hdGNoZWRQYXRobmFtZS5yZXBsYWNlKC8oLilcXC8rJC8sIFwiJDFcIik7XG4gIGxldCBjYXB0dXJlR3JvdXBzID0gbWF0Y2guc2xpY2UoMSk7XG4gIGxldCBwYXJhbXMgPSBwYXJhbU5hbWVzLnJlZHVjZSgobWVtbywgcGFyYW1OYW1lLCBpbmRleCkgPT4ge1xuICAgIC8vIFdlIG5lZWQgdG8gY29tcHV0ZSB0aGUgcGF0aG5hbWVCYXNlIGhlcmUgdXNpbmcgdGhlIHJhdyBzcGxhdCB2YWx1ZVxuICAgIC8vIGluc3RlYWQgb2YgdXNpbmcgcGFyYW1zW1wiKlwiXSBsYXRlciBiZWNhdXNlIGl0IHdpbGwgYmUgZGVjb2RlZCB0aGVuXG4gICAgaWYgKHBhcmFtTmFtZSA9PT0gXCIqXCIpIHtcbiAgICAgIGxldCBzcGxhdFZhbHVlID0gY2FwdHVyZUdyb3Vwc1tpbmRleF0gfHwgXCJcIjtcbiAgICAgIHBhdGhuYW1lQmFzZSA9IG1hdGNoZWRQYXRobmFtZS5zbGljZSgwLCBtYXRjaGVkUGF0aG5hbWUubGVuZ3RoIC0gc3BsYXRWYWx1ZS5sZW5ndGgpLnJlcGxhY2UoLyguKVxcLyskLywgXCIkMVwiKTtcbiAgICB9XG5cbiAgICBtZW1vW3BhcmFtTmFtZV0gPSBzYWZlbHlEZWNvZGVVUklDb21wb25lbnQoY2FwdHVyZUdyb3Vwc1tpbmRleF0gfHwgXCJcIiwgcGFyYW1OYW1lKTtcbiAgICByZXR1cm4gbWVtbztcbiAgfSwge30pO1xuICByZXR1cm4ge1xuICAgIHBhcmFtcyxcbiAgICBwYXRobmFtZTogbWF0Y2hlZFBhdGhuYW1lLFxuICAgIHBhdGhuYW1lQmFzZSxcbiAgICBwYXR0ZXJuXG4gIH07XG59XG5cbmZ1bmN0aW9uIGNvbXBpbGVQYXRoKHBhdGgsIGNhc2VTZW5zaXRpdmUsIGVuZCkge1xuICBpZiAoY2FzZVNlbnNpdGl2ZSA9PT0gdm9pZCAwKSB7XG4gICAgY2FzZVNlbnNpdGl2ZSA9IGZhbHNlO1xuICB9XG5cbiAgaWYgKGVuZCA9PT0gdm9pZCAwKSB7XG4gICAgZW5kID0gdHJ1ZTtcbiAgfVxuXG4gIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcocGF0aCA9PT0gXCIqXCIgfHwgIXBhdGguZW5kc1dpdGgoXCIqXCIpIHx8IHBhdGguZW5kc1dpdGgoXCIvKlwiKSwgXCJSb3V0ZSBwYXRoIFxcXCJcIiArIHBhdGggKyBcIlxcXCIgd2lsbCBiZSB0cmVhdGVkIGFzIGlmIGl0IHdlcmUgXCIgKyAoXCJcXFwiXCIgKyBwYXRoLnJlcGxhY2UoL1xcKiQvLCBcIi8qXCIpICsgXCJcXFwiIGJlY2F1c2UgdGhlIGAqYCBjaGFyYWN0ZXIgbXVzdCBcIikgKyBcImFsd2F5cyBmb2xsb3cgYSBgL2AgaW4gdGhlIHBhdHRlcm4uIFRvIGdldCByaWQgb2YgdGhpcyB3YXJuaW5nLCBcIiArIChcInBsZWFzZSBjaGFuZ2UgdGhlIHJvdXRlIHBhdGggdG8gXFxcIlwiICsgcGF0aC5yZXBsYWNlKC9cXCokLywgXCIvKlwiKSArIFwiXFxcIi5cIikpIDogdm9pZCAwO1xuICBsZXQgcGFyYW1OYW1lcyA9IFtdO1xuICBsZXQgcmVnZXhwU291cmNlID0gXCJeXCIgKyBwYXRoLnJlcGxhY2UoL1xcLypcXCo/JC8sIFwiXCIpIC8vIElnbm9yZSB0cmFpbGluZyAvIGFuZCAvKiwgd2UnbGwgaGFuZGxlIGl0IGJlbG93XG4gIC5yZXBsYWNlKC9eXFwvKi8sIFwiL1wiKSAvLyBNYWtlIHN1cmUgaXQgaGFzIGEgbGVhZGluZyAvXG4gIC5yZXBsYWNlKC9bXFxcXC4qK14kP3t9fCgpW1xcXV0vZywgXCJcXFxcJCZcIikgLy8gRXNjYXBlIHNwZWNpYWwgcmVnZXggY2hhcnNcbiAgLnJlcGxhY2UoLzooXFx3KykvZywgKF8sIHBhcmFtTmFtZSkgPT4ge1xuICAgIHBhcmFtTmFtZXMucHVzaChwYXJhbU5hbWUpO1xuICAgIHJldHVybiBcIihbXlxcXFwvXSspXCI7XG4gIH0pO1xuXG4gIGlmIChwYXRoLmVuZHNXaXRoKFwiKlwiKSkge1xuICAgIHBhcmFtTmFtZXMucHVzaChcIipcIik7XG4gICAgcmVnZXhwU291cmNlICs9IHBhdGggPT09IFwiKlwiIHx8IHBhdGggPT09IFwiLypcIiA/IFwiKC4qKSRcIiAvLyBBbHJlYWR5IG1hdGNoZWQgdGhlIGluaXRpYWwgLywganVzdCBtYXRjaCB0aGUgcmVzdFxuICAgIDogXCIoPzpcXFxcLyguKyl8XFxcXC8qKSRcIjsgLy8gRG9uJ3QgaW5jbHVkZSB0aGUgLyBpbiBwYXJhbXNbXCIqXCJdXG4gIH0gZWxzZSB7XG4gICAgcmVnZXhwU291cmNlICs9IGVuZCA/IFwiXFxcXC8qJFwiIC8vIFdoZW4gbWF0Y2hpbmcgdG8gdGhlIGVuZCwgaWdub3JlIHRyYWlsaW5nIHNsYXNoZXNcbiAgICA6IC8vIE90aGVyd2lzZSwgbWF0Y2ggYSB3b3JkIGJvdW5kYXJ5IG9yIGEgcHJvY2VlZGluZyAvLiBUaGUgd29yZCBib3VuZGFyeSByZXN0cmljdHNcbiAgICAvLyBwYXJlbnQgcm91dGVzIHRvIG1hdGNoaW5nIG9ubHkgdGhlaXIgb3duIHdvcmRzIGFuZCBub3RoaW5nIG1vcmUsIGUuZy4gcGFyZW50XG4gICAgLy8gcm91dGUgXCIvaG9tZVwiIHNob3VsZCBub3QgbWF0Y2ggXCIvaG9tZTJcIi5cbiAgICAvLyBBZGRpdGlvbmFsbHksIGFsbG93IHBhdGhzIHN0YXJ0aW5nIHdpdGggYC5gLCBgLWAsIGB+YCwgYW5kIHVybC1lbmNvZGVkIGVudGl0aWVzLFxuICAgIC8vIGJ1dCBkbyBub3QgY29uc3VtZSB0aGUgY2hhcmFjdGVyIGluIHRoZSBtYXRjaGVkIHBhdGggc28gdGhleSBjYW4gbWF0Y2ggYWdhaW5zdFxuICAgIC8vIG5lc3RlZCBwYXRocy5cbiAgICBcIig/Oig/PVsufi1dfCVbMC05QS1GXXsyfSl8XFxcXGJ8XFxcXC98JClcIjtcbiAgfVxuXG4gIGxldCBtYXRjaGVyID0gbmV3IFJlZ0V4cChyZWdleHBTb3VyY2UsIGNhc2VTZW5zaXRpdmUgPyB1bmRlZmluZWQgOiBcImlcIik7XG4gIHJldHVybiBbbWF0Y2hlciwgcGFyYW1OYW1lc107XG59XG5cbmZ1bmN0aW9uIHNhZmVseURlY29kZVVSSUNvbXBvbmVudCh2YWx1ZSwgcGFyYW1OYW1lKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudCh2YWx1ZSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgXCJUaGUgdmFsdWUgZm9yIHRoZSBVUkwgcGFyYW0gXFxcIlwiICsgcGFyYW1OYW1lICsgXCJcXFwiIHdpbGwgbm90IGJlIGRlY29kZWQgYmVjYXVzZVwiICsgKFwiIHRoZSBzdHJpbmcgXFxcIlwiICsgdmFsdWUgKyBcIlxcXCIgaXMgYSBtYWxmb3JtZWQgVVJMIHNlZ21lbnQuIFRoaXMgaXMgcHJvYmFibHlcIikgKyAoXCIgZHVlIHRvIGEgYmFkIHBlcmNlbnQgZW5jb2RpbmcgKFwiICsgZXJyb3IgKyBcIikuXCIpKSA6IHZvaWQgMDtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cbn1cbi8qKlxuICogUmV0dXJucyBhIHJlc29sdmVkIHBhdGggb2JqZWN0IHJlbGF0aXZlIHRvIHRoZSBnaXZlbiBwYXRobmFtZS5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3Ryb3V0ZXIuY29tL2RvY3MvZW4vdjYvYXBpI3Jlc29sdmVwYXRoXG4gKi9cblxuXG5mdW5jdGlvbiByZXNvbHZlUGF0aCh0bywgZnJvbVBhdGhuYW1lKSB7XG4gIGlmIChmcm9tUGF0aG5hbWUgPT09IHZvaWQgMCkge1xuICAgIGZyb21QYXRobmFtZSA9IFwiL1wiO1xuICB9XG5cbiAgbGV0IHtcbiAgICBwYXRobmFtZTogdG9QYXRobmFtZSxcbiAgICBzZWFyY2ggPSBcIlwiLFxuICAgIGhhc2ggPSBcIlwiXG4gIH0gPSB0eXBlb2YgdG8gPT09IFwic3RyaW5nXCIgPyBwYXJzZVBhdGgodG8pIDogdG87XG4gIGxldCBwYXRobmFtZSA9IHRvUGF0aG5hbWUgPyB0b1BhdGhuYW1lLnN0YXJ0c1dpdGgoXCIvXCIpID8gdG9QYXRobmFtZSA6IHJlc29sdmVQYXRobmFtZSh0b1BhdGhuYW1lLCBmcm9tUGF0aG5hbWUpIDogZnJvbVBhdGhuYW1lO1xuICByZXR1cm4ge1xuICAgIHBhdGhuYW1lLFxuICAgIHNlYXJjaDogbm9ybWFsaXplU2VhcmNoKHNlYXJjaCksXG4gICAgaGFzaDogbm9ybWFsaXplSGFzaChoYXNoKVxuICB9O1xufVxuXG5mdW5jdGlvbiByZXNvbHZlUGF0aG5hbWUocmVsYXRpdmVQYXRoLCBmcm9tUGF0aG5hbWUpIHtcbiAgbGV0IHNlZ21lbnRzID0gZnJvbVBhdGhuYW1lLnJlcGxhY2UoL1xcLyskLywgXCJcIikuc3BsaXQoXCIvXCIpO1xuICBsZXQgcmVsYXRpdmVTZWdtZW50cyA9IHJlbGF0aXZlUGF0aC5zcGxpdChcIi9cIik7XG4gIHJlbGF0aXZlU2VnbWVudHMuZm9yRWFjaChzZWdtZW50ID0+IHtcbiAgICBpZiAoc2VnbWVudCA9PT0gXCIuLlwiKSB7XG4gICAgICAvLyBLZWVwIHRoZSByb290IFwiXCIgc2VnbWVudCBzbyB0aGUgcGF0aG5hbWUgc3RhcnRzIGF0IC9cbiAgICAgIGlmIChzZWdtZW50cy5sZW5ndGggPiAxKSBzZWdtZW50cy5wb3AoKTtcbiAgICB9IGVsc2UgaWYgKHNlZ21lbnQgIT09IFwiLlwiKSB7XG4gICAgICBzZWdtZW50cy5wdXNoKHNlZ21lbnQpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBzZWdtZW50cy5sZW5ndGggPiAxID8gc2VnbWVudHMuam9pbihcIi9cIikgOiBcIi9cIjtcbn1cblxuZnVuY3Rpb24gcmVzb2x2ZVRvKHRvQXJnLCByb3V0ZVBhdGhuYW1lcywgbG9jYXRpb25QYXRobmFtZSkge1xuICBsZXQgdG8gPSB0eXBlb2YgdG9BcmcgPT09IFwic3RyaW5nXCIgPyBwYXJzZVBhdGgodG9BcmcpIDogdG9Bcmc7XG4gIGxldCB0b1BhdGhuYW1lID0gdG9BcmcgPT09IFwiXCIgfHwgdG8ucGF0aG5hbWUgPT09IFwiXCIgPyBcIi9cIiA6IHRvLnBhdGhuYW1lOyAvLyBJZiBhIHBhdGhuYW1lIGlzIGV4cGxpY2l0bHkgcHJvdmlkZWQgaW4gYHRvYCwgaXQgc2hvdWxkIGJlIHJlbGF0aXZlIHRvIHRoZVxuICAvLyByb3V0ZSBjb250ZXh0LiBUaGlzIGlzIGV4cGxhaW5lZCBpbiBgTm90ZSBvbiBgPExpbmsgdG8+YCB2YWx1ZXNgIGluIG91clxuICAvLyBtaWdyYXRpb24gZ3VpZGUgZnJvbSB2NSBhcyBhIG1lYW5zIG9mIGRpc2FtYmlndWF0aW9uIGJldHdlZW4gYHRvYCB2YWx1ZXNcbiAgLy8gdGhhdCBiZWdpbiB3aXRoIGAvYCBhbmQgdGhvc2UgdGhhdCBkbyBub3QuIEhvd2V2ZXIsIHRoaXMgaXMgcHJvYmxlbWF0aWMgZm9yXG4gIC8vIGB0b2AgdmFsdWVzIHRoYXQgZG8gbm90IHByb3ZpZGUgYSBwYXRobmFtZS4gYHRvYCBjYW4gc2ltcGx5IGJlIGEgc2VhcmNoIG9yXG4gIC8vIGhhc2ggc3RyaW5nLCBpbiB3aGljaCBjYXNlIHdlIHNob3VsZCBhc3N1bWUgdGhhdCB0aGUgbmF2aWdhdGlvbiBpcyByZWxhdGl2ZVxuICAvLyB0byB0aGUgY3VycmVudCBsb2NhdGlvbidzIHBhdGhuYW1lIGFuZCAqbm90KiB0aGUgcm91dGUgcGF0aG5hbWUuXG5cbiAgbGV0IGZyb207XG5cbiAgaWYgKHRvUGF0aG5hbWUgPT0gbnVsbCkge1xuICAgIGZyb20gPSBsb2NhdGlvblBhdGhuYW1lO1xuICB9IGVsc2Uge1xuICAgIGxldCByb3V0ZVBhdGhuYW1lSW5kZXggPSByb3V0ZVBhdGhuYW1lcy5sZW5ndGggLSAxO1xuXG4gICAgaWYgKHRvUGF0aG5hbWUuc3RhcnRzV2l0aChcIi4uXCIpKSB7XG4gICAgICBsZXQgdG9TZWdtZW50cyA9IHRvUGF0aG5hbWUuc3BsaXQoXCIvXCIpOyAvLyBFYWNoIGxlYWRpbmcgLi4gc2VnbWVudCBtZWFucyBcImdvIHVwIG9uZSByb3V0ZVwiIGluc3RlYWQgb2YgXCJnbyB1cCBvbmVcbiAgICAgIC8vIFVSTCBzZWdtZW50XCIuICBUaGlzIGlzIGEga2V5IGRpZmZlcmVuY2UgZnJvbSBob3cgPGEgaHJlZj4gd29ya3MgYW5kIGFcbiAgICAgIC8vIG1ham9yIHJlYXNvbiB3ZSBjYWxsIHRoaXMgYSBcInRvXCIgdmFsdWUgaW5zdGVhZCBvZiBhIFwiaHJlZlwiLlxuXG4gICAgICB3aGlsZSAodG9TZWdtZW50c1swXSA9PT0gXCIuLlwiKSB7XG4gICAgICAgIHRvU2VnbWVudHMuc2hpZnQoKTtcbiAgICAgICAgcm91dGVQYXRobmFtZUluZGV4IC09IDE7XG4gICAgICB9XG5cbiAgICAgIHRvLnBhdGhuYW1lID0gdG9TZWdtZW50cy5qb2luKFwiL1wiKTtcbiAgICB9IC8vIElmIHRoZXJlIGFyZSBtb3JlIFwiLi5cIiBzZWdtZW50cyB0aGFuIHBhcmVudCByb3V0ZXMsIHJlc29sdmUgcmVsYXRpdmUgdG9cbiAgICAvLyB0aGUgcm9vdCAvIFVSTC5cblxuXG4gICAgZnJvbSA9IHJvdXRlUGF0aG5hbWVJbmRleCA+PSAwID8gcm91dGVQYXRobmFtZXNbcm91dGVQYXRobmFtZUluZGV4XSA6IFwiL1wiO1xuICB9XG5cbiAgbGV0IHBhdGggPSByZXNvbHZlUGF0aCh0bywgZnJvbSk7IC8vIEVuc3VyZSB0aGUgcGF0aG5hbWUgaGFzIGEgdHJhaWxpbmcgc2xhc2ggaWYgdGhlIG9yaWdpbmFsIHRvIHZhbHVlIGhhZCBvbmUuXG5cbiAgaWYgKHRvUGF0aG5hbWUgJiYgdG9QYXRobmFtZSAhPT0gXCIvXCIgJiYgdG9QYXRobmFtZS5lbmRzV2l0aChcIi9cIikgJiYgIXBhdGgucGF0aG5hbWUuZW5kc1dpdGgoXCIvXCIpKSB7XG4gICAgcGF0aC5wYXRobmFtZSArPSBcIi9cIjtcbiAgfVxuXG4gIHJldHVybiBwYXRoO1xufVxuZnVuY3Rpb24gZ2V0VG9QYXRobmFtZSh0bykge1xuICAvLyBFbXB0eSBzdHJpbmdzIHNob3VsZCBiZSB0cmVhdGVkIHRoZSBzYW1lIGFzIC8gcGF0aHNcbiAgcmV0dXJuIHRvID09PSBcIlwiIHx8IHRvLnBhdGhuYW1lID09PSBcIlwiID8gXCIvXCIgOiB0eXBlb2YgdG8gPT09IFwic3RyaW5nXCIgPyBwYXJzZVBhdGgodG8pLnBhdGhuYW1lIDogdG8ucGF0aG5hbWU7XG59XG5mdW5jdGlvbiBzdHJpcEJhc2VuYW1lKHBhdGhuYW1lLCBiYXNlbmFtZSkge1xuICBpZiAoYmFzZW5hbWUgPT09IFwiL1wiKSByZXR1cm4gcGF0aG5hbWU7XG5cbiAgaWYgKCFwYXRobmFtZS50b0xvd2VyQ2FzZSgpLnN0YXJ0c1dpdGgoYmFzZW5hbWUudG9Mb3dlckNhc2UoKSkpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGxldCBuZXh0Q2hhciA9IHBhdGhuYW1lLmNoYXJBdChiYXNlbmFtZS5sZW5ndGgpO1xuXG4gIGlmIChuZXh0Q2hhciAmJiBuZXh0Q2hhciAhPT0gXCIvXCIpIHtcbiAgICAvLyBwYXRobmFtZSBkb2VzIG5vdCBzdGFydCB3aXRoIGJhc2VuYW1lL1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcmV0dXJuIHBhdGhuYW1lLnNsaWNlKGJhc2VuYW1lLmxlbmd0aCkgfHwgXCIvXCI7XG59XG5jb25zdCBqb2luUGF0aHMgPSBwYXRocyA9PiBwYXRocy5qb2luKFwiL1wiKS5yZXBsYWNlKC9cXC9cXC8rL2csIFwiL1wiKTtcbmNvbnN0IG5vcm1hbGl6ZVBhdGhuYW1lID0gcGF0aG5hbWUgPT4gcGF0aG5hbWUucmVwbGFjZSgvXFwvKyQvLCBcIlwiKS5yZXBsYWNlKC9eXFwvKi8sIFwiL1wiKTtcblxuY29uc3Qgbm9ybWFsaXplU2VhcmNoID0gc2VhcmNoID0+ICFzZWFyY2ggfHwgc2VhcmNoID09PSBcIj9cIiA/IFwiXCIgOiBzZWFyY2guc3RhcnRzV2l0aChcIj9cIikgPyBzZWFyY2ggOiBcIj9cIiArIHNlYXJjaDtcblxuY29uc3Qgbm9ybWFsaXplSGFzaCA9IGhhc2ggPT4gIWhhc2ggfHwgaGFzaCA9PT0gXCIjXCIgPyBcIlwiIDogaGFzaC5zdGFydHNXaXRoKFwiI1wiKSA/IGhhc2ggOiBcIiNcIiArIGhhc2g7XG5cbi8qKlxuICogUmV0dXJucyB0aGUgZnVsbCBocmVmIGZvciB0aGUgZ2l2ZW4gXCJ0b1wiIHZhbHVlLiBUaGlzIGlzIHVzZWZ1bCBmb3IgYnVpbGRpbmdcbiAqIGN1c3RvbSBsaW5rcyB0aGF0IGFyZSBhbHNvIGFjY2Vzc2libGUgYW5kIHByZXNlcnZlIHJpZ2h0LWNsaWNrIGJlaGF2aW9yLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjdXNlaHJlZlxuICovXG5cbmZ1bmN0aW9uIHVzZUhyZWYodG8pIHtcbiAgIXVzZUluUm91dGVyQ29udGV4dCgpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAvLyBUT0RPOiBUaGlzIGVycm9yIGlzIHByb2JhYmx5IGJlY2F1c2UgdGhleSBzb21laG93IGhhdmUgMiB2ZXJzaW9ucyBvZiB0aGVcbiAgLy8gcm91dGVyIGxvYWRlZC4gV2UgY2FuIGhlbHAgdGhlbSB1bmRlcnN0YW5kIGhvdyB0byBhdm9pZCB0aGF0LlxuICBcInVzZUhyZWYoKSBtYXkgYmUgdXNlZCBvbmx5IGluIHRoZSBjb250ZXh0IG9mIGEgPFJvdXRlcj4gY29tcG9uZW50LlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIGxldCB7XG4gICAgYmFzZW5hbWUsXG4gICAgbmF2aWdhdG9yXG4gIH0gPSB1c2VDb250ZXh0KE5hdmlnYXRpb25Db250ZXh0KTtcbiAgbGV0IHtcbiAgICBoYXNoLFxuICAgIHBhdGhuYW1lLFxuICAgIHNlYXJjaFxuICB9ID0gdXNlUmVzb2x2ZWRQYXRoKHRvKTtcbiAgbGV0IGpvaW5lZFBhdGhuYW1lID0gcGF0aG5hbWU7XG5cbiAgaWYgKGJhc2VuYW1lICE9PSBcIi9cIikge1xuICAgIGxldCB0b1BhdGhuYW1lID0gZ2V0VG9QYXRobmFtZSh0byk7XG4gICAgbGV0IGVuZHNXaXRoU2xhc2ggPSB0b1BhdGhuYW1lICE9IG51bGwgJiYgdG9QYXRobmFtZS5lbmRzV2l0aChcIi9cIik7XG4gICAgam9pbmVkUGF0aG5hbWUgPSBwYXRobmFtZSA9PT0gXCIvXCIgPyBiYXNlbmFtZSArIChlbmRzV2l0aFNsYXNoID8gXCIvXCIgOiBcIlwiKSA6IGpvaW5QYXRocyhbYmFzZW5hbWUsIHBhdGhuYW1lXSk7XG4gIH1cblxuICByZXR1cm4gbmF2aWdhdG9yLmNyZWF0ZUhyZWYoe1xuICAgIHBhdGhuYW1lOiBqb2luZWRQYXRobmFtZSxcbiAgICBzZWFyY2gsXG4gICAgaGFzaFxuICB9KTtcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoaXMgY29tcG9uZW50IGlzIGEgZGVzY2VuZGFudCBvZiBhIDxSb3V0ZXI+LlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjdXNlaW5yb3V0ZXJjb250ZXh0XG4gKi9cblxuZnVuY3Rpb24gdXNlSW5Sb3V0ZXJDb250ZXh0KCkge1xuICByZXR1cm4gdXNlQ29udGV4dChMb2NhdGlvbkNvbnRleHQpICE9IG51bGw7XG59XG4vKipcbiAqIFJldHVybnMgdGhlIGN1cnJlbnQgbG9jYXRpb24gb2JqZWN0LCB3aGljaCByZXByZXNlbnRzIHRoZSBjdXJyZW50IFVSTCBpbiB3ZWJcbiAqIGJyb3dzZXJzLlxuICpcbiAqIE5vdGU6IElmIHlvdSdyZSB1c2luZyB0aGlzIGl0IG1heSBtZWFuIHlvdSdyZSBkb2luZyBzb21lIG9mIHlvdXIgb3duXG4gKiBcInJvdXRpbmdcIiBpbiB5b3VyIGFwcCwgYW5kIHdlJ2QgbGlrZSB0byBrbm93IHdoYXQgeW91ciB1c2UgY2FzZSBpcy4gV2UgbWF5XG4gKiBiZSBhYmxlIHRvIHByb3ZpZGUgc29tZXRoaW5nIGhpZ2hlci1sZXZlbCB0byBiZXR0ZXIgc3VpdCB5b3VyIG5lZWRzLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjdXNlbG9jYXRpb25cbiAqL1xuXG5mdW5jdGlvbiB1c2VMb2NhdGlvbigpIHtcbiAgIXVzZUluUm91dGVyQ29udGV4dCgpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAvLyBUT0RPOiBUaGlzIGVycm9yIGlzIHByb2JhYmx5IGJlY2F1c2UgdGhleSBzb21laG93IGhhdmUgMiB2ZXJzaW9ucyBvZiB0aGVcbiAgLy8gcm91dGVyIGxvYWRlZC4gV2UgY2FuIGhlbHAgdGhlbSB1bmRlcnN0YW5kIGhvdyB0byBhdm9pZCB0aGF0LlxuICBcInVzZUxvY2F0aW9uKCkgbWF5IGJlIHVzZWQgb25seSBpbiB0aGUgY29udGV4dCBvZiBhIDxSb3V0ZXI+IGNvbXBvbmVudC5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICByZXR1cm4gdXNlQ29udGV4dChMb2NhdGlvbkNvbnRleHQpLmxvY2F0aW9uO1xufVxuLyoqXG4gKiBSZXR1cm5zIHRoZSBjdXJyZW50IG5hdmlnYXRpb24gYWN0aW9uIHdoaWNoIGRlc2NyaWJlcyBob3cgdGhlIHJvdXRlciBjYW1lIHRvXG4gKiB0aGUgY3VycmVudCBsb2NhdGlvbiwgZWl0aGVyIGJ5IGEgcG9wLCBwdXNoLCBvciByZXBsYWNlIG9uIHRoZSBoaXN0b3J5IHN0YWNrLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjdXNlbmF2aWdhdGlvbnR5cGVcbiAqL1xuXG5mdW5jdGlvbiB1c2VOYXZpZ2F0aW9uVHlwZSgpIHtcbiAgcmV0dXJuIHVzZUNvbnRleHQoTG9jYXRpb25Db250ZXh0KS5uYXZpZ2F0aW9uVHlwZTtcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoZSBVUkwgZm9yIHRoZSBnaXZlbiBcInRvXCIgdmFsdWUgbWF0Y2hlcyB0aGUgY3VycmVudCBVUkwuXG4gKiBUaGlzIGlzIHVzZWZ1bCBmb3IgY29tcG9uZW50cyB0aGF0IG5lZWQgdG8ga25vdyBcImFjdGl2ZVwiIHN0YXRlLCBlLmcuXG4gKiA8TmF2TGluaz4uXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2FwaSN1c2VtYXRjaFxuICovXG5cbmZ1bmN0aW9uIHVzZU1hdGNoKHBhdHRlcm4pIHtcbiAgIXVzZUluUm91dGVyQ29udGV4dCgpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAvLyBUT0RPOiBUaGlzIGVycm9yIGlzIHByb2JhYmx5IGJlY2F1c2UgdGhleSBzb21laG93IGhhdmUgMiB2ZXJzaW9ucyBvZiB0aGVcbiAgLy8gcm91dGVyIGxvYWRlZC4gV2UgY2FuIGhlbHAgdGhlbSB1bmRlcnN0YW5kIGhvdyB0byBhdm9pZCB0aGF0LlxuICBcInVzZU1hdGNoKCkgbWF5IGJlIHVzZWQgb25seSBpbiB0aGUgY29udGV4dCBvZiBhIDxSb3V0ZXI+IGNvbXBvbmVudC5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICBsZXQge1xuICAgIHBhdGhuYW1lXG4gIH0gPSB1c2VMb2NhdGlvbigpO1xuICByZXR1cm4gdXNlTWVtbygoKSA9PiBtYXRjaFBhdGgocGF0dGVybiwgcGF0aG5hbWUpLCBbcGF0aG5hbWUsIHBhdHRlcm5dKTtcbn1cbi8qKlxuICogVGhlIGludGVyZmFjZSBmb3IgdGhlIG5hdmlnYXRlKCkgZnVuY3Rpb24gcmV0dXJuZWQgZnJvbSB1c2VOYXZpZ2F0ZSgpLlxuICovXG5cbi8qKlxuICogUmV0dXJucyBhbiBpbXBlcmF0aXZlIG1ldGhvZCBmb3IgY2hhbmdpbmcgdGhlIGxvY2F0aW9uLiBVc2VkIGJ5IDxMaW5rPnMsIGJ1dFxuICogbWF5IGFsc28gYmUgdXNlZCBieSBvdGhlciBlbGVtZW50cyB0byBjaGFuZ2UgdGhlIGxvY2F0aW9uLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjdXNlbmF2aWdhdGVcbiAqL1xuZnVuY3Rpb24gdXNlTmF2aWdhdGUoKSB7XG4gICF1c2VJblJvdXRlckNvbnRleHQoKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgLy8gVE9ETzogVGhpcyBlcnJvciBpcyBwcm9iYWJseSBiZWNhdXNlIHRoZXkgc29tZWhvdyBoYXZlIDIgdmVyc2lvbnMgb2YgdGhlXG4gIC8vIHJvdXRlciBsb2FkZWQuIFdlIGNhbiBoZWxwIHRoZW0gdW5kZXJzdGFuZCBob3cgdG8gYXZvaWQgdGhhdC5cbiAgXCJ1c2VOYXZpZ2F0ZSgpIG1heSBiZSB1c2VkIG9ubHkgaW4gdGhlIGNvbnRleHQgb2YgYSA8Um91dGVyPiBjb21wb25lbnQuXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgbGV0IHtcbiAgICBiYXNlbmFtZSxcbiAgICBuYXZpZ2F0b3JcbiAgfSA9IHVzZUNvbnRleHQoTmF2aWdhdGlvbkNvbnRleHQpO1xuICBsZXQge1xuICAgIG1hdGNoZXNcbiAgfSA9IHVzZUNvbnRleHQoUm91dGVDb250ZXh0KTtcbiAgbGV0IHtcbiAgICBwYXRobmFtZTogbG9jYXRpb25QYXRobmFtZVxuICB9ID0gdXNlTG9jYXRpb24oKTtcbiAgbGV0IHJvdXRlUGF0aG5hbWVzSnNvbiA9IEpTT04uc3RyaW5naWZ5KG1hdGNoZXMubWFwKG1hdGNoID0+IG1hdGNoLnBhdGhuYW1lQmFzZSkpO1xuICBsZXQgYWN0aXZlUmVmID0gdXNlUmVmKGZhbHNlKTtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBhY3RpdmVSZWYuY3VycmVudCA9IHRydWU7XG4gIH0pO1xuICBsZXQgbmF2aWdhdGUgPSB1c2VDYWxsYmFjayhmdW5jdGlvbiAodG8sIG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgICBvcHRpb25zID0ge307XG4gICAgfVxuXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhhY3RpdmVSZWYuY3VycmVudCwgXCJZb3Ugc2hvdWxkIGNhbGwgbmF2aWdhdGUoKSBpbiBhIFJlYWN0LnVzZUVmZmVjdCgpLCBub3Qgd2hlbiBcIiArIFwieW91ciBjb21wb25lbnQgaXMgZmlyc3QgcmVuZGVyZWQuXCIpIDogdm9pZCAwO1xuICAgIGlmICghYWN0aXZlUmVmLmN1cnJlbnQpIHJldHVybjtcblxuICAgIGlmICh0eXBlb2YgdG8gPT09IFwibnVtYmVyXCIpIHtcbiAgICAgIG5hdmlnYXRvci5nbyh0byk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgbGV0IHBhdGggPSByZXNvbHZlVG8odG8sIEpTT04ucGFyc2Uocm91dGVQYXRobmFtZXNKc29uKSwgbG9jYXRpb25QYXRobmFtZSk7XG5cbiAgICBpZiAoYmFzZW5hbWUgIT09IFwiL1wiKSB7XG4gICAgICBwYXRoLnBhdGhuYW1lID0gam9pblBhdGhzKFtiYXNlbmFtZSwgcGF0aC5wYXRobmFtZV0pO1xuICAgIH1cblxuICAgICghIW9wdGlvbnMucmVwbGFjZSA/IG5hdmlnYXRvci5yZXBsYWNlIDogbmF2aWdhdG9yLnB1c2gpKHBhdGgsIG9wdGlvbnMuc3RhdGUpO1xuICB9LCBbYmFzZW5hbWUsIG5hdmlnYXRvciwgcm91dGVQYXRobmFtZXNKc29uLCBsb2NhdGlvblBhdGhuYW1lXSk7XG4gIHJldHVybiBuYXZpZ2F0ZTtcbn1cbmNvbnN0IE91dGxldENvbnRleHQgPSAvKiNfX1BVUkVfXyovY3JlYXRlQ29udGV4dChudWxsKTtcbi8qKlxuICogUmV0dXJucyB0aGUgY29udGV4dCAoaWYgcHJvdmlkZWQpIGZvciB0aGUgY2hpbGQgcm91dGUgYXQgdGhpcyBsZXZlbCBvZiB0aGUgcm91dGVcbiAqIGhpZXJhcmNoeS5cbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjdXNlb3V0bGV0Y29udGV4dFxuICovXG5cbmZ1bmN0aW9uIHVzZU91dGxldENvbnRleHQoKSB7XG4gIHJldHVybiB1c2VDb250ZXh0KE91dGxldENvbnRleHQpO1xufVxuLyoqXG4gKiBSZXR1cm5zIHRoZSBlbGVtZW50IGZvciB0aGUgY2hpbGQgcm91dGUgYXQgdGhpcyBsZXZlbCBvZiB0aGUgcm91dGVcbiAqIGhpZXJhcmNoeS4gVXNlZCBpbnRlcm5hbGx5IGJ5IDxPdXRsZXQ+IHRvIHJlbmRlciBjaGlsZCByb3V0ZXMuXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2FwaSN1c2VvdXRsZXRcbiAqL1xuXG5mdW5jdGlvbiB1c2VPdXRsZXQoY29udGV4dCkge1xuICBsZXQgb3V0bGV0ID0gdXNlQ29udGV4dChSb3V0ZUNvbnRleHQpLm91dGxldDtcblxuICBpZiAob3V0bGV0KSB7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9jcmVhdGVFbGVtZW50KE91dGxldENvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgIHZhbHVlOiBjb250ZXh0XG4gICAgfSwgb3V0bGV0KTtcbiAgfVxuXG4gIHJldHVybiBvdXRsZXQ7XG59XG4vKipcbiAqIFJldHVybnMgYW4gb2JqZWN0IG9mIGtleS92YWx1ZSBwYWlycyBvZiB0aGUgZHluYW1pYyBwYXJhbXMgZnJvbSB0aGUgY3VycmVudFxuICogVVJMIHRoYXQgd2VyZSBtYXRjaGVkIGJ5IHRoZSByb3V0ZSBwYXRoLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjdXNlcGFyYW1zXG4gKi9cblxuZnVuY3Rpb24gdXNlUGFyYW1zKCkge1xuICBsZXQge1xuICAgIG1hdGNoZXNcbiAgfSA9IHVzZUNvbnRleHQoUm91dGVDb250ZXh0KTtcbiAgbGV0IHJvdXRlTWF0Y2ggPSBtYXRjaGVzW21hdGNoZXMubGVuZ3RoIC0gMV07XG4gIHJldHVybiByb3V0ZU1hdGNoID8gcm91dGVNYXRjaC5wYXJhbXMgOiB7fTtcbn1cbi8qKlxuICogUmVzb2x2ZXMgdGhlIHBhdGhuYW1lIG9mIHRoZSBnaXZlbiBgdG9gIHZhbHVlIGFnYWluc3QgdGhlIGN1cnJlbnQgbG9jYXRpb24uXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2FwaSN1c2VyZXNvbHZlZHBhdGhcbiAqL1xuXG5mdW5jdGlvbiB1c2VSZXNvbHZlZFBhdGgodG8pIHtcbiAgbGV0IHtcbiAgICBtYXRjaGVzXG4gIH0gPSB1c2VDb250ZXh0KFJvdXRlQ29udGV4dCk7XG4gIGxldCB7XG4gICAgcGF0aG5hbWU6IGxvY2F0aW9uUGF0aG5hbWVcbiAgfSA9IHVzZUxvY2F0aW9uKCk7XG4gIGxldCByb3V0ZVBhdGhuYW1lc0pzb24gPSBKU09OLnN0cmluZ2lmeShtYXRjaGVzLm1hcChtYXRjaCA9PiBtYXRjaC5wYXRobmFtZUJhc2UpKTtcbiAgcmV0dXJuIHVzZU1lbW8oKCkgPT4gcmVzb2x2ZVRvKHRvLCBKU09OLnBhcnNlKHJvdXRlUGF0aG5hbWVzSnNvbiksIGxvY2F0aW9uUGF0aG5hbWUpLCBbdG8sIHJvdXRlUGF0aG5hbWVzSnNvbiwgbG9jYXRpb25QYXRobmFtZV0pO1xufVxuLyoqXG4gKiBSZXR1cm5zIHRoZSBlbGVtZW50IG9mIHRoZSByb3V0ZSB0aGF0IG1hdGNoZWQgdGhlIGN1cnJlbnQgbG9jYXRpb24sIHByZXBhcmVkXG4gKiB3aXRoIHRoZSBjb3JyZWN0IGNvbnRleHQgdG8gcmVuZGVyIHRoZSByZW1haW5kZXIgb2YgdGhlIHJvdXRlIHRyZWUuIFJvdXRlXG4gKiBlbGVtZW50cyBpbiB0aGUgdHJlZSBtdXN0IHJlbmRlciBhbiA8T3V0bGV0PiB0byByZW5kZXIgdGhlaXIgY2hpbGQgcm91dGUnc1xuICogZWxlbWVudC5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3Ryb3V0ZXIuY29tL2RvY3MvZW4vdjYvYXBpI3VzZXJvdXRlc1xuICovXG5cbmZ1bmN0aW9uIHVzZVJvdXRlcyhyb3V0ZXMsIGxvY2F0aW9uQXJnKSB7XG4gICF1c2VJblJvdXRlckNvbnRleHQoKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgLy8gVE9ETzogVGhpcyBlcnJvciBpcyBwcm9iYWJseSBiZWNhdXNlIHRoZXkgc29tZWhvdyBoYXZlIDIgdmVyc2lvbnMgb2YgdGhlXG4gIC8vIHJvdXRlciBsb2FkZWQuIFdlIGNhbiBoZWxwIHRoZW0gdW5kZXJzdGFuZCBob3cgdG8gYXZvaWQgdGhhdC5cbiAgXCJ1c2VSb3V0ZXMoKSBtYXkgYmUgdXNlZCBvbmx5IGluIHRoZSBjb250ZXh0IG9mIGEgPFJvdXRlcj4gY29tcG9uZW50LlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIGxldCB7XG4gICAgbWF0Y2hlczogcGFyZW50TWF0Y2hlc1xuICB9ID0gdXNlQ29udGV4dChSb3V0ZUNvbnRleHQpO1xuICBsZXQgcm91dGVNYXRjaCA9IHBhcmVudE1hdGNoZXNbcGFyZW50TWF0Y2hlcy5sZW5ndGggLSAxXTtcbiAgbGV0IHBhcmVudFBhcmFtcyA9IHJvdXRlTWF0Y2ggPyByb3V0ZU1hdGNoLnBhcmFtcyA6IHt9O1xuICBsZXQgcGFyZW50UGF0aG5hbWUgPSByb3V0ZU1hdGNoID8gcm91dGVNYXRjaC5wYXRobmFtZSA6IFwiL1wiO1xuICBsZXQgcGFyZW50UGF0aG5hbWVCYXNlID0gcm91dGVNYXRjaCA/IHJvdXRlTWF0Y2gucGF0aG5hbWVCYXNlIDogXCIvXCI7XG4gIGxldCBwYXJlbnRSb3V0ZSA9IHJvdXRlTWF0Y2ggJiYgcm91dGVNYXRjaC5yb3V0ZTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgLy8gWW91IHdvbid0IGdldCBhIHdhcm5pbmcgYWJvdXQgMiBkaWZmZXJlbnQgPFJvdXRlcz4gdW5kZXIgYSA8Um91dGU+XG4gICAgLy8gd2l0aG91dCBhIHRyYWlsaW5nICosIGJ1dCB0aGlzIGlzIGEgYmVzdC1lZmZvcnQgd2FybmluZyBhbnl3YXkgc2luY2Ugd2VcbiAgICAvLyBjYW5ub3QgZXZlbiBnaXZlIHRoZSB3YXJuaW5nIHVubGVzcyB0aGV5IGxhbmQgYXQgdGhlIHBhcmVudCByb3V0ZS5cbiAgICAvL1xuICAgIC8vIEV4YW1wbGU6XG4gICAgLy9cbiAgICAvLyA8Um91dGVzPlxuICAgIC8vICAgey8qIFRoaXMgcm91dGUgcGF0aCBNVVNUIGVuZCB3aXRoIC8qIGJlY2F1c2Ugb3RoZXJ3aXNlXG4gICAgLy8gICAgICAgaXQgd2lsbCBuZXZlciBtYXRjaCAvYmxvZy9wb3N0LzEyMyAqL31cbiAgICAvLyAgIDxSb3V0ZSBwYXRoPVwiYmxvZ1wiIGVsZW1lbnQ9ezxCbG9nIC8+fSAvPlxuICAgIC8vICAgPFJvdXRlIHBhdGg9XCJibG9nL2ZlZWRcIiBlbGVtZW50PXs8QmxvZ0ZlZWQgLz59IC8+XG4gICAgLy8gPC9Sb3V0ZXM+XG4gICAgLy9cbiAgICAvLyBmdW5jdGlvbiBCbG9nKCkge1xuICAgIC8vICAgcmV0dXJuIChcbiAgICAvLyAgICAgPFJvdXRlcz5cbiAgICAvLyAgICAgICA8Um91dGUgcGF0aD1cInBvc3QvOmlkXCIgZWxlbWVudD17PFBvc3QgLz59IC8+XG4gICAgLy8gICAgIDwvUm91dGVzPlxuICAgIC8vICAgKTtcbiAgICAvLyB9XG4gICAgbGV0IHBhcmVudFBhdGggPSBwYXJlbnRSb3V0ZSAmJiBwYXJlbnRSb3V0ZS5wYXRoIHx8IFwiXCI7XG4gICAgd2FybmluZ09uY2UocGFyZW50UGF0aG5hbWUsICFwYXJlbnRSb3V0ZSB8fCBwYXJlbnRQYXRoLmVuZHNXaXRoKFwiKlwiKSwgXCJZb3UgcmVuZGVyZWQgZGVzY2VuZGFudCA8Um91dGVzPiAob3IgY2FsbGVkIGB1c2VSb3V0ZXMoKWApIGF0IFwiICsgKFwiXFxcIlwiICsgcGFyZW50UGF0aG5hbWUgKyBcIlxcXCIgKHVuZGVyIDxSb3V0ZSBwYXRoPVxcXCJcIiArIHBhcmVudFBhdGggKyBcIlxcXCI+KSBidXQgdGhlIFwiKSArIFwicGFyZW50IHJvdXRlIHBhdGggaGFzIG5vIHRyYWlsaW5nIFxcXCIqXFxcIi4gVGhpcyBtZWFucyBpZiB5b3UgbmF2aWdhdGUgXCIgKyBcImRlZXBlciwgdGhlIHBhcmVudCB3b24ndCBtYXRjaCBhbnltb3JlIGFuZCB0aGVyZWZvcmUgdGhlIGNoaWxkIFwiICsgXCJyb3V0ZXMgd2lsbCBuZXZlciByZW5kZXIuXFxuXFxuXCIgKyAoXCJQbGVhc2UgY2hhbmdlIHRoZSBwYXJlbnQgPFJvdXRlIHBhdGg9XFxcIlwiICsgcGFyZW50UGF0aCArIFwiXFxcIj4gdG8gPFJvdXRlIFwiKSArIChcInBhdGg9XFxcIlwiICsgKHBhcmVudFBhdGggPT09IFwiL1wiID8gXCIqXCIgOiBwYXJlbnRQYXRoICsgXCIvKlwiKSArIFwiXFxcIj4uXCIpKTtcbiAgfVxuXG4gIGxldCBsb2NhdGlvbkZyb21Db250ZXh0ID0gdXNlTG9jYXRpb24oKTtcbiAgbGV0IGxvY2F0aW9uO1xuXG4gIGlmIChsb2NhdGlvbkFyZykge1xuICAgIHZhciBfcGFyc2VkTG9jYXRpb25BcmckcGE7XG5cbiAgICBsZXQgcGFyc2VkTG9jYXRpb25BcmcgPSB0eXBlb2YgbG9jYXRpb25BcmcgPT09IFwic3RyaW5nXCIgPyBwYXJzZVBhdGgobG9jYXRpb25BcmcpIDogbG9jYXRpb25Bcmc7XG4gICAgIShwYXJlbnRQYXRobmFtZUJhc2UgPT09IFwiL1wiIHx8ICgoX3BhcnNlZExvY2F0aW9uQXJnJHBhID0gcGFyc2VkTG9jYXRpb25BcmcucGF0aG5hbWUpID09IG51bGwgPyB2b2lkIDAgOiBfcGFyc2VkTG9jYXRpb25BcmckcGEuc3RhcnRzV2l0aChwYXJlbnRQYXRobmFtZUJhc2UpKSkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiV2hlbiBvdmVycmlkaW5nIHRoZSBsb2NhdGlvbiB1c2luZyBgPFJvdXRlcyBsb2NhdGlvbj5gIG9yIGB1c2VSb3V0ZXMocm91dGVzLCBsb2NhdGlvbilgLCBcIiArIFwidGhlIGxvY2F0aW9uIHBhdGhuYW1lIG11c3QgYmVnaW4gd2l0aCB0aGUgcG9ydGlvbiBvZiB0aGUgVVJMIHBhdGhuYW1lIHRoYXQgd2FzIFwiICsgKFwibWF0Y2hlZCBieSBhbGwgcGFyZW50IHJvdXRlcy4gVGhlIGN1cnJlbnQgcGF0aG5hbWUgYmFzZSBpcyBcXFwiXCIgKyBwYXJlbnRQYXRobmFtZUJhc2UgKyBcIlxcXCIgXCIpICsgKFwiYnV0IHBhdGhuYW1lIFxcXCJcIiArIHBhcnNlZExvY2F0aW9uQXJnLnBhdGhuYW1lICsgXCJcXFwiIHdhcyBnaXZlbiBpbiB0aGUgYGxvY2F0aW9uYCBwcm9wLlwiKSkgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIGxvY2F0aW9uID0gcGFyc2VkTG9jYXRpb25Bcmc7XG4gIH0gZWxzZSB7XG4gICAgbG9jYXRpb24gPSBsb2NhdGlvbkZyb21Db250ZXh0O1xuICB9XG5cbiAgbGV0IHBhdGhuYW1lID0gbG9jYXRpb24ucGF0aG5hbWUgfHwgXCIvXCI7XG4gIGxldCByZW1haW5pbmdQYXRobmFtZSA9IHBhcmVudFBhdGhuYW1lQmFzZSA9PT0gXCIvXCIgPyBwYXRobmFtZSA6IHBhdGhuYW1lLnNsaWNlKHBhcmVudFBhdGhuYW1lQmFzZS5sZW5ndGgpIHx8IFwiL1wiO1xuICBsZXQgbWF0Y2hlcyA9IG1hdGNoUm91dGVzKHJvdXRlcywge1xuICAgIHBhdGhuYW1lOiByZW1haW5pbmdQYXRobmFtZVxuICB9KTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhwYXJlbnRSb3V0ZSB8fCBtYXRjaGVzICE9IG51bGwsIFwiTm8gcm91dGVzIG1hdGNoZWQgbG9jYXRpb24gXFxcIlwiICsgbG9jYXRpb24ucGF0aG5hbWUgKyBsb2NhdGlvbi5zZWFyY2ggKyBsb2NhdGlvbi5oYXNoICsgXCJcXFwiIFwiKSA6IHZvaWQgMDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKG1hdGNoZXMgPT0gbnVsbCB8fCBtYXRjaGVzW21hdGNoZXMubGVuZ3RoIC0gMV0ucm91dGUuZWxlbWVudCAhPT0gdW5kZWZpbmVkLCBcIk1hdGNoZWQgbGVhZiByb3V0ZSBhdCBsb2NhdGlvbiBcXFwiXCIgKyBsb2NhdGlvbi5wYXRobmFtZSArIGxvY2F0aW9uLnNlYXJjaCArIGxvY2F0aW9uLmhhc2ggKyBcIlxcXCIgZG9lcyBub3QgaGF2ZSBhbiBlbGVtZW50LiBcIiArIFwiVGhpcyBtZWFucyBpdCB3aWxsIHJlbmRlciBhbiA8T3V0bGV0IC8+IHdpdGggYSBudWxsIHZhbHVlIGJ5IGRlZmF1bHQgcmVzdWx0aW5nIGluIGFuIFxcXCJlbXB0eVxcXCIgcGFnZS5cIikgOiB2b2lkIDA7XG4gIH1cblxuICByZXR1cm4gX3JlbmRlck1hdGNoZXMobWF0Y2hlcyAmJiBtYXRjaGVzLm1hcChtYXRjaCA9PiBPYmplY3QuYXNzaWduKHt9LCBtYXRjaCwge1xuICAgIHBhcmFtczogT2JqZWN0LmFzc2lnbih7fSwgcGFyZW50UGFyYW1zLCBtYXRjaC5wYXJhbXMpLFxuICAgIHBhdGhuYW1lOiBqb2luUGF0aHMoW3BhcmVudFBhdGhuYW1lQmFzZSwgbWF0Y2gucGF0aG5hbWVdKSxcbiAgICBwYXRobmFtZUJhc2U6IG1hdGNoLnBhdGhuYW1lQmFzZSA9PT0gXCIvXCIgPyBwYXJlbnRQYXRobmFtZUJhc2UgOiBqb2luUGF0aHMoW3BhcmVudFBhdGhuYW1lQmFzZSwgbWF0Y2gucGF0aG5hbWVCYXNlXSlcbiAgfSkpLCBwYXJlbnRNYXRjaGVzKTtcbn1cbmZ1bmN0aW9uIF9yZW5kZXJNYXRjaGVzKG1hdGNoZXMsIHBhcmVudE1hdGNoZXMpIHtcbiAgaWYgKHBhcmVudE1hdGNoZXMgPT09IHZvaWQgMCkge1xuICAgIHBhcmVudE1hdGNoZXMgPSBbXTtcbiAgfVxuXG4gIGlmIChtYXRjaGVzID09IG51bGwpIHJldHVybiBudWxsO1xuICByZXR1cm4gbWF0Y2hlcy5yZWR1Y2VSaWdodCgob3V0bGV0LCBtYXRjaCwgaW5kZXgpID0+IHtcbiAgICByZXR1cm4gLyojX19QVVJFX18qL2NyZWF0ZUVsZW1lbnQoUm91dGVDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICBjaGlsZHJlbjogbWF0Y2gucm91dGUuZWxlbWVudCAhPT0gdW5kZWZpbmVkID8gbWF0Y2gucm91dGUuZWxlbWVudCA6IG91dGxldCxcbiAgICAgIHZhbHVlOiB7XG4gICAgICAgIG91dGxldCxcbiAgICAgICAgbWF0Y2hlczogcGFyZW50TWF0Y2hlcy5jb25jYXQobWF0Y2hlcy5zbGljZSgwLCBpbmRleCArIDEpKVxuICAgICAgfVxuICAgIH0pO1xuICB9LCBudWxsKTtcbn1cblxuLyoqXG4gKiBBIDxSb3V0ZXI+IHRoYXQgc3RvcmVzIGFsbCBlbnRyaWVzIGluIG1lbW9yeS5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3Ryb3V0ZXIuY29tL2RvY3MvZW4vdjYvYXBpI21lbW9yeXJvdXRlclxuICovXG5mdW5jdGlvbiBNZW1vcnlSb3V0ZXIoX3JlZikge1xuICBsZXQge1xuICAgIGJhc2VuYW1lLFxuICAgIGNoaWxkcmVuLFxuICAgIGluaXRpYWxFbnRyaWVzLFxuICAgIGluaXRpYWxJbmRleFxuICB9ID0gX3JlZjtcbiAgbGV0IGhpc3RvcnlSZWYgPSB1c2VSZWYoKTtcblxuICBpZiAoaGlzdG9yeVJlZi5jdXJyZW50ID09IG51bGwpIHtcbiAgICBoaXN0b3J5UmVmLmN1cnJlbnQgPSBjcmVhdGVNZW1vcnlIaXN0b3J5KHtcbiAgICAgIGluaXRpYWxFbnRyaWVzLFxuICAgICAgaW5pdGlhbEluZGV4XG4gICAgfSk7XG4gIH1cblxuICBsZXQgaGlzdG9yeSA9IGhpc3RvcnlSZWYuY3VycmVudDtcbiAgbGV0IFtzdGF0ZSwgc2V0U3RhdGVdID0gdXNlU3RhdGUoe1xuICAgIGFjdGlvbjogaGlzdG9yeS5hY3Rpb24sXG4gICAgbG9jYXRpb246IGhpc3RvcnkubG9jYXRpb25cbiAgfSk7XG4gIHVzZUxheW91dEVmZmVjdCgoKSA9PiBoaXN0b3J5Lmxpc3RlbihzZXRTdGF0ZSksIFtoaXN0b3J5XSk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcbiAgICBiYXNlbmFtZTogYmFzZW5hbWUsXG4gICAgY2hpbGRyZW46IGNoaWxkcmVuLFxuICAgIGxvY2F0aW9uOiBzdGF0ZS5sb2NhdGlvbixcbiAgICBuYXZpZ2F0aW9uVHlwZTogc3RhdGUuYWN0aW9uLFxuICAgIG5hdmlnYXRvcjogaGlzdG9yeVxuICB9KTtcbn1cblxuLyoqXG4gKiBDaGFuZ2VzIHRoZSBjdXJyZW50IGxvY2F0aW9uLlxuICpcbiAqIE5vdGU6IFRoaXMgQVBJIGlzIG1vc3RseSB1c2VmdWwgaW4gUmVhY3QuQ29tcG9uZW50IHN1YmNsYXNzZXMgdGhhdCBhcmUgbm90XG4gKiBhYmxlIHRvIHVzZSBob29rcy4gSW4gZnVuY3Rpb25hbCBjb21wb25lbnRzLCB3ZSByZWNvbW1lbmQgeW91IHVzZSB0aGVcbiAqIGB1c2VOYXZpZ2F0ZWAgaG9vayBpbnN0ZWFkLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjbmF2aWdhdGVcbiAqL1xuZnVuY3Rpb24gTmF2aWdhdGUoX3JlZjIpIHtcbiAgbGV0IHtcbiAgICB0byxcbiAgICByZXBsYWNlLFxuICAgIHN0YXRlXG4gIH0gPSBfcmVmMjtcbiAgIXVzZUluUm91dGVyQ29udGV4dCgpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAvLyBUT0RPOiBUaGlzIGVycm9yIGlzIHByb2JhYmx5IGJlY2F1c2UgdGhleSBzb21laG93IGhhdmUgMiB2ZXJzaW9ucyBvZlxuICAvLyB0aGUgcm91dGVyIGxvYWRlZC4gV2UgY2FuIGhlbHAgdGhlbSB1bmRlcnN0YW5kIGhvdyB0byBhdm9pZCB0aGF0LlxuICBcIjxOYXZpZ2F0ZT4gbWF5IGJlIHVzZWQgb25seSBpbiB0aGUgY29udGV4dCBvZiBhIDxSb3V0ZXI+IGNvbXBvbmVudC5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF1c2VDb250ZXh0KE5hdmlnYXRpb25Db250ZXh0KS5zdGF0aWMsIFwiPE5hdmlnYXRlPiBtdXN0IG5vdCBiZSB1c2VkIG9uIHRoZSBpbml0aWFsIHJlbmRlciBpbiBhIDxTdGF0aWNSb3V0ZXI+LiBcIiArIFwiVGhpcyBpcyBhIG5vLW9wLCBidXQgeW91IHNob3VsZCBtb2RpZnkgeW91ciBjb2RlIHNvIHRoZSA8TmF2aWdhdGU+IGlzIFwiICsgXCJvbmx5IGV2ZXIgcmVuZGVyZWQgaW4gcmVzcG9uc2UgdG8gc29tZSB1c2VyIGludGVyYWN0aW9uIG9yIHN0YXRlIGNoYW5nZS5cIikgOiB2b2lkIDA7XG4gIGxldCBuYXZpZ2F0ZSA9IHVzZU5hdmlnYXRlKCk7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgbmF2aWdhdGUodG8sIHtcbiAgICAgIHJlcGxhY2UsXG4gICAgICBzdGF0ZVxuICAgIH0pO1xuICB9KTtcbiAgcmV0dXJuIG51bGw7XG59XG5cbi8qKlxuICogUmVuZGVycyB0aGUgY2hpbGQgcm91dGUncyBlbGVtZW50LCBpZiB0aGVyZSBpcyBvbmUuXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2FwaSNvdXRsZXRcbiAqL1xuZnVuY3Rpb24gT3V0bGV0KHByb3BzKSB7XG4gIHJldHVybiB1c2VPdXRsZXQocHJvcHMuY29udGV4dCk7XG59XG5cbi8qKlxuICogRGVjbGFyZXMgYW4gZWxlbWVudCB0aGF0IHNob3VsZCBiZSByZW5kZXJlZCBhdCBhIGNlcnRhaW4gVVJMIHBhdGguXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2FwaSNyb3V0ZVxuICovXG5mdW5jdGlvbiBSb3V0ZShfcHJvcHMpIHtcbiAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJBIDxSb3V0ZT4gaXMgb25seSBldmVyIHRvIGJlIHVzZWQgYXMgdGhlIGNoaWxkIG9mIDxSb3V0ZXM+IGVsZW1lbnQsIFwiICsgXCJuZXZlciByZW5kZXJlZCBkaXJlY3RseS4gUGxlYXNlIHdyYXAgeW91ciA8Um91dGU+IGluIGEgPFJvdXRlcz4uXCIpIDogaW52YXJpYW50KGZhbHNlKSA7XG59XG5cbi8qKlxuICogUHJvdmlkZXMgbG9jYXRpb24gY29udGV4dCBmb3IgdGhlIHJlc3Qgb2YgdGhlIGFwcC5cbiAqXG4gKiBOb3RlOiBZb3UgdXN1YWxseSB3b24ndCByZW5kZXIgYSA8Um91dGVyPiBkaXJlY3RseS4gSW5zdGVhZCwgeW91J2xsIHJlbmRlciBhXG4gKiByb3V0ZXIgdGhhdCBpcyBtb3JlIHNwZWNpZmljIHRvIHlvdXIgZW52aXJvbm1lbnQgc3VjaCBhcyBhIDxCcm93c2VyUm91dGVyPlxuICogaW4gd2ViIGJyb3dzZXJzIG9yIGEgPFN0YXRpY1JvdXRlcj4gZm9yIHNlcnZlciByZW5kZXJpbmcuXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2FwaSNyb3V0ZXJcbiAqL1xuZnVuY3Rpb24gUm91dGVyKF9yZWYzKSB7XG4gIGxldCB7XG4gICAgYmFzZW5hbWU6IGJhc2VuYW1lUHJvcCA9IFwiL1wiLFxuICAgIGNoaWxkcmVuID0gbnVsbCxcbiAgICBsb2NhdGlvbjogbG9jYXRpb25Qcm9wLFxuICAgIG5hdmlnYXRpb25UeXBlID0gQWN0aW9uLlBvcCxcbiAgICBuYXZpZ2F0b3IsXG4gICAgc3RhdGljOiBzdGF0aWNQcm9wID0gZmFsc2VcbiAgfSA9IF9yZWYzO1xuICAhIXVzZUluUm91dGVyQ29udGV4dCgpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBjYW5ub3QgcmVuZGVyIGEgPFJvdXRlcj4gaW5zaWRlIGFub3RoZXIgPFJvdXRlcj4uXCIgKyBcIiBZb3Ugc2hvdWxkIG5ldmVyIGhhdmUgbW9yZSB0aGFuIG9uZSBpbiB5b3VyIGFwcC5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICBsZXQgYmFzZW5hbWUgPSBub3JtYWxpemVQYXRobmFtZShiYXNlbmFtZVByb3ApO1xuICBsZXQgbmF2aWdhdGlvbkNvbnRleHQgPSB1c2VNZW1vKCgpID0+ICh7XG4gICAgYmFzZW5hbWUsXG4gICAgbmF2aWdhdG9yLFxuICAgIHN0YXRpYzogc3RhdGljUHJvcFxuICB9KSwgW2Jhc2VuYW1lLCBuYXZpZ2F0b3IsIHN0YXRpY1Byb3BdKTtcblxuICBpZiAodHlwZW9mIGxvY2F0aW9uUHJvcCA9PT0gXCJzdHJpbmdcIikge1xuICAgIGxvY2F0aW9uUHJvcCA9IHBhcnNlUGF0aChsb2NhdGlvblByb3ApO1xuICB9XG5cbiAgbGV0IHtcbiAgICBwYXRobmFtZSA9IFwiL1wiLFxuICAgIHNlYXJjaCA9IFwiXCIsXG4gICAgaGFzaCA9IFwiXCIsXG4gICAgc3RhdGUgPSBudWxsLFxuICAgIGtleSA9IFwiZGVmYXVsdFwiXG4gIH0gPSBsb2NhdGlvblByb3A7XG4gIGxldCBsb2NhdGlvbiA9IHVzZU1lbW8oKCkgPT4ge1xuICAgIGxldCB0cmFpbGluZ1BhdGhuYW1lID0gc3RyaXBCYXNlbmFtZShwYXRobmFtZSwgYmFzZW5hbWUpO1xuXG4gICAgaWYgKHRyYWlsaW5nUGF0aG5hbWUgPT0gbnVsbCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIHBhdGhuYW1lOiB0cmFpbGluZ1BhdGhuYW1lLFxuICAgICAgc2VhcmNoLFxuICAgICAgaGFzaCxcbiAgICAgIHN0YXRlLFxuICAgICAga2V5XG4gICAgfTtcbiAgfSwgW2Jhc2VuYW1lLCBwYXRobmFtZSwgc2VhcmNoLCBoYXNoLCBzdGF0ZSwga2V5XSk7XG4gIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcobG9jYXRpb24gIT0gbnVsbCwgXCI8Um91dGVyIGJhc2VuYW1lPVxcXCJcIiArIGJhc2VuYW1lICsgXCJcXFwiPiBpcyBub3QgYWJsZSB0byBtYXRjaCB0aGUgVVJMIFwiICsgKFwiXFxcIlwiICsgcGF0aG5hbWUgKyBzZWFyY2ggKyBoYXNoICsgXCJcXFwiIGJlY2F1c2UgaXQgZG9lcyBub3Qgc3RhcnQgd2l0aCB0aGUgXCIpICsgXCJiYXNlbmFtZSwgc28gdGhlIDxSb3V0ZXI+IHdvbid0IHJlbmRlciBhbnl0aGluZy5cIikgOiB2b2lkIDA7XG5cbiAgaWYgKGxvY2F0aW9uID09IG51bGwpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHJldHVybiAvKiNfX1BVUkVfXyovY3JlYXRlRWxlbWVudChOYXZpZ2F0aW9uQ29udGV4dC5Qcm92aWRlciwge1xuICAgIHZhbHVlOiBuYXZpZ2F0aW9uQ29udGV4dFxuICB9LCAvKiNfX1BVUkVfXyovY3JlYXRlRWxlbWVudChMb2NhdGlvbkNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICBjaGlsZHJlbjogY2hpbGRyZW4sXG4gICAgdmFsdWU6IHtcbiAgICAgIGxvY2F0aW9uLFxuICAgICAgbmF2aWdhdGlvblR5cGVcbiAgICB9XG4gIH0pKTtcbn1cblxuLyoqXG4gKiBBIGNvbnRhaW5lciBmb3IgYSBuZXN0ZWQgdHJlZSBvZiA8Um91dGU+IGVsZW1lbnRzIHRoYXQgcmVuZGVycyB0aGUgYnJhbmNoXG4gKiB0aGF0IGJlc3QgbWF0Y2hlcyB0aGUgY3VycmVudCBsb2NhdGlvbi5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3Ryb3V0ZXIuY29tL2RvY3MvZW4vdjYvYXBpI3JvdXRlc1xuICovXG5mdW5jdGlvbiBSb3V0ZXMoX3JlZjQpIHtcbiAgbGV0IHtcbiAgICBjaGlsZHJlbixcbiAgICBsb2NhdGlvblxuICB9ID0gX3JlZjQ7XG4gIHJldHVybiB1c2VSb3V0ZXMoY3JlYXRlUm91dGVzRnJvbUNoaWxkcmVuKGNoaWxkcmVuKSwgbG9jYXRpb24pO1xufSAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBVVElMU1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG4vKipcbiAqIENyZWF0ZXMgYSByb3V0ZSBjb25maWcgZnJvbSBhIFJlYWN0IFwiY2hpbGRyZW5cIiBvYmplY3QsIHdoaWNoIGlzIHVzdWFsbHlcbiAqIGVpdGhlciBhIGA8Um91dGU+YCBlbGVtZW50IG9yIGFuIGFycmF5IG9mIHRoZW0uIFVzZWQgaW50ZXJuYWxseSBieVxuICogYDxSb3V0ZXM+YCB0byBjcmVhdGUgYSByb3V0ZSBjb25maWcgZnJvbSBpdHMgY2hpbGRyZW4uXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2FwaSNjcmVhdGVyb3V0ZXNmcm9tY2hpbGRyZW5cbiAqL1xuXG5mdW5jdGlvbiBjcmVhdGVSb3V0ZXNGcm9tQ2hpbGRyZW4oY2hpbGRyZW4pIHtcbiAgbGV0IHJvdXRlcyA9IFtdO1xuICBDaGlsZHJlbi5mb3JFYWNoKGNoaWxkcmVuLCBlbGVtZW50ID0+IHtcbiAgICBpZiAoISAvKiNfX1BVUkVfXyovaXNWYWxpZEVsZW1lbnQoZWxlbWVudCkpIHtcbiAgICAgIC8vIElnbm9yZSBub24tZWxlbWVudHMuIFRoaXMgYWxsb3dzIHBlb3BsZSB0byBtb3JlIGVhc2lseSBpbmxpbmVcbiAgICAgIC8vIGNvbmRpdGlvbmFscyBpbiB0aGVpciByb3V0ZSBjb25maWcuXG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKGVsZW1lbnQudHlwZSA9PT0gRnJhZ21lbnQpIHtcbiAgICAgIC8vIFRyYW5zcGFyZW50bHkgc3VwcG9ydCBSZWFjdC5GcmFnbWVudCBhbmQgaXRzIGNoaWxkcmVuLlxuICAgICAgcm91dGVzLnB1c2guYXBwbHkocm91dGVzLCBjcmVhdGVSb3V0ZXNGcm9tQ2hpbGRyZW4oZWxlbWVudC5wcm9wcy5jaGlsZHJlbikpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgICEoZWxlbWVudC50eXBlID09PSBSb3V0ZSkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiW1wiICsgKHR5cGVvZiBlbGVtZW50LnR5cGUgPT09IFwic3RyaW5nXCIgPyBlbGVtZW50LnR5cGUgOiBlbGVtZW50LnR5cGUubmFtZSkgKyBcIl0gaXMgbm90IGEgPFJvdXRlPiBjb21wb25lbnQuIEFsbCBjb21wb25lbnQgY2hpbGRyZW4gb2YgPFJvdXRlcz4gbXVzdCBiZSBhIDxSb3V0ZT4gb3IgPFJlYWN0LkZyYWdtZW50PlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgbGV0IHJvdXRlID0ge1xuICAgICAgY2FzZVNlbnNpdGl2ZTogZWxlbWVudC5wcm9wcy5jYXNlU2Vuc2l0aXZlLFxuICAgICAgZWxlbWVudDogZWxlbWVudC5wcm9wcy5lbGVtZW50LFxuICAgICAgaW5kZXg6IGVsZW1lbnQucHJvcHMuaW5kZXgsXG4gICAgICBwYXRoOiBlbGVtZW50LnByb3BzLnBhdGhcbiAgICB9O1xuXG4gICAgaWYgKGVsZW1lbnQucHJvcHMuY2hpbGRyZW4pIHtcbiAgICAgIHJvdXRlLmNoaWxkcmVuID0gY3JlYXRlUm91dGVzRnJvbUNoaWxkcmVuKGVsZW1lbnQucHJvcHMuY2hpbGRyZW4pO1xuICAgIH1cblxuICAgIHJvdXRlcy5wdXNoKHJvdXRlKTtcbiAgfSk7XG4gIHJldHVybiByb3V0ZXM7XG59XG4vKipcbiAqIFJlbmRlcnMgdGhlIHJlc3VsdCBvZiBgbWF0Y2hSb3V0ZXMoKWAgaW50byBhIFJlYWN0IGVsZW1lbnQuXG4gKi9cblxuZnVuY3Rpb24gcmVuZGVyTWF0Y2hlcyhtYXRjaGVzKSB7XG4gIHJldHVybiBfcmVuZGVyTWF0Y2hlcyhtYXRjaGVzKTtcbn1cblxuZXhwb3J0IHsgTWVtb3J5Um91dGVyLCBOYXZpZ2F0ZSwgT3V0bGV0LCBSb3V0ZSwgUm91dGVyLCBSb3V0ZXMsIExvY2F0aW9uQ29udGV4dCBhcyBVTlNBRkVfTG9jYXRpb25Db250ZXh0LCBOYXZpZ2F0aW9uQ29udGV4dCBhcyBVTlNBRkVfTmF2aWdhdGlvbkNvbnRleHQsIFJvdXRlQ29udGV4dCBhcyBVTlNBRkVfUm91dGVDb250ZXh0LCBjcmVhdGVSb3V0ZXNGcm9tQ2hpbGRyZW4sIGdlbmVyYXRlUGF0aCwgbWF0Y2hQYXRoLCBtYXRjaFJvdXRlcywgcmVuZGVyTWF0Y2hlcywgcmVzb2x2ZVBhdGgsIHVzZUhyZWYsIHVzZUluUm91dGVyQ29udGV4dCwgdXNlTG9jYXRpb24sIHVzZU1hdGNoLCB1c2VOYXZpZ2F0ZSwgdXNlTmF2aWdhdGlvblR5cGUsIHVzZU91dGxldCwgdXNlT3V0bGV0Q29udGV4dCwgdXNlUGFyYW1zLCB1c2VSZXNvbHZlZFBhdGgsIHVzZVJvdXRlcyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iLCIvKipcbiAqIFJlYWN0IFJvdXRlciBET00gdjYuMy4wXG4gKlxuICogQ29weXJpZ2h0IChjKSBSZW1peCBTb2Z0d2FyZSBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFLm1kIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGxpY2Vuc2UgTUlUXG4gKi9cbmltcG9ydCB7IHVzZVJlZiwgdXNlU3RhdGUsIHVzZUxheW91dEVmZmVjdCwgY3JlYXRlRWxlbWVudCwgZm9yd2FyZFJlZiwgdXNlQ2FsbGJhY2ssIHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjcmVhdGVCcm93c2VySGlzdG9yeSwgY3JlYXRlSGFzaEhpc3RvcnkgfSBmcm9tICdoaXN0b3J5JztcbmltcG9ydCB7IFJvdXRlciwgdXNlSHJlZiwgY3JlYXRlUGF0aCwgdXNlTG9jYXRpb24sIHVzZVJlc29sdmVkUGF0aCwgdXNlTmF2aWdhdGUgfSBmcm9tICdyZWFjdC1yb3V0ZXInO1xuZXhwb3J0IHsgTWVtb3J5Um91dGVyLCBOYXZpZ2F0ZSwgTmF2aWdhdGlvblR5cGUsIE91dGxldCwgUm91dGUsIFJvdXRlciwgUm91dGVzLCBVTlNBRkVfTG9jYXRpb25Db250ZXh0LCBVTlNBRkVfTmF2aWdhdGlvbkNvbnRleHQsIFVOU0FGRV9Sb3V0ZUNvbnRleHQsIGNyZWF0ZVBhdGgsIGNyZWF0ZVJvdXRlc0Zyb21DaGlsZHJlbiwgZ2VuZXJhdGVQYXRoLCBtYXRjaFBhdGgsIG1hdGNoUm91dGVzLCBwYXJzZVBhdGgsIHJlbmRlck1hdGNoZXMsIHJlc29sdmVQYXRoLCB1c2VIcmVmLCB1c2VJblJvdXRlckNvbnRleHQsIHVzZUxvY2F0aW9uLCB1c2VNYXRjaCwgdXNlTmF2aWdhdGUsIHVzZU5hdmlnYXRpb25UeXBlLCB1c2VPdXRsZXQsIHVzZU91dGxldENvbnRleHQsIHVzZVBhcmFtcywgdXNlUmVzb2x2ZWRQYXRoLCB1c2VSb3V0ZXMgfSBmcm9tICdyZWFjdC1yb3V0ZXInO1xuXG5mdW5jdGlvbiBfZXh0ZW5kcygpIHtcbiAgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcblxuICAgICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0O1xuICB9O1xuXG4gIHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufVxuXG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7XG4gIGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9O1xuICB2YXIgdGFyZ2V0ID0ge307XG4gIHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTtcbiAgdmFyIGtleSwgaTtcblxuICBmb3IgKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKykge1xuICAgIGtleSA9IHNvdXJjZUtleXNbaV07XG4gICAgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTtcbiAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn1cblxuY29uc3QgX2V4Y2x1ZGVkID0gW1wib25DbGlja1wiLCBcInJlbG9hZERvY3VtZW50XCIsIFwicmVwbGFjZVwiLCBcInN0YXRlXCIsIFwidGFyZ2V0XCIsIFwidG9cIl0sXG4gICAgICBfZXhjbHVkZWQyID0gW1wiYXJpYS1jdXJyZW50XCIsIFwiY2FzZVNlbnNpdGl2ZVwiLCBcImNsYXNzTmFtZVwiLCBcImVuZFwiLCBcInN0eWxlXCIsIFwidG9cIiwgXCJjaGlsZHJlblwiXTtcblxuZnVuY3Rpb24gd2FybmluZyhjb25kLCBtZXNzYWdlKSB7XG4gIGlmICghY29uZCkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSBcInVuZGVmaW5lZFwiKSBjb25zb2xlLndhcm4obWVzc2FnZSk7XG5cbiAgICB0cnkge1xuICAgICAgLy8gV2VsY29tZSB0byBkZWJ1Z2dpbmcgUmVhY3QgUm91dGVyIVxuICAgICAgLy9cbiAgICAgIC8vIFRoaXMgZXJyb3IgaXMgdGhyb3duIGFzIGEgY29udmVuaWVuY2Ugc28geW91IGNhbiBtb3JlIGVhc2lseVxuICAgICAgLy8gZmluZCB0aGUgc291cmNlIGZvciBhIHdhcm5pbmcgdGhhdCBhcHBlYXJzIGluIHRoZSBjb25zb2xlIGJ5XG4gICAgICAvLyBlbmFibGluZyBcInBhdXNlIG9uIGV4Y2VwdGlvbnNcIiBpbiB5b3VyIEphdmFTY3JpcHQgZGVidWdnZXIuXG4gICAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1lbXB0eVxuICAgIH0gY2F0Y2ggKGUpIHt9XG4gIH1cbn0gLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIENPTVBPTkVOVFNcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cbi8qKlxuICogQSBgPFJvdXRlcj5gIGZvciB1c2UgaW4gd2ViIGJyb3dzZXJzLiBQcm92aWRlcyB0aGUgY2xlYW5lc3QgVVJMcy5cbiAqL1xuZnVuY3Rpb24gQnJvd3NlclJvdXRlcihfcmVmKSB7XG4gIGxldCB7XG4gICAgYmFzZW5hbWUsXG4gICAgY2hpbGRyZW4sXG4gICAgd2luZG93XG4gIH0gPSBfcmVmO1xuICBsZXQgaGlzdG9yeVJlZiA9IHVzZVJlZigpO1xuXG4gIGlmIChoaXN0b3J5UmVmLmN1cnJlbnQgPT0gbnVsbCkge1xuICAgIGhpc3RvcnlSZWYuY3VycmVudCA9IGNyZWF0ZUJyb3dzZXJIaXN0b3J5KHtcbiAgICAgIHdpbmRvd1xuICAgIH0pO1xuICB9XG5cbiAgbGV0IGhpc3RvcnkgPSBoaXN0b3J5UmVmLmN1cnJlbnQ7XG4gIGxldCBbc3RhdGUsIHNldFN0YXRlXSA9IHVzZVN0YXRlKHtcbiAgICBhY3Rpb246IGhpc3RvcnkuYWN0aW9uLFxuICAgIGxvY2F0aW9uOiBoaXN0b3J5LmxvY2F0aW9uXG4gIH0pO1xuICB1c2VMYXlvdXRFZmZlY3QoKCkgPT4gaGlzdG9yeS5saXN0ZW4oc2V0U3RhdGUpLCBbaGlzdG9yeV0pO1xuICByZXR1cm4gLyojX19QVVJFX18qL2NyZWF0ZUVsZW1lbnQoUm91dGVyLCB7XG4gICAgYmFzZW5hbWU6IGJhc2VuYW1lLFxuICAgIGNoaWxkcmVuOiBjaGlsZHJlbixcbiAgICBsb2NhdGlvbjogc3RhdGUubG9jYXRpb24sXG4gICAgbmF2aWdhdGlvblR5cGU6IHN0YXRlLmFjdGlvbixcbiAgICBuYXZpZ2F0b3I6IGhpc3RvcnlcbiAgfSk7XG59XG5cbi8qKlxuICogQSBgPFJvdXRlcj5gIGZvciB1c2UgaW4gd2ViIGJyb3dzZXJzLiBTdG9yZXMgdGhlIGxvY2F0aW9uIGluIHRoZSBoYXNoXG4gKiBwb3J0aW9uIG9mIHRoZSBVUkwgc28gaXQgaXMgbm90IHNlbnQgdG8gdGhlIHNlcnZlci5cbiAqL1xuZnVuY3Rpb24gSGFzaFJvdXRlcihfcmVmMikge1xuICBsZXQge1xuICAgIGJhc2VuYW1lLFxuICAgIGNoaWxkcmVuLFxuICAgIHdpbmRvd1xuICB9ID0gX3JlZjI7XG4gIGxldCBoaXN0b3J5UmVmID0gdXNlUmVmKCk7XG5cbiAgaWYgKGhpc3RvcnlSZWYuY3VycmVudCA9PSBudWxsKSB7XG4gICAgaGlzdG9yeVJlZi5jdXJyZW50ID0gY3JlYXRlSGFzaEhpc3Rvcnkoe1xuICAgICAgd2luZG93XG4gICAgfSk7XG4gIH1cblxuICBsZXQgaGlzdG9yeSA9IGhpc3RvcnlSZWYuY3VycmVudDtcbiAgbGV0IFtzdGF0ZSwgc2V0U3RhdGVdID0gdXNlU3RhdGUoe1xuICAgIGFjdGlvbjogaGlzdG9yeS5hY3Rpb24sXG4gICAgbG9jYXRpb246IGhpc3RvcnkubG9jYXRpb25cbiAgfSk7XG4gIHVzZUxheW91dEVmZmVjdCgoKSA9PiBoaXN0b3J5Lmxpc3RlbihzZXRTdGF0ZSksIFtoaXN0b3J5XSk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcbiAgICBiYXNlbmFtZTogYmFzZW5hbWUsXG4gICAgY2hpbGRyZW46IGNoaWxkcmVuLFxuICAgIGxvY2F0aW9uOiBzdGF0ZS5sb2NhdGlvbixcbiAgICBuYXZpZ2F0aW9uVHlwZTogc3RhdGUuYWN0aW9uLFxuICAgIG5hdmlnYXRvcjogaGlzdG9yeVxuICB9KTtcbn1cblxuLyoqXG4gKiBBIGA8Um91dGVyPmAgdGhhdCBhY2NlcHRzIGEgcHJlLWluc3RhbnRpYXRlZCBoaXN0b3J5IG9iamVjdC4gSXQncyBpbXBvcnRhbnRcbiAqIHRvIG5vdGUgdGhhdCB1c2luZyB5b3VyIG93biBoaXN0b3J5IG9iamVjdCBpcyBoaWdobHkgZGlzY291cmFnZWQgYW5kIG1heSBhZGRcbiAqIHR3byB2ZXJzaW9ucyBvZiB0aGUgaGlzdG9yeSBsaWJyYXJ5IHRvIHlvdXIgYnVuZGxlcyB1bmxlc3MgeW91IHVzZSB0aGUgc2FtZVxuICogdmVyc2lvbiBvZiB0aGUgaGlzdG9yeSBsaWJyYXJ5IHRoYXQgUmVhY3QgUm91dGVyIHVzZXMgaW50ZXJuYWxseS5cbiAqL1xuZnVuY3Rpb24gSGlzdG9yeVJvdXRlcihfcmVmMykge1xuICBsZXQge1xuICAgIGJhc2VuYW1lLFxuICAgIGNoaWxkcmVuLFxuICAgIGhpc3RvcnlcbiAgfSA9IF9yZWYzO1xuICBjb25zdCBbc3RhdGUsIHNldFN0YXRlXSA9IHVzZVN0YXRlKHtcbiAgICBhY3Rpb246IGhpc3RvcnkuYWN0aW9uLFxuICAgIGxvY2F0aW9uOiBoaXN0b3J5LmxvY2F0aW9uXG4gIH0pO1xuICB1c2VMYXlvdXRFZmZlY3QoKCkgPT4gaGlzdG9yeS5saXN0ZW4oc2V0U3RhdGUpLCBbaGlzdG9yeV0pO1xuICByZXR1cm4gLyojX19QVVJFX18qL2NyZWF0ZUVsZW1lbnQoUm91dGVyLCB7XG4gICAgYmFzZW5hbWU6IGJhc2VuYW1lLFxuICAgIGNoaWxkcmVuOiBjaGlsZHJlbixcbiAgICBsb2NhdGlvbjogc3RhdGUubG9jYXRpb24sXG4gICAgbmF2aWdhdGlvblR5cGU6IHN0YXRlLmFjdGlvbixcbiAgICBuYXZpZ2F0b3I6IGhpc3RvcnlcbiAgfSk7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgSGlzdG9yeVJvdXRlci5kaXNwbGF5TmFtZSA9IFwidW5zdGFibGVfSGlzdG9yeVJvdXRlclwiO1xufVxuXG5mdW5jdGlvbiBpc01vZGlmaWVkRXZlbnQoZXZlbnQpIHtcbiAgcmV0dXJuICEhKGV2ZW50Lm1ldGFLZXkgfHwgZXZlbnQuYWx0S2V5IHx8IGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQuc2hpZnRLZXkpO1xufVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciByZW5kZXJpbmcgYSBoaXN0b3J5LWF3YXJlIDxhPi5cbiAqL1xuY29uc3QgTGluayA9IC8qI19fUFVSRV9fKi9mb3J3YXJkUmVmKGZ1bmN0aW9uIExpbmtXaXRoUmVmKF9yZWY0LCByZWYpIHtcbiAgbGV0IHtcbiAgICBvbkNsaWNrLFxuICAgIHJlbG9hZERvY3VtZW50LFxuICAgIHJlcGxhY2UgPSBmYWxzZSxcbiAgICBzdGF0ZSxcbiAgICB0YXJnZXQsXG4gICAgdG9cbiAgfSA9IF9yZWY0LFxuICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWY0LCBfZXhjbHVkZWQpO1xuXG4gIGxldCBocmVmID0gdXNlSHJlZih0byk7XG4gIGxldCBpbnRlcm5hbE9uQ2xpY2sgPSB1c2VMaW5rQ2xpY2tIYW5kbGVyKHRvLCB7XG4gICAgcmVwbGFjZSxcbiAgICBzdGF0ZSxcbiAgICB0YXJnZXRcbiAgfSk7XG5cbiAgZnVuY3Rpb24gaGFuZGxlQ2xpY2soZXZlbnQpIHtcbiAgICBpZiAob25DbGljaykgb25DbGljayhldmVudCk7XG5cbiAgICBpZiAoIWV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQgJiYgIXJlbG9hZERvY3VtZW50KSB7XG4gICAgICBpbnRlcm5hbE9uQ2xpY2soZXZlbnQpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiAoXG4gICAgLyojX19QVVJFX18qL1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBqc3gtYTExeS9hbmNob3ItaGFzLWNvbnRlbnRcbiAgICBjcmVhdGVFbGVtZW50KFwiYVwiLCBfZXh0ZW5kcyh7fSwgcmVzdCwge1xuICAgICAgaHJlZjogaHJlZixcbiAgICAgIG9uQ2xpY2s6IGhhbmRsZUNsaWNrLFxuICAgICAgcmVmOiByZWYsXG4gICAgICB0YXJnZXQ6IHRhcmdldFxuICAgIH0pKVxuICApO1xufSk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgTGluay5kaXNwbGF5TmFtZSA9IFwiTGlua1wiO1xufVxuXG4vKipcbiAqIEEgPExpbms+IHdyYXBwZXIgdGhhdCBrbm93cyBpZiBpdCdzIFwiYWN0aXZlXCIgb3Igbm90LlxuICovXG5jb25zdCBOYXZMaW5rID0gLyojX19QVVJFX18qL2ZvcndhcmRSZWYoZnVuY3Rpb24gTmF2TGlua1dpdGhSZWYoX3JlZjUsIHJlZikge1xuICBsZXQge1xuICAgIFwiYXJpYS1jdXJyZW50XCI6IGFyaWFDdXJyZW50UHJvcCA9IFwicGFnZVwiLFxuICAgIGNhc2VTZW5zaXRpdmUgPSBmYWxzZSxcbiAgICBjbGFzc05hbWU6IGNsYXNzTmFtZVByb3AgPSBcIlwiLFxuICAgIGVuZCA9IGZhbHNlLFxuICAgIHN0eWxlOiBzdHlsZVByb3AsXG4gICAgdG8sXG4gICAgY2hpbGRyZW5cbiAgfSA9IF9yZWY1LFxuICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWY1LCBfZXhjbHVkZWQyKTtcblxuICBsZXQgbG9jYXRpb24gPSB1c2VMb2NhdGlvbigpO1xuICBsZXQgcGF0aCA9IHVzZVJlc29sdmVkUGF0aCh0byk7XG4gIGxldCBsb2NhdGlvblBhdGhuYW1lID0gbG9jYXRpb24ucGF0aG5hbWU7XG4gIGxldCB0b1BhdGhuYW1lID0gcGF0aC5wYXRobmFtZTtcblxuICBpZiAoIWNhc2VTZW5zaXRpdmUpIHtcbiAgICBsb2NhdGlvblBhdGhuYW1lID0gbG9jYXRpb25QYXRobmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgIHRvUGF0aG5hbWUgPSB0b1BhdGhuYW1lLnRvTG93ZXJDYXNlKCk7XG4gIH1cblxuICBsZXQgaXNBY3RpdmUgPSBsb2NhdGlvblBhdGhuYW1lID09PSB0b1BhdGhuYW1lIHx8ICFlbmQgJiYgbG9jYXRpb25QYXRobmFtZS5zdGFydHNXaXRoKHRvUGF0aG5hbWUpICYmIGxvY2F0aW9uUGF0aG5hbWUuY2hhckF0KHRvUGF0aG5hbWUubGVuZ3RoKSA9PT0gXCIvXCI7XG4gIGxldCBhcmlhQ3VycmVudCA9IGlzQWN0aXZlID8gYXJpYUN1cnJlbnRQcm9wIDogdW5kZWZpbmVkO1xuICBsZXQgY2xhc3NOYW1lO1xuXG4gIGlmICh0eXBlb2YgY2xhc3NOYW1lUHJvcCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgY2xhc3NOYW1lID0gY2xhc3NOYW1lUHJvcCh7XG4gICAgICBpc0FjdGl2ZVxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIC8vIElmIHRoZSBjbGFzc05hbWUgcHJvcCBpcyBub3QgYSBmdW5jdGlvbiwgd2UgdXNlIGEgZGVmYXVsdCBgYWN0aXZlYFxuICAgIC8vIGNsYXNzIGZvciA8TmF2TGluayAvPnMgdGhhdCBhcmUgYWN0aXZlLiBJbiB2NSBgYWN0aXZlYCB3YXMgdGhlIGRlZmF1bHRcbiAgICAvLyB2YWx1ZSBmb3IgYGFjdGl2ZUNsYXNzTmFtZWAsIGJ1dCB3ZSBhcmUgcmVtb3ZpbmcgdGhhdCBBUEkgYW5kIGNhbiBzdGlsbFxuICAgIC8vIHVzZSB0aGUgb2xkIGRlZmF1bHQgYmVoYXZpb3IgZm9yIGEgY2xlYW5lciB1cGdyYWRlIHBhdGggYW5kIGtlZXAgdGhlXG4gICAgLy8gc2ltcGxlIHN0eWxpbmcgcnVsZXMgd29ya2luZyBhcyB0aGV5IGN1cnJlbnRseSBkby5cbiAgICBjbGFzc05hbWUgPSBbY2xhc3NOYW1lUHJvcCwgaXNBY3RpdmUgPyBcImFjdGl2ZVwiIDogbnVsbF0uZmlsdGVyKEJvb2xlYW4pLmpvaW4oXCIgXCIpO1xuICB9XG5cbiAgbGV0IHN0eWxlID0gdHlwZW9mIHN0eWxlUHJvcCA9PT0gXCJmdW5jdGlvblwiID8gc3R5bGVQcm9wKHtcbiAgICBpc0FjdGl2ZVxuICB9KSA6IHN0eWxlUHJvcDtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9jcmVhdGVFbGVtZW50KExpbmssIF9leHRlbmRzKHt9LCByZXN0LCB7XG4gICAgXCJhcmlhLWN1cnJlbnRcIjogYXJpYUN1cnJlbnQsXG4gICAgY2xhc3NOYW1lOiBjbGFzc05hbWUsXG4gICAgcmVmOiByZWYsXG4gICAgc3R5bGU6IHN0eWxlLFxuICAgIHRvOiB0b1xuICB9KSwgdHlwZW9mIGNoaWxkcmVuID09PSBcImZ1bmN0aW9uXCIgPyBjaGlsZHJlbih7XG4gICAgaXNBY3RpdmVcbiAgfSkgOiBjaGlsZHJlbik7XG59KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBOYXZMaW5rLmRpc3BsYXlOYW1lID0gXCJOYXZMaW5rXCI7XG59IC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBIT09LU1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuLyoqXG4gKiBIYW5kbGVzIHRoZSBjbGljayBiZWhhdmlvciBmb3Igcm91dGVyIGA8TGluaz5gIGNvbXBvbmVudHMuIFRoaXMgaXMgdXNlZnVsIGlmXG4gKiB5b3UgbmVlZCB0byBjcmVhdGUgY3VzdG9tIGA8TGluaz5gIGNvbXBvbmVudHMgd2l0aCB0aGUgc2FtZSBjbGljayBiZWhhdmlvciB3ZVxuICogdXNlIGluIG91ciBleHBvcnRlZCBgPExpbms+YC5cbiAqL1xuXG5cbmZ1bmN0aW9uIHVzZUxpbmtDbGlja0hhbmRsZXIodG8sIF90ZW1wKSB7XG4gIGxldCB7XG4gICAgdGFyZ2V0LFxuICAgIHJlcGxhY2U6IHJlcGxhY2VQcm9wLFxuICAgIHN0YXRlXG4gIH0gPSBfdGVtcCA9PT0gdm9pZCAwID8ge30gOiBfdGVtcDtcbiAgbGV0IG5hdmlnYXRlID0gdXNlTmF2aWdhdGUoKTtcbiAgbGV0IGxvY2F0aW9uID0gdXNlTG9jYXRpb24oKTtcbiAgbGV0IHBhdGggPSB1c2VSZXNvbHZlZFBhdGgodG8pO1xuICByZXR1cm4gdXNlQ2FsbGJhY2soZXZlbnQgPT4ge1xuICAgIGlmIChldmVudC5idXR0b24gPT09IDAgJiYgKCAvLyBJZ25vcmUgZXZlcnl0aGluZyBidXQgbGVmdCBjbGlja3NcbiAgICAhdGFyZ2V0IHx8IHRhcmdldCA9PT0gXCJfc2VsZlwiKSAmJiAvLyBMZXQgYnJvd3NlciBoYW5kbGUgXCJ0YXJnZXQ9X2JsYW5rXCIgZXRjLlxuICAgICFpc01vZGlmaWVkRXZlbnQoZXZlbnQpIC8vIElnbm9yZSBjbGlja3Mgd2l0aCBtb2RpZmllciBrZXlzXG4gICAgKSB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOyAvLyBJZiB0aGUgVVJMIGhhc24ndCBjaGFuZ2VkLCBhIHJlZ3VsYXIgPGE+IHdpbGwgZG8gYSByZXBsYWNlIGluc3RlYWQgb2ZcbiAgICAgIC8vIGEgcHVzaCwgc28gZG8gdGhlIHNhbWUgaGVyZS5cblxuICAgICAgbGV0IHJlcGxhY2UgPSAhIXJlcGxhY2VQcm9wIHx8IGNyZWF0ZVBhdGgobG9jYXRpb24pID09PSBjcmVhdGVQYXRoKHBhdGgpO1xuICAgICAgbmF2aWdhdGUodG8sIHtcbiAgICAgICAgcmVwbGFjZSxcbiAgICAgICAgc3RhdGVcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwgW2xvY2F0aW9uLCBuYXZpZ2F0ZSwgcGF0aCwgcmVwbGFjZVByb3AsIHN0YXRlLCB0YXJnZXQsIHRvXSk7XG59XG4vKipcbiAqIEEgY29udmVuaWVudCB3cmFwcGVyIGZvciByZWFkaW5nIGFuZCB3cml0aW5nIHNlYXJjaCBwYXJhbWV0ZXJzIHZpYSB0aGVcbiAqIFVSTFNlYXJjaFBhcmFtcyBpbnRlcmZhY2UuXG4gKi9cblxuZnVuY3Rpb24gdXNlU2VhcmNoUGFyYW1zKGRlZmF1bHRJbml0KSB7XG4gIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcodHlwZW9mIFVSTFNlYXJjaFBhcmFtcyAhPT0gXCJ1bmRlZmluZWRcIiwgXCJZb3UgY2Fubm90IHVzZSB0aGUgYHVzZVNlYXJjaFBhcmFtc2AgaG9vayBpbiBhIGJyb3dzZXIgdGhhdCBkb2VzIG5vdCBcIiArIFwic3VwcG9ydCB0aGUgVVJMU2VhcmNoUGFyYW1zIEFQSS4gSWYgeW91IG5lZWQgdG8gc3VwcG9ydCBJbnRlcm5ldCBcIiArIFwiRXhwbG9yZXIgMTEsIHdlIHJlY29tbWVuZCB5b3UgbG9hZCBhIHBvbHlmaWxsIHN1Y2ggYXMgXCIgKyBcImh0dHBzOi8vZ2l0aHViLmNvbS91bmdhcC91cmwtc2VhcmNoLXBhcmFtc1xcblxcblwiICsgXCJJZiB5b3UncmUgdW5zdXJlIGhvdyB0byBsb2FkIHBvbHlmaWxscywgd2UgcmVjb21tZW5kIHlvdSBjaGVjayBvdXQgXCIgKyBcImh0dHBzOi8vcG9seWZpbGwuaW8vdjMvIHdoaWNoIHByb3ZpZGVzIHNvbWUgcmVjb21tZW5kYXRpb25zIGFib3V0IGhvdyBcIiArIFwidG8gbG9hZCBwb2x5ZmlsbHMgb25seSBmb3IgdXNlcnMgdGhhdCBuZWVkIHRoZW0sIGluc3RlYWQgb2YgZm9yIGV2ZXJ5IFwiICsgXCJ1c2VyLlwiKSA6IHZvaWQgMDtcbiAgbGV0IGRlZmF1bHRTZWFyY2hQYXJhbXNSZWYgPSB1c2VSZWYoY3JlYXRlU2VhcmNoUGFyYW1zKGRlZmF1bHRJbml0KSk7XG4gIGxldCBsb2NhdGlvbiA9IHVzZUxvY2F0aW9uKCk7XG4gIGxldCBzZWFyY2hQYXJhbXMgPSB1c2VNZW1vKCgpID0+IHtcbiAgICBsZXQgc2VhcmNoUGFyYW1zID0gY3JlYXRlU2VhcmNoUGFyYW1zKGxvY2F0aW9uLnNlYXJjaCk7XG5cbiAgICBmb3IgKGxldCBrZXkgb2YgZGVmYXVsdFNlYXJjaFBhcmFtc1JlZi5jdXJyZW50LmtleXMoKSkge1xuICAgICAgaWYgKCFzZWFyY2hQYXJhbXMuaGFzKGtleSkpIHtcbiAgICAgICAgZGVmYXVsdFNlYXJjaFBhcmFtc1JlZi5jdXJyZW50LmdldEFsbChrZXkpLmZvckVhY2godmFsdWUgPT4ge1xuICAgICAgICAgIHNlYXJjaFBhcmFtcy5hcHBlbmQoa2V5LCB2YWx1ZSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBzZWFyY2hQYXJhbXM7XG4gIH0sIFtsb2NhdGlvbi5zZWFyY2hdKTtcbiAgbGV0IG5hdmlnYXRlID0gdXNlTmF2aWdhdGUoKTtcbiAgbGV0IHNldFNlYXJjaFBhcmFtcyA9IHVzZUNhbGxiYWNrKChuZXh0SW5pdCwgbmF2aWdhdGVPcHRpb25zKSA9PiB7XG4gICAgbmF2aWdhdGUoXCI/XCIgKyBjcmVhdGVTZWFyY2hQYXJhbXMobmV4dEluaXQpLCBuYXZpZ2F0ZU9wdGlvbnMpO1xuICB9LCBbbmF2aWdhdGVdKTtcbiAgcmV0dXJuIFtzZWFyY2hQYXJhbXMsIHNldFNlYXJjaFBhcmFtc107XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIFVSTFNlYXJjaFBhcmFtcyBvYmplY3QgdXNpbmcgdGhlIGdpdmVuIGluaXRpYWxpemVyLlxuICpcbiAqIFRoaXMgaXMgaWRlbnRpY2FsIHRvIGBuZXcgVVJMU2VhcmNoUGFyYW1zKGluaXQpYCBleGNlcHQgaXQgYWxzb1xuICogc3VwcG9ydHMgYXJyYXlzIGFzIHZhbHVlcyBpbiB0aGUgb2JqZWN0IGZvcm0gb2YgdGhlIGluaXRpYWxpemVyXG4gKiBpbnN0ZWFkIG9mIGp1c3Qgc3RyaW5ncy4gVGhpcyBpcyBjb252ZW5pZW50IHdoZW4geW91IG5lZWQgbXVsdGlwbGVcbiAqIHZhbHVlcyBmb3IgYSBnaXZlbiBrZXksIGJ1dCBkb24ndCB3YW50IHRvIHVzZSBhbiBhcnJheSBpbml0aWFsaXplci5cbiAqXG4gKiBGb3IgZXhhbXBsZSwgaW5zdGVhZCBvZjpcbiAqXG4gKiAgIGxldCBzZWFyY2hQYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKFtcbiAqICAgICBbJ3NvcnQnLCAnbmFtZSddLFxuICogICAgIFsnc29ydCcsICdwcmljZSddXG4gKiAgIF0pO1xuICpcbiAqIHlvdSBjYW4gZG86XG4gKlxuICogICBsZXQgc2VhcmNoUGFyYW1zID0gY3JlYXRlU2VhcmNoUGFyYW1zKHtcbiAqICAgICBzb3J0OiBbJ25hbWUnLCAncHJpY2UnXVxuICogICB9KTtcbiAqL1xuZnVuY3Rpb24gY3JlYXRlU2VhcmNoUGFyYW1zKGluaXQpIHtcbiAgaWYgKGluaXQgPT09IHZvaWQgMCkge1xuICAgIGluaXQgPSBcIlwiO1xuICB9XG5cbiAgcmV0dXJuIG5ldyBVUkxTZWFyY2hQYXJhbXModHlwZW9mIGluaXQgPT09IFwic3RyaW5nXCIgfHwgQXJyYXkuaXNBcnJheShpbml0KSB8fCBpbml0IGluc3RhbmNlb2YgVVJMU2VhcmNoUGFyYW1zID8gaW5pdCA6IE9iamVjdC5rZXlzKGluaXQpLnJlZHVjZSgobWVtbywga2V5KSA9PiB7XG4gICAgbGV0IHZhbHVlID0gaW5pdFtrZXldO1xuICAgIHJldHVybiBtZW1vLmNvbmNhdChBcnJheS5pc0FycmF5KHZhbHVlKSA/IHZhbHVlLm1hcCh2ID0+IFtrZXksIHZdKSA6IFtba2V5LCB2YWx1ZV1dKTtcbiAgfSwgW10pKTtcbn1cblxuZXhwb3J0IHsgQnJvd3NlclJvdXRlciwgSGFzaFJvdXRlciwgTGluaywgTmF2TGluaywgY3JlYXRlU2VhcmNoUGFyYW1zLCBIaXN0b3J5Um91dGVyIGFzIHVuc3RhYmxlX0hpc3RvcnlSb3V0ZXIsIHVzZUxpbmtDbGlja0hhbmRsZXIsIHVzZVNlYXJjaFBhcmFtcyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikge1xuICBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDtcblxuICBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIHtcbiAgICBhcnIyW2ldID0gYXJyW2ldO1xuICB9XG5cbiAgcmV0dXJuIGFycjI7XG59IiwiaW1wb3J0IGFycmF5V2l0aEhvbGVzIGZyb20gXCIuL2FycmF5V2l0aEhvbGVzLmpzXCI7XG5pbXBvcnQgaXRlcmFibGVUb0FycmF5TGltaXQgZnJvbSBcIi4vaXRlcmFibGVUb0FycmF5TGltaXQuanNcIjtcbmltcG9ydCB1bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheSBmcm9tIFwiLi91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheS5qc1wiO1xuaW1wb3J0IG5vbkl0ZXJhYmxlUmVzdCBmcm9tIFwiLi9ub25JdGVyYWJsZVJlc3QuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkge1xuICByZXR1cm4gYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBpdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHx8IHVuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFyciwgaSkgfHwgbm9uSXRlcmFibGVSZXN0KCk7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikge1xuICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHtcbiAgdmFyIF9pID0gYXJyID09IG51bGwgPyBudWxsIDogdHlwZW9mIFN5bWJvbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBhcnJbU3ltYm9sLml0ZXJhdG9yXSB8fCBhcnJbXCJAQGl0ZXJhdG9yXCJdO1xuXG4gIGlmIChfaSA9PSBudWxsKSByZXR1cm47XG4gIHZhciBfYXJyID0gW107XG4gIHZhciBfbiA9IHRydWU7XG4gIHZhciBfZCA9IGZhbHNlO1xuXG4gIHZhciBfcywgX2U7XG5cbiAgdHJ5IHtcbiAgICBmb3IgKF9pID0gX2kuY2FsbChhcnIpOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7XG4gICAgICBfYXJyLnB1c2goX3MudmFsdWUpO1xuXG4gICAgICBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7XG4gICAgfVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBfZCA9IHRydWU7XG4gICAgX2UgPSBlcnI7XG4gIH0gZmluYWxseSB7XG4gICAgdHJ5IHtcbiAgICAgIGlmICghX24gJiYgX2lbXCJyZXR1cm5cIl0gIT0gbnVsbCkgX2lbXCJyZXR1cm5cIl0oKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgaWYgKF9kKSB0aHJvdyBfZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gX2Fycjtcbn0iLCJpbXBvcnQgYXJyYXlMaWtlVG9BcnJheSBmcm9tIFwiLi9hcnJheUxpa2VUb0FycmF5LmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7XG4gIGlmICghbykgcmV0dXJuO1xuICBpZiAodHlwZW9mIG8gPT09IFwic3RyaW5nXCIpIHJldHVybiBhcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7XG4gIHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTtcbiAgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTtcbiAgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obyk7XG4gIGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7XG4gIHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7XG59IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi9zdHlsZXMuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0udXNlWzFdIS4vc3R5bGVzLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXHJcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJ1xyXG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vc3R5bGVzLmNzcydcclxuXHJcbmNvbnN0IE5hdmlnYXRpb25NZW51ID0gKHsgbWVudUl0ZW1zLCBpc01vYmlsZSB9KSA9PiB7XHJcbiAgICBjb25zdCBbcmVuZGVyTW9iaWxlTWVudUxpc3QsIHNldFJlbmRlck1vYmlsZU1lbnVMaXN0XSA9IHVzZVN0YXRlKHRydWUpXHJcbiAgICBjb25zdCBbc3RhdHVzTWVudSwgc2V0U3RhdHVzTWVudV0gPSB1c2VTdGF0ZSh0cnVlKVxyXG4gICAgY29uc3QgbWFwTWVudSA9ICgpID0+IHtcclxuICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICBtZW51SXRlbXMgJiZcclxuICAgICAgICAgICAgbWVudUl0ZW1zLm1hcCgoaXRlbSwgaW5kZXgpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgICAgICAgICAgPExpbmsga2V5PXtpbmRleH0gY2xhc3NOYW1lPXtzdHlsZXMubmF2aWdhdGlvbk1lbnVJdGVtfSB0bz17aXRlbS5saW5rfSBvbkNsaWNrPXsoKSA9PiBtb3ZlU2Nyb2xsUGFnZSgpfT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPXtzdHlsZXMubmF2aWdhdGlvbk1lbnVJdGVtVGV4dH0+e2l0ZW0ubmFtZX08L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9MaW5rPlxyXG4gICAgICAgICAgICAgICAgKVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIClcclxuICAgIH1cclxuICAgIGNvbnN0IG1vdmVTY3JvbGxQYWdlID0gKCkgPT4ge1xyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0aXRsZVRleHQnKS5zY3JvbGxJbnRvVmlldyh7XHJcbiAgICAgICAgICAgIGJlaGF2aW9yOiAnc21vb3RoJ1xyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgaWYgKCFpc01vYmlsZSkge1xyXG4gICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMubmF2aWdhdGlvbk1lbnVDb250YWluZXJ9PlxyXG4gICAgICAgICAgICAgICAgPHVsIGNsYXNzTmFtZT17c3R5bGVzLm5hdmlnYXRpb25NZW51TGlzdH0+e21hcE1lbnUoKX08L3VsPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICApXHJcbiAgICB9XHJcbiAgICBpZiAoaXNNb2JpbGUpIHtcclxuICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLm5hdmlnYXRpb25NZW51Q29udGFpbmVyfT5cclxuICAgICAgICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e3N0eWxlcy5vcGVuTWVudX1cclxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFJlbmRlck1vYmlsZU1lbnVMaXN0KCFyZW5kZXJNb2JpbGVNZW51TGlzdClcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0U3RhdHVzTWVudSghc3RhdHVzTWVudSlcclxuICAgICAgICAgICAgICAgICAgICB9fVxyXG4gICAgICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuYnRuTWVudX0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPiA8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAge3N0YXR1c01lbnUgPyA8ZGl2PiDQl9Cw0LrRgNGL0YLRjCDQvNC10L3RjiA8L2Rpdj4gOiA8ZGl2PiDQntGC0LrRgNGL0YLRjCDQvNC10L3RjiA8L2Rpdj59XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIHtyZW5kZXJNb2JpbGVNZW51TGlzdCA/IDx1bCBjbGFzc05hbWU9e3N0eWxlcy5uYXZpZ2F0aW9uTWVudUxpc3R9PnttYXBNZW51KCl9PC91bD4gOiBudWxsfVxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICApXHJcbiAgICB9XHJcbn1cclxuXHJcbk5hdmlnYXRpb25NZW51LnByb3BUeXBlcyA9IHtcclxuICAgIG1lbnVJdGVtczogUHJvcFR5cGVzLmFycmF5LFxyXG4gICAgaXNNb2JpbGU6IFByb3BUeXBlcy5ib29sXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IE5hdmlnYXRpb25NZW51XHJcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0udXNlWzFdIS4vc3R5bGVzLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVsxXSEuL3N0eWxlcy5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXHJcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcclxuaW1wb3J0IHN0eWxlcyBmcm9tICcuL3N0eWxlcy5jc3MnXHJcblxyXG5jb25zdCBCdXR0b24gPSAoeyB0ZXh0QnV0dG9uLCBoYW5kbGVyIH0pID0+IHtcclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5idXR0b25Db250YWluZXJ9IG9uQ2xpY2s9e2hhbmRsZXJ9PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmJ1dHRvblRleHR9Pnt0ZXh0QnV0dG9ufTwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgKVxyXG59XHJcblxyXG5CdXR0b24ucHJvcFR5cGVzID0ge1xyXG4gICAgdGV4dEJ1dHRvbjogUHJvcFR5cGVzLnN0cmluZyxcclxuICAgIGhhbmRsZXI6IFByb3BUeXBlcy5mdW5jXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEJ1dHRvblxyXG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVsxXSEuL3N0eWxlcy5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi9zdHlsZXMuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXHJcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9zdHlsZXMuY3NzJ1xyXG5cclxuY29uc3QgTW9kYWwgPSAoeyBpc0FjdGl2ZSwgc2V0QWN0aXZlLCBpc0Nsb3NhYmxlLCBjaGlsZHJlbiB9KSA9PiB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY2xhc3NOYW1lPXtpc0FjdGl2ZSA/IGAke3N0eWxlcy5tb2RhbH0gJHtzdHlsZXMuYWN0aXZlfWAgOiBzdHlsZXMubW9kYWx9XHJcbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcclxuICAgICAgICAgICAgICAgIGlzQ2xvc2FibGUgJiYgc2V0QWN0aXZlKGZhbHNlKVxyXG4gICAgICAgICAgICB9fVxyXG4gICAgICAgID5cclxuICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtpc0FjdGl2ZSA/IGAke3N0eWxlcy5tb2RhbENvbnRlbnR9ICR7c3R5bGVzLmFjdGl2ZX1gIDogc3R5bGVzLm1vZGFsQ29udGVudH1cclxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9eyhlKSA9PiBlLnN0b3BQcm9wYWdhdGlvbigpfVxyXG4gICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgICB7Y2hpbGRyZW59XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgKVxyXG59XHJcblxyXG5Nb2RhbC5wcm9wVHlwZXMgPSB7XHJcbiAgICBpc0FjdGl2ZTogUHJvcFR5cGVzLmJvb2wsXHJcbiAgICBzZXRBY3RpdmU6IFByb3BUeXBlcy5mdW5jLFxyXG4gICAgaXNDbG9zYWJsZTogUHJvcFR5cGVzLmJvb2wsXHJcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLmFueVxyXG59XHJcblxyXG5Nb2RhbC5kZWZhdWx0UHJvcHMgPSB7XHJcbiAgICBpc0FjdGl2ZTogZmFsc2UsXHJcbiAgICBpc0Nsb3NhYmxlOiB0cnVlXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IE1vZGFsXHJcbiIsImZ1bmN0aW9uIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywga2V5LCBhcmcpIHtcbiAgdHJ5IHtcbiAgICB2YXIgaW5mbyA9IGdlbltrZXldKGFyZyk7XG4gICAgdmFyIHZhbHVlID0gaW5mby52YWx1ZTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZWplY3QoZXJyb3IpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChpbmZvLmRvbmUpIHtcbiAgICByZXNvbHZlKHZhbHVlKTtcbiAgfSBlbHNlIHtcbiAgICBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oX25leHQsIF90aHJvdyk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2FzeW5jVG9HZW5lcmF0b3IoZm4pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXMsXG4gICAgICAgIGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIHZhciBnZW4gPSBmbi5hcHBseShzZWxmLCBhcmdzKTtcblxuICAgICAgZnVuY3Rpb24gX25leHQodmFsdWUpIHtcbiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcIm5leHRcIiwgdmFsdWUpO1xuICAgICAgfVxuXG4gICAgICBmdW5jdGlvbiBfdGhyb3coZXJyKSB7XG4gICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgXCJ0aHJvd1wiLCBlcnIpO1xuICAgICAgfVxuXG4gICAgICBfbmV4dCh1bmRlZmluZWQpO1xuICAgIH0pO1xuICB9O1xufSIsImltcG9ydCBheGlvcyBmcm9tICdheGlvcydcclxuY29uc3QgZ2V0TGlzdEFQSSA9IGFzeW5jIChkaXJlY3Rpb24pID0+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9hcGkvZG9jdG9yL2dldEZ1bGxMaXN0JylcclxuICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSAyMDApIHtcclxuICAgICAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEubGVuZ3RoID49IDApIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGxpc3REb2N0b3JzRGlyZWN0aW9uID0gW11cclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcmVzcG9uc2UuZGF0YS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhW2ldLmRpcmVjdGlvbi50b0xvd2VyQ2FzZSgpID09PSBkaXJlY3Rpb24udG9Mb3dlckNhc2UoKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsaXN0RG9jdG9yc0RpcmVjdGlvbi5wdXNoKHJlc3BvbnNlLmRhdGFbaV0pXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGxpc3REb2N0b3JzRGlyZWN0aW9uXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9IGNhdGNoIHtcclxuICAgICAgICBjb25zb2xlLmxvZygn0J7RiNC40LHQutCwINC/0L7Qu9GD0YfQtdC90LjRjyDQtNCw0L3QvdGL0YUg0YEg0YHQtdGA0LLQtdGA0LAnKVxyXG4gICAgfVxyXG59XHJcbmNvbnN0IHNlbmRSZXF1ZXN0Q2FsbEFQSSA9IGFzeW5jIChuYW1lLCBwaG9uZU51bWJlciwgZGF0ZSkgPT4ge1xyXG4gICAgY29uc3Qgb3B0aW9ucyA9IHtcclxuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcclxuICAgICAgICBoZWFkZXJzOiB7ICdDb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSxcclxuICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICAgIG5hbWUsXHJcbiAgICAgICAgICAgIHRlbGVwaG9uZTogcGhvbmVOdW1iZXIsXHJcbiAgICAgICAgICAgIGRhdGVcclxuICAgICAgICB9LFxyXG4gICAgICAgIHVybDogJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9hcGkvcmVxdWVzdC9zZXRSZXF1ZXN0J1xyXG4gICAgfVxyXG4gICAgYXdhaXQgYXhpb3Mob3B0aW9ucykudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHJlcy5kYXRhXHJcbiAgICB9KVxyXG59XHJcblxyXG5jb25zdCBzZW5kTWVzc2FnZUFQSSA9IGFzeW5jIChuYW1lLCBwaG9uZU51bWJlciwgZW1haWwsIG1lc3NhZ2UsIGRhdGUpID0+IHtcclxuICAgIGNvbnN0IG9wdGlvbnMgPSB7XHJcbiAgICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgICAgaGVhZGVyczogeyAnQ29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0sXHJcbiAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgICBuYW1lLFxyXG4gICAgICAgICAgICBzbXM6IG1lc3NhZ2UsXHJcbiAgICAgICAgICAgIGVtYWlsLFxyXG4gICAgICAgICAgICB0ZWxlcGhvbmU6IHBob25lTnVtYmVyLFxyXG4gICAgICAgICAgICBkYXRlXHJcbiAgICAgICAgfSxcclxuICAgICAgICB1cmw6ICdodHRwOi8vbG9jYWxob3N0OjgwODAvYXBpL21lc3NhZ2Uvc2V0TWVzc2FnZSdcclxuICAgIH1cclxuICAgIGF3YWl0IGF4aW9zKG9wdGlvbnMpLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiByZXMuZGF0YVxyXG4gICAgfSlcclxufVxyXG5leHBvcnQgeyBnZXRMaXN0QVBJLCBzZW5kUmVxdWVzdENhbGxBUEksIHNlbmRNZXNzYWdlQVBJIH1cclxuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi9zdHlsZXMuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0udXNlWzFdIS4vc3R5bGVzLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXHJcbmltcG9ydCB7IHNlbmRSZXF1ZXN0Q2FsbEFQSSB9IGZyb20gJy4uLy4uL2NvcmUvYXBpL2FwaURjcCdcclxuaW1wb3J0IEJ1dHRvbiBmcm9tICcuLi9CdXR0b24nXHJcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9zdHlsZXMuY3NzJ1xyXG5jb25zdCBSZXF1ZXN0Q2FsbCA9ICh7IHNldElzTW9kYWxBY3RpdmUsIHNldElzTW9kYWxWYWxpZGF0aW9uRmFsc2VBY3RpdmUgfSkgPT4ge1xyXG4gICAgY29uc3QgW25hbWUsIHNldE5hbWVdID0gdXNlU3RhdGUoJycpXHJcbiAgICBjb25zdCBbcGhvbmVOdW1iZXIsIHNldFBob25lTnVtYmVyXSA9IHVzZVN0YXRlKCcnKVxyXG4gICAgY29uc3QgdmFsaWRhdGlvblZhbHVlcyA9ICgpID0+IHtcclxuICAgICAgICBsZXQgY291bnRTdGFnZSA9IDBcclxuICAgICAgICBjb25zdCBlcnJvclZhbHVlcyA9IFtdXHJcbiAgICAgICAgaWYgKG5hbWUubGVuZ3RoID49IDIgJiYgbmFtZS5sZW5ndGggPCAxNSkge1xyXG4gICAgICAgICAgICBjb3VudFN0YWdlKytcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBlcnJvclZhbHVlcy5wdXNoKCfQntGI0LjQsdC60LAg0LLQstC+0LTQsCDQuNC80LXQvdC4JylcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh2YWxpZGF0ZVBob25lKHBob25lTnVtYmVyKSkge1xyXG4gICAgICAgICAgICBjb3VudFN0YWdlKytcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBlcnJvclZhbHVlcy5wdXNoKCfQntGI0LjQsdC60LAg0LLQstC+0LTQsCDRgtC10LvQtdGE0L7QvdCwJylcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGNvdW50U3RhZ2UgPT09IDIpIHtcclxuICAgICAgICAgICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKCkudG9Mb2NhbGVEYXRlU3RyaW5nKCdydS1SVScpICsgJyAnICsgbmV3IERhdGUoKS50b0xvY2FsZVRpbWVTdHJpbmcoKVxyXG4gICAgICAgICAgICBzZW5kUmVxdWVzdENhbGxBUEkobmFtZSwgcGhvbmVOdW1iZXIsIGRhdGUpXHJcbiAgICAgICAgICAgIHNldElzTW9kYWxBY3RpdmUoZmFsc2UpXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChjb3VudFN0YWdlICE9PSAyKSB7XHJcbiAgICAgICAgICAgIHNldElzTW9kYWxBY3RpdmUoZmFsc2UpXHJcbiAgICAgICAgICAgIHNldElzTW9kYWxWYWxpZGF0aW9uRmFsc2VBY3RpdmUodHJ1ZSlcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBjb25zdCB2YWxpZGF0ZVBob25lID0gKHBob25lKSA9PiB7XHJcbiAgICAgICAgY29uc3QgcmVnZXggPSAvXihcXCs3fDd8OCk/W1xcc1xcLV0/XFwoP1s0ODldWzAtOV17Mn1cXCk/W1xcc1xcLV0/WzAtOV17M31bXFxzXFwtXT9bMC05XXsyfVtcXHNcXC1dP1swLTldezJ9JC9cclxuICAgICAgICByZXR1cm4gcmVnZXgudGVzdChwaG9uZSlcclxuICAgIH1cclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5yZXF1ZXN0Q29udGFpbmVyfT5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5vcmRlckl0ZW19PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5ibG9ja0hlYWRlclRleHR9PtCc0Ysg0JLQsNC8INC/0LXRgNC10LfQstC+0L3QuNC8PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmZpZWxkRmxleH0+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5pbnB1dENvbnRhaW5lcn0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9J9CY0LzRjyonXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkJsdXI9eyhlKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0TmFtZShlLnRhcmdldC52YWx1ZSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e3N0eWxlcy50ZXh0SW5wdXR9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5pbnB1dENvbnRhaW5lcn0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9J9Ci0LXQu9C10YTQvtC9KidcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQmx1cj17KGUpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRQaG9uZU51bWJlcihlLnRhcmdldC52YWx1ZSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e3N0eWxlcy50ZXh0SW5wdXR9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuYmxvY2tUZXh0fT7QntGB0YLQsNCy0YzRgtC1INC30LDRj9Cy0LrRgyDQvdCwINC30LLQvtC90L7QuiDQuCDQvNGLINCy0LDQvCDQv9C10YDQtdC30LLQvtC90LjQvCE8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5yZXF1ZXN0QnV0dG9uc0NvbnRhaW5lcn0+XHJcbiAgICAgICAgICAgICAgICA8QnV0dG9uIHRleHRCdXR0b249J9Ce0YLQv9GA0LDQstC40YLRjCDQt9Cw0Y/QstC60YMnIGhhbmRsZXI9eygpID0+IHZhbGlkYXRpb25WYWx1ZXMoKX0gLz5cclxuICAgICAgICAgICAgICAgIDxCdXR0b24gdGV4dEJ1dHRvbj0n0JfQsNC60YDRi9GC0YwnIGhhbmRsZXI9eygpID0+IHNldElzTW9kYWxBY3RpdmUoKX0gLz5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICApXHJcbn1cclxuUmVxdWVzdENhbGwucHJvcFR5cGVzID0ge1xyXG4gICAgc2V0SXNNb2RhbEFjdGl2ZTogUHJvcFR5cGVzLmZ1bmMsXHJcbiAgICBzZXRJc01vZGFsVmFsaWRhdGlvbkZhbHNlQWN0aXZlOiBQcm9wVHlwZXMuZnVuY1xyXG59XHJcbmV4cG9ydCBkZWZhdWx0IFJlcXVlc3RDYWxsXHJcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0udXNlWzFdIS4vc3R5bGVzLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVsxXSEuL3N0eWxlcy5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCdcclxuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xyXG5pbXBvcnQgeyBzZW5kTWVzc2FnZUFQSSB9IGZyb20gJy4uLy4uL2NvcmUvYXBpL2FwaURjcCdcclxuaW1wb3J0IEJ1dHRvbiBmcm9tICcuLi9CdXR0b24nXHJcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9zdHlsZXMuY3NzJ1xyXG5jb25zdCBSZXF1ZXN0U21zID0gKHsgc2V0SXNNb2RhbEFjdGl2ZSwgc2V0SXNNb2RhbFZhbGlkYXRpb25GYWxzZUFjdGl2ZSB9KSA9PiB7XHJcbiAgICBjb25zdCBbbmFtZSwgc2V0TmFtZV0gPSB1c2VTdGF0ZSgnJylcclxuICAgIGNvbnN0IFtlbWFpbCwgc2V0RW1haWxdID0gdXNlU3RhdGUoJycpXHJcbiAgICBjb25zdCBbcGhvbmVOdW1iZXIsIHNldFBob25lTnVtYmVyXSA9IHVzZVN0YXRlKCcnKVxyXG4gICAgY29uc3QgW21lc3NhZ2UsIHNldE1lc3NhZ2VdID0gdXNlU3RhdGUoJycpXHJcbiAgICBjb25zdCB2YWxpZGF0aW9uVmFsdWVzID0gKCkgPT4ge1xyXG4gICAgICAgIGxldCBjb3VudFN0YWdlID0gMFxyXG4gICAgICAgIGNvbnN0IGVycm9yVmFsdWVzID0gW11cclxuICAgICAgICBpZiAobmFtZS5sZW5ndGggPj0gMiAmJiBuYW1lLmxlbmd0aCA8IDE1KSB7XHJcbiAgICAgICAgICAgIGNvdW50U3RhZ2UrK1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGVycm9yVmFsdWVzLnB1c2goJ9Ce0YjQuNCx0LrQsCDQstCy0L7QtNCwINC40LzQtdC90LgnKVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKHZhbGlkYXRlUGhvbmUocGhvbmVOdW1iZXIpKSB7XHJcbiAgICAgICAgICAgIGNvdW50U3RhZ2UrK1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGVycm9yVmFsdWVzLnB1c2goJ9Ce0YjQuNCx0LrQsCDQstCy0L7QtNCwINGC0LXQu9C10YTQvtC90LAnKVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodmFsaWRhdGVFbWFpbChlbWFpbCkpIHtcclxuICAgICAgICAgICAgY291bnRTdGFnZSsrXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgZXJyb3JWYWx1ZXMucHVzaCgn0J7RiNC40LHQutCwINCy0LLQvtC00LAgZW1haWwnKVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAobWVzc2FnZS5sZW5ndGggPiA1ICYmIG1lc3NhZ2UubGVuZ3RoIDwgMjAwKSB7XHJcbiAgICAgICAgICAgIGNvdW50U3RhZ2UrK1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGVycm9yVmFsdWVzLnB1c2goJ9Ch0LvQuNGI0LrQvtC8INC00LvQuNC90L3QvtC1INC40LvQuCDQvNCw0LvQtdC90YzQutC+0LUg0YHQvtC+0LHRidC10L3QuNC1ICcpXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChjb3VudFN0YWdlID09PSA0KSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSgpLnRvTG9jYWxlRGF0ZVN0cmluZygncnUtUlUnKSArICcgJyArIG5ldyBEYXRlKCkudG9Mb2NhbGVUaW1lU3RyaW5nKClcclxuICAgICAgICAgICAgc2VuZE1lc3NhZ2VBUEkobmFtZSwgcGhvbmVOdW1iZXIsIGVtYWlsLCBtZXNzYWdlLCBkYXRlKVxyXG4gICAgICAgICAgICBzZXRJc01vZGFsQWN0aXZlKGZhbHNlKVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHNldElzTW9kYWxBY3RpdmUoZmFsc2UpXHJcbiAgICAgICAgICAgIHNldElzTW9kYWxWYWxpZGF0aW9uRmFsc2VBY3RpdmUodHJ1ZSlcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBjb25zdCB2YWxpZGF0ZUVtYWlsID0gKGVtYWlsKSA9PiB7XHJcbiAgICAgICAgY29uc3QgcmVnZXggPSAvXigoW148PigpW1xcXVxcXFwuLDs6XFxzQFwiXSsoXFwuW148PigpW1xcXVxcXFwuLDs6XFxzQFwiXSspKil8KFwiLitcIikpQCgoXFxbWzAtOV17MSwzfVxcLlswLTldezEsM31cXC5bMC05XXsxLDN9XFwuWzAtOV17MSwzfVxcXSl8KChbYS16QS1aXFwtMC05XStcXC4pK1thLXpBLVpdezIsfSkpJC9cclxuICAgICAgICByZXR1cm4gcmVnZXgudGVzdChlbWFpbClcclxuICAgIH1cclxuICAgIGNvbnN0IHZhbGlkYXRlUGhvbmUgPSAocGhvbmUpID0+IHtcclxuICAgICAgICBjb25zdCByZWdleCA9IC9eKFxcKzd8N3w4KT9bXFxzXFwtXT9cXCg/WzQ4OV1bMC05XXsyfVxcKT9bXFxzXFwtXT9bMC05XXszfVtcXHNcXC1dP1swLTldezJ9W1xcc1xcLV0/WzAtOV17Mn0kL1xyXG4gICAgICAgIHJldHVybiByZWdleC50ZXN0KHBob25lKVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLnJlcXVlc3RDb250YWluZXJ9PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLm9yZGVySXRlbX0+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmJsb2NrSGVhZGVyVGV4dH0+0J3QsNC/0LjRgdCw0YLRjCDQvdCw0Lw8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuZmllbGRGbGV4fT5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmlucHV0Q29udGFpbmVyfT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0n0JjQvNGPKidcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQmx1cj17KGUpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXROYW1lKGUudGFyZ2V0LnZhbHVlKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17c3R5bGVzLnRleHRJbnB1dH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmlucHV0Q29udGFpbmVyfT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0nRW1haWwqJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25CbHVyPXsoZSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldEVtYWlsKGUudGFyZ2V0LnZhbHVlKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17c3R5bGVzLnRleHRJbnB1dH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmlucHV0Q29udGFpbmVyfT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0n0KLQtdC70LXRhNC+0L0nXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkJsdXI9eyhlKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0UGhvbmVOdW1iZXIoZS50YXJnZXQudmFsdWUpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtzdHlsZXMudGV4dElucHV0fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuaW5wdXRDb250YWluZXJ9PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8dGV4dGFyZWFcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSfQodC+0L7QsdGJ0LXQvdC40LUqJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25CbHVyPXsoZSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldE1lc3NhZ2UoZS50YXJnZXQudmFsdWUpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtzdHlsZXMudGV4dElucHV0fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLnJlcXVlc3RCdXR0b25zQ29udGFpbmVyfT5cclxuICAgICAgICAgICAgICAgIDxCdXR0b24gdGV4dEJ1dHRvbj0n0J7RgtC/0YDQsNCy0LjRgtGMJyBoYW5kbGVyPXsoKSA9PiB2YWxpZGF0aW9uVmFsdWVzKCl9IC8+XHJcbiAgICAgICAgICAgICAgICA8QnV0dG9uIHRleHRCdXR0b249J9CX0LDQutGA0YvRgtGMJyBoYW5kbGVyPXsoKSA9PiBzZXRJc01vZGFsQWN0aXZlKCl9IC8+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgKVxyXG59XHJcblJlcXVlc3RTbXMucHJvcFR5cGVzID0ge1xyXG4gICAgc2V0SXNNb2RhbEFjdGl2ZTogUHJvcFR5cGVzLmZ1bmMsXHJcbiAgICBzZXRJc01vZGFsVmFsaWRhdGlvbkZhbHNlQWN0aXZlOiBQcm9wVHlwZXMuZnVuY1xyXG59XHJcbmV4cG9ydCBkZWZhdWx0IFJlcXVlc3RTbXNcclxuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi9zdHlsZXMuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0udXNlWzFdIS4vc3R5bGVzLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXHJcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJ1xyXG5pbXBvcnQgTmF2aWdhdGlvbk1lbnUgZnJvbSAnLi4vLi4vQ29tcG9uZW50cy9OYXZpZ2F0aW9uTWVudSdcclxuaW1wb3J0IEJ1dHRvbiBmcm9tICcuLi8uLi9Db21wb25lbnRzL0J1dHRvbidcclxuaW1wb3J0IE1vZGFsIGZyb20gJy4uLy4uL0NvbXBvbmVudHMvTW9kYWwnXHJcbmltcG9ydCBSZXF1ZXN0Q2FsbCBmcm9tICcuLi8uLi9Db21wb25lbnRzL1JlcXVlc3RDYWxsJ1xyXG5pbXBvcnQgUmVxdWVzdFNtcyBmcm9tICcuLi8uLi9Db21wb25lbnRzL1JlcXVlc3RTbXMnXHJcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9zdHlsZXMuY3NzJ1xyXG5pbXBvcnQgbG9nb0ltYWdlIGZyb20gJy4uLy4uL2ltYWdlcy9sb2dvLnBuZydcclxuaW1wb3J0IGNhbGxJbWFnZSBmcm9tICcuLi8uLi9pbWFnZXMvY2FsbC5wbmcnXHJcbmNvbnN0IEhlYWRlciA9ICh7IGlzTW9iaWxlIH0pID0+IHtcclxuICAgIGNvbnN0IFtpc01vZGFsUmVxdWVzdENhbGxBY3RpdmUsIHNldElzTW9kYWxSZXF1ZXN0Q2FsbEFjdGl2ZV0gPSB1c2VTdGF0ZShmYWxzZSlcclxuICAgIGNvbnN0IFtpc01vZGFsUmVxdWVzdFNtc0FjdGl2ZSwgc2V0SXNNb2RhbFJlcXVlc3RTbXNBY3RpdmVdID0gdXNlU3RhdGUoZmFsc2UpXHJcbiAgICBjb25zdCBbaXNNb2RhbFZhbGlkYXRpb25GYWxzZUFjdGl2ZSwgc2V0SXNNb2RhbFZhbGlkYXRpb25GYWxzZUFjdGl2ZV0gPSB1c2VTdGF0ZShmYWxzZSlcclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPD5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5oZWFkZXJ9PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5ibG9ja0xvZ299PlxyXG4gICAgICAgICAgICAgICAgICAgIDxMaW5rIHRvPXsnLyd9PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzTmFtZT17c3R5bGVzLmltYWdlTG9nb30gc3JjPXtsb2dvSW1hZ2V9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9MaW5rPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMudGV4dEJsb2NrfT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy50ZXh0TG9nb1VwfT7QmtC+0L3RgdGD0LvRjNGC0LDRgtC40LLQvdC+LdC00LjQsNCz0L3QvtGB0YLQuNGH0LXRgdC60LDRjzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLnRleHRMb2dvRG93bn0+0J/QvtC70LjQutC70LjQvdC40LrQsDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5ibG9ja0luZm9Db250YWN0c30+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5pbmZvTnVtYmVyfT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5ibG9ja051bWJlcn0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzTmFtZT17c3R5bGVzLmltYWdlSW5mb0NvbnRhY3RzfSBzcmM9e2NhbGxJbWFnZX0gLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMudGV4dFRlbGVwaG9uZX0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPXtzdHlsZXMuQ2l0eX0+0KfQsNC/0LDQtdCy0YHQuiA8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0ndGVsOis3ODQ2MzkzMDA5Mic+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICs3KDg0NjM5KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9e3N0eWxlcy5udW1iZXJQaG9uZX0+IDMtMDAtOTIgPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5ibG9ja051bWJlcn0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzTmFtZT17c3R5bGVzLmltYWdlSW5mb0NvbnRhY3RzfSBzcmM9e2NhbGxJbWFnZX0gLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMudGV4dFRlbGVwaG9uZX0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPXtzdHlsZXMuQ2l0eX0+0JHQtdC30LXQvdGH0YPQujwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9e3N0eWxlcy5udW1iZXJQaG9uZX0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9J3RlbDorNzg0NjM5MzAwOTInPiArNyAoOTI3KSA3NTAtNTYtNTYgPC9hPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmJ1dHRvbnNCbG9ja30+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b24gdGV4dEJ1dHRvbj17J9Cd0LDQv9C40YHQsNGC0Ywg0L3QsNC8J30gaGFuZGxlcj17KCkgPT4gc2V0SXNNb2RhbFJlcXVlc3RTbXNBY3RpdmUodHJ1ZSl9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b24gdGV4dEJ1dHRvbj17J9Ce0YHRgtCw0LLQuNGC0Ywg0LfQsNGP0LLQutGDINC90LAg0LfQstC+0L3QvtC6J30gaGFuZGxlcj17KCkgPT4gc2V0SXNNb2RhbFJlcXVlc3RDYWxsQWN0aXZlKHRydWUpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8TW9kYWwgaXNBY3RpdmU9e2lzTW9kYWxSZXF1ZXN0Q2FsbEFjdGl2ZX0gc2V0QWN0aXZlPXtzZXRJc01vZGFsUmVxdWVzdENhbGxBY3RpdmV9IGlzQ2xvc2FibGU9e2ZhbHNlfT5cclxuICAgICAgICAgICAgICAgICAgICA8UmVxdWVzdENhbGxcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0SXNNb2RhbEFjdGl2ZT17c2V0SXNNb2RhbFJlcXVlc3RDYWxsQWN0aXZlfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRJc01vZGFsVmFsaWRhdGlvbkZhbHNlQWN0aXZlPXtzZXRJc01vZGFsVmFsaWRhdGlvbkZhbHNlQWN0aXZlfVxyXG4gICAgICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgICA8L01vZGFsPlxyXG4gICAgICAgICAgICAgICAgPE1vZGFsIGlzQWN0aXZlPXtpc01vZGFsUmVxdWVzdFNtc0FjdGl2ZX0gc2V0QWN0aXZlPXtzZXRJc01vZGFsUmVxdWVzdFNtc0FjdGl2ZX0gaXNDbG9zYWJsZT17ZmFsc2V9PlxyXG4gICAgICAgICAgICAgICAgICAgIDxSZXF1ZXN0U21zXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldElzTW9kYWxBY3RpdmU9e3NldElzTW9kYWxSZXF1ZXN0U21zQWN0aXZlfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRJc01vZGFsVmFsaWRhdGlvbkZhbHNlQWN0aXZlPXtzZXRJc01vZGFsVmFsaWRhdGlvbkZhbHNlQWN0aXZlfVxyXG4gICAgICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgICA8L01vZGFsPlxyXG4gICAgICAgICAgICAgICAgPE1vZGFsIGlzQWN0aXZlPXtpc01vZGFsVmFsaWRhdGlvbkZhbHNlQWN0aXZlfSBzZXRBY3RpdmU9e3NldElzTW9kYWxWYWxpZGF0aW9uRmFsc2VBY3RpdmV9IGlzQ2xvc2FibGU9e2ZhbHNlfT5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLnJlcXVlc3RDb250YWluZXJ9PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLm9yZGVySXRlbX0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmJsb2NrSGVhZGVyVGV4dH0+0J7RiNC40LHQutCwPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmJsb2NrVGV4dH0+0J3QtdC60L7RgNGA0LXQutGC0L3Ri9C5INCy0LLQvtC0INC00LDQvdC90YvRhTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLnJlcXVlc3RCdXR0b25zQ29udGFpbmVyfT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b24gdGV4dEJ1dHRvbj0n0JfQsNC60YDRi9GC0YwnIGhhbmRsZXI9eygpID0+IHNldElzTW9kYWxWYWxpZGF0aW9uRmFsc2VBY3RpdmUoZmFsc2UpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvTW9kYWw+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8TmF2aWdhdGlvbk1lbnVcclxuICAgICAgICAgICAgICAgIG1lbnVJdGVtcz17W1xyXG4gICAgICAgICAgICAgICAgICAgIHsgbmFtZTogJ9CT0JvQkNCS0J3QkNCvJywgbGluazogJy8nIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgeyBuYW1lOiAn0KHQn9CV0KbQmNCQ0JvQmNCh0KLQqycsIGxpbms6ICcvc3BlY2lhbGlzdHMnIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgeyBuYW1lOiAn0KPQodCb0KPQk9CYJywgbGluazogJy9zZXJ2aWNlcycgfSxcclxuICAgICAgICAgICAgICAgICAgICB7IG5hbWU6ICfQn9Cg0J7QpNCe0KHQnNCe0KLQoNCrJywgbGluazogJy9wcmV2aWV3cycgfSxcclxuICAgICAgICAgICAgICAgICAgICB7IG5hbWU6ICfQmtCe0J3QotCQ0JrQotCrJywgbGluazogJy9jb250YWN0cycgfVxyXG4gICAgICAgICAgICAgICAgXX1cclxuICAgICAgICAgICAgICAgIGlzTW9iaWxlPXtpc01vYmlsZX1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICA8Lz5cclxuICAgIClcclxufVxyXG5IZWFkZXIucHJvcFR5cGVzID0ge1xyXG4gICAgaXNNb2JpbGU6IFByb3BUeXBlcy5ib29sXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEhlYWRlclxyXG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVsxXSEuL3N0eWxlcy5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi9zdHlsZXMuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnXHJcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcclxuaW1wb3J0IGxlZnRJbWFnZSBmcm9tICcuLi8uLi9pbWFnZXMvbGVmdC5wbmcnXHJcbmltcG9ydCByaWdodEltYWdlIGZyb20gJy4uLy4uL2ltYWdlcy9yaWdodC5wbmcnXHJcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9zdHlsZXMuY3NzJ1xyXG5cclxuY29uc3QgU2xpZGVyID0gKHsgbWVudUl0ZW1zIH0pID0+IHtcclxuICAgIGNvbnN0IFtwYWdlTnVtYmVyLCBzZXRQYWdlTnVtYmVyXSA9IHVzZVN0YXRlKDApXHJcbiAgICBjb25zdCBtYXBNZW51ID0gKHBhZ2VOdW1iZXIpID0+IHtcclxuICAgICAgICBjb25zdCBjdXJyZW50SXRlbSA9IG1lbnVJdGVtc1twYWdlTnVtYmVyXVxyXG4gICAgICAgIHJldHVybiA8aW1nIHNyYz17Y3VycmVudEl0ZW19IGNsYXNzTmFtZT17c3R5bGVzLnNsaWRlckltYWdlfSAvPlxyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IG5leHRIYW5kbGVyID0gKCkgPT4ge1xyXG4gICAgICAgIGlmIChwYWdlTnVtYmVyIDwgbWVudUl0ZW1zLmxlbmd0aCAtIDEpIHNldFBhZ2VOdW1iZXIocGFnZU51bWJlciArIDEpXHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgcHJldkhhbmRsZXIgPSAoKSA9PiB7XHJcbiAgICAgICAgaWYgKHBhZ2VOdW1iZXIgPiAwKSBzZXRQYWdlTnVtYmVyKHBhZ2VOdW1iZXIgLSAxKVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmNvbnRhaW5lclNsaWRlcn0+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuc2xpZGVyfT5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuc2xpZGVySXRlbX0+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5idXR0b25OYXZpZ2F0aW9ufSBvbkNsaWNrPXtwcmV2SGFuZGxlcn0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXtsZWZ0SW1hZ2V9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAge21hcE1lbnUocGFnZU51bWJlcil9XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5idXR0b25OYXZpZ2F0aW9ufSBvbkNsaWNrPXtuZXh0SGFuZGxlcn0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXtyaWdodEltYWdlfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgKVxyXG59XHJcblNsaWRlci5wcm9wVHlwZXMgPSB7XHJcbiAgICBtZW51SXRlbXM6IFByb3BUeXBlcy5hcnJheVxyXG59XHJcbmV4cG9ydCBkZWZhdWx0IFNsaWRlclxyXG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVsxXSEuL3N0eWxlcy5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi9zdHlsZXMuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXHJcbmltcG9ydCBjYWxsSW1hZ2UgZnJvbSAnLi4vLi4vaW1hZ2VzL2NhbGwucG5nJ1xyXG5pbXBvcnQgbG9jYXRpb25JbWFnZSBmcm9tICcuLi8uLi9pbWFnZXMvbG9jYXRpb24ucG5nJ1xyXG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vc3R5bGVzLmNzcydcclxuXHJcbmNvbnN0IFNwZWNpYWxpc3QgPSAoeyBuYW1lLCBzdXJuYW1lLCBwYXRyb255bWljLCBkaXJlY3Rpb24sIGV4cGVyaWVuY2UsIGNpdHksIG51bWJlciB9KSA9PiB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuYmxvY2tTcGVjaWFsaXN0fT5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5pbmZvU3BlY2lhbGlzdH0+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmZpb30+XHJcbiAgICAgICAgICAgICAgICAgICAge3N1cm5hbWV9IHtuYW1lfSB7cGF0cm9ueW1pY31cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5pbmZvU3BlY2lhbGlzdH0+0J3QsNC/0YDQsNCy0LvQtdC90LjQtToge2RpcmVjdGlvbn08L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5pbmZvU3BlY2lhbGlzdH0+0KHRgtCw0LY6IHtleHBlcmllbmNlfSs8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5hbGxJbmZvfT5cclxuICAgICAgICAgICAgICAgIDxpbWcgY2xhc3NOYW1lPXtzdHlsZXMuaW1hZ2VJbmZvQ29udGFjdHN9IHNyYz17bG9jYXRpb25JbWFnZX0gLz5cclxuICAgICAgICAgICAgICAgIHtjaXR5fVxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5hbGxJbmZvfT5cclxuICAgICAgICAgICAgICAgIDxpbWcgY2xhc3NOYW1lPXtzdHlsZXMuaW1hZ2VJbmZvQ29udGFjdHN9IHNyYz17Y2FsbEltYWdlfSAvPlxyXG4gICAgICAgICAgICAgICAgPGEgaHJlZj17YHRlbDoke251bWJlcn1gfT57bnVtYmVyfTwvYT5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICApXHJcbn1cclxuXHJcblNwZWNpYWxpc3QucHJvcFR5cGVzID0ge1xyXG4gICAgbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcclxuICAgIHN1cm5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgICBwYXRyb255bWljOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gICAgZGlyZWN0aW9uOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gICAgZXhwZXJpZW5jZTogUHJvcFR5cGVzLm51bWJlcixcclxuICAgIGNpdHk6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgICBudW1iZXI6IFByb3BUeXBlcy5zdHJpbmdcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgU3BlY2lhbGlzdFxyXG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVsxXSEuL3N0eWxlcy5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi9zdHlsZXMuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXHJcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9zdHlsZXMuY3NzJ1xyXG5cclxuY29uc3QgVHlwZURvY3RvciA9ICh7IHRpdGxlLCBoYW5kbGVyIH0pID0+IHtcclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5ibG9ja1R5cGVEb2N0b3J9IG9uQ2xpY2s9eygpID0+IGhhbmRsZXIodGl0bGUpfT5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5ibG9ja1RpdGxlfT57dGl0bGV9PC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICApXHJcbn1cclxuVHlwZURvY3Rvci5wcm9wVHlwZXMgPSB7XHJcbiAgICB0aXRsZTogUHJvcFR5cGVzLnN0cmluZyxcclxuICAgIGhhbmRsZXI6IFByb3BUeXBlcy5mdW5jXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFR5cGVEb2N0b3JcclxuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi9zdHlsZXMuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0udXNlWzFdIS4vc3R5bGVzLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXHJcbmltcG9ydCB7IGdldExpc3RBUEkgfSBmcm9tICcuLi8uLi9jb3JlL2FwaS9hcGlEY3AnXHJcbmltcG9ydCBTbGlkZXIgZnJvbSAnLi4vLi4vQ29tcG9uZW50cy9TbGlkZXInXHJcbmltcG9ydCBNb2RhbCBmcm9tICcuLi8uLi9Db21wb25lbnRzL01vZGFsJ1xyXG5pbXBvcnQgQnV0dG9uIGZyb20gJy4uLy4uL0NvbXBvbmVudHMvQnV0dG9uJ1xyXG5pbXBvcnQgU3BlY2lhbGlzdCBmcm9tICcuLi8uLi9Db21wb25lbnRzL1NwZWNpYWxpc3QnXHJcbmltcG9ydCBSZXF1ZXN0Q2FsbCBmcm9tICcuLi8uLi9Db21wb25lbnRzL1JlcXVlc3RDYWxsJ1xyXG5pbXBvcnQgVHlwZURvY3RvciBmcm9tICcuLi8uLi9Db21wb25lbnRzL1R5cGVEb2N0b3InXHJcbmltcG9ydCBzbGlkZXIxSW1hZ2UgZnJvbSAnLi4vLi4vaW1hZ2VzL3NsaWRlcjEucG5nJ1xyXG5pbXBvcnQgc2xpZGVyMkltYWdlIGZyb20gJy4uLy4uL2ltYWdlcy9zbGlkZXIyLnBuZydcclxuaW1wb3J0IHNsaWRlcjNJbWFnZSBmcm9tICcuLi8uLi9pbWFnZXMvc2xpZGVyMy5wbmcnXHJcbmltcG9ydCBzbGlkZXI0SW1hZ2UgZnJvbSAnLi4vLi4vaW1hZ2VzL3NsaWRlcjQucG5nJ1xyXG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vc3R5bGVzLmNzcydcclxuXHJcbmNvbnN0IFNwZWNpYWxpc3RzUGFnZSA9ICh7IGF2YWlsYWJpbGl0eVNsaWRlciB9KSA9PiB7XHJcbiAgICBjb25zdCBbaXNNb2RhbEFjdGl2ZSwgc2V0SXNNb2RhbEFjdGl2ZV0gPSB1c2VTdGF0ZShmYWxzZSlcclxuICAgIGNvbnN0IFtkaXJlY3Rpb24sIHNldERpcmVjdGlvbl0gPSB1c2VTdGF0ZSgnJylcclxuICAgIGNvbnN0IFtsaXN0RG9jdG9ycywgc2V0TGlzdERvY3RvcnNdID0gdXNlU3RhdGUoKVxyXG4gICAgY29uc3QgW2lzTW9kYWxWYWxpZGF0aW9uRmFsc2VBY3RpdmUsIHNldElzTW9kYWxWYWxpZGF0aW9uRmFsc2VBY3RpdmVdID0gdXNlU3RhdGUoZmFsc2UpXHJcbiAgICBjb25zdCBnZXRMaXN0RG9jdG9ycyA9IGFzeW5jICh0aXRsZSkgPT4ge1xyXG4gICAgICAgIHNldERpcmVjdGlvbih0aXRsZSlcclxuICAgICAgICBjb25zdCBhcnJEb2N0b3JzID0gYXdhaXQgZ2V0TGlzdEFQSSh0aXRsZSlcclxuICAgICAgICBjb25zdCBhcnJsaXN0RG9jdG9ycyA9IFtdXHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcnJEb2N0b3JzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGFycmxpc3REb2N0b3JzLnB1c2goW1xyXG4gICAgICAgICAgICAgICAgYXJyRG9jdG9yc1tpXS5uYW1lLFxyXG4gICAgICAgICAgICAgICAgYXJyRG9jdG9yc1tpXS5zdXJuYW1lLFxyXG4gICAgICAgICAgICAgICAgYXJyRG9jdG9yc1tpXS5wYXRyb255bWljLFxyXG4gICAgICAgICAgICAgICAgYXJyRG9jdG9yc1tpXS5kaXJlY3Rpb24sXHJcbiAgICAgICAgICAgICAgICBhcnJEb2N0b3JzW2ldLmV4cGVyaWVuY2UsXHJcbiAgICAgICAgICAgICAgICBhcnJEb2N0b3JzW2ldLmNpdHlcclxuICAgICAgICAgICAgXSlcclxuICAgICAgICB9XHJcbiAgICAgICAgc2V0TGlzdERvY3RvcnMoYXJybGlzdERvY3RvcnMpXHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2RpcmVjdGlvbicpLnNjcm9sbEludG9WaWV3KHtcclxuICAgICAgICAgICAgYmVoYXZpb3I6ICdzbW9vdGgnXHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuICAgIGNvbnN0IHZpZXdMaXN0RG9jdG9ycyA9IChsaXN0RG9jdG9ycykgPT4ge1xyXG4gICAgICAgIHJldHVybiBsaXN0RG9jdG9ycy5tYXAoKGl0ZW0sIGluZGV4KSA9PiB7XHJcbiAgICAgICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgICAgICA8U3BlY2lhbGlzdFxyXG4gICAgICAgICAgICAgICAgICAgIGtleT17aW5kZXh9XHJcbiAgICAgICAgICAgICAgICAgICAgbmFtZT17aXRlbVswXX1cclxuICAgICAgICAgICAgICAgICAgICBzdXJuYW1lPXtpdGVtWzFdfVxyXG4gICAgICAgICAgICAgICAgICAgIHBhdHJvbnltaWM9e2l0ZW1bMl19XHJcbiAgICAgICAgICAgICAgICAgICAgZGlyZWN0aW9uPXtpdGVtWzNdfVxyXG4gICAgICAgICAgICAgICAgICAgIGV4cGVyaWVuY2U9e2l0ZW1bNF19XHJcbiAgICAgICAgICAgICAgICAgICAgY2l0eT17aXRlbVs1XX1cclxuICAgICAgICAgICAgICAgICAgICBudW1iZXI9e2l0ZW1bNV0gPT09ICfQp9Cw0L/QsNC10LLRgdC6JyA/ICcrNyg4NDYzOSkgMy0wMC05MicgOiAnKzcgKDkyNykgNzUwLTU2LTU2J31cclxuICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgIClcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLnNwZWNpYWxpc3RzUGFnZX0+XHJcbiAgICAgICAgICAgIHshYXZhaWxhYmlsaXR5U2xpZGVyID8gPFNsaWRlciBtZW51SXRlbXM9e1tzbGlkZXIxSW1hZ2UsIHNsaWRlcjJJbWFnZSwgc2xpZGVyM0ltYWdlLCBzbGlkZXI0SW1hZ2VdfSAvPiA6IG51bGx9XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuaGVhZGVyVGV4dH0gaWQ9J3RpdGxlVGV4dCc+XHJcbiAgICAgICAgICAgICAgICDQodC/0LXRhtC40LDQu9C40YHRgtGLXHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmRpc2NyaXB0aW9uVGV4dH0+XHJcbiAgICAgICAgICAgICAgICDQndCw0YjQuCDRgdC/0LXRhtC40LDQu9C40YHRgtGLIC0g0L7QtNC90Lgg0LjQtyDQu9GD0YfRiNC40YUg0LIg0KHQsNC80LDRgNGB0LrQvtC5INC+0LHQu9Cw0YHRgtC4INC4INC/0L4g0L/RgNCw0LLRgyDQt9Cw0YHQu9GD0LbQuNC70Lgg0LHQu9Cw0LPQvtC00LDRgNC90L7RgdGC0Ywg0LzQvdC+0LPQuNGFINC/0LDRhtC40LXQvdGC0L7QsiDRgdCy0L7QuNC8XHJcbiAgICAgICAgICAgICAgICDQstGL0YHQvtC60LjQvCDQv9GA0L7RhNC10YHRgdC40L7QvdCw0LvQuNC30LzQvtC8LCDRgtC+0YfQvdC+0YHRgtGM0Y4g0YDQsNCx0L7RgtGLINC4INGH0LXQu9C+0LLQtdGH0LXRgdC60L7QuSDQvtGC0LfRi9Cy0YfQuNCy0L7RgdGC0YzRjiDQuiDQvdGD0LbQtNCw0Lwg0L/QsNGG0LjQtdC90YLQvtCyLiDQmCDQvNGLINCz0L7RgNC00LjQvNGB0Y9cclxuICAgICAgICAgICAgICAgINC60L7Qu9C70LXQutGC0LjQstC+0Lwg0YDQsNCx0L7RgtC90LjQutC+0LIsINGB0YTQvtGA0LzQuNGA0L7QstCw0LLRiNC40LzRgdGPINCyINC90LDRiNC10Lkg0LrQu9C40L3QuNC60LUuXHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmRpc2NyaXB0aW9uVGV4dH0+XHJcbiAgICAgICAgICAgICAgICDQn9GA0Lgg0L3QtdC+0LHRhdC+0LTQuNC80L7RgdGC0Lgg0LzQvtC20L3QviDQv9C+0LvRg9GH0LjRgtGMINC60L7QvdGB0YPQu9GM0YLQsNGG0LjQuCDRgdC/0LXRhtC40LDQu9C40YHRgtCwINC4INC/0YDQvtCy0LXRgdGC0Lgg0L7RgdC80L7RgtGAINC90LAg0LTQvtC80YMg0LjQu9C4INC90LAg0YLQtdGA0YDQuNGC0L7RgNC40Lgg0L/RgNC10LTQv9GA0LjRj9GC0LjRjy5cclxuICAgICAgICAgICAgICAgINCe0YbQtdC90LjQsiDQutCw0YfQtdGB0YLQstC+INC4INC+0L/QtdGA0LDRgtC40LLQvdC+0YHRgtGMINC+0LrQsNC30YvQstCw0LXQvNGL0YUg0L3QsNC80Lgg0YPRgdC70YPQsywg0LAg0YLQsNC60LbQtSDQstGL0YHQvtC60LjQuSDQv9GA0L7RhNC10YHRgdC40L7QvdCw0LvQuNC30Lwg0L3QsNGI0LjRhSDRgdC/0LXRhtC40LDQu9C40YHRgtC+0LIsINCyXHJcbiAgICAgICAgICAgICAgICDRh9C40YHQu9C+INC90LDRiNC40YUg0L/QvtGB0YLQvtGP0L3QvdGL0YUg0LrQu9C40LXQvdGC0L7QsiDQstC+0YjQu9C4INC80L3QvtCz0LjQtSDQutGA0YPQv9C90YvQtSDQvtGA0LPQsNC90LjQt9Cw0YbQuNC4INCh0LDQvNCw0YDRgdC60L7QuSDQvtCx0LvQsNGB0YLQuC5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuZGlzY3JpcHRpb25UZXh0fT5cclxuICAgICAgICAgICAgICAgINCV0YHQu9C4INCy0Ysg0YXQvtGC0LjRgtC1INC/0YDQvtCy0LXRgdGC0Lgg0L/RgNC+0YTQuNC70LDQutGC0LjRh9C10YHQutC40Lkg0L7RgdC80L7RgtGAINGB0LLQvtC40YUg0YHQvtGC0YDRg9C00L3QuNC60L7Qsjsg0LXRgdC70Lgg0LLQsNC8INC90YPQttC90LAg0LrQstCw0LvQuNGE0LjRhtC40YDQvtCy0LDQvdC90LDRjyDQvNC10LTQuNGG0LjQvdGB0LrQsNGPXHJcbiAgICAgICAgICAgICAgICDQv9C+0LzQvtGJ0Yw7INC10YHQu9C4INCy0Ysg0L/QvtC60LAg0LXRidC1INC90LUg0LfQvdCw0LXRgtC1LCDQutC+0LzRgyDQtNC+0LLQtdGA0LjRgtGMINC30LDQsdC+0YLRgyDQviDRgdCy0L7QtdC8INC30LTQvtGA0L7QstGM0LUsXHJcbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9e3N0eWxlcy50ZXh0TGlua1JlcXVlc3R9IG9uQ2xpY2s9eygpID0+IHNldElzTW9kYWxBY3RpdmUodHJ1ZSl9PlxyXG4gICAgICAgICAgICAgICAgICAgINC/0L7Qt9Cy0L7QvdC40YLQtSDQvdCw0LwuXHJcbiAgICAgICAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmRpc2NyaXB0aW9uVGV4dH0+XHJcbiAgICAgICAgICAgICAgICDQktGLINC+0YfQtdC90Ywg0YHQutC+0YDQviDRgdGD0LzQtdC10YLQtSDQvtGG0LXQvdC40YLRjCDQv9GA0L7RhNC10YHRgdC40L7QvdCw0LvQuNC30Lwg0Lgg0L7RgtCy0LXRgtGB0YLQstC10L3QvdC+0YHRgtGMINC90LDRiNC40YUg0YHQv9C10YbQuNCw0LvQuNGB0YLQvtCyINC4INGC0L7RgiDQstGL0YHQvtC60LjQuSDRg9GA0L7QstC10L3RjCDRgNCw0LHQvtGC0YssXHJcbiAgICAgICAgICAgICAgICDQutC+0YLQvtGA0YvQuSDQvNGLINC/0L7QtNC00LXRgNC20LjQstCw0LXQvCDQvdCwINC/0YDQvtGC0Y/QttC10L3QuNC4INC80L3QvtCz0LjRhSDQu9C10YIuXHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmhlYWRlclRleHR9PtCd0LDQv9GA0LDQstC70LXQvdC40Y86PC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuYmxvY2tNZW51U3BlY2lhbGlzdHN9PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5tZW51U3BlY2lhbGlzdHN9PlxyXG4gICAgICAgICAgICAgICAgICAgIDxUeXBlRG9jdG9yIHRpdGxlPXsn0J3QldCS0KDQntCb0J7Qkyd9IGhhbmRsZXI9e2dldExpc3REb2N0b3JzfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxUeXBlRG9jdG9yIHRpdGxlPXsn0J7QpNCi0JDQm9Cs0JzQntCb0J7Qkyd9IGhhbmRsZXI9e2dldExpc3REb2N0b3JzfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxUeXBlRG9jdG9yIHRpdGxlPXsn0JTQldCg0JzQkNCi0J7QktCV0J3QldCg0J7Qm9Ce0JMnfSBoYW5kbGVyPXtnZXRMaXN0RG9jdG9yc30gLz5cclxuICAgICAgICAgICAgICAgICAgICA8VHlwZURvY3RvciB0aXRsZT17J9Ce0KLQntCg0JjQndCe0JvQkNCg0JjQndCT0J7Qm9Ce0JMnfSBoYW5kbGVyPXtnZXRMaXN0RG9jdG9yc30gLz5cclxuICAgICAgICAgICAgICAgICAgICA8VHlwZURvY3RvciB0aXRsZT17J9Cj0KDQntCb0J7Qkyd9IGhhbmRsZXI9e2dldExpc3REb2N0b3JzfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxUeXBlRG9jdG9yIHRpdGxlPXsn0KLQldCg0JDQn9CV0JLQoid9IGhhbmRsZXI9e2dldExpc3REb2N0b3JzfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxUeXBlRG9jdG9yIHRpdGxlPXsn0KDQldCS0JzQkNCi0J7Qm9Ce0JMnfSBoYW5kbGVyPXtnZXRMaXN0RG9jdG9yc30gLz5cclxuICAgICAgICAgICAgICAgICAgICA8VHlwZURvY3RvciB0aXRsZT17J9Cl0JjQoNCj0KDQkyd9IGhhbmRsZXI9e2dldExpc3REb2N0b3JzfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxUeXBlRG9jdG9yIHRpdGxlPXsn0KDQldCS0JzQkNCi0J7Qm9Ce0JMnfSBoYW5kbGVyPXtnZXRMaXN0RG9jdG9yc30gLz5cclxuICAgICAgICAgICAgICAgICAgICA8VHlwZURvY3RvciB0aXRsZT17J9Ck0KPQndCa0KbQmNCe0J3QkNCb0KzQndCQ0K8g0JTQmNCQ0JPQndCe0KHQotCY0JrQkCd9IGhhbmRsZXI9e2dldExpc3REb2N0b3JzfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxUeXBlRG9jdG9yIHRpdGxlPXsn0JDQmtCj0KjQldCgLdCT0JjQndCV0JrQntCb0J7Qkyd9IGhhbmRsZXI9e2dldExpc3REb2N0b3JzfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxUeXBlRG9jdG9yIHRpdGxlPXsn0KPQm9Cs0KLQoNCQ0JfQktCj0JrQntCS0JDQryDQlNCY0JDQk9Cd0J7QodCi0JjQmtCQJ30gaGFuZGxlcj17Z2V0TGlzdERvY3RvcnN9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPFR5cGVEb2N0b3IgdGl0bGU9eyfQrdCd0JTQntCa0KDQmNCd0J7Qm9Ce0JMnfSBoYW5kbGVyPXtnZXRMaXN0RG9jdG9yc30gLz5cclxuICAgICAgICAgICAgICAgICAgICA8VHlwZURvY3RvciB0aXRsZT17J9Ca0JDQoNCU0JjQntCb0J7Qkyd9IGhhbmRsZXI9e2dldExpc3REb2N0b3JzfSAvPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmxpc3RTcGVjaWFsaXN0c30+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmhlYWRlclRleHR9IGlkPSdkaXJlY3Rpb24nPlxyXG4gICAgICAgICAgICAgICAgICAgIHtkaXJlY3Rpb259XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIHtsaXN0RG9jdG9ycyAmJiB2aWV3TGlzdERvY3RvcnMobGlzdERvY3RvcnMpfVxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPE1vZGFsIGlzQWN0aXZlPXtpc01vZGFsQWN0aXZlfSBzZXRBY3RpdmU9e3NldElzTW9kYWxBY3RpdmV9IGlzQ2xvc2FibGU9e2ZhbHNlfT5cclxuICAgICAgICAgICAgICAgIDxSZXF1ZXN0Q2FsbFxyXG4gICAgICAgICAgICAgICAgICAgIHNldElzTW9kYWxBY3RpdmU9e3NldElzTW9kYWxBY3RpdmV9XHJcbiAgICAgICAgICAgICAgICAgICAgc2V0SXNNb2RhbFZhbGlkYXRpb25GYWxzZUFjdGl2ZT17c2V0SXNNb2RhbFZhbGlkYXRpb25GYWxzZUFjdGl2ZX1cclxuICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgIDwvTW9kYWw+XHJcbiAgICAgICAgICAgIDxNb2RhbCBpc0FjdGl2ZT17aXNNb2RhbFZhbGlkYXRpb25GYWxzZUFjdGl2ZX0gc2V0QWN0aXZlPXtzZXRJc01vZGFsVmFsaWRhdGlvbkZhbHNlQWN0aXZlfSBpc0Nsb3NhYmxlPXtmYWxzZX0+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLnJlcXVlc3RDb250YWluZXJ9PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMub3JkZXJJdGVtfT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5ibG9ja0hlYWRlclRleHR9PtCe0YjQuNCx0LrQsDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuYmxvY2tUZXh0fT7QndC10LrQvtGA0YDQtdC60YLQvdGL0Lkg0LLQstC+0LQg0LTQsNC90L3Ri9GFPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5yZXF1ZXN0QnV0dG9uc0NvbnRhaW5lcn0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b24gdGV4dEJ1dHRvbj0n0JfQsNC60YDRi9GC0YwnIGhhbmRsZXI9eygpID0+IHNldElzTW9kYWxWYWxpZGF0aW9uRmFsc2VBY3RpdmUoZmFsc2UpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvTW9kYWw+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICApXHJcbn1cclxuU3BlY2lhbGlzdHNQYWdlLnByb3BUeXBlcyA9IHtcclxuICAgIGF2YWlsYWJpbGl0eVNsaWRlcjogUHJvcFR5cGVzLmJvb2xcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgU3BlY2lhbGlzdHNQYWdlXHJcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0udXNlWzFdIS4vc3R5bGVzLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVsxXSEuL3N0eWxlcy5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXHJcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcclxuaW1wb3J0IGxvY2F0aW9uSW1hZ2UgZnJvbSAnLi4vLi4vaW1hZ2VzL2xvY2F0aW9uLnBuZydcclxuaW1wb3J0IHRpbWVJbWFnZSBmcm9tICcuLi8uLi9pbWFnZXMvdGltZS5wbmcnXHJcbmltcG9ydCBjYWxsSW1hZ2UgZnJvbSAnLi4vLi4vaW1hZ2VzL2NhbGwucG5nJ1xyXG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vc3R5bGVzLmNzcydcclxuXHJcbmNvbnN0IENhcmRIb3NwaXRhbCA9ICh7IHRpdGxlLCBhZGRyZXNzLCB0aW1lSm9icywgcGhvbmVOdW1iZXIgfSkgPT4ge1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmNhcmRIb3NwaXRhbH0+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuaGVhZGVyVGV4dH0+e3RpdGxlfTwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmJsb2NrRGlzY3JpcHRpb259PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5ibG9ja0luZm99PlxyXG4gICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3NOYW1lPXtzdHlsZXMuaW1hZ2VJbmZvQ29udGFjdHN9IHNyYz17bG9jYXRpb25JbWFnZX0gLz5cclxuICAgICAgICAgICAgICAgICAgICDQkNC00YDQtdGBOiA8c3BhbiBjbGFzc05hbWU9e3N0eWxlcy5pbmZvVGV4dH0+e2FkZHJlc3N9PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmJsb2NrSW5mb30+XHJcbiAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzc05hbWU9e3N0eWxlcy5pbWFnZUluZm9Db250YWN0c30gc3JjPXt0aW1lSW1hZ2V9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAg0JLRgNC10LzRjzogPHNwYW4gY2xhc3NOYW1lPXtzdHlsZXMuaW5mb1RleHR9Pnt0aW1lSm9ic308L3NwYW4+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuYmxvY2tJbmZvfT5cclxuICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzTmFtZT17c3R5bGVzLmltYWdlSW5mb0NvbnRhY3RzfSBzcmM9e2NhbGxJbWFnZX0gLz5cclxuICAgICAgICAgICAgICAgICAgICDQotC10LvQtdGE0L7QvTogPHNwYW4gY2xhc3NOYW1lPXtzdHlsZXMuaW5mb1RleHR9PntwaG9uZU51bWJlcn08L3NwYW4+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICApXHJcbn1cclxuXHJcbkNhcmRIb3NwaXRhbC5wcm9wVHlwZXMgPSB7XHJcbiAgICB0aXRsZTogUHJvcFR5cGVzLnN0cmluZyxcclxuICAgIGFkZHJlc3M6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgICB0aW1lSm9iczogUHJvcFR5cGVzLnN0cmluZyxcclxuICAgIHBob25lTnVtYmVyOiBQcm9wVHlwZXMuc3RyaW5nXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IENhcmRIb3NwaXRhbFxyXG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVsxXSEuL3N0eWxlcy5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi9zdHlsZXMuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgU3BlY2lhbGlzdHNQYWdlIGZyb20gJy4uL1NwZWNpYWxpc3RzUGFnZSdcclxuaW1wb3J0IFNsaWRlciBmcm9tICcuLi8uLi9Db21wb25lbnRzL1NsaWRlcidcclxuaW1wb3J0IENhcmRIb3NwaXRhbCBmcm9tICcuLi8uLi9Db21wb25lbnRzL0NhcmRIb3NwaXRhbCdcclxuaW1wb3J0IHNsaWRlcjFJbWFnZSBmcm9tICcuLi8uLi9pbWFnZXMvc2xpZGVyMS5wbmcnXHJcbmltcG9ydCBzbGlkZXIySW1hZ2UgZnJvbSAnLi4vLi4vaW1hZ2VzL3NsaWRlcjIucG5nJ1xyXG5pbXBvcnQgc2xpZGVyM0ltYWdlIGZyb20gJy4uLy4uL2ltYWdlcy9zbGlkZXIzLnBuZydcclxuaW1wb3J0IHNsaWRlcjRJbWFnZSBmcm9tICcuLi8uLi9pbWFnZXMvc2xpZGVyNC5wbmcnXHJcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9zdHlsZXMuY3NzJ1xyXG5cclxuY29uc3QgTWFpblBhZ2UgPSAoKSA9PiB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDw+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMubWFpblBhZ2V9PlxyXG4gICAgICAgICAgICAgICAgPFNsaWRlciBtZW51SXRlbXM9e1tzbGlkZXIxSW1hZ2UsIHNsaWRlcjJJbWFnZSwgc2xpZGVyM0ltYWdlLCBzbGlkZXI0SW1hZ2VdfSAvPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5ibG9ja1RleHR9PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9J3RpdGxlVGV4dCcgY2xhc3NOYW1lPXtzdHlsZXMuaGVhZGVyVGV4dH0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgINCa0L7QvdGB0YPQu9GM0YLQsNGC0LjQstC90L4t0LTQuNCw0LPQvdC+0YHRgtC40YfQtdGB0LrQsNGPINC/0L7Qu9C40LrQu9C40L3QuNC60LBcclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLnNtYWxsSGVhZGVyVGV4dH0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgINCS0Ysg0L3QtSDQvNC+0LbQtdGC0LUg0YDQtdGI0LjRgtGMINCy0L7Qt9C90LjQutGI0LjQtSDQv9GA0L7QsdC70LXQvNGLINGB0L4g0LfQtNC+0YDQvtCy0YzQtdC8INC40LvQuCDRhdC+0YLQuNGC0LUg0LXQs9C+INGB0L7RhdGA0LDQvdC40YLRjD8g0JzRiyDQt9C90LDQtdC8LCDQutCw0Log0Y3RgtC+INGB0LTQtdC70LDRgtGMIVxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuZGlzY3JpcHRpb25UZXh0fT5cclxuICAgICAgICAgICAgICAgICAgICAgICAg0J7QntCeIMKr0JrQvtC90YHRg9C70YzRgtCw0YLQuNCy0L3Qvi3QtNC40LDQs9C90L7RgdGC0LjRh9C10YHQutCw0Y8g0L/QvtC70LjQutC70LjQvdC40LrQsMK7INC+0YHRg9GJ0LXRgdGC0LLQu9GP0LXRgiDQvNC10LTQuNGG0LjQvdGB0LrQuNC1INGD0YHQu9GD0LPQuCDQtNC70Y8g0L3QsNGB0LXQu9C10L3QuNGPINC4XHJcbiAgICAgICAgICAgICAgICAgICAgICAgINC+0YDQs9Cw0L3QuNC30LDRhtC40Lkg0KHQsNC80LDRgNGB0LrQvtC5INC+0LHQu9Cw0YHRgtC4INGBIDIwMDkg0LPQvtC00LAuINCX0LAg0Y3RgtC+INCy0YDQtdC80Y8g0LzRiyDRgdGE0L7RgNC80LjRgNC+0LLQsNC70Lgg0LTRgNGD0LbQvdGL0Lkg0LrQvtC70LvQtdC60YLQuNCyINC/0YDQvtGE0LXRgdGB0LjQvtC90LDQu9C+0LIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgINGB0L/QvtGB0L7QsdC90YvRhSDQvtC60LDQt9Cw0YLRjCDQutCw0YfQtdGB0YLQstC10L3QvdGD0Y4sINC60LLQsNC70LjRhNC40YbQuNGA0L7QstCw0L3QvdGD0Y4g0Lgg0L7Qv9C10YDQsNGC0LjQstC90YPRjiDQutC+0L3RgdGD0LvRjNGC0LDRhtC40L7QvdC90YPRjiDQuCDQu9C10YfQtdCx0L3Rg9GOINC/0L7QvNC+0YnRjFxyXG4gICAgICAgICAgICAgICAgICAgICAgICDQs9GA0LDQttC00LDQvdCw0Lwg0LIg0YHQsNC80YvRhSDRgNCw0LfQvdGL0YUg0YHQuNGC0YPQsNGG0LjRj9GFLlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuZGlzY3JpcHRpb25UZXh0fT5cclxuICAgICAgICAgICAgICAgICAgICAgICAg0J3QsCDQsdCw0LfQtSDQutC70LjQvdC40LrQuCDQv9GA0L7QstC+0LTRj9GC0YHRjyDQutC+0L3RgdGD0LvRjNGC0LDRhtC40LgsINCy0LXQtNC10L3QuNC1INC/0LDRhtC40LXQvdGC0L7Qsiwg0LAg0YLQsNC60LbQtSDQuNGFINC70LXRh9C10L3QuNC1INGBINC/0L7QvNC+0YnRjNGOINC90L7QstC10LnRiNC40YUg0YLQtdGF0L3QuNC6INC4XHJcbiAgICAgICAgICAgICAgICAgICAgICAgINC80LXRgtC+0LTQuNC6LCDQsiDRgtC+0Lwg0YfQuNGB0LvQtSAtINCx0LXQtyDQu9C10LrQsNGA0YHRgtCyLlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuaGVhZGVyVGV4dH0+0JzRiyDQvdCw0YXQvtC00LjQvNGB0Y86PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmNhcmRzSG9zcGl0YWx9PlxyXG4gICAgICAgICAgICAgICAgICAgIDxDYXJkSG9zcGl0YWxcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9eyfQp9Cw0L/QsNC10LLRgdC6J31cclxuICAgICAgICAgICAgICAgICAgICAgICAgYWRkcmVzcz17J9Cn0LDQv9Cw0LXQstGB0LosINGD0LsuINCS0LDRgtGD0YLQuNC90LAsINC0LiAxMSd9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpbWVKb2JzPXsn0JHRg9C00L3QuDo4OjAwLTE5OjAwJ31cclxuICAgICAgICAgICAgICAgICAgICAgICAgcGhvbmVOdW1iZXI9eycrNyAoODQ2MzkpIDMtMDAtOTIgJ31cclxuICAgICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxDYXJkSG9zcGl0YWxcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9eyfQkdC10LfQtdC90YfRg9C6J31cclxuICAgICAgICAgICAgICAgICAgICAgICAgYWRkcmVzcz17J9CR0LXQt9C10L3Rh9GD0LosINGD0LsuINCh0L7QstC10YLRgdC60LDRjywg0LQuIDU2J31cclxuICAgICAgICAgICAgICAgICAgICAgICAgdGltZUpvYnM9eyfQkdGD0LTQvdC4Ojg6MDAtMTk6MDAs0KHRg9Cx0LHQvtGC0LAgODowMC0xNzowMCd9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBob25lTnVtYmVyPXsnKzcgKDkyNykgNzUwLTU2LTU2J31cclxuICAgICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8U3BlY2lhbGlzdHNQYWdlIGF2YWlsYWJpbGl0eVNsaWRlcj17dHJ1ZX0gLz5cclxuICAgICAgICA8Lz5cclxuICAgIClcclxufVxyXG5leHBvcnQgZGVmYXVsdCBNYWluUGFnZVxyXG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVsxXSEuL3N0eWxlcy5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi9zdHlsZXMuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXHJcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9zdHlsZXMuY3NzJ1xyXG5cclxuY29uc3QgU2VydmljZSA9ICh7IGltZywgdGl0bGUsIG9ialRleHQsIGFyckxpc3QgfSkgPT4ge1xyXG4gICAgY29uc3QgcmVuZGVyTGlzdCA9ICgpID0+IHtcclxuICAgICAgICByZXR1cm4gYXJyTGlzdC5tYXAoKGl0ZW0sIGluZGV4KSA9PiB7XHJcbiAgICAgICAgICAgIHJldHVybiA8bGkga2V5PXtpbmRleH0+e2l0ZW19PC9saT5cclxuICAgICAgICB9KVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmNhcmRTZXJ2aWNlfT5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy50aXRsZVNlcnZpY2V9Pnt0aXRsZX08L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5ibG9ja0ltYWdlfT5cclxuICAgICAgICAgICAgICAgIDxpbWcgY2xhc3NOYW1lPXtzdHlsZXMuaW1hZ2VTZXJ2aWNlfSBzcmM9e2ltZ30gLz5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuZGlzY3JpcHRpb25TZXJ2aWNlfT57b2JqVGV4dC50ZXh0X29uZSAhPT0gdW5kZWZpbmVkID8gb2JqVGV4dC50ZXh0X29uZSA6ICcnfTwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmRpc2NyaXB0aW9uU2VydmljZX0+e29ialRleHQudGV4dF90d28gIT09IHVuZGVmaW5lZCA/IG9ialRleHQudGV4dF90d28gOiAnJ308L2Rpdj5cclxuICAgICAgICAgICAgPHVsPntyZW5kZXJMaXN0KCl9PC91bD5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5kaXNjcmlwdGlvblNlcnZpY2V9PntvYmpUZXh0LnRleHRfdGhyZWUgIT09IHVuZGVmaW5lZCA/IG9ialRleHQudGV4dF90aHJlZSA6ICcnfTwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmRpc2NyaXB0aW9uU2VydmljZX0+e29ialRleHQudGV4dF9mb3VyICE9PSB1bmRlZmluZWQgPyBvYmpUZXh0LnRleHRfZm91ciA6ICcnfTwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmRpc2NyaXB0aW9uU2VydmljZX0+e29ialRleHQudGV4dF9maXZlICE9PSB1bmRlZmluZWQgPyBvYmpUZXh0LnRleHRfZml2ZSA6ICcnfTwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmRpc2NyaXB0aW9uU2VydmljZX0+e29ialRleHQudGV4dF9zaXggIT09IHVuZGVmaW5lZCA/IG9ialRleHQudGV4dF9zaXggOiAnJ308L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIClcclxufVxyXG5TZXJ2aWNlLnByb3BUeXBlcyA9IHtcclxuICAgIGltZzogUHJvcFR5cGVzLmFueSxcclxuICAgIHRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gICAgb2JqVGV4dDogUHJvcFR5cGVzLm9iamVjdCxcclxuICAgIGFyckxpc3Q6IFByb3BUeXBlcy5hcnJheVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBTZXJ2aWNlXHJcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0udXNlWzFdIS4vc3R5bGVzLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVsxXSEuL3N0eWxlcy5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXHJcbmltcG9ydCBTbGlkZXIgZnJvbSAnLi4vLi4vQ29tcG9uZW50cy9TbGlkZXInXHJcbmltcG9ydCBTZXJ2aWNlIGZyb20gJy4uLy4uL0NvbXBvbmVudHMvU2VydmljZSdcclxuaW1wb3J0IHNsaWRlcjFJbWFnZSBmcm9tICcuLi8uLi9pbWFnZXMvc2xpZGVyMS5wbmcnXHJcbmltcG9ydCBzbGlkZXIySW1hZ2UgZnJvbSAnLi4vLi4vaW1hZ2VzL3NsaWRlcjIucG5nJ1xyXG5pbXBvcnQgc2xpZGVyM0ltYWdlIGZyb20gJy4uLy4uL2ltYWdlcy9zbGlkZXIzLnBuZydcclxuaW1wb3J0IHNsaWRlcjRJbWFnZSBmcm9tICcuLi8uLi9pbWFnZXMvc2xpZGVyNC5wbmcnXHJcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9zdHlsZXMuY3NzJ1xyXG5cclxuY29uc3QgU2VydmljZXNQYWdlID0gKCkgPT4ge1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLm1haW5QYWdlfT5cclxuICAgICAgICAgICAgPFNsaWRlciBtZW51SXRlbXM9e1tzbGlkZXIxSW1hZ2UsIHNsaWRlcjJJbWFnZSwgc2xpZGVyM0ltYWdlLCBzbGlkZXI0SW1hZ2VdfSAvPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmhlYWRlclRleHR9IGlkPSd0aXRsZVRleHQnPlxyXG4gICAgICAgICAgICAgICAg0KPRgdC70YPQs9C4XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmxpc3RTZXJ2aWNlc30+XHJcbiAgICAgICAgICAgICAgICA8U2VydmljZVxyXG4gICAgICAgICAgICAgICAgICAgIGltZz17cmVxdWlyZSgnLi4vLi4vaW1hZ2VzL3NwZWxlb3RlcmFwaXlhLmpwZycpfVxyXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlPXsn0KHQv9C10LvQtdC+0YLQtdGA0LDQv9C40Y8nfVxyXG4gICAgICAgICAgICAgICAgICAgIGFyckxpc3Q9e1tcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ9CS0L7RgdGB0YLQsNC90L7QstC70LXQvdC40LUg0L/RgNC+0YXQvtC00LjQvNC+0YHRgtC4INCx0YDQvtC90YXQvtCyOycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICfQn9C+0LLRi9GI0LXQvdC40LUg0L7QsdGJ0LXQs9C+INC4INC80LXRgdGC0L3QvtCz0L4g0LjQvNC80YPQvdC40YLQtdGC0LA7JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ9Ce0LHQu9C10LPRh9C10L3QuNC1INC+0YLRhdC+0LbQtNC10L3QuNGPINC80L7QutGA0L7RgtGLLCDRgdC90LjQttC10L3QuNC1INCw0LvQu9C10YDQs9C40Lg7JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ9Cf0YDQvtGC0LjQstC+0LLQvtGB0L/QsNC70LjRgtC10LvRjNC90L7QtSDQtNC10LnRgdGC0LLQuNC1OycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICfQodGC0LDQsdC40LvQuNC30LDRhtC40Y8g0L/RgdC40YXQvtGN0LzQvtGG0LjQvtC90LDQu9GM0L3QvtCz0L4g0YHQvtGB0YLQvtGP0L3QuNGPINGH0LXQu9C+0LLQtdC60LA7JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ9Cd0L7RgNC80LDQu9C40LfQsNGG0LjRjyDQsNGA0YLQtdGA0LjQsNC70YzQvdC+0LPQviDQtNCw0LLQu9C10L3QuNGPINCyINC90LDRh9Cw0LvRjNC90YvRhSDRgdGC0LDQtNC40Y/RhS4nXHJcbiAgICAgICAgICAgICAgICAgICAgXX1cclxuICAgICAgICAgICAgICAgICAgICBvYmpUZXh0PXt7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHRfb25lOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ9CS0YvRgdC+0LrQvtGN0YTRhNC10LrRgtC40LLQvdGL0Lkg0LzQtdGC0L7QtCDQu9C10YfQtdC90LjRjyDQsdC10Lcg0LvQtdC60LDRgNGB0YLQsiDQstC00YvRhdCw0L3QuNC10Lwg0LLQvtC30LTRg9GF0LAsINC90LDRgdGL0YnQtdC90L3QvtCz0L4g0YHRg9GF0LjQvCDQsNGN0YDQvtC30L7Qu9C10Lwg0YXQu9C+0YDQuNC00LAg0L3QsNGC0YDQuNGPLicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHRfdHdvOiAn0KDQtdC30YPQu9GM0YLQsNGC0Ysg0YHQv9C10LvQtdC+0YLQtdGA0LDQv9C40Lg6JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dF90aHJlZTpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICfQodC/0LXQu9C10L7RgtC10YDQsNC/0LjRjyAo0YHQvtC70Y/QvdCw0Y8g0YjQsNGF0YLQsCkg0L3QtSDQstGL0LfRi9Cy0LDQtdGCINC/0L7QsdC+0YfQvdGL0YUg0LTQtdC50YHRgtCy0LjQuSwg0L/QvtGN0YLQvtC80YMg0LzQvtC20LXRgiDQv9GA0LjQvNC10L3Rj9GC0YzRgdGPINC/0YDQuCDQu9C10YfQtdC90LjQuCDQvNCw0LvQtdC90YzQutC40YUg0LTQtdGC0LXQuSDQuCDQsdC10YDQtdC80LXQvdC90YvRhSDQttC10L3RidC40L0uJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dF9mb3VyOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ9CS0L7Qt9C00LXQudGB0YLQstC40LUg0YHQv9C10LvQtdC+0YLQtdGA0LDQv9C40Lgg0YPRgdC40LvQuNCy0LDQtdGC0YHRjyDQv9GA0Lgg0YHQvtGH0LXRgtCw0L3QuNC4INGBINC70LXRh9C10LHQvdC+0Lkg0YTQuNC30LrRg9C70YzRgtGD0YDQvtC5LCDQvNCw0YHRgdCw0LbQtdC8LCDQuNCz0LvQvtGA0LXRhNC70LXQutGB0L7RgtC10YDQsNC/0LjQtdC5LCDQv9C+0LfQstC+0LvRj9C10YIg0L7RgtC60LDQt9Cw0YLRjNGB0Y8g0L7RgiDQu9C10LrQsNGA0YHRgtCy0LXQvdC90YvRhSDRgdGA0LXQtNGB0YLQsi4nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0X2ZpdmU6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAn0KHQv9C10LvQtdC+0YLQtdGA0LDQv9C40Y8g0LLQvtGB0YHRgtCw0L3QsNCy0LvQuNCy0LDQtdGCINC60L7QvNC/0LXQvdGB0LDRgtC+0YDQvdGL0LUg0YDQtdC30LXRgNCy0Ysg0L7RgNCz0LDQvdC40LfQvNCwLCDQv9GA0LXQtNGD0L/RgNC10LbQtNCw0LXRgiDQvtCx0L7RgdGC0YDQtdC90LjQtSDQuNC80LXRjtGJ0LjRhdGB0Y8g0YXRgNC+0L3QuNGH0LXRgdC60LjRhSDQt9Cw0LHQvtC70LXQstCw0L3QuNC5INC4INGB0L3QuNC20LDQtdGCINGA0LjRgdC6INCy0L7Qt9C90LjQutC90L7QstC10L3QuNGPINC/0YDQvtGB0YLRg9C00L3Ri9GFINC30LDQsdC+0LvQtdCy0LDQvdC40LksINC+0YHQvtCx0LXQvdC90L4g0YMg0LTQtdGC0LXQuSDQtNC+0YjQutC+0LvRjNC90L7Qs9C+INCy0L7Qt9GA0LDRgdGC0LAuJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dF9zaXg6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAn0JrRg9GA0YEg0LvQtdGH0LXQvdC40Y8gMTAtMTUg0YHQtdCw0L3RgdC+0LIg0L/QviAzMCDQvNC40L3Rg9GCLiDQkdC+0LvRjNC90YvQvCDRgSDRhdGA0L7QvdC40YfQtdGB0LrQvtC5INC/0LDRgtC+0LvQvtCz0LjQtdC5INC+0YDQs9Cw0L3QvtCyINC00YvRhdCw0L3QuNGPINCy0LXRgNGF0L3QuNGFINC00YvRhdCw0YLQtdC70YzQvdGL0YUg0L/Rg9GC0LXQuSDQv9GA0L7QstC+0LTQuNGC0YHRjyAyINGA0LDQt9CwINCyINCz0L7QtC4nXHJcbiAgICAgICAgICAgICAgICAgICAgfX1cclxuICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgICA8U2VydmljZVxyXG4gICAgICAgICAgICAgICAgICAgIGltZz17cmVxdWlyZSgnLi4vLi4vaW1hZ2VzL2FwcGFyYXRueWlqLWxpbWZvZHJlbmF6aC5qcGcnKX1cclxuICAgICAgICAgICAgICAgICAgICB0aXRsZT17J9CQ0L/Qv9Cw0YDQsNGC0L3Ri9C5INC70LjQvNGE0L7QtNGA0LXQvdCw0LYnfVxyXG4gICAgICAgICAgICAgICAgICAgIGFyckxpc3Q9e1tcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ9Cj0LzQtdC90YzRiNC10L3QuNGOINC+0YLQtdGH0L3QvtGB0YLQuCDRgtC60LDQvdC10LksINC90L7RgNC80LDQu9C40LfQsNGG0LjQuCDQstC+0LTQvdC+0LPQviDQsdCw0LvQsNC90YHQsCDQsiDQvdC40YU7JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ9CQ0LrRgtC40LLQuNC30LDRhtC40Lgg0L/RgNC+0YbQtdGB0YHQvtCyINC60YDQvtCy0L4tINC4INC70LjQvNGE0L7QvtCx0YDQsNGJ0LXQvdC40Y87JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ9Cd0L7RgNC80LDQu9C40LfQsNGG0LjQuCDQvtCx0LzQtdC90L3Ri9GFINC/0YDQvtGG0LXRgdGB0L7QsiDQsiDQvtGA0LPQsNC90LjQt9C80LUnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAn0KHQvdC40LbQtdC90LjRjiDQstC10YHQsDsnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAn0J/QvtCy0YvRiNC10L3QuNGOINGC0L7QvdGD0YHQsCDQutC+0LbQuCwg0YPRgdGC0YDQsNC90LXQvdC40Y4g0LTRgNGP0LHQu9C+0YHRgtC4INC4INGG0LXQu9C70Y7Qu9C40YLQsDsnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAn0J/QvtCy0YvRiNC10L3QuNGOINC+0LHRidC10LPQviDRgtC+0L3Rg9GB0LAg0L7RgNCz0LDQvdC40LfQvNCwLCDRgdGC0YDQtdGB0YHQvtGD0YHRgtC+0LnRh9C40LLQvtGB0YLQuCDQuCDQuNC80LzRg9C90LjRgtC10YLQsC4nXHJcbiAgICAgICAgICAgICAgICAgICAgXX1cclxuICAgICAgICAgICAgICAgICAgICBvYmpUZXh0PXt7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHRfb25lOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ9CU0LDQvdC90LDRjyDQv9GA0L7RhtC10LTRg9GA0LAg0Y/QstC70Y/QtdGC0YHRjyDRjdGE0YTQtdC60YLQuNCy0L3Ri9C8INC4INCx0LXQt9C+0L/QsNGB0L3Ri9C8INGB0L/QvtGB0L7QsdC+0Lwg0L7Qt9C00L7RgNC+0LLQu9C10L3QuNGPINC+0YDQs9Cw0L3QuNC30LzQsCDQuCDRgdC/0L7RgdC+0LHRgdGC0LLRg9C10YI6J1xyXG4gICAgICAgICAgICAgICAgICAgIH19XHJcbiAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgPFNlcnZpY2VcclxuICAgICAgICAgICAgICAgICAgICBpbWc9e3JlcXVpcmUoJy4uLy4uL2ltYWdlcy90YW1idWthbnNrYXlhLWdyeWF6LmpwZycpfVxyXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlPXsn0KLQsNC80LHRg9C60LDQvdGB0LrQsNGPINCz0YDRj9C30YwnfVxyXG4gICAgICAgICAgICAgICAgICAgIGFyckxpc3Q9e1tcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ9Ce0YHRgtC10L7RhdC+0L3QtNGA0L7Qt9C1INC/0L7Qt9Cy0L7QvdC+0YfQvdC40LrQsDsnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAn0JDRgNGC0YDQvtC30LDRhSDQuCDQsNGA0YLRgNC40YLQsNGFINC60YDRg9C/0L3Ri9GFINGB0YPRgdGC0LDQstC+0LI7JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ9CX0LDQsdC+0LvQtdCy0LDQvdC40Y/RhSDQttC10LvRg9C00L7Rh9C90L4t0LrQuNGI0LXRh9C90L7Qs9C+INGC0YDQsNC60YLQsDsnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAn0JfQsNCx0L7Qu9C10LLQsNC90LjRj9GFINC90LXRgNCy0L3QvtC5INGB0LjRgdGC0LXQvNGLOycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICfQl9Cw0LHQvtC70LXQstCw0L3QuNGP0YUg0YHQvtGB0YPQtNC40YHRgtC+0Lkg0YHQuNGB0YLQtdC80Ys7JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ9CX0LDQsdC+0LvQtdCy0LDQvdC40Y/RhSDQvtGA0LPQsNC90L7QsiDQtNGL0YXQsNC90LjRjyDQvdC10YLRg9Cx0LXRgNC60YPQu9C10LfQvdC+0LPQviDRhdCw0YDQsNC60YLQtdGA0LA7JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ9CX0LDQsdC+0LvQtdCy0LDQvdC40Y/RhSDQutC+0LbQuC4nXHJcbiAgICAgICAgICAgICAgICAgICAgXX1cclxuICAgICAgICAgICAgICAgICAgICBvYmpUZXh0PXt7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHRfb25lOiAn0J/RgNC40LzQtdC90LXQvdC40LUg0L/QvtC60LDQt9Cw0L3QviDQv9GA0Lg6J1xyXG4gICAgICAgICAgICAgICAgICAgIH19XHJcbiAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgPFNlcnZpY2VcclxuICAgICAgICAgICAgICAgICAgICBpbWc9e3JlcXVpcmUoJy4uLy4uL2ltYWdlcy9sZWNoZW5pZS1iZXotbGVrYXJzdHYuanBnJyl9XHJcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU9eyfQm9C10YfQtdC90LjQtSDQsdC10Lcg0LvQtdC60LDRgNGB0YLQsid9XHJcbiAgICAgICAgICAgICAgICAgICAgYXJyTGlzdD17W1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAn0JzQsNGB0YHQsNC2INC60LvQsNGB0YHQuNGH0LXRgdC60LjQuSDQtNC70Y8g0LTQtdGC0LXQuSDQuCDQstC30YDQvtGB0LvRi9GFLCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICfQk9C40LTRgNC+0LzQsNGB0YHQsNC2INC90LXQt9Cw0LzQtdC90LjQvCDQv9GA0Lgg0LvQtdGH0LXQvdC40Lgg0Lgg0YDQtdCw0LHQuNC70LjRgtCw0YbQuNC4INC/0LDRhtC40LXQvdGC0L7QsiDRgSDQt9Cw0LHQvtC70LXQstCw0L3QuNGP0LzQuCDQv9C+0LfQstC+0L3QvtGH0L3QuNC60LAuINCT0LjQtNGA0L7QvNCw0YHRgdCw0LYg0YHQvdC40LzQsNC10YIg0YHRgtGA0LXRgdGBLCDRg9C70YPRh9GI0LDQtdGCINC90LDRgdGC0YDQvtC10L3QuNC1LCDQvtCx0LvQsNC00LDQtdGCINCy0YvRgNCw0LbQtdC90L3Ri9C8INC60L7RgdC80LXRgtC40YfQtdGB0LrQuNC8INCy0L7Qt9C00LXQudGB0YLQstC40LXQvCDQvdCwINGB0L7RgdGC0L7Rj9C90LjQtSDQutC+0LbQuC4nXHJcbiAgICAgICAgICAgICAgICAgICAgXX1cclxuICAgICAgICAgICAgICAgICAgICBvYmpUZXh0PXt7fX1cclxuICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgICA8U2VydmljZVxyXG4gICAgICAgICAgICAgICAgICAgIGltZz17cmVxdWlyZSgnLi4vLi4vaW1hZ2VzL2tlZHJvdmF5YS1ib2Noa2EuanBnJyl9XHJcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU9eyfQnNC40L3QuC3RgdCw0YPQvdCwIMKr0JrQtdC00YDQvtCy0LDRjyDQsdC+0YfQutCwwrsnfVxyXG4gICAgICAgICAgICAgICAgICAgIGFyckxpc3Q9e1tdfVxyXG4gICAgICAgICAgICAgICAgICAgIG9ialRleHQ9e3tcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dF9vbmU6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAn0JzQuNC90Lgt0YHQsNGD0L3QsCDCq9Ca0LXQtNGA0L7QstCw0Y8g0LHQvtGH0LrQsMK7IC0g0YHQvtGH0LXRgtCw0L3QuNC1INCy0L7Qt9C00LXQudGB0YLQstC40Y8g0LPQvtGA0Y/Rh9C10LPQviDQv9Cw0YDQsCwg0LrQtdC00YDQsCDQv9GA0Lgg0L3QtdC+0LHRhdC+0LTQuNC80L7RgdGC0Lgg0LvQtdC60LDRgNGB0YLQstC10L3QvdGL0YUg0YLRgNCw0LIuINCf0L7RgdC60L7Qu9GM0LrRgyDQs9C+0LvQvtCy0LAg0L/QsNGG0LjQtdC90YLQsCDQstC+INCy0YDQtdC80Y8g0L/RgNC+0YbQtdC00YPRgNGLINC90LDRhdC+0LTQuNGC0YHRjyDRgdC90LDRgNGD0LbQuCDCq9C60LXQtNGA0L7QstC+0Lkg0LHQvtGH0LrQuMK7LCDQuCDQvtC9INC00YvRiNC40YIg0L7QsdGL0YfQvdGL0Lwg0LLQvtC30LTRg9GF0L7QvCwg0LvQtdGH0LXQvdC40LUg0YXQvtGA0L7RiNC+INC/0LXRgNC10L3QvtGB0LjRgtGB0Y8uIMKr0JrQtdC00YDQvtCy0LDRjyDQsdC+0YfQutCwwrsg0YPQu9GD0YfRiNCw0LXRgiDQutGA0L7QstC+0L7QsdGA0LDRidC10L3QuNC1LCDQvdC+0YDQvNCw0LvQuNC30YPQtdGCINC+0LHQvNC10L0g0LLQtdGJ0LXRgdGC0LIsINCy0L7RgdGB0YLQsNC90LDQstC70LjQstCw0LXRgiDQuNC80LzRg9C90LjRgtC10YIsINCy0YvQstC+0LTQuNGCINGC0L7QutGB0LjQvdGLINC40Lcg0L7RgNCz0LDQvdC40LfQvNCwLiDQoNC10YjQsNC10YIg0L/RgNC+0LHQu9C10LzRgyDQu9C40YjQvdC10LPQviDQstC10YHQsCwg0L7Rh9C40YnQsNC10YIg0Lgg0L7QvNC+0LvQsNC20LjQstCw0LXRgiDQutC+0LbRgy4g0J7QtNC90LjQvCDQuNC3INC/0L7QutCw0LfQsNC90LjQuSDRj9Cy0LvRj9C10YLRgdGPINGF0YDQvtC90LjRh9C10YHQutC40LUg0LfQsNCx0L7Qu9C10LLQsNC90LjRjyDQvtGA0LPQsNC90L7QsiDQttC10L3RgdC60L7QuSDQv9C+0LvQvtCy0L7QuSDRgdC40YHRgtC10LzRiy4nXHJcbiAgICAgICAgICAgICAgICAgICAgfX1cclxuICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgICA8U2VydmljZVxyXG4gICAgICAgICAgICAgICAgICAgIGltZz17cmVxdWlyZSgnLi4vLi4vaW1hZ2VzL2hvbHRlci5qcGcnKX1cclxuICAgICAgICAgICAgICAgICAgICB0aXRsZT17J9Cl0L7Qu9GC0LXRgCd9XHJcbiAgICAgICAgICAgICAgICAgICAgYXJyTGlzdD17W119XHJcbiAgICAgICAgICAgICAgICAgICAgb2JqVGV4dD17e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0X29uZTpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICfQpdC+0LvRgtC10YAg4oCUINGN0YLQviDQv9C+0YDRgtCw0YLQuNCy0L3Ri9C5INC80L7QvdC40YLQvtGALCDRgSDQv9C+0LzQvtGJ0YzRjiDQutC+0YLQvtGA0L7Qs9C+INC+0YHRg9GJ0LXRgdGC0LLQu9GP0LXRgtGB0Y8g0LTQu9C40YLQtdC70YzQvdCw0Y8g0LfQsNC/0LjRgdGMINGB0LXRgNC00LXRh9C90L7Qs9C+INGA0LjRgtC80LAuINCe0LHRi9GH0L3QviDRhdC+0LvRgtC10YAg0YTQuNC60YHQuNGA0YPQtdGC0YHRjyDQvdCwINGC0LXQu9C1INC/0LDRhtC40LXQvdGC0LAg0L3QsCDRgdGA0L7QuiDQvtGCIDI0INGH0LDRgdC+0LIg0LTQviAzINGB0YPRgtC+0LouINCS0YHQtSDRjdGC0L4g0LLRgNC10LzRjyDQv9GA0LjQsdC+0YAg0YLQvtGH0L3QviDRhNC40LrRgdC40YDRg9C10YIg0LLRgdC1INC+0YHQvtCx0LXQvdC90L7RgdGC0Lgg0YHQtdGA0LTQtdGH0L3QvtCz0L4g0YDQuNGC0LzQsCwg0LrQvtGC0L7RgNGL0LUg0LLQv9C+0YHQu9C10LTRgdGC0LLQuNC4INGA0LDRgdGI0LjRhNGA0L7QstGL0LLQsNC10YIg0LvQtdGH0LDRidC40Lkg0LLRgNCw0Yct0LrQsNGA0LTQuNC+0LvQvtCzLiDQmNGB0YHQu9C10LTQvtCy0LDQvdC40LUg0L/RgNC4INC/0L7QvNC+0YnQuCDRhdC+0LvRgtC10YAt0LzQvtC90LjRgtC+0YDQsCDQv9C+0LrQsNC30LDQvdC+INCyINGB0LvRg9GH0LDQtSwg0LrQvtCz0LTQsCDQvtCx0YvRh9C90LDRjyDQutCw0YDQtNC40L7Qs9GA0LDQvNC80LAg0L3QtSDQvNC+0LbQtdGCINC00LDRgtGMINC00L7RgdGC0LDRgtC+0YfQvdC+INGB0LLQtdC00LXQvdC40Lkg0L4g0YHQvtGB0YLQvtGP0L3QuNC4INGB0LXRgNC00YbQsCDQv9Cw0YbQuNC10L3RgtCwLicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHRfdHdvOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ9Cf0YDQuCDRg9GB0YLQsNC90L7QstC60LUg0YXQvtC70YLQtdGALdC80L7QvdC40YLQvtGA0LAg0Log0LPRgNGD0LTQvdC+0Lkg0LrQu9C10YLQutC1INC/0LDRhtC40LXQvdGC0LAg0L/RgNC40LvQtdC/0LvRj9GO0YLRgdGPINGN0LvQtdC60YLRgNC+0LTRiywg0YHQvtC10LTQuNC90LXQvdC90YvQtSDRgSDQt9Cw0L/QuNGB0YvQstCw0Y7RidC40Lwg0YPRgdGC0YDQvtC50YHRgtCy0L7QvC4g0J3QvtGI0LXQvdC40LUg0YXQvtC70YLQtdGALdC80L7QvdC40YLQvtGA0LAg0L/RgNC40YfQuNC90Y/QtdGCINC70LjRiNGMINC90LXQt9C90LDRh9C40YLQtdC70YzQvdC+0LUg0L3QtdGD0LTQvtCx0YHRgtCy0L4sINC/0YDQuCDRjdGC0L7QvCDRgdCw0LzQviDQuNGB0YHQu9C10LTQvtCy0LDQvdC40LUg0Y/QstC70Y/QtdGC0YHRjyDQvtGH0LXQvdGMINGC0L7Rh9C90YvQvCDQuCDQuNC90YTQvtGA0LzQsNGC0LjQstC90YvQvCwg0YfRgtC+INC/0L7Qt9Cy0L7Qu9GP0LXRgiDQu9C10YfQsNGJ0LXQvNGDINCy0YDQsNGH0YMg0L/QvtGB0YLQsNCy0LjRgtGMINC/0YDQsNCy0LjQu9GM0L3Ri9C5INC00LjQsNCz0L3QvtC3LidcclxuICAgICAgICAgICAgICAgICAgICB9fVxyXG4gICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMudGl0bGVTZXJ2aWNlfT7Qo9CX0JgsINCt0JrQkyDQuCDQvNC90L7Qs9C+0LUg0LTRgNGD0LPQvtC1PC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICApXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFNlcnZpY2VzUGFnZVxyXG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVsxXSEuL3N0eWxlcy5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi9zdHlsZXMuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgU2xpZGVyIGZyb20gJy4uLy4uL0NvbXBvbmVudHMvU2xpZGVyJ1xyXG5pbXBvcnQgc2xpZGVyMUltYWdlIGZyb20gJy4uLy4uL2ltYWdlcy9zbGlkZXIxLnBuZydcclxuaW1wb3J0IHNsaWRlcjJJbWFnZSBmcm9tICcuLi8uLi9pbWFnZXMvc2xpZGVyMi5wbmcnXHJcbmltcG9ydCBzbGlkZXIzSW1hZ2UgZnJvbSAnLi4vLi4vaW1hZ2VzL3NsaWRlcjMucG5nJ1xyXG5pbXBvcnQgc2xpZGVyNEltYWdlIGZyb20gJy4uLy4uL2ltYWdlcy9zbGlkZXI0LnBuZydcclxuaW1wb3J0IHN0eWxlcyBmcm9tICcuL3N0eWxlcy5jc3MnXHJcblxyXG5jb25zdCBQcmV2aWV3c1BhZ2UgPSAoKSA9PiB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMubWFpblBhZ2V9PlxyXG4gICAgICAgICAgICA8U2xpZGVyIG1lbnVJdGVtcz17W3NsaWRlcjFJbWFnZSwgc2xpZGVyMkltYWdlLCBzbGlkZXIzSW1hZ2UsIHNsaWRlcjRJbWFnZV19IC8+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuaGVhZGVyVGV4dH0gaWQ9J3RpdGxlVGV4dCc+XHJcbiAgICAgICAgICAgICAgICDQn9GA0L7RhNC+0YHQvNC+0YLRgNGLXHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmRpc2NyaXB0aW9uVGV4dH0+XHJcbiAgICAgICAgICAgICAgICDQodC/0LXRhtC40LDQu9C40YHRgtCw0LzQuCDQutC70LjQvdC40LrQuCDQvtGB0YPRidC10YHRgtCy0LvRj9C10YLRgdGPINC/0YDQvtCy0LXQtNC10L3QuNC1INC60L7QvNC/0LvQtdC60YHQvdGL0YUg0L/RgNC+0YTQuNC70LDQutGC0LjRh9C10YHQutC40YUg0L7RgdC80L7RgtGA0L7QsiDRh9Cw0YHRgtC90YvRhSDQu9C40YYg0Lgg0YHQvtGC0YDRg9C00L3QuNC60L7QslxyXG4gICAgICAgICAgICAgICAg0L/RgNC10LTQv9GA0LjRj9GC0LjQuS5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuZGlzY3JpcHRpb25UZXh0fT5cclxuICAgICAgICAgICAgICAgINCe0L/Ri9GCINC4INC/0YDQvtGE0LXRgdGB0LjQvtC90LDQu9C40LfQvCDQvdCw0YjQuNGFINGB0L/QtdGG0LjQsNC70LjRgdGC0L7Qsiwg0L3QsNC70LjRh9C40LUg0LLRgdC10Lkg0L3QtdC+0LHRhdC+0LTQuNC80L7QuSDQvNCw0YLQtdGA0LjQsNC70YzQvdC+LdGC0LXRhdC90LjRh9C10YHQutC+0Lkg0LHQsNC30Ysg0Lgg0LLRi9GB0L7QutCw0Y9cclxuICAgICAgICAgICAgICAgINC80L7QsdC40LvRjNC90L7RgdGC0Ywg0L/QvtC30LLQvtC70Y/RjtGCINC90LDQvCDQvtC60LDQt9GL0LLQsNGC0Ywg0YPRgdC70YPQs9C4INCyINC60L7RgNC+0YLQutC40LUg0YHRgNC+0LrQuCDQuCDQvdCwINGB0LDQvNC+0Lwg0LLRi9GB0L7QutC+0Lwg0YPRgNC+0LLQvdC1LlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5oZWFkZXJUZXh0fT7QndCw0YjQuCDQutC70LjQtdC90YLRizwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmNsaWVudFRleHR9Pi0g0JfQsNCy0L7QtCDQntCe0J4gwqvQpNCw0YDQvNC+0L/QvtC7LdCS0L7Qu9Cz0LDCuzwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmNsaWVudFRleHR9Pi0g0KHRgtGA0LDRhdC+0LLQsNGPINCz0YDRg9C/0L/QsCDQl9CQ0J4gwqvQo9GA0LDQu9GB0LjQscK7PC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuY2xpZW50VGV4dH0+LSDQl9Cw0LLQvtC0INCe0JDQniDCq9Cf0YDQvtC80YHQuNC90YLQtdC3wrs8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5jbGllbnRUZXh0fT4tINCk0JrQnyDCq9Cn0LDQv9Cw0LXQstGB0LrQuNC5INC80LXRhdCw0L3QuNGH0LXRgdC60LjQuSDQt9Cw0LLQvtC0wrs8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5jbGllbnRUZXh0fT4tINCk0JrQnyDCq9Cf0YDQuNCy0L7Qu9C20YHQutC40Lkg0LPQvtGB0YPQtNCw0YDRgdGC0LLQtdC90L3Ri9C5INCx0L7QtdC/0YDQuNC/0LDRgdC90YvQuSDQuNGB0L/Ri9GC0LDRgtC10LvRjNC90YvQuSDQv9C+0LvQuNCz0L7QvcK7PC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuY2xpZW50VGV4dH0+LSDQntCQ0J4gwqvQotC10L/Qu9C+0Y3QvdC10YDQs9C+0LrQvtC80L/QsNC90LjRj8K7INC4INC80L3QvtCz0LjQtSDQtNGA0YPQs9C40LUuPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuZGlzY3JpcHRpb25UZXh0fT5cclxuICAgICAgICAgICAgICAgINCU0LXRgtCw0LvQuCDQv9GA0L7QstC10LTQtdC90LjRjyDQv9GA0L7RhNC+0YHQvNC+0YLRgNC+0LIg0LLRiyDQvNC+0LbQtdGC0LUg0YPQt9C90LDRgtGMLCDRgdCy0Y/Qt9Cw0LLRiNC40YHRjCDRgSDQvdCw0LzQuCDQv9C+INGC0LXQu9C10YTQvtC90LDQvCwg0YPQutCw0LfQsNC90L3Ri9C8INC90LAg0YHRgtGA0LDQvdC40YbQtSDQutC+0L3RgtCw0LrRgtC+0LIsXHJcbiAgICAgICAgICAgICAgICDQuNC70Lgg0L7RgdGC0LDQstC40LIg0YHQstC+0LUg0YHQvtC+0LHRidC10L3QuNC1INC90LAg0YHQsNC50YLQtS5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICApXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFByZXZpZXdzUGFnZVxyXG4iLCJpbXBvcnQgdCBmcm9tXCJyZWFjdFwiO3ZhciBlPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBnbG9iYWxUaGlzP2dsb2JhbFRoaXM6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdz93aW5kb3c6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGdsb2JhbD9nbG9iYWw6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNlbGY/c2VsZjp7fTtmdW5jdGlvbiBuKHQpe3JldHVybiB0JiZ0Ll9fZXNNb2R1bGUmJk9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LFwiZGVmYXVsdFwiKT90LmRlZmF1bHQ6dH1mdW5jdGlvbiBvKHQsZSl7cmV0dXJuIHQoZT17ZXhwb3J0czp7fX0sZS5leHBvcnRzKSxlLmV4cG9ydHN9dmFyIHI9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLHM9cj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxpPXI/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixhPXI/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LGM9cj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsdT1yP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxwPXI/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGY9cj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxsPXI/U3ltYm9sLmZvcihcInJlYWN0LmFzeW5jX21vZGVcIik6NjAxMTEsbT1yP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsZD1yP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMix5PXI/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLGg9cj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKTo2MDEyMCx2PXI/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6NjAxMTUsYj1yP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LGo9cj9TeW1ib2wuZm9yKFwicmVhY3QuYmxvY2tcIik6NjAxMjEsTz1yP1N5bWJvbC5mb3IoXCJyZWFjdC5mdW5kYW1lbnRhbFwiKTo2MDExNyxfPXI/U3ltYm9sLmZvcihcInJlYWN0LnJlc3BvbmRlclwiKTo2MDExOCxnPXI/U3ltYm9sLmZvcihcInJlYWN0LnNjb3BlXCIpOjYwMTE5O2Z1bmN0aW9uIEUodCl7aWYoXCJvYmplY3RcIj09dHlwZW9mIHQmJm51bGwhPT10KXt2YXIgZT10LiQkdHlwZW9mO3N3aXRjaChlKXtjYXNlIHM6c3dpdGNoKHQ9dC50eXBlKXtjYXNlIGw6Y2FzZSBtOmNhc2UgYTpjYXNlIHU6Y2FzZSBjOmNhc2UgeTpyZXR1cm4gdDtkZWZhdWx0OnN3aXRjaCh0PXQmJnQuJCR0eXBlb2Ype2Nhc2UgZjpjYXNlIGQ6Y2FzZSBiOmNhc2UgdjpjYXNlIHA6cmV0dXJuIHQ7ZGVmYXVsdDpyZXR1cm4gZX19Y2FzZSBpOnJldHVybiBlfX19ZnVuY3Rpb24gQyh0KXtyZXR1cm4gRSh0KT09PW19dmFyIHc9e0FzeW5jTW9kZTpsLENvbmN1cnJlbnRNb2RlOm0sQ29udGV4dENvbnN1bWVyOmYsQ29udGV4dFByb3ZpZGVyOnAsRWxlbWVudDpzLEZvcndhcmRSZWY6ZCxGcmFnbWVudDphLExhenk6YixNZW1vOnYsUG9ydGFsOmksUHJvZmlsZXI6dSxTdHJpY3RNb2RlOmMsU3VzcGVuc2U6eSxpc0FzeW5jTW9kZTpmdW5jdGlvbih0KXtyZXR1cm4gQyh0KXx8RSh0KT09PWx9LGlzQ29uY3VycmVudE1vZGU6Qyxpc0NvbnRleHRDb25zdW1lcjpmdW5jdGlvbih0KXtyZXR1cm4gRSh0KT09PWZ9LGlzQ29udGV4dFByb3ZpZGVyOmZ1bmN0aW9uKHQpe3JldHVybiBFKHQpPT09cH0saXNFbGVtZW50OmZ1bmN0aW9uKHQpe3JldHVyblwib2JqZWN0XCI9PXR5cGVvZiB0JiZudWxsIT09dCYmdC4kJHR5cGVvZj09PXN9LGlzRm9yd2FyZFJlZjpmdW5jdGlvbih0KXtyZXR1cm4gRSh0KT09PWR9LGlzRnJhZ21lbnQ6ZnVuY3Rpb24odCl7cmV0dXJuIEUodCk9PT1hfSxpc0xhenk6ZnVuY3Rpb24odCl7cmV0dXJuIEUodCk9PT1ifSxpc01lbW86ZnVuY3Rpb24odCl7cmV0dXJuIEUodCk9PT12fSxpc1BvcnRhbDpmdW5jdGlvbih0KXtyZXR1cm4gRSh0KT09PWl9LGlzUHJvZmlsZXI6ZnVuY3Rpb24odCl7cmV0dXJuIEUodCk9PT11fSxpc1N0cmljdE1vZGU6ZnVuY3Rpb24odCl7cmV0dXJuIEUodCk9PT1jfSxpc1N1c3BlbnNlOmZ1bmN0aW9uKHQpe3JldHVybiBFKHQpPT09eX0saXNWYWxpZEVsZW1lbnRUeXBlOmZ1bmN0aW9uKHQpe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiB0fHxcImZ1bmN0aW9uXCI9PXR5cGVvZiB0fHx0PT09YXx8dD09PW18fHQ9PT11fHx0PT09Y3x8dD09PXl8fHQ9PT1ofHxcIm9iamVjdFwiPT10eXBlb2YgdCYmbnVsbCE9PXQmJih0LiQkdHlwZW9mPT09Ynx8dC4kJHR5cGVvZj09PXZ8fHQuJCR0eXBlb2Y9PT1wfHx0LiQkdHlwZW9mPT09Znx8dC4kJHR5cGVvZj09PWR8fHQuJCR0eXBlb2Y9PT1PfHx0LiQkdHlwZW9mPT09X3x8dC4kJHR5cGVvZj09PWd8fHQuJCR0eXBlb2Y9PT1qKX0sdHlwZU9mOkV9O28oZnVuY3Rpb24odCxlKXt9KSxvKGZ1bmN0aW9uKHQpe3QuZXhwb3J0cz13fSksT2JqZWN0LE9iamVjdCxPYmplY3QsZnVuY3Rpb24oKXt0cnl7aWYoIU9iamVjdC5hc3NpZ24pcmV0dXJuITE7dmFyIHQ9bmV3IFN0cmluZyhcImFiY1wiKTtpZih0WzVdPVwiZGVcIixcIjVcIj09PU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHQpWzBdKXJldHVybiExO2Zvcih2YXIgZT17fSxuPTA7bjwxMDtuKyspZVtcIl9cIitTdHJpbmcuZnJvbUNoYXJDb2RlKG4pXT1uO2lmKFwiMDEyMzQ1Njc4OVwiIT09T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoZSkubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBlW3RdfSkuam9pbihcIlwiKSlyZXR1cm4hMTt2YXIgbz17fTtyZXR1cm5cImFiY2RlZmdoaWprbG1ub3BxcnN0XCIuc3BsaXQoXCJcIikuZm9yRWFjaChmdW5jdGlvbih0KXtvW3RdPXR9KSxcImFiY2RlZmdoaWprbG1ub3BxcnN0XCI9PT1PYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LG8pKS5qb2luKFwiXCIpfWNhdGNoKHQpe3JldHVybiExfX0oKSYmT2JqZWN0O3ZhciBQPVwiU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRURcIjtmdW5jdGlvbiBSKCl7fWZ1bmN0aW9uIFMoKXt9RnVuY3Rpb24uY2FsbC5iaW5kKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkpLFMucmVzZXRXYXJuaW5nQ2FjaGU9Ujt2YXIgTT1vKGZ1bmN0aW9uKHQpe3QuZXhwb3J0cz1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCxlLG4sbyxyLHMpe2lmKHMhPT1QKXt2YXIgaT1uZXcgRXJyb3IoXCJDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiBVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiBSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzXCIpO3Rocm93IGkubmFtZT1cIkludmFyaWFudCBWaW9sYXRpb25cIixpfX1mdW5jdGlvbiBlKCl7cmV0dXJuIHR9dC5pc1JlcXVpcmVkPXQ7dmFyIG49e2FycmF5OnQsYm9vbDp0LGZ1bmM6dCxudW1iZXI6dCxvYmplY3Q6dCxzdHJpbmc6dCxzeW1ib2w6dCxhbnk6dCxhcnJheU9mOmUsZWxlbWVudDp0LGVsZW1lbnRUeXBlOnQsaW5zdGFuY2VPZjplLG5vZGU6dCxvYmplY3RPZjplLG9uZU9mOmUsb25lT2ZUeXBlOmUsc2hhcGU6ZSxleGFjdDplLGNoZWNrUHJvcFR5cGVzOlMscmVzZXRXYXJuaW5nQ2FjaGU6Un07cmV0dXJuIG4uUHJvcFR5cGVzPW4sbn0oKX0pLHg9bihvKGZ1bmN0aW9uKHQsZSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksZS5kZWZhdWx0PWZ1bmN0aW9uKHQpe3JldHVybiB0LmRpc3BsYXlOYW1lfHx0Lm5hbWV8fChcInN0cmluZ1wiPT10eXBlb2YgdCYmdC5sZW5ndGg+MD90OlwiVW5rbm93blwiKX19KSksVD1mdW5jdGlvbih0LGUpe3ZhciBuPXt9O2Zvcih2YXIgbyBpbiB0KS0xPT09ZS5pbmRleE9mKG8pJiYobltvXT10W29dKTtyZXR1cm4gbn0saz1cIl9fZ2xvYmFsX3VuaXF1ZV9pZF9fXCIsJD1mdW5jdGlvbigpe3JldHVybiBlW2tdPShlW2tdfHwwKSsxfSxBPWZ1bmN0aW9uKCl7fSxVPW8oZnVuY3Rpb24oZSxuKXtuLl9fZXNNb2R1bGU9ITA7dmFyIG89cyhNKSxyPXMoJCk7ZnVuY3Rpb24gcyh0KXtyZXR1cm4gdCYmdC5fX2VzTW9kdWxlP3Q6e2RlZmF1bHQ6dH19ZnVuY3Rpb24gaSh0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gYSh0LGUpe2lmKCF0KXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtyZXR1cm4hZXx8XCJvYmplY3RcIiE9dHlwZW9mIGUmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGU/dDplfWZ1bmN0aW9uIGModCxlKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBlJiZudWxsIT09ZSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIit0eXBlb2YgZSk7dC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlJiZlLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOnQsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksZSYmKE9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YodCxlKTp0Ll9fcHJvdG9fXz1lKX1zKEEpLG4uZGVmYXVsdD1mdW5jdGlvbihlLG4pe3ZhciBzLHUscD1cIl9fY3JlYXRlLXJlYWN0LWNvbnRleHQtXCIrKDAsci5kZWZhdWx0KSgpK1wiX19cIixmPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXt2YXIgbixvLHIscztpKHRoaXMsZSk7Zm9yKHZhciBjPWFyZ3VtZW50cy5sZW5ndGgsdT1BcnJheShjKSxwPTA7cDxjO3ArKyl1W3BdPWFyZ3VtZW50c1twXTtyZXR1cm4gbj1vPWEodGhpcyx0LmNhbGwuYXBwbHkodCxbdGhpc10uY29uY2F0KHUpKSksby5lbWl0dGVyPShyPW8ucHJvcHMudmFsdWUscz1bXSx7b246ZnVuY3Rpb24odCl7cy5wdXNoKHQpfSxvZmY6ZnVuY3Rpb24odCl7cz1zLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4gZSE9PXR9KX0sZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHJ9LHNldDpmdW5jdGlvbih0LGUpe3I9dCxzLmZvckVhY2goZnVuY3Rpb24odCl7cmV0dXJuIHQocixlKX0pfX0pLGEobyxuKX1yZXR1cm4gYyhlLHQpLGUucHJvdG90eXBlLmdldENoaWxkQ29udGV4dD1mdW5jdGlvbigpe3ZhciB0O3JldHVybih0PXt9KVtwXT10aGlzLmVtaXR0ZXIsdH0sZS5wcm90b3R5cGUuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcz1mdW5jdGlvbih0KXtpZih0aGlzLnByb3BzLnZhbHVlIT09dC52YWx1ZSl7dmFyIGU9dGhpcy5wcm9wcy52YWx1ZSxvPXQudmFsdWUscj12b2lkIDA7KChzPWUpPT09KGk9byk/MCE9PXN8fDEvcz09MS9pOnMhPXMmJmkhPWkpP3I9MDoocj1cImZ1bmN0aW9uXCI9PXR5cGVvZiBuP24oZSxvKToxMDczNzQxODIzLDAhPShyfD0wKSYmdGhpcy5lbWl0dGVyLnNldCh0LnZhbHVlLHIpKX12YXIgcyxpfSxlLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wcm9wcy5jaGlsZHJlbn0sZX0odC5Db21wb25lbnQpO2YuY2hpbGRDb250ZXh0VHlwZXM9KChzPXt9KVtwXT1vLmRlZmF1bHQub2JqZWN0LmlzUmVxdWlyZWQscyk7dmFyIGw9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gbigpe3ZhciBlLG87aSh0aGlzLG4pO2Zvcih2YXIgcj1hcmd1bWVudHMubGVuZ3RoLHM9QXJyYXkociksYz0wO2M8cjtjKyspc1tjXT1hcmd1bWVudHNbY107cmV0dXJuIGU9bz1hKHRoaXMsdC5jYWxsLmFwcGx5KHQsW3RoaXNdLmNvbmNhdChzKSkpLG8uc3RhdGU9e3ZhbHVlOm8uZ2V0VmFsdWUoKX0sby5vblVwZGF0ZT1mdW5jdGlvbih0LGUpezAhPSgoMHxvLm9ic2VydmVkQml0cykmZSkmJm8uc2V0U3RhdGUoe3ZhbHVlOm8uZ2V0VmFsdWUoKX0pfSxhKG8sZSl9cmV0dXJuIGMobix0KSxuLnByb3RvdHlwZS5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzPWZ1bmN0aW9uKHQpe3ZhciBlPXQub2JzZXJ2ZWRCaXRzO3RoaXMub2JzZXJ2ZWRCaXRzPW51bGw9PWU/MTA3Mzc0MTgyMzplfSxuLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudD1mdW5jdGlvbigpe3RoaXMuY29udGV4dFtwXSYmdGhpcy5jb250ZXh0W3BdLm9uKHRoaXMub25VcGRhdGUpO3ZhciB0PXRoaXMucHJvcHMub2JzZXJ2ZWRCaXRzO3RoaXMub2JzZXJ2ZWRCaXRzPW51bGw9PXQ/MTA3Mzc0MTgyMzp0fSxuLnByb3RvdHlwZS5jb21wb25lbnRXaWxsVW5tb3VudD1mdW5jdGlvbigpe3RoaXMuY29udGV4dFtwXSYmdGhpcy5jb250ZXh0W3BdLm9mZih0aGlzLm9uVXBkYXRlKX0sbi5wcm90b3R5cGUuZ2V0VmFsdWU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jb250ZXh0W3BdP3RoaXMuY29udGV4dFtwXS5nZXQoKTplfSxuLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oKXtyZXR1cm4odD10aGlzLnByb3BzLmNoaWxkcmVuLEFycmF5LmlzQXJyYXkodCk/dFswXTp0KSh0aGlzLnN0YXRlLnZhbHVlKTt2YXIgdH0sbn0odC5Db21wb25lbnQpO3JldHVybiBsLmNvbnRleHRUeXBlcz0oKHU9e30pW3BdPW8uZGVmYXVsdC5vYmplY3QsdSkse1Byb3ZpZGVyOmYsQ29uc3VtZXI6bH19LGUuZXhwb3J0cz1uLmRlZmF1bHR9KTtuKFUpO3ZhciBCPW4obyhmdW5jdGlvbihlLG4pe24uX19lc01vZHVsZT0hMDt2YXIgbz1zKHQpLHI9cyhVKTtmdW5jdGlvbiBzKHQpe3JldHVybiB0JiZ0Ll9fZXNNb2R1bGU/dDp7ZGVmYXVsdDp0fX1uLmRlZmF1bHQ9by5kZWZhdWx0LmNyZWF0ZUNvbnRleHR8fHIuZGVmYXVsdCxlLmV4cG9ydHM9bi5kZWZhdWx0fSkpLEQ9QihudWxsKSxMPWZ1bmN0aW9uKGUpe3ZhciBuPXgoZSk7cmV0dXJuIGZ1bmN0aW9uKG8pe3JldHVybiB0LmNyZWF0ZUVsZW1lbnQoRC5Db25zdW1lcixudWxsLGZ1bmN0aW9uKHIpe2lmKG51bGw9PT1yKXRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgWWFuZGV4Lk1hcHMgQVBJIGluIHRoZSBjb250ZXh0LiBNYWtlIHN1cmUgdGhhdCA8XCIrbitcIiAvPiBpcyBpbnNpZGUgPFlNYXBzIC8+IHByb3ZpZGVyXCIpO3JldHVybiB0LmNyZWF0ZUVsZW1lbnQoZSxPYmplY3QuYXNzaWduKHt9LHt5bWFwczpyfSxvKSl9KX19LEY9QihudWxsKSxXPWZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbihuKXtyZXR1cm4gdC5jcmVhdGVFbGVtZW50KEYuQ29uc3VtZXIsbnVsbCxmdW5jdGlvbihvKXtyZXR1cm4gdC5jcmVhdGVFbGVtZW50KGUsT2JqZWN0LmFzc2lnbih7fSx7cGFyZW50Om99LG4pKX0pfX07ZnVuY3Rpb24gTihlLG4sbyl7dm9pZCAwPT09biYmKG49ITEpLHZvaWQgMD09PW8mJihvPVtdKTt2YXIgcj1mdW5jdGlvbihyKXtmdW5jdGlvbiBzKCl7ci5jYWxsKHRoaXMpLHRoaXMuc3RhdGU9e2xvYWRpbmc6ITB9LHRoaXMuX2lzTW91bnRlZD0hMX1yZXR1cm4gciYmKHMuX19wcm90b19fPXIpLChzLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHImJnIucHJvdG90eXBlKSkuY29uc3RydWN0b3I9cyxzLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudD1mdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5faXNNb3VudGVkPSEwLHRoaXMucHJvcHMueW1hcHMubG9hZCgpLnRoZW4oZnVuY3Rpb24oZSl7cmV0dXJuIFByb21pc2UuYWxsKG8uY29uY2F0KHQucHJvcHMubW9kdWxlcykubWFwKGUubG9hZE1vZHVsZSkpLnRoZW4oZnVuY3Rpb24oKXshMD09PXQuX2lzTW91bnRlZCYmdC5zZXRTdGF0ZSh7bG9hZGluZzohMX0sZnVuY3Rpb24oKXt0LnByb3BzLm9uTG9hZChlKX0pfSl9KS5jYXRjaChmdW5jdGlvbihlKXshMD09PXQuX2lzTW91bnRlZCYmdC5wcm9wcy5vbkVycm9yKGUpfSl9LHMucHJvdG90eXBlLmNvbXBvbmVudFdpbGxVbm1vdW50PWZ1bmN0aW9uKCl7dGhpcy5faXNNb3VudGVkPSExfSxzLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oKXt2YXIgbz10aGlzLnByb3BzLnltYXBzLHI9ITE9PT1ufHwhMT09PXRoaXMuc3RhdGUubG9hZGluZyxzPVQodGhpcy5wcm9wcyxbXCJvbkxvYWRcIixcIm9uRXJyb3JcIixcIm1vZHVsZXNcIixcInltYXBzXCJdKTtyZXR1cm4gciYmdC5jcmVhdGVFbGVtZW50KGUsT2JqZWN0LmFzc2lnbih7fSx7eW1hcHM6by5nZXRBcGkoKX0scykpfSxzfSh0LkNvbXBvbmVudCk7cmV0dXJuIHIuZGVmYXVsdFByb3BzPXtvbkxvYWQ6RnVuY3Rpb24ucHJvdG90eXBlLG9uRXJyb3I6RnVuY3Rpb24ucHJvdG90eXBlLG1vZHVsZXM6W119LEwocil9dmFyIHE9e2xhbmc6XCJydV9SVVwiLGxvYWQ6XCJcIixuczpcIlwiLG1vZGU6XCJyZWxlYXNlXCJ9LHo9e30sST1mdW5jdGlvbih0KXt2YXIgZT1EYXRlLm5vdygpLnRvU3RyaW5nKDMyKTt0aGlzLm9wdGlvbnM9dCx0aGlzLm5hbWVzcGFjZT10LnF1ZXJ5Lm5zfHxxLm5zLHRoaXMub25sb2FkPVwiX195YW5kZXgtbWFwcy1hcGktb25sb2FkX18kJFwiK2UsdGhpcy5vbmVycm9yPVwiX195YW5kZXgtbWFwcy1hcGktb25lcnJvcl9fJCRcIitlfTtJLnByb3RvdHlwZS5nZXRBcGk9ZnVuY3Rpb24oKXtyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiZ0aGlzLm5hbWVzcGFjZT93aW5kb3dbdGhpcy5uYW1lc3BhY2VdOnRoaXMuYXBpfSxJLnByb3RvdHlwZS5zZXRBcGk9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuYXBpPXR9LEkucHJvdG90eXBlLmdldFByb21pc2U9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5uYW1lc3BhY2U/elt0aGlzLm5hbWVzcGFjZV06dGhpcy5wcm9taXNlfSxJLnByb3RvdHlwZS5zZXRQcm9taXNlPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLm5hbWVzcGFjZT96W3RoaXMubmFtZXNwYWNlXT10aGlzLnByb21pc2U9dDp0aGlzLnByb21pc2U9dH0sSS5wcm90b3R5cGUubG9hZD1mdW5jdGlvbigpe3ZhciB0PXRoaXM7aWYodGhpcy5nZXRBcGkoKSlyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRoaXMuc2V0QXBpKHRoaXMuZ2V0QXBpKCkpKTtpZih0aGlzLmdldFByb21pc2UoKSlyZXR1cm4gdGhpcy5zZXRQcm9taXNlKHRoaXMuZ2V0UHJvbWlzZSgpKTt2YXIgZT1PYmplY3QuYXNzaWduKHtvbmxvYWQ6dGhpcy5vbmxvYWQsb25lcnJvcjp0aGlzLm9uZXJyb3J9LHEsdGhpcy5vcHRpb25zLnF1ZXJ5KSxuPU9iamVjdC5rZXlzKGUpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdCtcIj1cIitlW3RdfSkuam9pbihcIiZcIiksbz1bXCJodHRwczovL1wiKyh0aGlzLm9wdGlvbnMuZW50ZXJwcmlzZT9cImVudGVycHJpc2UuXCI6XCJcIikrXCJhcGktbWFwcy55YW5kZXgucnVcIix0aGlzLm9wdGlvbnMudmVyc2lvbixcIj9cIituXS5qb2luKFwiL1wiKSxyPW5ldyBQcm9taXNlKGZ1bmN0aW9uKGUsbil7d2luZG93W3Qub25sb2FkXT1mdW5jdGlvbihuKXtkZWxldGUgd2luZG93W3Qub25sb2FkXSxuLmxvYWRNb2R1bGU9dC5sb2FkTW9kdWxlLmJpbmQodCksbi5yZWFkeShmdW5jdGlvbigpe3JldHVybiBlKHQuc2V0QXBpKG4pKX0pfSx3aW5kb3dbdC5vbmVycm9yXT1mdW5jdGlvbihlKXtkZWxldGUgd2luZG93W3Qub25lcnJvcl0sbihlKX0sdC5mZXRjaFNjcmlwdChvKS5jYXRjaCh3aW5kb3dbdC5vbmVycm9yXSl9KTtyZXR1cm4gdGhpcy5zZXRQcm9taXNlKHIpfSxJLnByb3RvdHlwZS5mZXRjaFNjcmlwdD1mdW5jdGlvbih0KXt2YXIgZT10aGlzO3JldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihuLG8pe2Uuc2NyaXB0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIiksZS5zY3JpcHQudHlwZT1cInRleHQvamF2YXNjcmlwdFwiLGUuc2NyaXB0Lm9ubG9hZD1uLGUuc2NyaXB0Lm9uZXJyb3I9byxlLnNjcmlwdC5zcmM9dCxlLnNjcmlwdC5hc3luYz1cImFzeW5jXCIsZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChlLnNjcmlwdCl9KX0sSS5wcm90b3R5cGUubG9hZE1vZHVsZT1mdW5jdGlvbih0KXt2YXIgZT10aGlzO3JldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihuLG8pe2UuZ2V0QXBpKCkubW9kdWxlcy5yZXF1aXJlKHQsZnVuY3Rpb24obyl7IWZ1bmN0aW9uKHQsZSxuLG8pe3ZvaWQgMD09PW8mJihvPSExKSxlPVwic3RyaW5nXCI9PXR5cGVvZiBlP2Uuc3BsaXQoXCIuXCIpOmUuc2xpY2UoKTtmb3IodmFyIHIscz10O2UubGVuZ3RoPjE7KXNbcj1lLnNoaWZ0KCldfHwoc1tyXT17fSkscz1zW3JdO3NbZVswXV09ITA9PT1vJiZzW2VbMF1dfHxufShlLmFwaSx0LG8sITApLG4obyl9LG8sZS5nZXRBcGkoKSl9KX0sSS5fbmFtZT1cIl9fcmVhY3QteWFuZGV4LW1hcHNfX1wiO3ZhciBaPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIG4odCl7ZS5jYWxsKHRoaXMsdCksdGhpcy55bWFwcz1uZXcgSSh0KX1yZXR1cm4gZSYmKG4uX19wcm90b19fPWUpLChuLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUmJmUucHJvdG90eXBlKSkuY29uc3RydWN0b3I9bixuLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudD1mdW5jdGlvbigpeyEwPT09dGhpcy5wcm9wcy5wcmVsb2FkJiZ0aGlzLnltYXBzLmxvYWQoKX0sbi5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKCl7cmV0dXJuIHQuY3JlYXRlRWxlbWVudChELlByb3ZpZGVyLHt2YWx1ZTp0aGlzLnltYXBzfSx0aGlzLnByb3BzLmNoaWxkcmVuKX0sbn0odC5Db21wb25lbnQpO1ouZGVmYXVsdFByb3BzPXt2ZXJzaW9uOlwiMi4xXCIsZW50ZXJwcmlzZTohMSxxdWVyeTp7bGFuZzpcInJ1X1JVXCIsbG9hZDpcIlwiLG5zOlwiXCJ9LHByZWxvYWQ6ITF9O3ZhciBHPS9eb24oPz1bQS1aXSkvO2Z1bmN0aW9uIFYodCl7cmV0dXJuIE9iamVjdC5rZXlzKHQpLnJlZHVjZShmdW5jdGlvbihlLG4pe2lmKEcudGVzdChuKSl7dmFyIG89bi5yZXBsYWNlKEcsXCJcIikudG9Mb3dlckNhc2UoKTtlLl9ldmVudHNbb109dFtuXX1lbHNlIGVbbl09dFtuXTtyZXR1cm4gZX0se19ldmVudHM6e319KX1mdW5jdGlvbiBZKHQsZSxuKXtcImZ1bmN0aW9uXCI9PXR5cGVvZiBuJiZ0LmV2ZW50cy5hZGQoZSxuKX1mdW5jdGlvbiBIKHQsZSxuKXtcImZ1bmN0aW9uXCI9PXR5cGVvZiBuJiZ0LmV2ZW50cy5yZW1vdmUoZSxuKX1mdW5jdGlvbiBKKHQsZSxuKXtPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LGUsbikpLmZvckVhY2goZnVuY3Rpb24obyl7ZVtvXSE9PW5bb10mJihIKHQsbyxlW29dKSxZKHQsbyxuW29dKSl9KX12YXIgSz1mdW5jdGlvbih0KXtyZXR1cm5cImRlZmF1bHRcIit0LmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK3Quc2xpY2UoMSl9O2Z1bmN0aW9uIFEodCxlKXtyZXR1cm4gdm9pZCAwIT09dFtlXXx8dm9pZCAwPT09dFtLKGUpXX1mdW5jdGlvbiBYKHQsZSxuKXtyZXR1cm4oUSh0LGUpP3RbZV06dFtLKGUpXSl8fG59ZnVuY3Rpb24gdHQodCxlLG4pe2lmKHZvaWQgMD09PW4mJihuPW51bGwpLHQhPT1lKXtpZih0JiYodC5oYXNPd25Qcm9wZXJ0eShcImN1cnJlbnRcIik/dC5jdXJyZW50PW51bGw6XCJmdW5jdGlvblwiPT10eXBlb2YgdCYmdChudWxsKSksIWUpcmV0dXJuO2UuaGFzT3duUHJvcGVydHkoXCJjdXJyZW50XCIpP2UuY3VycmVudD1uOlwiZnVuY3Rpb25cIj09dHlwZW9mIGUmJmUobil9fWZ1bmN0aW9uIGV0KHQpe3ZhciBlPXQud2lkdGgsbj10LmhlaWdodCxvPXQuc3R5bGUscj10LmNsYXNzTmFtZTtyZXR1cm4gdm9pZCAwIT09b3x8dm9pZCAwIT09cj9PYmplY3QuYXNzaWduKHt9LG8mJntzdHlsZTpvfSxyJiZ7Y2xhc3NOYW1lOnJ9KTp7c3R5bGU6e3dpZHRoOmUsaGVpZ2h0Om59fX12YXIgbnQ9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gbigpe3ZhciB0PXRoaXM7ZS5jYWxsKHRoaXMpLHRoaXMuc3RhdGU9e2luc3RhbmNlOm51bGx9LHRoaXMuX3BhcmVudEVsZW1lbnQ9bnVsbCx0aGlzLl9nZXRSZWY9ZnVuY3Rpb24oZSl7dC5fcGFyZW50RWxlbWVudD1lfX1yZXR1cm4gZSYmKG4uX19wcm90b19fPWUpLChuLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUmJmUucHJvdG90eXBlKSkuY29uc3RydWN0b3I9bixuLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudD1mdW5jdGlvbigpe3ZhciB0PW4ubW91bnRPYmplY3QodGhpcy5fcGFyZW50RWxlbWVudCx0aGlzLnByb3BzLnltYXBzLk1hcCx0aGlzLnByb3BzKTt0aGlzLnNldFN0YXRlKHtpbnN0YW5jZTp0fSl9LG4ucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZT1mdW5jdGlvbih0KXtudWxsIT09dGhpcy5zdGF0ZS5pbnN0YW5jZSYmbi51cGRhdGVPYmplY3QodGhpcy5zdGF0ZS5pbnN0YW5jZSx0LHRoaXMucHJvcHMpfSxuLnByb3RvdHlwZS5jb21wb25lbnRXaWxsVW5tb3VudD1mdW5jdGlvbigpe24udW5tb3VudE9iamVjdCh0aGlzLnN0YXRlLmluc3RhbmNlLHRoaXMucHJvcHMpfSxuLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oKXt2YXIgZT1ldCh0aGlzLnByb3BzKSxuPVYodGhpcy5wcm9wcyksbz1UKG4sW1wiX2V2ZW50c1wiLFwic3RhdGVcIixcImRlZmF1bHRTdGF0ZVwiLFwib3B0aW9uc1wiLFwiZGVmYXVsdE9wdGlvbnNcIixcImluc3RhbmNlUmVmXCIsXCJ5bWFwc1wiLFwiY2hpbGRyZW5cIixcIndpZHRoXCIsXCJoZWlnaHRcIixcInN0eWxlXCIsXCJjbGFzc05hbWVcIl0pO3JldHVybiB0LmNyZWF0ZUVsZW1lbnQoRi5Qcm92aWRlcix7dmFsdWU6dGhpcy5zdGF0ZS5pbnN0YW5jZX0sdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsT2JqZWN0LmFzc2lnbih7fSx7cmVmOnRoaXMuX2dldFJlZn0sZSxvKSx0aGlzLnByb3BzLmNoaWxkcmVuKSl9LG4ubW91bnRPYmplY3Q9ZnVuY3Rpb24odCxlLG4pe3ZhciBvPVYobikscj1vLmluc3RhbmNlUmVmLHM9by5fZXZlbnRzLGk9bmV3IGUodCxYKG4sXCJzdGF0ZVwiKSxYKG4sXCJvcHRpb25zXCIpKTtyZXR1cm4gT2JqZWN0LmtleXMocykuZm9yRWFjaChmdW5jdGlvbih0KXtyZXR1cm4gWShpLHQsc1t0XSl9KSx0dChudWxsLHIsaSksaX0sbi51cGRhdGVPYmplY3Q9ZnVuY3Rpb24odCxlLG4pe3ZhciBvPVYobikscj1vLl9ldmVudHMscz1vLmluc3RhbmNlUmVmLGk9VihlKSxhPWkuX2V2ZW50cyxjPWkuaW5zdGFuY2VSZWY7aWYoUShuLFwic3RhdGVcIikpe3ZhciB1PVgoZSxcInN0YXRlXCIse30pLHA9WChuLFwic3RhdGVcIix7fSk7dS50eXBlIT09cC50eXBlJiZ0LnNldFR5cGUocC50eXBlKSx1LmJlaGF2aW9ycyE9PXAuYmVoYXZpb3JzJiYodS5iZWhhdmlvcnMmJnQuYmVoYXZpb3JzLmRpc2FibGUodS5iZWhhdmlvcnMpLHAuYmVoYXZpb3JzJiZ0LmJlaGF2aW9ycy5lbmFibGUocC5iZWhhdmlvcnMpKSxwLnpvb20mJnUuem9vbSE9PXAuem9vbSYmdC5zZXRab29tKHAuem9vbSkscC5jZW50ZXImJnUuY2VudGVyIT09cC5jZW50ZXImJnQuc2V0Q2VudGVyKHAuY2VudGVyKSxwLmJvdW5kcyYmdS5ib3VuZHMhPT1wLmJvdW5kcyYmdC5zZXRCb3VuZHMocC5ib3VuZHMpfWlmKFEobixcIm9wdGlvbnNcIikpe3ZhciBmPVgoZSxcIm9wdGlvbnNcIiksbD1YKG4sXCJvcHRpb25zXCIse30pO2YhPT1sJiZ0Lm9wdGlvbnMuc2V0KGwpfVgoZSxcIndpZHRoXCIpPT09WChuLFwid2lkdGhcIikmJlgoZSxcImhlaWdodFwiKT09PVgobixcImhlaWdodFwiKXx8dC5jb250YWluZXIuZml0VG9WaWV3cG9ydCgpLEoodCxhLHIpLHR0KGMscyx0KX0sbi51bm1vdW50T2JqZWN0PWZ1bmN0aW9uKHQsZSl7dmFyIG49VihlKSxvPW4uaW5zdGFuY2VSZWYscj1uLl9ldmVudHM7bnVsbCE9PXQmJihPYmplY3Qua2V5cyhyKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3JldHVybiBIKHQsZSxyW2VdKX0pLHQuZGVzdHJveSgpLHR0KG8pKX0sbn0odC5Db21wb25lbnQpO250LmRlZmF1bHRQcm9wcz17d2lkdGg6MzIwLGhlaWdodDoyNDB9O3ZhciBvdD1OKG50LCEwLFtcIk1hcFwiXSkscnQ9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gbigpe3ZhciB0PXRoaXM7ZS5jYWxsKHRoaXMpLHRoaXMuc3RhdGU9e2luc3RhbmNlOm51bGx9LHRoaXMuX3BhcmVudEVsZW1lbnQ9bnVsbCx0aGlzLl9nZXRSZWY9ZnVuY3Rpb24oZSl7dC5fcGFyZW50RWxlbWVudD1lfX1yZXR1cm4gZSYmKG4uX19wcm90b19fPWUpLChuLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUmJmUucHJvdG90eXBlKSkuY29uc3RydWN0b3I9bixuLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudD1mdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5fbW91bnRlZD0hMCx0aGlzLnByb3BzLnltYXBzLnBhbm9yYW1hLmlzU3VwcG9ydGVkKCkmJm4ubW91bnRPYmplY3QodGhpcy5fcGFyZW50RWxlbWVudCx0aGlzLnByb3BzLnltYXBzLnBhbm9yYW1hLHRoaXMucHJvcHMpLnRoZW4oZnVuY3Rpb24oZSl7cmV0dXJuIHQuX21vdW50ZWQmJnQuc2V0U3RhdGUoe2luc3RhbmNlOmV9KX0pfSxuLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGU9ZnVuY3Rpb24odCl7bnVsbCE9PXRoaXMuc3RhdGUuaW5zdGFuY2UmJm4udXBkYXRlT2JqZWN0KHRoaXMuc3RhdGUuaW5zdGFuY2UsdCx0aGlzLnByb3BzKX0sbi5wcm90b3R5cGUuY29tcG9uZW50V2lsbFVubW91bnQ9ZnVuY3Rpb24oKXt0aGlzLl9tb3VudGVkPSExLG4udW5tb3VudE9iamVjdCh0aGlzLnN0YXRlLmluc3RhbmNlLHRoaXMucHJvcHMpfSxuLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oKXt2YXIgZT1ldCh0aGlzLnByb3BzKTtyZXR1cm4gdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsT2JqZWN0LmFzc2lnbih7fSx7cmVmOnRoaXMuX2dldFJlZn0sZSkpfSxuLm1vdW50T2JqZWN0PWZ1bmN0aW9uKHQsZSxuKXt2YXIgbz1WKG4pLHI9by5pbnN0YW5jZVJlZixzPW8uX2V2ZW50cyxpPVgobixcInBvaW50XCIpLGE9WChuLFwibG9jYXRlT3B0aW9uc1wiKSxjPVgobixcIm9wdGlvbnNcIik7cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKG4sbyl7ZS5sb2NhdGUoaSxhKS5kb25lKGZ1bmN0aW9uKG8pe2lmKG8ubGVuZ3RoPjApe3ZhciBpPW5ldyBlLlBsYXllcih0LG9bMF0sYyk7dHQobnVsbCxyLGkpLE9iamVjdC5rZXlzKHMpLmZvckVhY2goZnVuY3Rpb24odCl7cmV0dXJuIFkoaSx0LHNbdF0pfSksbihpKX19LG8pfSl9LG4udXBkYXRlT2JqZWN0PWZ1bmN0aW9uKHQsZSxuKXt2YXIgbz1WKG4pLHI9by5fZXZlbnRzLHM9by5pbnN0YW5jZVJlZixpPVYoZSksYT1pLl9ldmVudHMsYz1pLmluc3RhbmNlUmVmO2lmKFEobixcIm9wdGlvbnNcIikpe3ZhciB1PVgoZSxcIm9wdGlvbnNcIikscD1YKG4sXCJvcHRpb25zXCIpO3UhPT1wJiZ0Lm9wdGlvbnMuc2V0KHApfWlmKFEobixcInBvaW50XCIpKXt2YXIgZj1YKG4sXCJwb2ludFwiKSxsPVgoZSxcInBvaW50XCIpLG09WChuLFwibG9jYXRlT3B0aW9uc1wiKTtmIT09bCYmdC5tb3ZlVG8oZixtKX1KKHQsYSxyKSx0dChjLHMsdCl9LG4udW5tb3VudE9iamVjdD1mdW5jdGlvbih0LGUpe3ZhciBuPVYoZSksbz1uLmluc3RhbmNlUmVmLHI9bi5fZXZlbnRzO251bGwhPT10JiYoT2JqZWN0LmtleXMocikuZm9yRWFjaChmdW5jdGlvbihlKXtyZXR1cm4gSCh0LGUscltlXSl9KSx0dChvKSl9LG59KHQuQ29tcG9uZW50KTtydC5kZWZhdWx0UHJvcHM9e3dpZHRoOjMyMCxoZWlnaHQ6MjQwfTt2YXIgc3Q9TihydCwhMCxbXCJwYW5vcmFtYS5pc1N1cHBvcnRlZFwiLFwicGFub3JhbWEubG9jYXRlXCIsXCJwYW5vcmFtYS5jcmVhdGVQbGF5ZXJcIixcInBhbm9yYW1hLlBsYXllclwiXSksaXQ9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gbigpe2UuY2FsbCh0aGlzKSx0aGlzLnN0YXRlPXtpbnN0YW5jZTpudWxsfX1yZXR1cm4gZSYmKG4uX19wcm90b19fPWUpLChuLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUmJmUucHJvdG90eXBlKSkuY29uc3RydWN0b3I9bixuLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudD1mdW5jdGlvbigpe3ZhciB0PW4ubW91bnRDb250cm9sKHRoaXMucHJvcHMueW1hcHMuY29udHJvbFt0aGlzLnByb3BzLm5hbWVdLHRoaXMucHJvcHMpO3RoaXMuc2V0U3RhdGUoe2luc3RhbmNlOnR9KX0sbi5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlPWZ1bmN0aW9uKHQpe251bGwhPT10aGlzLnN0YXRlLmluc3RhbmNlJiZuLnVwZGF0ZUNvbnRyb2wodGhpcy5zdGF0ZS5pbnN0YW5jZSx0LHRoaXMucHJvcHMpfSxuLnByb3RvdHlwZS5jb21wb25lbnRXaWxsVW5tb3VudD1mdW5jdGlvbigpe24udW5tb3VudENvbnRyb2wodGhpcy5zdGF0ZS5pbnN0YW5jZSx0aGlzLnByb3BzKX0sbi5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKCl7cmV0dXJuIHQuY3JlYXRlRWxlbWVudChGLlByb3ZpZGVyLHt2YWx1ZTp0aGlzLnN0YXRlLmluc3RhbmNlfSx0aGlzLnByb3BzLmNoaWxkcmVuKX0sbi5tb3VudENvbnRyb2w9ZnVuY3Rpb24odCxlKXt2YXIgbj1WKGUpLG89bi5pbnN0YW5jZVJlZixyPW4ucGFyZW50LHM9bi5sYXp5LGk9bi5fZXZlbnRzLGE9bmV3IHQoe2RhdGE6WChlLFwiZGF0YVwiKSxvcHRpb25zOlgoZSxcIm9wdGlvbnNcIiksc3RhdGU6WChlLFwic3RhdGVcIiksbWFwVHlwZXM6WChlLFwibWFwVHlwZXNcIiksbGF6eTpzfSk7aWYoT2JqZWN0LmtleXMoaSkuZm9yRWFjaChmdW5jdGlvbih0KXtyZXR1cm4gWShhLHQsaVt0XSl9KSxyJiZyLmNvbnRyb2xzJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiByLmNvbnRyb2xzLmFkZClyLmNvbnRyb2xzLmFkZChhKTtlbHNle2lmKCFyfHwhci5hZGR8fFwiZnVuY3Rpb25cIiE9dHlwZW9mIHIuYWRkKXRocm93IG5ldyBFcnJvcihcIk5vIHBhcmVudCBmb3VuZCB0byBtb3VudCBcIitlLm5hbWUpO3IuYWRkKGEpfXJldHVybiB0dChudWxsLG8sYSksYX0sbi51cGRhdGVDb250cm9sPWZ1bmN0aW9uKHQsZSxuKXt2YXIgbz1WKG4pLHI9by5fZXZlbnRzLHM9by5pbnN0YW5jZVJlZixpPVYoZSksYT1pLl9ldmVudHMsYz1pLmluc3RhbmNlUmVmO2lmKFEobixcIm9wdGlvbnNcIikpe3ZhciB1PVgoZSxcIm9wdGlvbnNcIikscD1YKG4sXCJvcHRpb25zXCIpO3UhPT1wJiZ0Lm9wdGlvbnMuc2V0KHApfWlmKFEobixcImRhdGFcIikpe3ZhciBmPVgoZSxcImRhdGFcIiksbD1YKG4sXCJkYXRhXCIpO2YhPT1sJiZ0LmRhdGEuc2V0KGwpfWlmKFEobixcInN0YXRlXCIpKXt2YXIgbT1YKGUsXCJzdGF0ZVwiKSxkPVgobixcInN0YXRlXCIpO20hPT1kJiZ0LnN0YXRlLnNldChkKX1pZihRKG4sXCJtYXBUeXBlc1wiKSl7dmFyIHk9WChlLFwibWFwVHlwZXNcIiksaD1YKG4sXCJtYXBUeXBlc1wiKTt5IT09aCYmKHQucmVtb3ZlQWxsTWFwVHlwZXMoKSxoLmZvckVhY2goZnVuY3Rpb24oZSl7cmV0dXJuIHQuYWRkTWFwVHlwZShlKX0pKX1KKHQsYSxyKSx0dChjLHMsdCl9LG4udW5tb3VudENvbnRyb2w9ZnVuY3Rpb24odCxlKXt2YXIgbj1WKGUpLG89bi5pbnN0YW5jZVJlZixyPW4ucGFyZW50LHM9bi5fZXZlbnRzO251bGwhPT10JiYoT2JqZWN0LmtleXMocykuZm9yRWFjaChmdW5jdGlvbihlKXtyZXR1cm4gSCh0LGUsc1tlXSl9KSxyLmNvbnRyb2xzJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiByLmNvbnRyb2xzLnJlbW92ZT9yLmNvbnRyb2xzLnJlbW92ZSh0KTpyLnJlbW92ZSYmXCJmdW5jdGlvblwiPT10eXBlb2Ygci5yZW1vdmUmJnIucmVtb3ZlKHQpLHR0KG8pKX0sbn0odC5Db21wb25lbnQpLGF0PVcoTihmdW5jdGlvbihlKXtyZXR1cm4gdC5jcmVhdGVFbGVtZW50KGl0LE9iamVjdC5hc3NpZ24oe30sZSx7bmFtZTpcIkJ1dHRvblwifSkpfSwhMCxbXCJjb250cm9sLkJ1dHRvblwiXSkpLGN0PVcoTihmdW5jdGlvbihlKXtyZXR1cm4gdC5jcmVhdGVFbGVtZW50KGl0LE9iamVjdC5hc3NpZ24oe30sZSx7bmFtZTpcIkZ1bGxzY3JlZW5Db250cm9sXCJ9KSl9LCEwLFtcImNvbnRyb2wuRnVsbHNjcmVlbkNvbnRyb2xcIl0pKSx1dD1XKE4oZnVuY3Rpb24oZSl7cmV0dXJuIHQuY3JlYXRlRWxlbWVudChpdCxPYmplY3QuYXNzaWduKHt9LGUse25hbWU6XCJHZW9sb2NhdGlvbkNvbnRyb2xcIn0pKX0sITAsW1wiY29udHJvbC5HZW9sb2NhdGlvbkNvbnRyb2xcIl0pKSxwdD1XKE4oZnVuY3Rpb24oZSl7cmV0dXJuIHQuY3JlYXRlRWxlbWVudChpdCxPYmplY3QuYXNzaWduKHt9LGUse25hbWU6XCJMaXN0Qm94XCJ9KSl9LCEwLFtcImNvbnRyb2wuTGlzdEJveFwiXSkpLGZ0PVcoTihmdW5jdGlvbihlKXtyZXR1cm4gdC5jcmVhdGVFbGVtZW50KGl0LE9iamVjdC5hc3NpZ24oe30sZSx7bmFtZTpcIkxpc3RCb3hJdGVtXCJ9KSl9LCEwLFtcImNvbnRyb2wuTGlzdEJveEl0ZW1cIl0pKSxsdD1XKE4oZnVuY3Rpb24oZSl7cmV0dXJuIHQuY3JlYXRlRWxlbWVudChpdCxPYmplY3QuYXNzaWduKHt9LGUse25hbWU6XCJSb3V0ZUJ1dHRvblwifSkpfSwhMCxbXCJjb250cm9sLlJvdXRlQnV0dG9uXCJdKSksbXQ9VyhOKGZ1bmN0aW9uKGUpe3JldHVybiB0LmNyZWF0ZUVsZW1lbnQoaXQsT2JqZWN0LmFzc2lnbih7fSxlLHtuYW1lOlwiUm91dGVFZGl0b3JcIn0pKX0sITAsW1wiY29udHJvbC5Sb3V0ZUVkaXRvclwiXSkpLGR0PVcoTihmdW5jdGlvbihlKXtyZXR1cm4gdC5jcmVhdGVFbGVtZW50KGl0LE9iamVjdC5hc3NpZ24oe30sZSx7bmFtZTpcIlJvdXRlUGFuZWxcIn0pKX0sITAsW1wiY29udHJvbC5Sb3V0ZVBhbmVsXCJdKSkseXQ9VyhOKGZ1bmN0aW9uKGUpe3JldHVybiB0LmNyZWF0ZUVsZW1lbnQoaXQsT2JqZWN0LmFzc2lnbih7fSxlLHtuYW1lOlwiUnVsZXJDb250cm9sXCJ9KSl9LCEwLFtcImNvbnRyb2wuUnVsZXJDb250cm9sXCJdKSksaHQ9VyhOKGZ1bmN0aW9uKGUpe3JldHVybiB0LmNyZWF0ZUVsZW1lbnQoaXQsT2JqZWN0LmFzc2lnbih7fSxlLHtuYW1lOlwiU2VhcmNoQ29udHJvbFwifSkpfSwhMCxbXCJjb250cm9sLlNlYXJjaENvbnRyb2xcIl0pKSx2dD1XKE4oZnVuY3Rpb24oZSl7cmV0dXJuIHQuY3JlYXRlRWxlbWVudChpdCxPYmplY3QuYXNzaWduKHt9LGUse25hbWU6XCJUcmFmZmljQ29udHJvbFwifSkpfSwhMCxbXCJjb250cm9sLlRyYWZmaWNDb250cm9sXCJdKSksYnQ9VyhOKGZ1bmN0aW9uKGUpe3JldHVybiB0LmNyZWF0ZUVsZW1lbnQoaXQsT2JqZWN0LmFzc2lnbih7fSxlLHtuYW1lOlwiVHlwZVNlbGVjdG9yXCJ9KSl9LCEwLFtcImNvbnRyb2wuVHlwZVNlbGVjdG9yXCJdKSksanQ9VyhOKGZ1bmN0aW9uKGUpe3JldHVybiB0LmNyZWF0ZUVsZW1lbnQoaXQsT2JqZWN0LmFzc2lnbih7fSxlLHtuYW1lOlwiWm9vbUNvbnRyb2xcIn0pKX0sITAsW1wiY29udHJvbC5ab29tQ29udHJvbFwiXSkpLE90PVcoTihmdW5jdGlvbihlKXtmdW5jdGlvbiBuKCl7ZS5jYWxsKHRoaXMpLHRoaXMuc3RhdGU9e2luc3RhbmNlOm51bGx9fXJldHVybiBlJiYobi5fX3Byb3RvX189ZSksKG4ucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZSYmZS5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1uLG4ucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50PWZ1bmN0aW9uKCl7dmFyIHQ9bi5tb3VudE9iamVjdCh0aGlzLnByb3BzLnltYXBzLkNsdXN0ZXJlcix0aGlzLnByb3BzKTt0aGlzLnNldFN0YXRlKHtpbnN0YW5jZTp0fSl9LG4ucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZT1mdW5jdGlvbih0KXtudWxsIT09dGhpcy5zdGF0ZS5pbnN0YW5jZSYmbi51cGRhdGVPYmplY3QodGhpcy5zdGF0ZS5pbnN0YW5jZSx0LHRoaXMucHJvcHMpfSxuLnByb3RvdHlwZS5jb21wb25lbnRXaWxsVW5tb3VudD1mdW5jdGlvbigpe24udW5tb3VudE9iamVjdCh0aGlzLnN0YXRlLmluc3RhbmNlLHRoaXMucHJvcHMpfSxuLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oKXtyZXR1cm4gdC5jcmVhdGVFbGVtZW50KEYuUHJvdmlkZXIse3ZhbHVlOnRoaXMuc3RhdGUuaW5zdGFuY2V9LHRoaXMucHJvcHMuY2hpbGRyZW4pfSxuLm1vdW50T2JqZWN0PWZ1bmN0aW9uKHQsZSl7dmFyIG49VihlKSxvPW4uaW5zdGFuY2VSZWYscj1uLnBhcmVudCxzPW4uX2V2ZW50cyxpPW5ldyB0KFgoZSxcIm9wdGlvbnNcIikpO2lmKE9iamVjdC5rZXlzKHMpLmZvckVhY2goZnVuY3Rpb24odCl7cmV0dXJuIFkoaSx0LHNbdF0pfSksci5nZW9PYmplY3RzJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiByLmdlb09iamVjdHMuYWRkKXIuZ2VvT2JqZWN0cy5hZGQoaSk7ZWxzZXtpZighci5hZGR8fFwiZnVuY3Rpb25cIiE9dHlwZW9mIHIuYWRkKXRocm93IG5ldyBFcnJvcihcIk5vIHBhcmVudCBmb3VuZCB0byBtb3VudCBDbHVzdGVyZXJcIik7ci5hZGQoaSl9cmV0dXJuIHR0KG51bGwsbyxpKSxpfSxuLnVwZGF0ZU9iamVjdD1mdW5jdGlvbih0LGUsbil7dmFyIG89VihuKSxyPW8uX2V2ZW50cyxzPW8uaW5zdGFuY2VSZWYsaT1WKGUpLGE9aS5fZXZlbnRzLGM9aS5pbnN0YW5jZVJlZjtpZihRKG4sXCJvcHRpb25zXCIpKXt2YXIgdT1YKGUsXCJvcHRpb25zXCIpLHA9WChuLFwib3B0aW9uc1wiKTt1IT09cCYmdC5vcHRpb25zLnNldChwKX1KKHQsYSxyKSx0dChjLHMsdCl9LG4udW5tb3VudE9iamVjdD1mdW5jdGlvbih0LGUpe3ZhciBuPVYoZSksbz1uLmluc3RhbmNlUmVmLHI9bi5wYXJlbnQscz1uLl9ldmVudHM7bnVsbCE9PXQmJihPYmplY3Qua2V5cyhzKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3JldHVybiBIKHQsZSxzW2VdKX0pLHIuZ2VvT2JqZWN0cyYmXCJmdW5jdGlvblwiPT10eXBlb2Ygci5nZW9PYmplY3RzLnJlbW92ZT9yLmdlb09iamVjdHMucmVtb3ZlKHQpOnIucmVtb3ZlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiByLnJlbW92ZSYmci5yZW1vdmUodCksdHQobykpfSxufSh0LkNvbXBvbmVudCksITAsW1wiQ2x1c3RlcmVyXCJdKSksX3Q9VyhOKGZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXt0LmNhbGwodGhpcyksdGhpcy5zdGF0ZT17aW5zdGFuY2U6bnVsbH19cmV0dXJuIHQmJihlLl9fcHJvdG9fXz10KSwoZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPWUsZS5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQ9ZnVuY3Rpb24oKXt2YXIgdD1lLm1vdW50T2JqZWN0KHRoaXMucHJvcHMueW1hcHMuT2JqZWN0TWFuYWdlcix0aGlzLnByb3BzKTt0aGlzLnNldFN0YXRlKHtpbnN0YW5jZTp0fSl9LGUucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZT1mdW5jdGlvbih0KXtudWxsIT09dGhpcy5zdGF0ZS5pbnN0YW5jZSYmZS51cGRhdGVPYmplY3QodGhpcy5zdGF0ZS5pbnN0YW5jZSx0LHRoaXMucHJvcHMpfSxlLnByb3RvdHlwZS5jb21wb25lbnRXaWxsVW5tb3VudD1mdW5jdGlvbigpe2UudW5tb3VudE9iamVjdCh0aGlzLnN0YXRlLmluc3RhbmNlLHRoaXMucHJvcHMpfSxlLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sZS5tb3VudE9iamVjdD1mdW5jdGlvbih0LGUpe3ZhciBuPVYoZSksbz1uLmluc3RhbmNlUmVmLHI9bi5wYXJlbnQscz1uLl9ldmVudHMsaT1YKGUsXCJvcHRpb25zXCIse30pLGE9WChlLFwiZmVhdHVyZXNcIix7fSksYz1YKGUsXCJmaWx0ZXJcIixudWxsKSx1PVgoZSxcIm9iamVjdHNcIix7fSkscD1YKGUsXCJjbHVzdGVyc1wiLHt9KSxmPW5ldyB0KGkpO2lmKGYuYWRkKGF8fFtdKSxmLnNldEZpbHRlcihjKSxmLm9iamVjdHMub3B0aW9ucy5zZXQodSksZi5jbHVzdGVycy5vcHRpb25zLnNldChwKSxPYmplY3Qua2V5cyhzKS5mb3JFYWNoKGZ1bmN0aW9uKHQpe3JldHVybiBZKGYsdCxzW3RdKX0pLHIuZ2VvT2JqZWN0cyYmXCJmdW5jdGlvblwiPT10eXBlb2Ygci5nZW9PYmplY3RzLmFkZClyLmdlb09iamVjdHMuYWRkKGYpO2Vsc2V7aWYoIXIuYWRkfHxcImZ1bmN0aW9uXCIhPXR5cGVvZiByLmFkZCl0aHJvdyBuZXcgRXJyb3IoXCJObyBwYXJlbnQgZm91bmQgdG8gbW91bnQgT2JqZWN0TWFuYWdlclwiKTtyLmFkZChmKX1yZXR1cm4gdHQobnVsbCxvLGYpLGZ9LGUudXBkYXRlT2JqZWN0PWZ1bmN0aW9uKHQsZSxuKXt2YXIgbz1WKG4pLHI9by5fZXZlbnRzLHM9by5pbnN0YW5jZVJlZixpPVYoZSksYT1pLl9ldmVudHMsYz1pLmluc3RhbmNlUmVmO2lmKFEobixcIm9wdGlvbnNcIikpe3ZhciB1PVgoZSxcIm9wdGlvbnNcIikscD1YKG4sXCJvcHRpb25zXCIpO3UhPT1wJiZ0Lm9wdGlvbnMuc2V0KHApfWlmKFEobixcIm9iamVjdHNcIikpe3ZhciBmPVgoZSxcIm9iamVjdHNcIiksbD1YKG4sXCJvYmplY3RzXCIpO2YhPT1sJiZ0Lm9iamVjdHMub3B0aW9ucy5zZXQobCl9aWYoUShuLFwiY2x1c3RlcnNcIikpe3ZhciBtPVgoZSxcImNsdXN0ZXJzXCIpLGQ9WChuLFwiY2x1c3RlcnNcIik7bSE9PWQmJnQuY2x1c3RlcnMub3B0aW9ucy5zZXQoZCl9aWYoUShuLFwiZmlsdGVyXCIpKXt2YXIgeT1YKGUsXCJmaWx0ZXJcIiksaD1YKG4sXCJmaWx0ZXJcIik7eSE9PWgmJnQuc2V0RmlsdGVyKGgpfWlmKFEobixcImZlYXR1cmVzXCIpKXt2YXIgdj1YKGUsXCJmZWF0dXJlc1wiKSxiPVgobixcImZlYXR1cmVzXCIpO3YhPT1iJiYodC5yZW1vdmUodiksdC5hZGQoYikpfUoodCxhLHIpLHR0KGMscyx0KX0sZS51bm1vdW50T2JqZWN0PWZ1bmN0aW9uKHQsZSl7dmFyIG49VihlKSxvPW4uaW5zdGFuY2VSZWYscj1uLnBhcmVudCxzPW4uX2V2ZW50cztudWxsIT09dCYmKE9iamVjdC5rZXlzKHMpLmZvckVhY2goZnVuY3Rpb24oZSl7cmV0dXJuIEgodCxlLHNbZV0pfSksci5nZW9PYmplY3RzJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiByLmdlb09iamVjdHMucmVtb3ZlP3IuZ2VvT2JqZWN0cy5yZW1vdmUodCk6ci5yZW1vdmUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHIucmVtb3ZlJiZyLnJlbW92ZSh0KSx0dChvKSl9LGV9KHQuQ29tcG9uZW50KSwhMCxbXCJPYmplY3RNYW5hZ2VyXCJdKSksZ3Q9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3QuY2FsbCh0aGlzKSx0aGlzLnN0YXRlPXtpbnN0YW5jZTpudWxsfX1yZXR1cm4gdCYmKGUuX19wcm90b19fPXQpLChlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlKSkuY29uc3RydWN0b3I9ZSxlLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudD1mdW5jdGlvbigpe3ZhciB0PXRoaXMucHJvcHMsbj10Lm5hbWUsbz10LnltYXBzLHI9dC5kYW5nZXJab25lLHM9ZS5tb3VudE9iamVjdChyJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiByLm1vZGlmeUNvbnN0cnVjdG9yP3IubW9kaWZ5Q29uc3RydWN0b3Iob1tuXSk6b1tuXSx0aGlzLnByb3BzKTt0aGlzLnNldFN0YXRlKHtpbnN0YW5jZTpzfSl9LGUucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZT1mdW5jdGlvbih0KXtudWxsIT09dGhpcy5zdGF0ZS5pbnN0YW5jZSYmZS51cGRhdGVPYmplY3QodGhpcy5zdGF0ZS5pbnN0YW5jZSx0LHRoaXMucHJvcHMpfSxlLnByb3RvdHlwZS5jb21wb25lbnRXaWxsVW5tb3VudD1mdW5jdGlvbigpe2UudW5tb3VudE9iamVjdCh0aGlzLnN0YXRlLmluc3RhbmNlLHRoaXMucHJvcHMpfSxlLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sZS5tb3VudE9iamVjdD1mdW5jdGlvbih0LGUpe3ZhciBuPVYoZSksbz1uLmluc3RhbmNlUmVmLHI9bi5wYXJlbnQscz1uLl9ldmVudHMsaT1uZXcgdChYKGUsXCJnZW9tZXRyeVwiKSxYKGUsXCJwcm9wZXJ0aWVzXCIpLFgoZSxcIm9wdGlvbnNcIikpO2lmKE9iamVjdC5rZXlzKHMpLmZvckVhY2goZnVuY3Rpb24odCl7cmV0dXJuIFkoaSx0LHNbdF0pfSksciYmci5nZW9PYmplY3RzJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiByLmdlb09iamVjdHMuYWRkKXIuZ2VvT2JqZWN0cy5hZGQoaSk7ZWxzZXtpZighcnx8IXIuYWRkfHxcImZ1bmN0aW9uXCIhPXR5cGVvZiByLmFkZCl0aHJvdyBuZXcgRXJyb3IoXCJObyBwYXJlbnQgZm91bmQgdG8gbW91bnQgXCIrZS5uYW1lKTtyLmFkZChpKX1yZXR1cm4gdHQobnVsbCxvLGkpLGl9LGUudXBkYXRlT2JqZWN0PWZ1bmN0aW9uKHQsZSxuKXt2YXIgbz1WKG4pLHI9by5fZXZlbnRzLHM9by5pbnN0YW5jZVJlZixpPVYoZSksYT1pLl9ldmVudHMsYz1pLmluc3RhbmNlUmVmO2lmKFEobixcImdlb21ldHJ5XCIpKXt2YXIgdT1YKGUsXCJnZW9tZXRyeVwiLHt9KSxwPVgobixcImdlb21ldHJ5XCIse30pO0FycmF5LmlzQXJyYXkocCkmJnAhPT11P0FycmF5LmlzQXJyYXkocFswXSkmJlwibnVtYmVyXCI9PXR5cGVvZiBwWzFdPyh0Lmdlb21ldHJ5LnNldENvb3JkaW5hdGVzKHBbMF0pLHQuZ2VvbWV0cnkuc2V0UmFkaXVzKHBbMV0pKTp0Lmdlb21ldHJ5LnNldENvb3JkaW5hdGVzKHApOlwib2JqZWN0XCI9PXR5cGVvZiBwJiYocC5jb29yZGluYXRlcyE9PXUuY29vcmRpbmF0ZXMmJnQuZ2VvbWV0cnkuc2V0Q29vcmRpbmF0ZXMocC5jb29yZGluYXRlcykscC5yYWRpdXMhPT11LnJhZGl1cyYmdC5nZW9tZXRyeS5zZXRSYWRpdXMocC5yYWRpdXMpKX1pZihRKG4sXCJwcm9wZXJ0aWVzXCIpKXt2YXIgZj1YKGUsXCJwcm9wZXJ0aWVzXCIpLGw9WChuLFwicHJvcGVydGllc1wiKTtmIT09bCYmdC5wcm9wZXJ0aWVzLnNldChsKX1pZihRKG4sXCJvcHRpb25zXCIpKXt2YXIgbT1YKGUsXCJvcHRpb25zXCIpLGQ9WChuLFwib3B0aW9uc1wiKTttIT09ZCYmdC5vcHRpb25zLnNldChkKX1KKHQsYSxyKSx0dChjLHMsdCl9LGUudW5tb3VudE9iamVjdD1mdW5jdGlvbih0LGUpe3ZhciBuPVYoZSksbz1uLmluc3RhbmNlUmVmLHI9bi5wYXJlbnQscz1uLl9ldmVudHM7bnVsbCE9PXQmJihPYmplY3Qua2V5cyhzKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3JldHVybiBIKHQsZSxzW2VdKX0pLHIuZ2VvT2JqZWN0cyYmXCJmdW5jdGlvblwiPT10eXBlb2Ygci5nZW9PYmplY3RzLnJlbW92ZT9yLmdlb09iamVjdHMucmVtb3ZlKHQpOnIucmVtb3ZlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiByLnJlbW92ZSYmci5yZW1vdmUodCksdHQobykpfSxlfSh0LkNvbXBvbmVudCksRXQ9e21vZGlmeUNvbnN0cnVjdG9yOmZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSxuLG8pe3QuY2FsbCh0aGlzLHtnZW9tZXRyeTplLHByb3BlcnRpZXM6bn0sbyl9cmV0dXJuIGUucHJvdG90eXBlPXQucHJvdG90eXBlLGV9fSxDdD1XKE4oZnVuY3Rpb24oZSl7cmV0dXJuIHQuY3JlYXRlRWxlbWVudChndCxPYmplY3QuYXNzaWduKHt9LGUse25hbWU6XCJHZW9PYmplY3RcIixkYW5nZXJab25lOkV0fSkpfSwhMCxbXCJHZW9PYmplY3RcIl0pKSx3dD1XKE4oZnVuY3Rpb24oZSl7cmV0dXJuIHQuY3JlYXRlRWxlbWVudChndCxPYmplY3QuYXNzaWduKHt9LGUse25hbWU6XCJDaXJjbGVcIn0pKX0sITAsW1wiQ2lyY2xlXCJdKSksUHQ9VyhOKGZ1bmN0aW9uKGUpe3JldHVybiB0LmNyZWF0ZUVsZW1lbnQoZ3QsT2JqZWN0LmFzc2lnbih7fSxlLHtuYW1lOlwiUGxhY2VtYXJrXCJ9KSl9LCEwLFtcIlBsYWNlbWFya1wiXSkpLFJ0PVcoTihmdW5jdGlvbihlKXtyZXR1cm4gdC5jcmVhdGVFbGVtZW50KGd0LE9iamVjdC5hc3NpZ24oe30sZSx7bmFtZTpcIlBvbHlnb25cIn0pKX0sITAsW1wiUG9seWdvblwiXSkpLFN0PVcoTihmdW5jdGlvbihlKXtyZXR1cm4gdC5jcmVhdGVFbGVtZW50KGd0LE9iamVjdC5hc3NpZ24oe30sZSx7bmFtZTpcIlBvbHlsaW5lXCJ9KSl9LCEwLFtcIlBvbHlsaW5lXCJdKSksTXQ9VyhOKGZ1bmN0aW9uKGUpe3JldHVybiB0LmNyZWF0ZUVsZW1lbnQoZ3QsT2JqZWN0LmFzc2lnbih7fSxlLHtuYW1lOlwiUmVjdGFuZ2xlXCJ9KSl9LCEwLFtcIlJlY3RhbmdsZVwiXSkpO2V4cG9ydHtOIGFzIHdpdGhZTWFwcyxaIGFzIFlNYXBzLG90IGFzIE1hcCxzdCBhcyBQYW5vcmFtYSxhdCBhcyBCdXR0b24sY3QgYXMgRnVsbHNjcmVlbkNvbnRyb2wsdXQgYXMgR2VvbG9jYXRpb25Db250cm9sLHB0IGFzIExpc3RCb3gsZnQgYXMgTGlzdEJveEl0ZW0sbHQgYXMgUm91dGVCdXR0b24sbXQgYXMgUm91dGVFZGl0b3IsZHQgYXMgUm91dGVQYW5lbCx5dCBhcyBSdWxlckNvbnRyb2wsaHQgYXMgU2VhcmNoQ29udHJvbCx2dCBhcyBUcmFmZmljQ29udHJvbCxidCBhcyBUeXBlU2VsZWN0b3IsanQgYXMgWm9vbUNvbnRyb2wsT3QgYXMgQ2x1c3RlcmVyLF90IGFzIE9iamVjdE1hbmFnZXIsQ3QgYXMgR2VvT2JqZWN0LHd0IGFzIENpcmNsZSxQdCBhcyBQbGFjZW1hcmssUnQgYXMgUG9seWdvbixTdCBhcyBQb2x5bGluZSxNdCBhcyBSZWN0YW5nbGV9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVhY3QteWFuZGV4LW1hcHMuZXNtLmpzLm1hcFxuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi9zdHlsZXMuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0udXNlWzFdIS4vc3R5bGVzLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgeyBZTWFwcywgTWFwLCBQbGFjZW1hcmsgfSBmcm9tICdyZWFjdC15YW5kZXgtbWFwcydcclxuaW1wb3J0IFJlcXVlc3RTbXMgZnJvbSAnLi4vLi4vQ29tcG9uZW50cy9SZXF1ZXN0U21zJ1xyXG5pbXBvcnQgTW9kYWwgZnJvbSAnLi4vLi4vQ29tcG9uZW50cy9Nb2RhbCdcclxuaW1wb3J0IFNsaWRlciBmcm9tICcuLi8uLi9Db21wb25lbnRzL1NsaWRlcidcclxuaW1wb3J0IEJ1dHRvbiBmcm9tICcuLi8uLi9Db21wb25lbnRzL0J1dHRvbidcclxuaW1wb3J0IHNsaWRlcjFJbWFnZSBmcm9tICcuLi8uLi9pbWFnZXMvc2xpZGVyMS5wbmcnXHJcbmltcG9ydCBzbGlkZXIySW1hZ2UgZnJvbSAnLi4vLi4vaW1hZ2VzL3NsaWRlcjIucG5nJ1xyXG5pbXBvcnQgc2xpZGVyM0ltYWdlIGZyb20gJy4uLy4uL2ltYWdlcy9zbGlkZXIzLnBuZydcclxuaW1wb3J0IHNsaWRlcjRJbWFnZSBmcm9tICcuLi8uLi9pbWFnZXMvc2xpZGVyNC5wbmcnXHJcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9zdHlsZXMuY3NzJ1xyXG5cclxuY29uc3QgQ29udGFjdHNQYWdlID0gKCkgPT4ge1xyXG4gICAgY29uc3QgW2lzTW9kYWxSZXF1ZXN0U21zQWN0aXZlLCBzZXRJc01vZGFsUmVxdWVzdFNtc0FjdGl2ZV0gPSB1c2VTdGF0ZShmYWxzZSlcclxuICAgIGNvbnN0IFtpc01vZGFsVmFsaWRhdGlvbkZhbHNlQWN0aXZlLCBzZXRJc01vZGFsVmFsaWRhdGlvbkZhbHNlQWN0aXZlXSA9IHVzZVN0YXRlKGZhbHNlKVxyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLm1haW5QYWdlfT5cclxuICAgICAgICAgICAgPFNsaWRlciBtZW51SXRlbXM9e1tzbGlkZXIxSW1hZ2UsIHNsaWRlcjJJbWFnZSwgc2xpZGVyM0ltYWdlLCBzbGlkZXI0SW1hZ2VdfSAvPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmhlYWRlclRleHR9IGlkPSd0aXRsZVRleHQnPlxyXG4gICAgICAgICAgICAgICAg0JrQvtC90YLQsNC60YLRi1xyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5jb250YWN0c0ZpZWxkc30+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLnRleHRGaWVsZH0+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5zbWFsbEhlYWRlclRleHR9PtCe0J7QniDCq9Ca0L7QvdGB0YPQu9GM0YLQsNGC0LjQstC90L4t0LTQuNCw0LPQvdC+0YHRgtC40YfQtdGB0LrQsNGPINC/0L7Qu9C40LrQu9C40L3QuNC60LDCuzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuZGlzY3JpcHRpb25UZXh0fT7QmNCd0J06IDYzMzAwMjg2MDM8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmRpc2NyaXB0aW9uVGV4dH0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgINCQ0LTRgNC10YE6IDQ0NjEwMCwg0KDQvtGB0YHQuNGPLCDQodCw0LzQsNGA0YHQutCw0Y8g0L7QsdC70LDRgdGC0YwsINCzLiDQp9Cw0L/QsNC10LLRgdC6LCDRg9C7LiDQktCw0YLRg9GC0LjQvdCwIDExXHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5kaXNjcmlwdGlvblRleHR9PtCg0LXQttC40Lwg0YDQsNCx0L7RgtGLOiDQv9C9LdC/0YIg0YEgODowMCDQtNC+IDE5OjAwPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5kaXNjcmlwdGlvblRleHR9PtCQ0LTRgNC10YE6INCh0LDQvNCw0YDRgdC60LDRjyDQvtCx0LvQsNGB0YLRjCwg0L8u0LMu0YIuINCR0LXQt9C10L3Rh9GD0LosINGD0LsuINCh0L7QstC10YLRgdC60LDRjyA1NjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuZGlzY3JpcHRpb25UZXh0fT7QoNC10LbQuNC8INGA0LDQsdC+0YLRizog0L/QvS3Qv9GCINGBIDg6MDAg0LTQviAxOTowMCwg0YHQsSDRgSA4LTAwINC00L4gMTctMDA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmRpc2NyaXB0aW9uVGV4dH0+0JrQvtC90YLQsNC60YLQvdGL0Lkg0YLQtdC70LXRhNC+0L06PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5kaXNjcmlwdGlvblRleHR9PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICDQotC10YDRgNC40YLQvtGA0LjQsNC70YzQvdGL0Lkg0L7RgNCz0LDQvSDQpNC10LTQtdGA0LDQu9GM0L3QvtC5INGB0LvRg9C20LHRiyDQv9C+INC90LDQtNC30L7RgNGDINCyINGB0YTQtdGA0LUg0LfQtNGA0LDQstC+0L7RhdGA0LDQvdC10L3QuNGPINC4INCx0LvQsNCz0L7Qv9C+0LvRg9GH0LjRjyDRh9C10LvQvtCy0LXQutCwOlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuZGlzY3JpcHRpb25UZXh0fT7QodCw0LzQsNGA0YHQutCw0Y8g0L7QsdC7LtCzLiDQp9Cw0L/QsNC10LLRgdC6LNGD0LsuINCb0LXQvdC40L3QsCA5NSzRgi44LSg4NDYpLTM5LTMwNS0yOTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuYmxvY2tCdXR0b259PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIHRleHRCdXR0b249eyfQndCw0L/QuNGB0LDRgtGMINC90LDQvCd9IGhhbmRsZXI9eygpID0+IHNldElzTW9kYWxSZXF1ZXN0U21zQWN0aXZlKHRydWUpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLm1hcEZpZWxkfT5cclxuICAgICAgICAgICAgICAgICAgICA8WU1hcHM+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxNYXAgc3RhdGU9e3sgY2VudGVyOiBbNTIuOTUyNTM5MTY2NjAzOTUsIDQ5LjY5MDQ1MzQ5OTk5OTk5XSwgem9vbTogMTYgfX0gd2lkdGg9ezMwMH0gaGVpZ2h0PXs0NTB9PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPFBsYWNlbWFyayBnZW9tZXRyeT17WzUyLjk1MjUzOTE2NjYwMzk1LCA0OS42OTA0NTM0OTk5OTk5OV19IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSdibG9ja0luTWFwJz48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9NYXA+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9ZTWFwcz5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPE1vZGFsIGlzQWN0aXZlPXtpc01vZGFsUmVxdWVzdFNtc0FjdGl2ZX0gc2V0QWN0aXZlPXtzZXRJc01vZGFsUmVxdWVzdFNtc0FjdGl2ZX0gaXNDbG9zYWJsZT17ZmFsc2V9PlxyXG4gICAgICAgICAgICAgICAgPFJlcXVlc3RTbXNcclxuICAgICAgICAgICAgICAgICAgICBzZXRJc01vZGFsQWN0aXZlPXtzZXRJc01vZGFsUmVxdWVzdFNtc0FjdGl2ZX1cclxuICAgICAgICAgICAgICAgICAgICBzZXRJc01vZGFsVmFsaWRhdGlvbkZhbHNlQWN0aXZlPXtzZXRJc01vZGFsVmFsaWRhdGlvbkZhbHNlQWN0aXZlfVxyXG4gICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPC9Nb2RhbD5cclxuICAgICAgICAgICAgPE1vZGFsIGlzQWN0aXZlPXtpc01vZGFsVmFsaWRhdGlvbkZhbHNlQWN0aXZlfSBzZXRBY3RpdmU9e3NldElzTW9kYWxWYWxpZGF0aW9uRmFsc2VBY3RpdmV9IGlzQ2xvc2FibGU9e2ZhbHNlfT5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMucmVxdWVzdENvbnRhaW5lcn0+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5vcmRlckl0ZW19PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmJsb2NrSGVhZGVyVGV4dH0+0J7RiNC40LHQutCwPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5ibG9ja1RleHR9PtCd0LXQutC+0YDRgNC10LrRgtC90YvQuSDQstCy0L7QtCDQtNCw0L3QvdGL0YU8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLnJlcXVlc3RCdXR0b25zQ29udGFpbmVyfT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiB0ZXh0QnV0dG9uPSfQl9Cw0LrRgNGL0YLRjCcgaGFuZGxlcj17KCkgPT4gc2V0SXNNb2RhbFZhbGlkYXRpb25GYWxzZUFjdGl2ZShmYWxzZSl9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9Nb2RhbD5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIClcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ29udGFjdHNQYWdlXHJcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0udXNlWzFdIS4vc3R5bGVzLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVsxXSEuL3N0eWxlcy5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXHJcbmltcG9ydCB7IFJvdXRlcywgUm91dGUgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJ1xyXG5pbXBvcnQgTWFpblBhZ2UgZnJvbSAnLi4vLi4vUGFnZXMvTWFpblBhZ2UnXHJcbmltcG9ydCBTcGVjaWFsaXN0c1BhZ2UgZnJvbSAnLi4vLi4vUGFnZXMvU3BlY2lhbGlzdHNQYWdlJ1xyXG5pbXBvcnQgU2VydmljZXNQYWdlIGZyb20gJy4uLy4uL1BhZ2VzL1NlcnZpY2VzUGFnZSdcclxuaW1wb3J0IFByZXZpZXdzUGFnZSBmcm9tICcuLi8uLi9QYWdlcy9QcmV2aWV3c1BhZ2UnXHJcbmltcG9ydCBDb250YWN0c1BhZ2UgZnJvbSAnLi4vLi4vUGFnZXMvQ29udGFjdHNQYWdlJ1xyXG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vc3R5bGVzLmNzcydcclxuXHJcbmNvbnN0IE1haW4gPSAoKSA9PiB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMubWFpbn0+XHJcbiAgICAgICAgICAgIDxSb3V0ZXM+XHJcbiAgICAgICAgICAgICAgICA8Um91dGUgcGF0aD0nLycgZWxlbWVudD17PE1haW5QYWdlIC8+fSAvPlxyXG4gICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9Jy9zcGVjaWFsaXN0cycgZWxlbWVudD17PFNwZWNpYWxpc3RzUGFnZSAvPn0gLz5cclxuICAgICAgICAgICAgICAgIDxSb3V0ZSBwYXRoPScvc2VydmljZXMnIGVsZW1lbnQ9ezxTZXJ2aWNlc1BhZ2UgLz59IC8+XHJcbiAgICAgICAgICAgICAgICA8Um91dGUgcGF0aD0nL3ByZXZpZXdzJyBlbGVtZW50PXs8UHJldmlld3NQYWdlIC8+fSAvPlxyXG4gICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9Jy9jb250YWN0cycgZWxlbWVudD17PENvbnRhY3RzUGFnZSAvPn0gLz5cclxuICAgICAgICAgICAgPC9Sb3V0ZXM+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICApXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IE1haW5cclxuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi9zdHlsZXMuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0udXNlWzFdIS4vc3R5bGVzLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcclxuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nXHJcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9zdHlsZXMuY3NzJ1xyXG5pbXBvcnQgbG9jYXRpb25JbWFnZSBmcm9tICcuLi8uLi9pbWFnZXMvbG9jYXRpb24ucG5nJ1xyXG5pbXBvcnQgdGltZUltYWdlIGZyb20gJy4uLy4uL2ltYWdlcy90aW1lLnBuZydcclxuaW1wb3J0IGVtYWlsSW1hZ2UgZnJvbSAnLi4vLi4vaW1hZ2VzL2VtYWlsLnBuZydcclxuY29uc3QgRm9vdGVyID0gKCkgPT4ge1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmZvb3Rlcn0+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLm1lbnVGb290ZXJ9PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuYmxvY2tNZW51fT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPExpbmsgY2xhc3NOYW1lPXtzdHlsZXMubWVudUl0ZW19IHRvPScvJz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgINCT0LvQsNCy0L3QsNGPXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvTGluaz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPExpbmsgY2xhc3NOYW1lPXtzdHlsZXMubWVudUl0ZW19IHRvPScvc3BlY2lhbGlzdHMnPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAg0KHQv9C10YbQuNCw0LvQuNGB0YLRi1xyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxMaW5rIGNsYXNzTmFtZT17c3R5bGVzLm1lbnVJdGVtfSB0bz0nL3NlcnZpY2VzJz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgINCj0YHQu9GD0LPQuFxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5ibG9ja01lbnV9PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8TGluayBjbGFzc05hbWU9e3N0eWxlcy5tZW51SXRlbX0gdG89Jy9wcmV2aWV3cyc+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICDQn9GA0L7RhNC+0YHQvNC+0YLRgNGLXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvTGluaz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPExpbmsgY2xhc3NOYW1lPXtzdHlsZXMubWVudUl0ZW19IHRvPScvY29udGFjdHMnPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAg0JrQvtC90YLQsNC60YLRi1xyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuYmxvY2tJbmZvfT5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmluZm9GaWVsZH0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3NOYW1lPXtzdHlsZXMuaW1hZ2VJbmZvQ29udGFjdHN9IHNyYz17bG9jYXRpb25JbWFnZX0gLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAg0KfQsNC/0LDQtdCy0YHQuizQkdC10LfQtdC90YfRg9C6XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5pbmZvRmllbGR9PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzTmFtZT17c3R5bGVzLmltYWdlSW5mb0NvbnRhY3RzfSBzcmM9e3RpbWVJbWFnZX0gLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAg0KDQtdC20LjQvCDRgNCw0LHQvtGC0Ys6INC/0L0t0L/RgiDRgSA4OjAwINC00L4gMTk6MDAsINGB0LEg0YEgOC0wMCDQtNC+IDE3LTAwXHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5pbmZvRmllbGR9PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzTmFtZT17c3R5bGVzLmltYWdlSW5mb0NvbnRhY3RzfSBzcmM9e2VtYWlsSW1hZ2V9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGtkX3AwOUBtYWlsLnJ1XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuZG93bkJsb2NrRm9vdGVyfT5cclxuICAgICAgICAgICAgICAgIDxMaW5rIGNsYXNzTmFtZT17c3R5bGVzLmRvd25UZXh0fSB0bz0nLyc+XHJcbiAgICAgICAgICAgICAgICAgICAgwqkg0J7QntCeIMKr0JrQvtC90YHRg9C70YzRgtCw0YLQuNCy0L3Qvi3QtNC40LDQs9C90L7RgdGC0LjRh9C10YHQutCw0Y8g0L/QvtC70LjQutC70LjQvdC40LrQsMK7XHJcbiAgICAgICAgICAgICAgICA8L0xpbms+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvPlxyXG4gICAgKVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBGb290ZXJcclxuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi9zdHlsZXMuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0udXNlWzFdIS4vc3R5bGVzLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcclxuaW1wb3J0IEhlYWRlciBmcm9tICcuL0hlYWRlcidcclxuaW1wb3J0IE1haW4gZnJvbSAnLi9NYWluJ1xyXG5pbXBvcnQgRm9vdGVyIGZyb20gJy4vRm9vdGVyJ1xyXG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vc3R5bGVzLmNzcydcclxuY29uc3QgQXBwID0gKCkgPT4ge1xyXG4gICAgY29uc3QgaXNNb2JpbGUgPSBzY3JlZW4ud2lkdGggPCA1MDBcclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5hcHB9PlxyXG4gICAgICAgICAgICA8SGVhZGVyIGlzTW9iaWxlPXtpc01vYmlsZX0gLz5cclxuICAgICAgICAgICAgPE1haW4gLz5cclxuICAgICAgICAgICAgPEZvb3RlciAvPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgKVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBBcHBcclxuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJ1xyXG5pbXBvcnQgeyBIYXNoUm91dGVyIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSdcclxuaW1wb3J0IEFwcCBmcm9tICcuL0FwcCdcclxuXHJcbmNvbnN0IENvbmZpZ3VyZWRBcHAgPSAoKSA9PiAoXHJcbiAgICA8SGFzaFJvdXRlcj5cclxuICAgICAgICA8QXBwIC8+XHJcbiAgICA8L0hhc2hSb3V0ZXI+XHJcbilcclxuUmVhY3RET00ucmVuZGVyKDxDb25maWd1cmVkQXBwIC8+LCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncm9vdCcpKVxyXG4iXSwibmFtZXMiOlsiX3R5cGVvZiIsIl9yZWdlbmVyYXRvclJ1bnRpbWUiLCJtb2R1bGUiLCJleHBvcnRzIiwiX19lc01vZHVsZSIsIk9wIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duIiwiaGFzT3duUHJvcGVydHkiLCIkU3ltYm9sIiwiU3ltYm9sIiwiaXRlcmF0b3JTeW1ib2wiLCJpdGVyYXRvciIsImFzeW5jSXRlcmF0b3JTeW1ib2wiLCJhc3luY0l0ZXJhdG9yIiwidG9TdHJpbmdUYWdTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsImRlZmluZSIsIm9iaiIsImtleSIsInZhbHVlIiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJlcnIiLCJ3cmFwIiwiaW5uZXJGbiIsIm91dGVyRm4iLCJzZWxmIiwidHJ5TG9jc0xpc3QiLCJwcm90b0dlbmVyYXRvciIsIkdlbmVyYXRvciIsImdlbmVyYXRvciIsImNyZWF0ZSIsImNvbnRleHQiLCJDb250ZXh0IiwiX2ludm9rZSIsInN0YXRlIiwibWV0aG9kIiwiYXJnIiwiRXJyb3IiLCJ1bmRlZmluZWQiLCJkb25lIiwiZGVsZWdhdGUiLCJkZWxlZ2F0ZVJlc3VsdCIsIm1heWJlSW52b2tlRGVsZWdhdGUiLCJDb250aW51ZVNlbnRpbmVsIiwic2VudCIsIl9zZW50IiwiZGlzcGF0Y2hFeGNlcHRpb24iLCJhYnJ1cHQiLCJyZWNvcmQiLCJ0cnlDYXRjaCIsInR5cGUiLCJmbiIsImNhbGwiLCJHZW5lcmF0b3JGdW5jdGlvbiIsIkdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlIiwiSXRlcmF0b3JQcm90b3R5cGUiLCJ0aGlzIiwiZ2V0UHJvdG8iLCJnZXRQcm90b3R5cGVPZiIsIk5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlIiwidmFsdWVzIiwiR3AiLCJkZWZpbmVJdGVyYXRvck1ldGhvZHMiLCJmb3JFYWNoIiwiQXN5bmNJdGVyYXRvciIsIlByb21pc2VJbXBsIiwiaW52b2tlIiwicmVzb2x2ZSIsInJlamVjdCIsInJlc3VsdCIsIl9fYXdhaXQiLCJ0aGVuIiwidW53cmFwcGVkIiwiZXJyb3IiLCJwcmV2aW91c1Byb21pc2UiLCJjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZyIsIlR5cGVFcnJvciIsImluZm8iLCJyZXN1bHROYW1lIiwibmV4dCIsIm5leHRMb2MiLCJwdXNoVHJ5RW50cnkiLCJsb2NzIiwiZW50cnkiLCJ0cnlMb2MiLCJjYXRjaExvYyIsImZpbmFsbHlMb2MiLCJhZnRlckxvYyIsInRyeUVudHJpZXMiLCJwdXNoIiwicmVzZXRUcnlFbnRyeSIsImNvbXBsZXRpb24iLCJyZXNldCIsIml0ZXJhYmxlIiwiaXRlcmF0b3JNZXRob2QiLCJpc05hTiIsImxlbmd0aCIsImkiLCJkb25lUmVzdWx0IiwiZGlzcGxheU5hbWUiLCJpc0dlbmVyYXRvckZ1bmN0aW9uIiwiZ2VuRnVuIiwiY3RvciIsImNvbnN0cnVjdG9yIiwibmFtZSIsIm1hcmsiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsImF3cmFwIiwiYXN5bmMiLCJQcm9taXNlIiwiaXRlciIsImtleXMiLCJvYmplY3QiLCJyZXZlcnNlIiwicG9wIiwic2tpcFRlbXBSZXNldCIsInByZXYiLCJjaGFyQXQiLCJzbGljZSIsInN0b3AiLCJyb290UmVjb3JkIiwicnZhbCIsImV4Y2VwdGlvbiIsImhhbmRsZSIsImxvYyIsImNhdWdodCIsImhhc0NhdGNoIiwiaGFzRmluYWxseSIsImZpbmFsbHlFbnRyeSIsImNvbXBsZXRlIiwiZmluaXNoIiwidGhyb3duIiwiZGVsZWdhdGVZaWVsZCIsInJ1bnRpbWUiLCJyZWdlbmVyYXRvclJ1bnRpbWUiLCJhY2NpZGVudGFsU3RyaWN0TW9kZSIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInV0aWxzIiwic2V0dGxlIiwiY29va2llcyIsImJ1aWxkVVJMIiwiYnVpbGRGdWxsUGF0aCIsInBhcnNlSGVhZGVycyIsImlzVVJMU2FtZU9yaWdpbiIsImNyZWF0ZUVycm9yIiwidHJhbnNpdGlvbmFsRGVmYXVsdHMiLCJDYW5jZWwiLCJjb25maWciLCJvbkNhbmNlbGVkIiwicmVxdWVzdERhdGEiLCJkYXRhIiwicmVxdWVzdEhlYWRlcnMiLCJoZWFkZXJzIiwicmVzcG9uc2VUeXBlIiwiY2FuY2VsVG9rZW4iLCJ1bnN1YnNjcmliZSIsInNpZ25hbCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJpc0Zvcm1EYXRhIiwicmVxdWVzdCIsIlhNTEh0dHBSZXF1ZXN0IiwiYXV0aCIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkF1dGhvcml6YXRpb24iLCJidG9hIiwiZnVsbFBhdGgiLCJiYXNlVVJMIiwidXJsIiwib25sb2FkZW5kIiwicmVzcG9uc2VIZWFkZXJzIiwiZ2V0QWxsUmVzcG9uc2VIZWFkZXJzIiwicmVzcG9uc2UiLCJyZXNwb25zZVRleHQiLCJzdGF0dXMiLCJzdGF0dXNUZXh0Iiwib3BlbiIsInRvVXBwZXJDYXNlIiwicGFyYW1zIiwicGFyYW1zU2VyaWFsaXplciIsInRpbWVvdXQiLCJvbnJlYWR5c3RhdGVjaGFuZ2UiLCJyZWFkeVN0YXRlIiwicmVzcG9uc2VVUkwiLCJpbmRleE9mIiwic2V0VGltZW91dCIsIm9uYWJvcnQiLCJvbmVycm9yIiwib250aW1lb3V0IiwidGltZW91dEVycm9yTWVzc2FnZSIsInRyYW5zaXRpb25hbCIsImNsYXJpZnlUaW1lb3V0RXJyb3IiLCJpc1N0YW5kYXJkQnJvd3NlckVudiIsInhzcmZWYWx1ZSIsIndpdGhDcmVkZW50aWFscyIsInhzcmZDb29raWVOYW1lIiwicmVhZCIsInhzcmZIZWFkZXJOYW1lIiwidmFsIiwidG9Mb3dlckNhc2UiLCJzZXRSZXF1ZXN0SGVhZGVyIiwiaXNVbmRlZmluZWQiLCJvbkRvd25sb2FkUHJvZ3Jlc3MiLCJhZGRFdmVudExpc3RlbmVyIiwib25VcGxvYWRQcm9ncmVzcyIsInVwbG9hZCIsImNhbmNlbCIsImFib3J0Iiwic3Vic2NyaWJlIiwiYWJvcnRlZCIsInNlbmQiLCJiaW5kIiwiQXhpb3MiLCJtZXJnZUNvbmZpZyIsImF4aW9zIiwiY3JlYXRlSW5zdGFuY2UiLCJkZWZhdWx0Q29uZmlnIiwiaW5zdGFuY2UiLCJleHRlbmQiLCJpbnN0YW5jZUNvbmZpZyIsIkNhbmNlbFRva2VuIiwiaXNDYW5jZWwiLCJWRVJTSU9OIiwiYWxsIiwicHJvbWlzZXMiLCJzcHJlYWQiLCJpc0F4aW9zRXJyb3IiLCJtZXNzYWdlIiwidG9TdHJpbmciLCJfX0NBTkNFTF9fIiwiZXhlY3V0b3IiLCJyZXNvbHZlUHJvbWlzZSIsInByb21pc2UiLCJ0b2tlbiIsIl9saXN0ZW5lcnMiLCJsIiwib25mdWxmaWxsZWQiLCJfcmVzb2x2ZSIsInJlYXNvbiIsInRocm93SWZSZXF1ZXN0ZWQiLCJsaXN0ZW5lciIsImluZGV4Iiwic3BsaWNlIiwic291cmNlIiwiYyIsIkludGVyY2VwdG9yTWFuYWdlciIsImRpc3BhdGNoUmVxdWVzdCIsInZhbGlkYXRvciIsInZhbGlkYXRvcnMiLCJkZWZhdWx0cyIsImludGVyY2VwdG9ycyIsImNvbmZpZ09yVXJsIiwiYXNzZXJ0T3B0aW9ucyIsInNpbGVudEpTT05QYXJzaW5nIiwiYm9vbGVhbiIsImZvcmNlZEpTT05QYXJzaW5nIiwicmVxdWVzdEludGVyY2VwdG9yQ2hhaW4iLCJzeW5jaHJvbm91c1JlcXVlc3RJbnRlcmNlcHRvcnMiLCJpbnRlcmNlcHRvciIsInJ1bldoZW4iLCJzeW5jaHJvbm91cyIsInVuc2hpZnQiLCJmdWxmaWxsZWQiLCJyZWplY3RlZCIsInJlc3BvbnNlSW50ZXJjZXB0b3JDaGFpbiIsImNoYWluIiwiQXJyYXkiLCJhcHBseSIsImNvbmNhdCIsInNoaWZ0IiwibmV3Q29uZmlnIiwib25GdWxmaWxsZWQiLCJvblJlamVjdGVkIiwiZ2V0VXJpIiwicmVwbGFjZSIsImhhbmRsZXJzIiwidXNlIiwib3B0aW9ucyIsImVqZWN0IiwiaWQiLCJoIiwiaXNBYnNvbHV0ZVVSTCIsImNvbWJpbmVVUkxzIiwicmVxdWVzdGVkVVJMIiwiZW5oYW5jZUVycm9yIiwiY29kZSIsInRyYW5zZm9ybURhdGEiLCJ0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkIiwidHJhbnNmb3JtUmVxdWVzdCIsIm1lcmdlIiwiY29tbW9uIiwiYWRhcHRlciIsInRyYW5zZm9ybVJlc3BvbnNlIiwidG9KU09OIiwiZGVzY3JpcHRpb24iLCJudW1iZXIiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJjb2x1bW5OdW1iZXIiLCJzdGFjayIsImNvbmZpZzEiLCJjb25maWcyIiwiZ2V0TWVyZ2VkVmFsdWUiLCJ0YXJnZXQiLCJpc1BsYWluT2JqZWN0IiwiaXNBcnJheSIsIm1lcmdlRGVlcFByb3BlcnRpZXMiLCJwcm9wIiwidmFsdWVGcm9tQ29uZmlnMiIsImRlZmF1bHRUb0NvbmZpZzIiLCJtZXJnZURpcmVjdEtleXMiLCJtZXJnZU1hcCIsImNvbmZpZ1ZhbHVlIiwidmFsaWRhdGVTdGF0dXMiLCJmbnMiLCJub3JtYWxpemVIZWFkZXJOYW1lIiwiREVGQVVMVF9DT05URU5UX1RZUEUiLCJzZXRDb250ZW50VHlwZUlmVW5zZXQiLCJwcm9jZXNzIiwiaXNBcnJheUJ1ZmZlciIsImlzQnVmZmVyIiwiaXNTdHJlYW0iLCJpc0ZpbGUiLCJpc0Jsb2IiLCJpc0FycmF5QnVmZmVyVmlldyIsImJ1ZmZlciIsImlzVVJMU2VhcmNoUGFyYW1zIiwiaXNPYmplY3QiLCJyYXdWYWx1ZSIsInBhcnNlciIsImVuY29kZXIiLCJpc1N0cmluZyIsIkpTT04iLCJwYXJzZSIsInRyaW0iLCJlIiwic3RyaW5naWZ5Iiwic3RyaW5naWZ5U2FmZWx5Iiwic3RyaWN0SlNPTlBhcnNpbmciLCJtYXhDb250ZW50TGVuZ3RoIiwibWF4Qm9keUxlbmd0aCIsInRoaXNBcmciLCJhcmdzIiwiYXJndW1lbnRzIiwiZW5jb2RlIiwic2VyaWFsaXplZFBhcmFtcyIsInBhcnRzIiwidiIsImlzRGF0ZSIsInRvSVNPU3RyaW5nIiwiam9pbiIsImhhc2htYXJrSW5kZXgiLCJyZWxhdGl2ZVVSTCIsIndyaXRlIiwiZXhwaXJlcyIsInBhdGgiLCJkb21haW4iLCJzZWN1cmUiLCJjb29raWUiLCJpc051bWJlciIsIkRhdGUiLCJ0b0dNVFN0cmluZyIsImRvY3VtZW50IiwibWF0Y2giLCJSZWdFeHAiLCJkZWNvZGVVUklDb21wb25lbnQiLCJyZW1vdmUiLCJub3ciLCJ0ZXN0IiwicGF5bG9hZCIsIm9yaWdpblVSTCIsIm1zaWUiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJ1cmxQYXJzaW5nTm9kZSIsImNyZWF0ZUVsZW1lbnQiLCJyZXNvbHZlVVJMIiwiaHJlZiIsInNldEF0dHJpYnV0ZSIsInByb3RvY29sIiwiaG9zdCIsInNlYXJjaCIsImhhc2giLCJob3N0bmFtZSIsInBvcnQiLCJwYXRobmFtZSIsIndpbmRvdyIsImxvY2F0aW9uIiwicmVxdWVzdFVSTCIsInBhcnNlZCIsIm5vcm1hbGl6ZWROYW1lIiwiaWdub3JlRHVwbGljYXRlT2YiLCJzcGxpdCIsImxpbmUiLCJzdWJzdHIiLCJjYWxsYmFjayIsImFyciIsInRoaW5nIiwiZGVwcmVjYXRlZFdhcm5pbmdzIiwidmVyc2lvbiIsImZvcm1hdE1lc3NhZ2UiLCJvcHQiLCJkZXNjIiwib3B0cyIsImNvbnNvbGUiLCJ3YXJuIiwic2NoZW1hIiwiYWxsb3dVbmtub3duIiwiaXNGdW5jdGlvbiIsIkFycmF5QnVmZmVyIiwiaXNWaWV3IiwicGlwZSIsInByb2R1Y3QiLCJhc3NpZ25WYWx1ZSIsImEiLCJiIiwic3RyIiwic3RyaXBCT00iLCJjb250ZW50IiwiY2hhckNvZGVBdCIsIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwibG9jYWxzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJtYXAiLCJpdGVtIiwibmVlZExheWVyIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYmFzZTY0Iiwic291cmNlTWFwcGluZyIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlUm9vdCIsImdldE93blByb3BlcnR5U3ltYm9scyIsInByb3BJc0VudW1lcmFibGUiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsInRvT2JqZWN0IiwiYXNzaWduIiwidGVzdDEiLCJTdHJpbmciLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwidGVzdDIiLCJmcm9tQ2hhckNvZGUiLCJuIiwidGVzdDMiLCJsZXR0ZXIiLCJzaG91bGRVc2VOYXRpdmUiLCJmcm9tIiwic3ltYm9scyIsInRvIiwicyIsIlJlYWN0UHJvcFR5cGVzU2VjcmV0IiwiZW1wdHlGdW5jdGlvbiIsImVtcHR5RnVuY3Rpb25XaXRoUmVzZXQiLCJyZXNldFdhcm5pbmdDYWNoZSIsInNoaW0iLCJwcm9wcyIsInByb3BOYW1lIiwiY29tcG9uZW50TmFtZSIsInByb3BGdWxsTmFtZSIsInNlY3JldCIsImdldFNoaW0iLCJpc1JlcXVpcmVkIiwiUmVhY3RQcm9wVHlwZXMiLCJhcnJheSIsImJpZ2ludCIsImJvb2wiLCJmdW5jIiwic3RyaW5nIiwic3ltYm9sIiwiYW55IiwiYXJyYXlPZiIsImVsZW1lbnQiLCJlbGVtZW50VHlwZSIsImluc3RhbmNlT2YiLCJub2RlIiwib2JqZWN0T2YiLCJvbmVPZiIsIm9uZU9mVHlwZSIsInNoYXBlIiwiZXhhY3QiLCJjaGVja1Byb3BUeXBlcyIsIlByb3BUeXBlcyIsImFhIiwibSIsInIiLCJ5IiwiYmEiLCJTZXQiLCJjYSIsImRhIiwiZWEiLCJhZGQiLCJmYSIsImhhIiwiaWEiLCJqYSIsImthIiwiQiIsImQiLCJmIiwiZyIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJzYW5pdGl6ZVVSTCIsInJlbW92ZUVtcHR5U3RyaW5nIiwiRCIsIm9hIiwicGEiLCJxYSIsIm1hIiwibmEiLCJsYSIsInJlbW92ZUF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZU5TIiwieGxpbmtIcmVmIiwicmEiLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsInNhIiwidGEiLCJ1YSIsIndhIiwieGEiLCJ5YSIsInphIiwiQWEiLCJCYSIsIkNhIiwiRGEiLCJFYSIsIkZhIiwiR2EiLCJIYSIsIklhIiwiSmEiLCJmb3IiLCJFIiwiTWEiLCJLYSIsIkxhIiwiTmEiLCJPYSIsIlBhIiwicHJlcGFyZVN0YWNrVHJhY2UiLCJzZXQiLCJSZWZsZWN0IiwiY29uc3RydWN0IiwiUWEiLCJ0YWciLCJyZW5kZXIiLCJfcmVuZGVyIiwiUmEiLCIkJHR5cGVvZiIsIl9jb250ZXh0IiwiX3BheWxvYWQiLCJfaW5pdCIsIlNhIiwiVGEiLCJub2RlTmFtZSIsIlZhIiwiX3ZhbHVlVHJhY2tlciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImdldCIsImdldFZhbHVlIiwic2V0VmFsdWUiLCJzdG9wVHJhY2tpbmciLCJVYSIsIldhIiwiY2hlY2tlZCIsIlhhIiwiYWN0aXZlRWxlbWVudCIsImJvZHkiLCJZYSIsImRlZmF1bHRDaGVja2VkIiwiZGVmYXVsdFZhbHVlIiwiX3dyYXBwZXJTdGF0ZSIsImluaXRpYWxDaGVja2VkIiwiWmEiLCJpbml0aWFsVmFsdWUiLCJjb250cm9sbGVkIiwiJGEiLCJhYiIsImJiIiwiY2IiLCJvd25lckRvY3VtZW50IiwiZWIiLCJjaGlsZHJlbiIsIkNoaWxkcmVuIiwiZGIiLCJmYiIsInNlbGVjdGVkIiwiZGVmYXVsdFNlbGVjdGVkIiwiZGlzYWJsZWQiLCJnYiIsImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIiwiaGIiLCJpYiIsImpiIiwidGV4dENvbnRlbnQiLCJrYiIsImxiIiwibWIiLCJuYiIsIm9iIiwibmFtZXNwYWNlVVJJIiwiaW5uZXJIVE1MIiwidmFsdWVPZiIsImZpcnN0Q2hpbGQiLCJyZW1vdmVDaGlsZCIsImFwcGVuZENoaWxkIiwiTVNBcHAiLCJleGVjVW5zYWZlTG9jYWxGdW5jdGlvbiIsInBiIiwibGFzdENoaWxkIiwibm9kZVR5cGUiLCJub2RlVmFsdWUiLCJxYiIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiYm9yZGVySW1hZ2VPdXRzZXQiLCJib3JkZXJJbWFnZVNsaWNlIiwiYm9yZGVySW1hZ2VXaWR0aCIsImJveEZsZXgiLCJib3hGbGV4R3JvdXAiLCJib3hPcmRpbmFsR3JvdXAiLCJjb2x1bW5Db3VudCIsImNvbHVtbnMiLCJmbGV4IiwiZmxleEdyb3ciLCJmbGV4UG9zaXRpdmUiLCJmbGV4U2hyaW5rIiwiZmxleE5lZ2F0aXZlIiwiZmxleE9yZGVyIiwiZ3JpZEFyZWEiLCJncmlkUm93IiwiZ3JpZFJvd0VuZCIsImdyaWRSb3dTcGFuIiwiZ3JpZFJvd1N0YXJ0IiwiZ3JpZENvbHVtbiIsImdyaWRDb2x1bW5FbmQiLCJncmlkQ29sdW1uU3BhbiIsImdyaWRDb2x1bW5TdGFydCIsImZvbnRXZWlnaHQiLCJsaW5lQ2xhbXAiLCJsaW5lSGVpZ2h0Iiwib3BhY2l0eSIsIm9yZGVyIiwib3JwaGFucyIsInRhYlNpemUiLCJ3aWRvd3MiLCJ6SW5kZXgiLCJ6b29tIiwiZmlsbE9wYWNpdHkiLCJmbG9vZE9wYWNpdHkiLCJzdG9wT3BhY2l0eSIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZURhc2hvZmZzZXQiLCJzdHJva2VNaXRlcmxpbWl0Iiwic3Ryb2tlT3BhY2l0eSIsInN0cm9rZVdpZHRoIiwicmIiLCJzYiIsInRiIiwic3R5bGUiLCJzZXRQcm9wZXJ0eSIsInN1YnN0cmluZyIsInViIiwibWVudWl0ZW0iLCJhcmVhIiwiYmFzZSIsImJyIiwiY29sIiwiZW1iZWQiLCJociIsImltZyIsImlucHV0Iiwia2V5Z2VuIiwibGluayIsIm1ldGEiLCJwYXJhbSIsInRyYWNrIiwid2JyIiwidmIiLCJ3YiIsImlzIiwieGIiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJwYXJlbnROb2RlIiwieWIiLCJ6YiIsIkFiIiwiQmIiLCJDYiIsInN0YXRlTm9kZSIsIkRiIiwiRWIiLCJGYiIsIkdiIiwiSGIiLCJJYiIsIkpiIiwiS2IiLCJMYiIsIk1iIiwiT2IiLCJQYiIsIlFiIiwiUmIiLCJvbkVycm9yIiwiU2IiLCJUYiIsIlViIiwiVmIiLCJXYiIsIlhiIiwiWmIiLCJhbHRlcm5hdGUiLCJyZXR1cm4iLCJmbGFncyIsIiRiIiwibWVtb2l6ZWRTdGF0ZSIsImRlaHlkcmF0ZWQiLCJhYyIsImNjIiwiY2hpbGQiLCJzaWJsaW5nIiwiY3VycmVudCIsImJjIiwiZGMiLCJlYyIsImZjIiwiZ2MiLCJoYyIsImljIiwiamMiLCJrYyIsImxjIiwibWMiLCJuYyIsIk1hcCIsIm9jIiwicGMiLCJxYyIsInJjIiwiYmxvY2tlZE9uIiwiZG9tRXZlbnROYW1lIiwiZXZlbnRTeXN0ZW1GbGFncyIsIm5hdGl2ZUV2ZW50IiwidGFyZ2V0Q29udGFpbmVycyIsInNjIiwiZGVsZXRlIiwicG9pbnRlcklkIiwidGMiLCJ2YyIsIndjIiwibGFuZVByaW9yaXR5IiwidW5zdGFibGVfcnVuV2l0aFByaW9yaXR5IiwicHJpb3JpdHkiLCJoeWRyYXRlIiwiY29udGFpbmVySW5mbyIsInhjIiwieWMiLCJ6YyIsIkFjIiwiQmMiLCJ1bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrIiwidW5zdGFibGVfTm9ybWFsUHJpb3JpdHkiLCJDYyIsIkRjIiwiRWMiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJGYyIsIkdjIiwiSGMiLCJhbmltYXRpb24iLCJ0cmFuc2l0aW9uIiwiSWMiLCJKYyIsIktjIiwiTGMiLCJNYyIsIk5jIiwiT2MiLCJQYyIsIlFjIiwidW5zdGFibGVfbm93IiwiRiIsIlJjIiwiVWMiLCJwZW5kaW5nTGFuZXMiLCJleHBpcmVkTGFuZXMiLCJzdXNwZW5kZWRMYW5lcyIsInBpbmdlZExhbmVzIiwiVmMiLCJlbnRhbmdsZWRMYW5lcyIsImVudGFuZ2xlbWVudHMiLCJXYyIsIlhjIiwiWWMiLCJaYyIsIiRjIiwiZXZlbnRUaW1lcyIsIk1hdGgiLCJjbHozMiIsImJkIiwiY2QiLCJsb2ciLCJMTjIiLCJkZCIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwiZWQiLCJmZCIsImdkIiwiaGQiLCJ1YyIsImpkIiwia2QiLCJsZCIsIm1kIiwibmQiLCJvZCIsImtleUNvZGUiLCJjaGFyQ29kZSIsInBkIiwicWQiLCJyZCIsIl9yZWFjdE5hbWUiLCJfdGFyZ2V0SW5zdCIsImN1cnJlbnRUYXJnZXQiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkZWZhdWx0UHJldmVudGVkIiwicmV0dXJuVmFsdWUiLCJpc1Byb3BhZ2F0aW9uU3RvcHBlZCIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwiY2FuY2VsQnViYmxlIiwicGVyc2lzdCIsImlzUGVyc2lzdGVudCIsIndkIiwieGQiLCJ5ZCIsInNkIiwiZXZlbnRQaGFzZSIsImJ1YmJsZXMiLCJjYW5jZWxhYmxlIiwidGltZVN0YW1wIiwiaXNUcnVzdGVkIiwidGQiLCJ1ZCIsInZpZXciLCJkZXRhaWwiLCJ2ZCIsIkFkIiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsInBhZ2VYIiwicGFnZVkiLCJjdHJsS2V5Iiwic2hpZnRLZXkiLCJhbHRLZXkiLCJtZXRhS2V5IiwiZ2V0TW9kaWZpZXJTdGF0ZSIsInpkIiwiYnV0dG9uIiwiYnV0dG9ucyIsInJlbGF0ZWRUYXJnZXQiLCJmcm9tRWxlbWVudCIsInRvRWxlbWVudCIsIm1vdmVtZW50WCIsIm1vdmVtZW50WSIsIkJkIiwiRGQiLCJkYXRhVHJhbnNmZXIiLCJGZCIsIkhkIiwiYW5pbWF0aW9uTmFtZSIsImVsYXBzZWRUaW1lIiwicHNldWRvRWxlbWVudCIsIklkIiwiY2xpcGJvYXJkRGF0YSIsIkpkIiwiTGQiLCJNZCIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlVwIiwiUmlnaHQiLCJEb3duIiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJOZCIsIk9kIiwiQWx0IiwiQ29udHJvbCIsIk1ldGEiLCJTaGlmdCIsIlBkIiwiUWQiLCJyZXBlYXQiLCJsb2NhbGUiLCJ3aGljaCIsIlJkIiwiVGQiLCJ3aWR0aCIsImhlaWdodCIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCJWZCIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJYZCIsIllkIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCJaZCIsIiRkIiwiYWUiLCJiZSIsImRvY3VtZW50TW9kZSIsImNlIiwiZGUiLCJlZSIsImZlIiwiZ2UiLCJoZSIsImllIiwibGUiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImVtYWlsIiwibW9udGgiLCJyYW5nZSIsInRlbCIsInRleHQiLCJ0aW1lIiwid2VlayIsIm1lIiwibmUiLCJvZSIsImV2ZW50IiwibGlzdGVuZXJzIiwicGUiLCJxZSIsInJlIiwic2UiLCJ0ZSIsInVlIiwidmUiLCJ3ZSIsInhlIiwieWUiLCJ6ZSIsIm9uaW5wdXQiLCJBZSIsImRldGFjaEV2ZW50IiwiQmUiLCJDZSIsImF0dGFjaEV2ZW50IiwiRGUiLCJFZSIsIkZlIiwiSGUiLCJJZSIsIkplIiwiS2UiLCJMZSIsIm9mZnNldCIsIm5leHRTaWJsaW5nIiwiTWUiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwiTmUiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnRXaW5kb3ciLCJPZSIsImNvbnRlbnRFZGl0YWJsZSIsIlBlIiwiUWUiLCJSZSIsIlNlIiwiVGUiLCJVZSIsInN0YXJ0Iiwic2VsZWN0aW9uU3RhcnQiLCJlbmQiLCJzZWxlY3Rpb25FbmQiLCJhbmNob3JOb2RlIiwiZGVmYXVsdFZpZXciLCJnZXRTZWxlY3Rpb24iLCJhbmNob3JPZmZzZXQiLCJmb2N1c05vZGUiLCJmb2N1c09mZnNldCIsIlZlIiwiV2UiLCJYZSIsIlllIiwiWmUiLCJZYiIsIkciLCIkZSIsImhhcyIsImFmIiwiYmYiLCJyYW5kb20iLCJjZiIsImRmIiwiY2FwdHVyZSIsInBhc3NpdmUiLCJOYiIsIngiLCJ3IiwieiIsInUiLCJxIiwidCIsImVmIiwiZmYiLCJwYXJlbnRXaW5kb3ciLCJnZiIsImhmIiwiSiIsIksiLCJRIiwiTCIsImplIiwiY2hhciIsImtlIiwiamYiLCJrZiIsImxmIiwibWYiLCJhdXRvRm9jdXMiLCJuZiIsIl9faHRtbCIsIm9mIiwicGYiLCJjbGVhclRpbWVvdXQiLCJxZiIsInJmIiwic2YiLCJwcmV2aW91c1NpYmxpbmciLCJ0ZiIsInZmIiwid2YiLCJ4ZiIsInlmIiwiemYiLCJBZiIsIkJmIiwiSCIsIkkiLCJDZiIsIk0iLCJOIiwiRGYiLCJFZiIsImNvbnRleHRUeXBlcyIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dCIsIkZmIiwiY2hpbGRDb250ZXh0VHlwZXMiLCJHZiIsIkhmIiwiSWYiLCJnZXRDaGlsZENvbnRleHQiLCJKZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwiS2YiLCJMZiIsIk1mIiwiTmYiLCJPZiIsIlBmIiwidW5zdGFibGVfY2FuY2VsQ2FsbGJhY2siLCJRZiIsInVuc3RhYmxlX3Nob3VsZFlpZWxkIiwiUmYiLCJ1bnN0YWJsZV9yZXF1ZXN0UGFpbnQiLCJTZiIsIlRmIiwidW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwiLCJVZiIsInVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5IiwiVmYiLCJXZiIsIlhmIiwidW5zdGFibGVfTG93UHJpb3JpdHkiLCJZZiIsInVuc3RhYmxlX0lkbGVQcmlvcml0eSIsIlpmIiwiJGYiLCJhZyIsImJnIiwiY2ciLCJkZyIsIk8iLCJlZyIsImZnIiwiZ2ciLCJoZyIsImlnIiwiamciLCJrZyIsIlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnIiwibGciLCJkZWZhdWx0UHJvcHMiLCJtZyIsIm5nIiwib2ciLCJwZyIsInFnIiwicmciLCJfY3VycmVudFZhbHVlIiwic2ciLCJjaGlsZExhbmVzIiwidGciLCJkZXBlbmRlbmNpZXMiLCJmaXJzdENvbnRleHQiLCJsYW5lcyIsInVnIiwidmciLCJvYnNlcnZlZEJpdHMiLCJyZXNwb25kZXJzIiwid2ciLCJ4ZyIsInVwZGF0ZVF1ZXVlIiwiYmFzZVN0YXRlIiwiZmlyc3RCYXNlVXBkYXRlIiwibGFzdEJhc2VVcGRhdGUiLCJzaGFyZWQiLCJwZW5kaW5nIiwiZWZmZWN0cyIsInlnIiwiemciLCJldmVudFRpbWUiLCJsYW5lIiwiQWciLCJCZyIsIkNnIiwiQSIsInAiLCJDIiwiRGciLCJFZyIsIkZnIiwiQ29tcG9uZW50IiwicmVmcyIsIkdnIiwiS2ciLCJpc01vdW50ZWQiLCJfcmVhY3RJbnRlcm5hbHMiLCJlbnF1ZXVlU2V0U3RhdGUiLCJIZyIsIklnIiwiSmciLCJlbnF1ZXVlUmVwbGFjZVN0YXRlIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwiTGciLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJpc1B1cmVSZWFjdENvbXBvbmVudCIsIk1nIiwiY29udGV4dFR5cGUiLCJ1cGRhdGVyIiwiTmciLCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJPZyIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsImdldFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudERpZE1vdW50IiwiUGciLCJRZyIsInJlZiIsIl9vd25lciIsIl9zdHJpbmdSZWYiLCJSZyIsIlNnIiwibGFzdEVmZmVjdCIsIm5leHRFZmZlY3QiLCJmaXJzdEVmZmVjdCIsIlRnIiwiVWciLCJtb2RlIiwiVmciLCJpbXBsZW1lbnRhdGlvbiIsIldnIiwiWGciLCJZZyIsIlpnIiwiJGciLCJhaCIsImJoIiwiY2giLCJkaCIsImVoIiwiZG9jdW1lbnRFbGVtZW50IiwidGFnTmFtZSIsImZoIiwiZ2giLCJoaCIsIlAiLCJpaCIsIm1lbW9pemVkUHJvcHMiLCJyZXZlYWxPcmRlciIsImpoIiwia2giLCJsaCIsIm1oIiwibmgiLCJvaCIsInBlbmRpbmdQcm9wcyIsInBoIiwicWgiLCJyaCIsInNoIiwidGgiLCJ1aCIsIl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5IiwidmgiLCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyIiwid2giLCJ4aCIsIlIiLCJTIiwiVCIsInloIiwiemgiLCJBaCIsIkJoIiwiQ2giLCJEaCIsIkVoIiwiRmgiLCJHaCIsIkhoIiwiYmFzZVF1ZXVlIiwicXVldWUiLCJJaCIsIkpoIiwiS2giLCJsYXN0UmVuZGVyZWRSZWR1Y2VyIiwiYWN0aW9uIiwiZWFnZXJSZWR1Y2VyIiwiZWFnZXJTdGF0ZSIsImxhc3RSZW5kZXJlZFN0YXRlIiwiZGlzcGF0Y2giLCJMaCIsIk1oIiwiX2dldFZlcnNpb24iLCJfc291cmNlIiwibXV0YWJsZVJlYWRMYW5lcyIsIk5oIiwiVSIsInVzZVN0YXRlIiwiZ2V0U25hcHNob3QiLCJ1c2VFZmZlY3QiLCJzZXRTbmFwc2hvdCIsIk9oIiwiUGgiLCJRaCIsIlJoIiwiZGVzdHJveSIsImRlcHMiLCJTaCIsIlRoIiwiVWgiLCJWaCIsIldoIiwiWGgiLCJZaCIsIlpoIiwiJGgiLCJhaSIsImJpIiwiY2kiLCJkaSIsInJlYWRDb250ZXh0IiwidXNlQ2FsbGJhY2siLCJ1c2VDb250ZXh0IiwidXNlSW1wZXJhdGl2ZUhhbmRsZSIsInVzZUxheW91dEVmZmVjdCIsInVzZU1lbW8iLCJ1c2VSZWR1Y2VyIiwidXNlUmVmIiwidXNlRGVidWdWYWx1ZSIsInVzZURlZmVycmVkVmFsdWUiLCJ1c2VUcmFuc2l0aW9uIiwidXNlTXV0YWJsZVNvdXJjZSIsInVzZU9wYXF1ZUlkZW50aWZpZXIiLCJ1bnN0YWJsZV9pc05ld1JlY29uY2lsZXIiLCJ1ZiIsImVpIiwiUmVhY3RDdXJyZW50T3duZXIiLCJmaSIsImdpIiwiaGkiLCJpaSIsImppIiwiY29tcGFyZSIsImtpIiwibGkiLCJtaSIsImJhc2VMYW5lcyIsIm5pIiwib2kiLCJwaSIsIlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudERpZFVwZGF0ZSIsInFpIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yIiwicmkiLCJwZW5kaW5nQ29udGV4dCIsIkJpIiwiRGkiLCJFaSIsInNpIiwicmV0cnlMYW5lIiwidGkiLCJmYWxsYmFjayIsInVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrIiwidWkiLCJ1bnN0YWJsZV9leHBlY3RlZExvYWRUaW1lIiwidmkiLCJ3aSIsInhpIiwieWkiLCJ6aSIsImlzQmFja3dhcmRzIiwicmVuZGVyaW5nIiwicmVuZGVyaW5nU3RhcnRUaW1lIiwibGFzdCIsInRhaWwiLCJ0YWlsTW9kZSIsIkFpIiwiRmkiLCJHaSIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJvbkNsaWNrIiwib25jbGljayIsInNpemUiLCJjcmVhdGVFbGVtZW50TlMiLCJjcmVhdGVUZXh0Tm9kZSIsIlYiLCJIaSIsIklpIiwiVyIsIkppIiwiS2kiLCJMaSIsIk1pIiwiTmkiLCJPaSIsIldlYWtNYXAiLCJQaSIsIlFpIiwiUmkiLCJTaSIsImNvbXBvbmVudERpZENhdGNoIiwiVGkiLCJjb21wb25lbnRTdGFjayIsIlVpIiwiV2Vha1NldCIsIlZpIiwiV2kiLCJYaSIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiWWkiLCJaaSIsIiRpIiwiZm9jdXMiLCJhaiIsImRpc3BsYXkiLCJiaiIsIm9uQ29tbWl0RmliZXJVbm1vdW50IiwiY29tcG9uZW50V2lsbFVubW91bnQiLCJjaiIsImRqIiwiZWoiLCJmaiIsImdqIiwiaGoiLCJpbnNlcnRCZWZvcmUiLCJfcmVhY3RSb290Q29udGFpbmVyIiwiaWoiLCJqaiIsImtqIiwibGoiLCJtaiIsIm5qIiwiY2VpbCIsIm9qIiwicGoiLCJYIiwiWSIsInFqIiwicmoiLCJzaiIsInRqIiwidWoiLCJ2aiIsIkluZmluaXR5Iiwid2oiLCJjayIsIloiLCJ4aiIsInlqIiwiemoiLCJBaiIsIkJqIiwiQ2oiLCJEaiIsIkVqIiwiRmoiLCJHaiIsIkhqIiwiSWoiLCJKaiIsIlNjIiwiS2oiLCJMaiIsIk1qIiwiY2FsbGJhY2tOb2RlIiwiZXhwaXJhdGlvblRpbWVzIiwiY2FsbGJhY2tQcmlvcml0eSIsIlRjIiwiTmoiLCJPaiIsIlBqIiwiUWoiLCJSaiIsIlNqIiwiVGoiLCJmaW5pc2hlZFdvcmsiLCJmaW5pc2hlZExhbmVzIiwiVWoiLCJ0aW1lb3V0SGFuZGxlIiwiV2oiLCJYaiIsInBpbmdDYWNoZSIsIllqIiwiWmoiLCJ2YSIsImFrIiwiYmsiLCJkayIsInJhbmdlQ291bnQiLCJmb2N1c2VkRWxlbSIsInNlbGVjdGlvblJhbmdlIiwiZWsiLCJtaW4iLCJjcmVhdGVSYW5nZSIsInNldFN0YXJ0IiwicmVtb3ZlQWxsUmFuZ2VzIiwiYWRkUmFuZ2UiLCJzZXRFbmQiLCJsZWZ0Iiwic2Nyb2xsTGVmdCIsInRvcCIsInNjcm9sbFRvcCIsIm9uQ29tbWl0RmliZXJSb290IiwiZmsiLCJnayIsImlrIiwiaXNSZWFjdENvbXBvbmVudCIsInBlbmRpbmdDaGlsZHJlbiIsImprIiwibXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YSIsImtrIiwibGsiLCJtayIsIm5rIiwib2siLCJxayIsImh5ZHJhdGlvbk9wdGlvbnMiLCJtdXRhYmxlU291cmNlcyIsIl9pbnRlcm5hbFJvb3QiLCJyayIsInRrIiwiaGFzQXR0cmlidXRlIiwic2siLCJ1ayIsImhrIiwiX2NhbGN1bGF0ZUNoYW5nZWRCaXRzIiwidW5zdGFibGVfb2JzZXJ2ZWRCaXRzIiwidW5tb3VudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JtIiwiVmoiLCJ2ayIsIkV2ZW50cyIsIndrIiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJidW5kbGVUeXBlIiwicmVuZGVyZXJQYWNrYWdlTmFtZSIsInhrIiwicmVuZGVyZXJDb25maWciLCJvdmVycmlkZUhvb2tTdGF0ZSIsIm92ZXJyaWRlSG9va1N0YXRlRGVsZXRlUGF0aCIsIm92ZXJyaWRlSG9va1N0YXRlUmVuYW1lUGF0aCIsIm92ZXJyaWRlUHJvcHMiLCJvdmVycmlkZVByb3BzRGVsZXRlUGF0aCIsIm92ZXJyaWRlUHJvcHNSZW5hbWVQYXRoIiwic2V0U3VzcGVuc2VIYW5kbGVyIiwic2NoZWR1bGVVcGRhdGUiLCJjdXJyZW50RGlzcGF0Y2hlclJlZiIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwiZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoIiwic2NoZWR1bGVSZWZyZXNoIiwic2NoZWR1bGVSb290Iiwic2V0UmVmcmVzaEhhbmRsZXIiLCJnZXRDdXJyZW50RmliZXIiLCJfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJ5ayIsImlzRGlzYWJsZWQiLCJzdXBwb3J0c0ZpYmVyIiwiaW5qZWN0IiwiY3JlYXRlUG9ydGFsIiwiZmluZERPTU5vZGUiLCJmbHVzaFN5bmMiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9jcmVhdGVQb3J0YWwiLCJ1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsImNoZWNrRENFIiwiRnJhZ21lbnQiLCJTdHJpY3RNb2RlIiwiUHJvZmlsZXIiLCJTdXNwZW5zZSIsInNldFN0YXRlIiwiZm9yY2VVcGRhdGUiLCJfX3NlbGYiLCJfX3NvdXJjZSIsImVzY2FwZSIsIl9zdGF0dXMiLCJfcmVzdWx0IiwiZGVmYXVsdCIsIklzU29tZVJlbmRlcmVyQWN0aW5nIiwiY291bnQiLCJ0b0FycmF5Iiwib25seSIsIlB1cmVDb21wb25lbnQiLCJjbG9uZUVsZW1lbnQiLCJjcmVhdGVDb250ZXh0IiwiX2N1cnJlbnRWYWx1ZTIiLCJfdGhyZWFkQ291bnQiLCJQcm92aWRlciIsIkNvbnN1bWVyIiwiY3JlYXRlRmFjdG9yeSIsImNyZWF0ZVJlZiIsImZvcndhcmRSZWYiLCJpc1ZhbGlkRWxlbWVudCIsImxhenkiLCJtZW1vIiwicGVyZm9ybWFuY2UiLCJNZXNzYWdlQ2hhbm5lbCIsInVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJmbG9vciIsInBvcnQyIiwicG9ydDEiLCJvbm1lc3NhZ2UiLCJwb3N0TWVzc2FnZSIsInNvcnRJbmRleCIsInN0YXJ0VGltZSIsImV4cGlyYXRpb25UaW1lIiwicHJpb3JpdHlMZXZlbCIsInVuc3RhYmxlX1Byb2ZpbGluZyIsInVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uIiwidW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGUiLCJ1bnN0YWJsZV9uZXh0IiwidW5zdGFibGVfcGF1c2VFeGVjdXRpb24iLCJkZWxheSIsInVuc3RhYmxlX3dyYXBDYWxsYmFjayIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwibW9kdWxlc1RvRG9tIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiaW5kZXhCeUlkZW50aWZpZXIiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsImluc2VydCIsInN0eWxlVGFyZ2V0IiwicXVlcnlTZWxlY3RvciIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJnZXRUYXJnZXQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJnZXR0ZXIiLCJkZWZpbml0aW9uIiwibyIsInNjcmlwdFVybCIsImltcG9ydFNjcmlwdHMiLCJjdXJyZW50U2NyaXB0Iiwic3JjIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiQWN0aW9uIiwiQmVmb3JlVW5sb2FkRXZlbnRUeXBlIiwicHJvbXB0QmVmb3JlVW5sb2FkIiwiY3JlYXRlRXZlbnRzIiwiZmlsdGVyIiwiaGFuZGxlciIsImNyZWF0ZVBhdGgiLCJfcmVmIiwiX3JlZiRwYXRobmFtZSIsIl9yZWYkc2VhcmNoIiwiX3JlZiRoYXNoIiwicGFyc2VQYXRoIiwicGFyc2VkUGF0aCIsImhhc2hJbmRleCIsInNlYXJjaEluZGV4IiwiTmF2aWdhdGlvbkNvbnRleHQiLCJMb2NhdGlvbkNvbnRleHQiLCJSb3V0ZUNvbnRleHQiLCJvdXRsZXQiLCJtYXRjaGVzIiwiaW52YXJpYW50IiwiY29uZCIsIm1hdGNoUm91dGVzIiwicm91dGVzIiwibG9jYXRpb25BcmciLCJiYXNlbmFtZSIsInN0cmlwQmFzZW5hbWUiLCJicmFuY2hlcyIsImZsYXR0ZW5Sb3V0ZXMiLCJzb3J0Iiwic2NvcmUiLCJzaWJsaW5ncyIsImV2ZXJ5IiwiY29tcGFyZUluZGV4ZXMiLCJyb3V0ZXNNZXRhIiwiY2hpbGRyZW5JbmRleCIsInJhbmtSb3V0ZUJyYW5jaGVzIiwibWF0Y2hSb3V0ZUJyYW5jaCIsInBhcmVudHNNZXRhIiwicGFyZW50UGF0aCIsInJvdXRlIiwicmVsYXRpdmVQYXRoIiwiY2FzZVNlbnNpdGl2ZSIsInN0YXJ0c1dpdGgiLCJqb2luUGF0aHMiLCJjb21wdXRlU2NvcmUiLCJwYXJhbVJlIiwiaXNTcGxhdCIsInNlZ21lbnRzIiwiaW5pdGlhbFNjb3JlIiwic29tZSIsInJlZHVjZSIsInNlZ21lbnQiLCJicmFuY2giLCJtYXRjaGVkUGFyYW1zIiwibWF0Y2hlZFBhdGhuYW1lIiwicmVtYWluaW5nUGF0aG5hbWUiLCJtYXRjaFBhdGgiLCJwYXRobmFtZUJhc2UiLCJub3JtYWxpemVQYXRobmFtZSIsInBhdHRlcm4iLCJtYXRjaGVyIiwicGFyYW1OYW1lcyIsInJlZ2V4cFNvdXJjZSIsIl8iLCJwYXJhbU5hbWUiLCJlbmRzV2l0aCIsImNvbXBpbGVQYXRoIiwiY2FwdHVyZUdyb3VwcyIsInNwbGF0VmFsdWUiLCJzYWZlbHlEZWNvZGVVUklDb21wb25lbnQiLCJyZXNvbHZlVG8iLCJ0b0FyZyIsInJvdXRlUGF0aG5hbWVzIiwibG9jYXRpb25QYXRobmFtZSIsInRvUGF0aG5hbWUiLCJyb3V0ZVBhdGhuYW1lSW5kZXgiLCJ0b1NlZ21lbnRzIiwiZnJvbVBhdGhuYW1lIiwicmVzb2x2ZVBhdGhuYW1lIiwibm9ybWFsaXplU2VhcmNoIiwibm9ybWFsaXplSGFzaCIsInJlc29sdmVQYXRoIiwibmV4dENoYXIiLCJwYXRocyIsInVzZUluUm91dGVyQ29udGV4dCIsInJvdXRlUGF0aG5hbWVzSnNvbiIsIlJvdXRlIiwiX3Byb3BzIiwiX3JlZjMiLCJiYXNlbmFtZVByb3AiLCJsb2NhdGlvblByb3AiLCJuYXZpZ2F0aW9uVHlwZSIsIlBvcCIsInN0YXRpYyIsInN0YXRpY1Byb3AiLCJuYXZpZ2F0aW9uQ29udGV4dCIsInRyYWlsaW5nUGF0aG5hbWUiLCJSb3V0ZXMiLCJfcmVmNCIsInBhcmVudE1hdGNoZXMiLCJyb3V0ZU1hdGNoIiwicGFyZW50UGFyYW1zIiwicGFyZW50UGF0aG5hbWVCYXNlIiwibG9jYXRpb25Gcm9tQ29udGV4dCIsIl9wYXJzZWRMb2NhdGlvbkFyZyRwYSIsInBhcnNlZExvY2F0aW9uQXJnIiwicmVkdWNlUmlnaHQiLCJfcmVuZGVyTWF0Y2hlcyIsInVzZVJvdXRlcyIsImNyZWF0ZVJvdXRlc0Zyb21DaGlsZHJlbiIsIl9leGNsdWRlZCIsIkhhc2hSb3V0ZXIiLCJfcmVmMiIsImhpc3RvcnlSZWYiLCJfb3B0aW9uczIkd2luZG93IiwiZ2xvYmFsSGlzdG9yeSIsImhpc3RvcnkiLCJnZXRJbmRleEFuZExvY2F0aW9uIiwiX3BhcnNlUGF0aCIsIl9wYXJzZVBhdGgkcGF0aG5hbWUiLCJfcGFyc2VQYXRoJHNlYXJjaCIsIl9wYXJzZVBhdGgkaGFzaCIsImlkeCIsInVzciIsImJsb2NrZWRQb3BUeCIsImhhbmRsZVBvcCIsImJsb2NrZXJzIiwibmV4dEFjdGlvbiIsIl9nZXRJbmRleEFuZExvY2F0aW9uNCIsIm5leHRJbmRleCIsIm5leHRMb2NhdGlvbiIsImRlbHRhIiwicmV0cnkiLCJnbyIsImFwcGx5VHgiLCJfZ2V0SW5kZXhBbmRMb2NhdGlvbjYiLCJjcmVhdGVIcmVmIiwiZ2V0QXR0cmlidXRlIiwiZ2V0QmFzZUhyZWYiLCJnZXROZXh0TG9jYXRpb24iLCJnZXRIaXN0b3J5U3RhdGVBbmRVcmwiLCJhbGxvd1R4IiwiX2dldEluZGV4QW5kTG9jYXRpb243IiwicmVwbGFjZVN0YXRlIiwiUHVzaCIsIl9nZXRIaXN0b3J5U3RhdGVBbmRVcjMiLCJoaXN0b3J5U3RhdGUiLCJwdXNoU3RhdGUiLCJSZXBsYWNlIiwiX2dldEhpc3RvcnlTdGF0ZUFuZFVyNCIsImJhY2siLCJmb3J3YXJkIiwibGlzdGVuIiwiYmxvY2siLCJibG9ja2VyIiwidW5ibG9jayIsImNyZWF0ZUhhc2hIaXN0b3J5IiwiTGluayIsInJlbG9hZERvY3VtZW50IiwicmVzdCIsImV4Y2x1ZGVkIiwic291cmNlS2V5cyIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIiwiam9pbmVkUGF0aG5hbWUiLCJnZXRUb1BhdGhuYW1lIiwiZW5kc1dpdGhTbGFzaCIsInVzZUhyZWYiLCJpbnRlcm5hbE9uQ2xpY2siLCJfdGVtcCIsInJlcGxhY2VQcm9wIiwibmF2aWdhdGUiLCJhY3RpdmVSZWYiLCJpc01vZGlmaWVkRXZlbnQiLCJ1c2VMaW5rQ2xpY2tIYW5kbGVyIiwiX2FycmF5TGlrZVRvQXJyYXkiLCJsZW4iLCJhcnIyIiwiX3NsaWNlZFRvQXJyYXkiLCJfcyIsIl9lIiwiX2FyciIsIl9uIiwiX2QiLCJtaW5MZW4iLCJOYXZpZ2F0aW9uTWVudSIsIm1lbnVJdGVtcyIsImlzTW9iaWxlIiwicmVuZGVyTW9iaWxlTWVudUxpc3QiLCJzZXRSZW5kZXJNb2JpbGVNZW51TGlzdCIsInN0YXR1c01lbnUiLCJzZXRTdGF0dXNNZW51IiwibWFwTWVudSIsImNsYXNzTmFtZSIsInN0eWxlcyIsIm1vdmVTY3JvbGxQYWdlIiwiZ2V0RWxlbWVudEJ5SWQiLCJzY3JvbGxJbnRvVmlldyIsImJlaGF2aW9yIiwicHJvcFR5cGVzIiwiQnV0dG9uIiwidGV4dEJ1dHRvbiIsIk1vZGFsIiwiaXNBY3RpdmUiLCJzZXRBY3RpdmUiLCJpc0Nsb3NhYmxlIiwiYXN5bmNHZW5lcmF0b3JTdGVwIiwiZ2VuIiwiX25leHQiLCJfdGhyb3ciLCJfYXN5bmNUb0dlbmVyYXRvciIsImdldExpc3RBUEkiLCJkaXJlY3Rpb24iLCJsaXN0RG9jdG9yc0RpcmVjdGlvbiIsInNlbmRSZXF1ZXN0Q2FsbEFQSSIsInBob25lTnVtYmVyIiwidGVsZXBob25lIiwicmVzIiwic2VuZE1lc3NhZ2VBUEkiLCJzbXMiLCJSZXF1ZXN0Q2FsbCIsInNldElzTW9kYWxBY3RpdmUiLCJzZXRJc01vZGFsVmFsaWRhdGlvbkZhbHNlQWN0aXZlIiwic2V0TmFtZSIsInNldFBob25lTnVtYmVyIiwicGxhY2Vob2xkZXIiLCJvbkJsdXIiLCJjb3VudFN0YWdlIiwiZXJyb3JWYWx1ZXMiLCJ0b0xvY2FsZURhdGVTdHJpbmciLCJ0b0xvY2FsZVRpbWVTdHJpbmciLCJ2YWxpZGF0aW9uVmFsdWVzIiwiUmVxdWVzdFNtcyIsInNldEVtYWlsIiwic2V0TWVzc2FnZSIsInZhbGlkYXRlRW1haWwiLCJIZWFkZXIiLCJpc01vZGFsUmVxdWVzdENhbGxBY3RpdmUiLCJzZXRJc01vZGFsUmVxdWVzdENhbGxBY3RpdmUiLCJpc01vZGFsUmVxdWVzdFNtc0FjdGl2ZSIsInNldElzTW9kYWxSZXF1ZXN0U21zQWN0aXZlIiwiaXNNb2RhbFZhbGlkYXRpb25GYWxzZUFjdGl2ZSIsImxvZ29JbWFnZSIsImNhbGxJbWFnZSIsIlNsaWRlciIsInBhZ2VOdW1iZXIiLCJzZXRQYWdlTnVtYmVyIiwibGVmdEltYWdlIiwiY3VycmVudEl0ZW0iLCJyaWdodEltYWdlIiwiU3BlY2lhbGlzdCIsInN1cm5hbWUiLCJwYXRyb255bWljIiwiZXhwZXJpZW5jZSIsImNpdHkiLCJsb2NhdGlvbkltYWdlIiwiVHlwZURvY3RvciIsInRpdGxlIiwiU3BlY2lhbGlzdHNQYWdlIiwiYXZhaWxhYmlsaXR5U2xpZGVyIiwiaXNNb2RhbEFjdGl2ZSIsInNldERpcmVjdGlvbiIsImxpc3REb2N0b3JzIiwic2V0TGlzdERvY3RvcnMiLCJnZXRMaXN0RG9jdG9ycyIsImFyckRvY3RvcnMiLCJhcnJsaXN0RG9jdG9ycyIsInNsaWRlcjFJbWFnZSIsInNsaWRlcjJJbWFnZSIsInNsaWRlcjNJbWFnZSIsInNsaWRlcjRJbWFnZSIsInZpZXdMaXN0RG9jdG9ycyIsIkNhcmRIb3NwaXRhbCIsImFkZHJlc3MiLCJ0aW1lSm9icyIsInRpbWVJbWFnZSIsIlNlcnZpY2UiLCJvYmpUZXh0IiwiYXJyTGlzdCIsInRleHRfb25lIiwidGV4dF90d28iLCJ0ZXh0X3RocmVlIiwidGV4dF9mb3VyIiwidGV4dF9maXZlIiwidGV4dF9zaXgiLCJyZXF1aXJlIiwiaiIsIkFzeW5jTW9kZSIsIkNvbmN1cnJlbnRNb2RlIiwiQ29udGV4dENvbnN1bWVyIiwiQ29udGV4dFByb3ZpZGVyIiwiRWxlbWVudCIsIkZvcndhcmRSZWYiLCJMYXp5IiwiTWVtbyIsIlBvcnRhbCIsImlzQXN5bmNNb2RlIiwiaXNDb25jdXJyZW50TW9kZSIsImlzQ29udGV4dENvbnN1bWVyIiwiaXNDb250ZXh0UHJvdmlkZXIiLCJpc0VsZW1lbnQiLCJpc0ZvcndhcmRSZWYiLCJpc0ZyYWdtZW50IiwiaXNMYXp5IiwiaXNNZW1vIiwiaXNQb3J0YWwiLCJpc1Byb2ZpbGVyIiwiaXNTdHJpY3RNb2RlIiwiaXNTdXNwZW5zZSIsImlzVmFsaWRFbGVtZW50VHlwZSIsInR5cGVPZiIsIiQiLCJSZWZlcmVuY2VFcnJvciIsImVtaXR0ZXIiLCJvbiIsIm9mZiIsIm9uVXBkYXRlIiwicGFyZW50IiwibG9hZGluZyIsIl9pc01vdW50ZWQiLCJ5bWFwcyIsImxvYWQiLCJsb2FkTW9kdWxlIiwib25Mb2FkIiwiY2F0Y2giLCJnZXRBcGkiLCJsYW5nIiwibnMiLCJuYW1lc3BhY2UiLCJxdWVyeSIsIm9ubG9hZCIsInNldEFwaSIsImdldFByb21pc2UiLCJzZXRQcm9taXNlIiwiZW50ZXJwcmlzZSIsInJlYWR5IiwiZmV0Y2hTY3JpcHQiLCJzY3JpcHQiLCJfbmFtZSIsInByZWxvYWQiLCJfZXZlbnRzIiwiZXZlbnRzIiwidHQiLCJldCIsIm50IiwiX3BhcmVudEVsZW1lbnQiLCJfZ2V0UmVmIiwibW91bnRPYmplY3QiLCJ1cGRhdGVPYmplY3QiLCJ1bm1vdW50T2JqZWN0IiwiaW5zdGFuY2VSZWYiLCJzZXRUeXBlIiwiYmVoYXZpb3JzIiwiZGlzYWJsZSIsImVuYWJsZSIsInNldFpvb20iLCJjZW50ZXIiLCJzZXRDZW50ZXIiLCJib3VuZHMiLCJzZXRCb3VuZHMiLCJjb250YWluZXIiLCJmaXRUb1ZpZXdwb3J0Iiwib3QiLCJydCIsIl9tb3VudGVkIiwicGFub3JhbWEiLCJpc1N1cHBvcnRlZCIsImxvY2F0ZSIsIlBsYXllciIsIm1vdmVUbyIsIml0IiwibW91bnRDb250cm9sIiwiY29udHJvbCIsInVwZGF0ZUNvbnRyb2wiLCJ1bm1vdW50Q29udHJvbCIsIm1hcFR5cGVzIiwiY29udHJvbHMiLCJyZW1vdmVBbGxNYXBUeXBlcyIsImFkZE1hcFR5cGUiLCJndCIsIkNsdXN0ZXJlciIsImdlb09iamVjdHMiLCJPYmplY3RNYW5hZ2VyIiwic2V0RmlsdGVyIiwib2JqZWN0cyIsImNsdXN0ZXJzIiwiZGFuZ2VyWm9uZSIsIm1vZGlmeUNvbnN0cnVjdG9yIiwiZ2VvbWV0cnkiLCJzZXRDb29yZGluYXRlcyIsInNldFJhZGl1cyIsImNvb3JkaW5hdGVzIiwicmFkaXVzIiwicHJvcGVydGllcyIsIkV0IiwiUHQiLCJlbWFpbEltYWdlIiwic2NyZWVuIiwiQ29uZmlndXJlZEFwcCIsIlJlYWN0RE9NIl0sInNvdXJjZVJvb3QiOiIifQ==